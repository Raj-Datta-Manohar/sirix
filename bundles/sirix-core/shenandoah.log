[0.004s][debug][gc,heap] Minimum heap 5368709120  Initial heap 5368709120  Maximum heap 12884901888
[0.004s][info ][gc     ] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.004s][info ][gc     ] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.004s][info ][gc     ] Using Shenandoah
[0.004s][debug][gc,heap,coops] Heap address: 0x0000000500000000, size: 12288 MB, Compressed Oops mode: Zero based, Oop shift amount: 3
[0.193s][info ][gc,ergo      ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1.0x
[0.193s][info ][gc,init      ] Version: 21.0.2+13-LTS (release)
[0.193s][info ][gc,init      ] CPUs: 20 total, 20 available
[0.193s][info ][gc,init      ] Memory: 31762M
[0.193s][info ][gc,init      ] Large Page Support: Disabled
[0.193s][info ][gc,init      ] NUMA Support: Disabled
[0.193s][info ][gc,init      ] Compressed Oops: Enabled (Zero based)
[0.193s][info ][gc,init      ] Heap Min Capacity: 5G
[0.193s][info ][gc,init      ] Heap Initial Capacity: 5G
[0.193s][info ][gc,init      ] Heap Max Capacity: 12G
[0.193s][info ][gc,init      ] Pre-touch: Enabled
[0.193s][info ][gc,init      ] Mode: Snapshot-At-The-Beginning (SATB)
[0.193s][info ][gc,init      ] Heuristics: Adaptive
[0.193s][info ][gc,init      ] Heap Region Count: 3072
[0.193s][info ][gc,init      ] Heap Region Size: 4M
[0.193s][info ][gc,init      ] TLAB Size Max: 4M
[0.193s][info ][gc,init      ] Humongous Object Threshold: 4M
[0.193s][info ][gc,init      ] Parallel Workers: 10
[0.193s][info ][gc,init      ] Concurrent Workers: 5
[0.198s][info ][gc,metaspace ] CDS archive(s) mapped at: [0x00007fadb3000000-0x00007fadb3ca6000-0x00007fadb3ca6000), size 13262848, SharedBaseAddress: 0x00007fadb3000000, ArchiveRelocationMode: 1.
[0.198s][info ][gc,metaspace ] Compressed class space mapped at: 0x00007fadb4000000-0x00007fadf4000000, reserved size: 1073741824
[0.198s][info ][gc,metaspace ] Narrow klass base: 0x00007fadb3000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[0,203s][debug][gc,nmethod   ] Register NMethod: java.lang.Object.<init> [0x00007fae5d0bd010] (c1)
[0,204s][debug][gc,nmethod   ] Register NMethod: java.lang.String.hashCode [0x00007fae5d0bd310] (c1)
[0,204s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ArraysSupport.signedHashCode [0x00007fae5d0bda10] (c1)
[0,204s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.hashCode [0x00007fae5d0bde90] (c1)
[0,204s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$SetN.probe [0x00007fae5d0be390] (c1)
[0,204s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.equals [0x00007fae5d0bee10] (c1)
[0,204s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.floorMod [0x00007fae5d0bf390] (c1)
[0,204s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ArraysSupport.vectorizedHashCode [0x00007fae5d0bf790] (c1)
[0,204s][debug][gc,nmethod   ] Register NMethod: java.lang.String.equals [0x00007fae5d0c0e10] (c1)
[0,204s][debug][gc,nmethod   ] Register NMethod: java.util.Objects.equals [0x00007fae5d0c1610] (c1)
[0,204s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ModuleDescriptor$Exports.<init> [0x00007fae5d0c1b10] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ModuleDescriptor.modsHashCode [0x00007fae5d0c1f90] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.util.Set.of [0x00007fae5d0c2910] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$SetN.iterator [0x00007fae5d0c2c10] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.util.Objects.requireNonNull [0x00007fae5d0c3010] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$SetN$SetNIterator.<init> [0x00007fae5d0c3490] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$SetN$SetNIterator.hasNext [0x00007fae5d0c3990] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$AbstractImmutableCollection.<init> [0x00007fae5d0c3d10] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ModuleDescriptor$Exports.hashCode [0x00007fae5d0c4190] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$AbstractImmutableSet.<init> [0x00007fae5d0c4810] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.util.Set.of [0x00007fae5d0c4d10] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.lang.String.coder [0x00007fae5d0c5a90] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.lang.String.length [0x00007fae5d0c5e10] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ModuleDescriptor.name [0x00007fae7c85d010] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.lang.String.isLatin1 [0x00007fae5d0c6290] (c1)
[0,205s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ModuleReference.descriptor [0x00007fae7c85d310] (c1)
[0,206s][debug][gc,nmethod   ] Register NMethod: java.lang.String.charAt [0x00007fae5d0c6610] (c1)
[0,206s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.charAt [0x00007fae5d0c6d90] (c1)
[0,206s][debug][gc,nmethod   ] Register NMethod: java.lang.String.checkIndex [0x00007fae5d0c7210] (c1)
[0,206s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.Preconditions.checkIndex [0x00007fae5d0c7590] (c1)
[0,206s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ArraysSupport.signedHashCode [0x00007fae7c85d610] (c2)
[0,206s][debug][gc,nmethod   ] Register NMethod: java.lang.Object.<init> [0x00007fae7c85da10] (c2)
[0,206s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.indexOfChar [0x00007fae5d0c7990] (c1)
[0,206s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.min [0x00007fae5d0c7e90] (c1)
[0,206s][debug][gc,nmethod   ] Register NMethod: java.io.File.getPath [0x00007fae7c85dd10] (c1)
[0,207s][debug][gc,nmethod   ] Register NMethod: java.lang.String.startsWith [0x00007fae5d0c8210] (c1)
[0,207s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.canEncode [0x00007fae5d0c8f90] (c1)
[0,207s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.max [0x00007fae5d0c9310] (c1)
[0,207s][debug][gc,nmethod   ] Register NMethod: java.lang.String.isEmpty [0x00007fae5d0c9690] (c1)
[0,207s][debug][gc,nmethod   ] Register NMethod: java.lang.String.indexOf [0x00007fae5d0c9a90] (c1)
[0,207s][debug][gc,nmethod   ] Register NMethod: java.lang.String.indexOf [0x00007fae5d0c9e10] (c1)
[0,207s][debug][gc,nmethod   ] Register NMethod: java.lang.String.charAt [0x00007fae7c85e010] (c2)
[0,207s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.indexOf [0x00007fae5d0ca710] (c1)
[0,207s][debug][gc,nmethod   ] Register NMethod: java.lang.String.isLatin1 [0x00007fae7c85e410] (c2)
[0,207s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getLong [0x00007fae7c85e710] ()
[0,207s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.indexOf [0x00007fae5d0cb010] (c1)
[0,207s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ArraysSupport.mismatch [0x00007fae5d0cb910] (c1)
[0,207s][debug][gc,nmethod   ] Register NMethod: java.lang.String.startsWith [0x00007fae5d0cc110] (c1)
[0,208s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getLongUnaligned [0x00007fae5d0cc490] (c1)
[0,208s][debug][gc,nmethod   ] Register NMethod: java.io.File.getPrefixLength [0x00007fae7c85eb10] (c1)
[0,208s][debug][gc,nmethod   ] Register NMethod: java.lang.System.arraycopy [0x00007fae7c85ee10] ()
[0,208s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.lastIndexOf [0x00007fae5d0ccb90] (c1)
[0,208s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getReferenceVolatile [0x00007fae7c85f210] ()
[0,208s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.compareAndSetLong [0x00007fae7c85f990] ()
[0,208s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.tabAt [0x00007fae5d0cd290] (c1)
[0,208s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getReferenceAcquire [0x00007fae5d0cd890] (c1)
[0,209s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.compareAndSetReference [0x00007fae7c85fd90] ()
[0,209s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.putVal [0x00007fae5d0cdc90] (c1)
[0,209s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$SetN$SetNIterator.next [0x00007fae5d0d0610] (c1)
[0,209s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.spread [0x00007fae5d0d0d90] (c1)
[0,209s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$MapN.probe [0x00007fae5d0d1090] (c1)
[0,209s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$Node.<init> [0x00007fae5d0d1b10] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.putIfAbsent [0x00007fae5d0d1f10] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.casTabAt [0x00007fae5d0d2290] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.KeyValueHolder.getKey [0x00007fae7c860190] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.KeyValueHolder.getValue [0x00007fae7c860490] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.addCount [0x00007fae5d0d2690] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.lang.Object.hashCode [0x00007fae7c860790] ()
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.hash [0x00007fae5d0d3610] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.newNode [0x00007fae5d0d3a90] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.getNode [0x00007fae5d0d4010] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.putVal [0x00007fae5d0d5290] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap$Node.<init> [0x00007fae5d0d6c10] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.afterNodeInsertion [0x00007fae5d0d7090] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$Set12$1.hasNext [0x00007fae5d0d7390] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.put [0x00007fae5d0d7710] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.get [0x00007fae5d0d7d10] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ModuleDescriptor$Exports.source [0x00007fae7c860b90] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.util.AbstractCollection.<init> [0x00007fae5d0d8190] (c1)
[0,210s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ResolvedModule.reference [0x00007fae7c860e90] (c1)
[0,211s][debug][gc,nmethod   ] Register NMethod: java.util.HashSet.add [0x00007fae5d0d8510] (c1)
[0,211s][debug][gc,nmethod   ] Register NMethod: java.lang.String.getBytes [0x00007fae5d0d8990] (c1)
[0,211s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ResolvedModule.name [0x00007fae5d0d9010] (c1)
[0,211s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$MapN.get [0x00007fae5d0d9510] (c1)
[0,211s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ModuleDescriptor.isAutomatic [0x00007fae7c861190] (c1)
[0,211s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ResolvedModule.configuration [0x00007fae7c861490] (c1)
[0,211s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$Set12.isEmpty [0x00007fae7c861790] (c1)
[0,211s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$Set12$1.next [0x00007fae5d0d9c90] (c1)
[0,211s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ModuleDescriptor$Exports.targets [0x00007fae7c861a90] (c1)
[0,211s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c861d90] ()
[0,212s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c862090] ()
[0,212s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c862390] ()
[0,212s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c862910] ()
[0,213s][debug][gc,nmethod   ] Register NMethod: java.lang.Enum.ordinal [0x00007fae7c862c10] (c1)
[0,213s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.ensureCapacityInternal [0x00007fae5d0da410] (c1)
[0,213s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c862f10] ()
[0,213s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.isPrimitive [0x00007fae7c863210] ()
[0,213s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c863590] ()
[0,213s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c863b10] ()
[0,213s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c863e10] ()
[0,213s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c864110] ()
[0,213s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.returnType [0x00007fae7c864410] (c1)
[0,215s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.copyOfRange [0x00007fae5d0da910] (c1)
[0,215s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae5d0dbb90] (c1)
[0,215s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.isLatin1 [0x00007fae5d0dbf90] (c1)
[0,215s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c864710] ()
[0,215s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c864a10] ()
[0,215s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c864f90] ()
[0,215s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ModuleDescriptor.isOpen [0x00007fae7c865290] (c1)
[0,215s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ModuleDescriptor.packages [0x00007fae7c865590] (c1)
[0,215s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodTypeForm.canonicalize [0x00007fae5d0dc310] (c1)
[0,215s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.length [0x00007fae7c865890] (c1)
[0,215s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.getValue [0x00007fae7c865b90] (c1)
[0,215s][debug][gc,nmethod   ] Register NMethod: java.util.Optional.<init> [0x00007fae5d0dcd10] (c1)
[0,216s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.get [0x00007fae5d0dd110] (c1)
[0,217s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.SH [0x00007fae5d0de390] (c1)
[0,217s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.indexOfChar [0x00007fae7c865e90] (c2)
[0,218s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.append [0x00007fae5d0de790] (c1)
[0,218s][debug][gc,nmethod   ] Register NMethod: java.lang.Object.getClass [0x00007fae7c866410] ()
[0,218s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.putStringAt [0x00007fae5d0deb10] (c1)
[0,218s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.inflateIfNeededFor [0x00007fae5d0df190] (c1)
[0,218s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.append [0x00007fae5d0df690] (c1)
[0,218s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.VM.isBooted [0x00007fae5d0e0110] (c1)
[0,218s][debug][gc,nmethod   ] Register NMethod: java.lang.System.getSecurityManager [0x00007fae5d0e0490] (c1)
[0,218s][debug][gc,nmethod   ] Register NMethod: java.lang.System.allowSecurityManager [0x00007fae5d0e0810] (c1)
[0,218s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.ReferenceQueue.headIsNull [0x00007fae5d0e0b10] (c1)
[0,218s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.ptypes [0x00007fae7c866b90] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.checkSlotCount [0x00007fae5d0e0f10] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c866e90] ()
[0,219s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType$ConcurrentWeakInternSet.expungeStaleElements [0x00007fae5d0e1990] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.hashCode [0x00007fae5d0e2090] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.NativeReferenceQueue.poll [0x00007fae5d0e2890] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread [0x00007fae7c867190] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.getState [0x00007fae7c867490] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.compareAndSetInt [0x00007fae7c867790] ()
[0,219s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.setState [0x00007fae7c867b90] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread [0x00007fae7c867e90] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.ReentrantLock.lock [0x00007fae5d0e2f90] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.ReentrantLock$Sync.lock [0x00007fae5d0e3590] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock [0x00007fae5d0e3a90] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedInputStream.getBufIfOpen [0x00007fae5d0e4190] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState [0x00007fae5d0e4510] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.release [0x00007fae5d0e4890] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.ReentrantLock$Sync.tryRelease [0x00007fae5d0e5390] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext [0x00007fae5d0e5a90] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.ReentrantLock.unlock [0x00007fae5d0e6390] (c1)
[0,219s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedInputStream.getBufIfOpen [0x00007fae5d0e6a10] (c1)
[0,220s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.InternalLock.lock [0x00007fae5d0e7210] (c1)
[0,220s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedInputStream.read [0x00007fae5d0e7a10] (c1)
[0,220s][debug][gc,nmethod   ] Register NMethod: worker.org.gradle.internal.stream.EncodedStream$EncodedInput.read [0x00007fae5d0e9190] (c1)
[0,220s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedInputStream.implRead [0x00007fae5d0e9a90] (c1)
[0,220s][debug][gc,nmethod   ] Register NMethod: java.lang.String.hashCode [0x00007fae7c868190] (c2)
[0,220s][debug][gc,nmethod   ] Register NMethod: worker.org.gradle.internal.stream.EncodedStream$EncodedInput.hexToByte [0x00007fae5d0ea090] (c1)
[0,220s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.InternalLock.unlock [0x00007fae5d0eab10] (c1)
[0,220s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.Preconditions.checkFromToIndex [0x00007fae5d0eb310] (c1)
[0,220s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState [0x00007fae7c868510] (c2)
[0,220s][debug][gc,nmethod   ] Register NMethod: java.lang.String.checkBoundsBeginEnd [0x00007fae5d0eb790] (c1)
[0,220s][debug][gc,nmethod   ] Register NMethod: java.lang.String.substring [0x00007fae5d0ebc90] (c1)
[0,220s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.newString [0x00007fae5d0ec790] (c1)
[0,220s][debug][gc,nmethod   ] Register NMethod: sun.net.util.IPAddressUtil.earlyURLParsing [0x00007fae5d0edd10] (c1)
[0,220s][debug][gc,nmethod   ] Register NMethod: java.net.URL.getHost [0x00007fae7c868810] (c1)
[0,220s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.indexOf [0x00007fae5d0ee010] (c1)
[0,221s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock [0x00007fae7c868b10] (c2)
[0,221s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Blocker.begin [0x00007fae5d0ee710] (c1)
[0,221s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Blocker.end [0x00007fae5d0ef490] (c1)
[0,221s][debug][gc,nmethod   ] Register NMethod: sun.net.www.ParseUtil.firstEncodeIndex [0x00007fae5d0efd10] (c1)
[0,222s][debug][gc,nmethod   ] Register NMethod: java.lang.String.lastIndexOf [0x00007fae5d0f0d90] (c1)
[0,222s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.isArray [0x00007fae7c868e90] ()
[0,222s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c869210] ()
[0,222s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.getDeclaringClass [0x00007fae7c869510] (c1)
[0,222s][debug][gc,nmethod   ] Register NMethod: java.lang.Object.clone [0x00007fae7c869810] ()
[0,223s][debug][gc,nmethod   ] Register NMethod: java.lang.Enum.<init> [0x00007fae5d0f1390] (c1)
[0,223s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.form [0x00007fae7c869f90] (c1)
[0,223s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.isInvocable [0x00007fae5d0f1790] (c1)
[0,223s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.anyFlagSet [0x00007fae5d0f1b90] (c1)
[0,223s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.get [0x00007fae5d0f1f10] (c1)
[0,223s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.hashCode [0x00007fae7c86a290] (c1)
[0,223s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getClassLoader [0x00007fae5d0f2390] (c1)
[0,223s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c86a590] ()
[0,224s][debug][gc,nmethod   ] Register NMethod: java.lang.String.lastIndexOf [0x00007fae5d0f2910] (c1)
[0,224s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.hash [0x00007fae5d0f3110] (c1)
[0,224s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.putShort [0x00007fae5d0f3510] (c1)
[0,224s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.putUTF8 [0x00007fae5d0f3a90] (c1)
[0,224s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToInterface [0x00007fae7c86a890] ()
[0,224s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Symbol.<init> [0x00007fae5d0f4e10] (c1)
[0,224s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getName [0x00007fae5d0f5290] (c1)
[0,224s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.parameterType [0x00007fae5d0f5710] (c1)
[0,224s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.put [0x00007fae5d0f5b10] (c1)
[0,225s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable$Entry.<init> [0x00007fae5d0f6990] (c1)
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c86ac10] ()
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.parameterCount [0x00007fae5d0f6d90] (c1)
[0,225s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8 [0x00007fae5d0f7110] (c1)
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.<init> [0x00007fae5d0f7e10] (c1)
[0,225s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.putByte [0x00007fae5d0f8310] (c1)
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.append [0x00007fae5d0f8890] (c1)
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c86af10] ()
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.toString [0x00007fae5d0f8c10] (c1)
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c86b210] ()
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c86b790] ()
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae5d0f9110] (c1)
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.append [0x00007fae5d0f9490] (c1)
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.length [0x00007fae5d0fa090] (c1)
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.<init> [0x00007fae5d0fa410] (c1)
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Reference.<init> [0x00007fae5d0fa810] (c1)
[0,225s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putReferenceVolatile [0x00007fae7c86ba90] ()
[0,225s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.replace [0x00007fae5d0fac90] (c1)
[0,226s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putReferenceRelease [0x00007fae5d0fc210] (c1)
[0,226s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.setTabAt [0x00007fae5d0fc590] (c1)
[0,226s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.makeImpl [0x00007fae5d0fca10] (c1)
[0,226s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType$ConcurrentWeakInternSet.get [0x00007fae5d0fdf10] (c1)
[0,226s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.allocateUninitializedArray0 [0x00007fae5d0fec90] (c1)
[0,226s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipCoder$UTF8ZipCoder.isUTF8 [0x00007fae7c86be90] (c1)
[0,226s][debug][gc,nmethod   ] Register NMethod: java.lang.StringCoding.countPositives [0x00007fae5d0ff910] (c1)
[0,226s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.LG [0x00007fae5d0ffe10] (c1)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENEXT [0x00007fae5d100390] (c1)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENHOW [0x00007fae5d100810] (c1)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENCOM [0x00007fae5d100c90] (c1)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.lang.String.length [0x00007fae7c86c190] (c2)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENNAM [0x00007fae5d101110] (c1)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.isMetaName [0x00007fae5d101590] (c1)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.lang.System$2.countPositives [0x00007fae5d101e10] (c1)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.nextEntryPos [0x00007fae5d102390] (c1)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENFLG [0x00007fae5d102a90] (c1)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.SH [0x00007fae7c86c490] (c2)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.zipCoderForPos [0x00007fae5d102f10] (c1)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENSIG [0x00007fae5d103790] (c1)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipCoder$UTF8ZipCoder.checkedHash [0x00007fae5d103d90] (c1)
[0,227s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.UnixPath.checkNotNul [0x00007fae5d104610] (c1)
[0,227s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.checkAndAddEntry [0x00007fae5d104a90] (c1)
[0,228s][debug][gc,nmethod   ] Register NMethod: java.util.Objects.requireNonNull [0x00007fae5d107690] (c1)
[0,228s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.Preconditions.checkFromIndexSize [0x00007fae5d107b10] (c1)
[0,228s][debug][gc,nmethod   ] Register NMethod: java.util.zip.Inflater$InflaterZStreamRef.address [0x00007fae7c86c810] (c1)
[0,228s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.putVal [0x00007fae5d107f90] (c1)
[0,228s][debug][gc,nmethod   ] Register NMethod: java.util.AbstractMap.<init> [0x00007fae5d109a90] (c1)
[0,229s][debug][gc,nmethod   ] Register NMethod: java.lang.StringUTF16.compress [0x00007fae5d109e10] (c1)
[0,229s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.casTabAt [0x00007fae7c86cb10] (c2)
[0,230s][debug][gc,nmethod   ] Register NMethod: java.lang.String.replace [0x00007fae5d10a390] (c1)
[0,230s][debug][gc,nmethod   ] Register NMethod: java.net.URL.getUserInfo [0x00007fae7c86ce90] (c1)
[0,230s][debug][gc,nmethod   ] Register NMethod: java.util.Properties$LineReader.readLine [0x00007fae5d10aa10] (c1)
[0,231s][debug][gc,nmethod   ] Register NMethod: java.net.URL.getProtocol [0x00007fae7c86d190] (c1)
[0,231s][debug][gc,nmethod   ] Register NMethod: java.util.AbstractSet.<init> [0x00007fae5d10e810] (c1)
[0,231s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Reference.reachabilityFence [0x00007fae5d10ec90] (c1)
[0,231s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.size [0x00007fae7c86d490] (c1)
[0,231s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.<init> [0x00007fae5d10ef90] (c1)
[0,231s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.put [0x00007fae5d10f310] (c1)
[0,231s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.indexOfChar [0x00007fae7c86d790] (c2)
[0,231s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.copyOf [0x00007fae5d10f910] (c1)
[0,232s][debug][gc,nmethod   ] Register NMethod: java.lang.String.endsWith [0x00007fae5d110110] (c1)
[0,233s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.newCapacity [0x00007fae5d110890] (c1)
[0,233s][debug][gc,nmethod   ] Register NMethod: java.io.UnixFileSystem.prefixLength [0x00007fae5d111010] (c1)
[0,233s][debug][gc,nmethod   ] Register NMethod: java.lang.StringCoding.countPositives [0x00007fae7c86db90] (c2)
[0,233s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.add [0x00007fae5d111510] (c1)
[0,234s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c86e090] ()
[0,234s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c86e390] ()
[0,234s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.methodType [0x00007fae5d111d10] (c1)
[0,234s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae5d112610] (c1)
[0,234s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.allFlagsSet [0x00007fae5d114c90] (c1)
[0,234s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.type [0x00007fae7c86e910] (c1)
[0,234s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.add [0x00007fae5d115010] (c1)
[0,234s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.getEntryHash [0x00007fae5d115710] (c1)
[0,234s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ArraysSupport.vectorizedHashCode [0x00007fae7c86ec10] (c2)
[0,235s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.allocateUninitializedArray [0x00007fae5d115b10] (c1)
[0,235s][debug][gc,nmethod   ] Register NMethod: java.util.Objects.checkIndex [0x00007fae5d116310] (c1)
[0,235s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.get [0x00007fae5d116690] (c1)
[0,235s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.elementData [0x00007fae5d116c90] (c1)
[0,235s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.getEntryNext [0x00007fae5d117110] (c1)
[0,235s][debug][gc,nmethod   ] Register NMethod: jdk.internal.ref.CleanerImpl.getCleanerImpl [0x00007fae5d117510] (c1)
[0,235s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Cleaner$1.apply [0x00007fae5d117a90] (c1)
[0,235s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Cleaner$1.apply [0x00007fae5d117e10] (c1)
[0,235s][debug][gc,nmethod   ] Register NMethod: java.io.RandomAccessFile.readBytes0 [0x00007fae7c86f110] ()
[0,235s][debug][gc,nmethod   ] Register NMethod: java.io.RandomAccessFile.read [0x00007fae5d118390] (c1)
[0,235s][debug][gc,nmethod   ] Register NMethod: java.io.RandomAccessFile.readBytes [0x00007fae5d118710] (c1)
[0,236s][debug][gc,nmethod   ] Register NMethod: java.lang.StringCoding.countPositives [0x00007fae7c86f510] (c2)
[0,236s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile.ensureOpen [0x00007fae5d118c90] (c1)
[0,236s][debug][gc,nmethod   ] Register NMethod: java.security.ProtectionDomain.getCodeSource [0x00007fae7c86f990] (c1)
[0,236s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.checkName [0x00007fae5d119310] (c1)
[0,236s][debug][gc,nmethod   ] Register NMethod: java.net.URL.getFile [0x00007fae7c86fc90] (c1)
[0,236s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Attributes$Name.hashCode [0x00007fae7c86ff90] (c1)
[0,237s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.checkForSpecialAttributes [0x00007fae5d11a190] (c1)
[0,237s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader.ensureOpen [0x00007fae5d11bc10] (c1)
[0,237s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.getEntryPos [0x00007fae5d11c410] (c1)
[0,237s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.isMultiRelease [0x00007fae5d11d610] (c1)
[0,238s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile.getEntry [0x00007fae5d11da90] (c1)
[0,238s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.WeakReference.<init> [0x00007fae5d11e410] (c1)
[0,238s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipCoder.hash [0x00007fae5d11e910] (c1)
[0,238s][debug][gc,nmethod   ] Register NMethod: java.lang.String.toString [0x00007fae5d11f610] (c1)
[0,238s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.session [0x00007fae5d11f910] (c1)
[0,238s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.checkIndex [0x00007fae5d11ff10] (c1)
[0,238s][debug][gc,nmethod   ] Register NMethod: java.util.Optional.orElse [0x00007fae5d120290] (c1)
[0,238s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Reference.reachabilityFence [0x00007fae7c870290] (c2)
[0,238s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getByte [0x00007fae7c870590] ()
[0,238s][debug][gc,nmethod   ] Register NMethod: jdk.internal.module.ModuleReferenceImpl.hashCode [0x00007fae5d120690] (c1)
[0,238s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectByteBuffer.ix [0x00007fae5d120f90] (c1)
[0,238s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectByteBuffer.get [0x00007fae5d121290] (c1)
[0,239s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.getByte [0x00007fae5d122310] (c1)
[0,239s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.getByteInternal [0x00007fae5d122a90] (c1)
[0,239s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader.getResource [0x00007fae5d123010] (c1)
[0,239s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.getJarEntry [0x00007fae5d123910] (c1)
[0,239s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath.getLoader [0x00007fae5d124110] (c1)
[0,239s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.getEntry [0x00007fae5d126190] (c1)
[0,239s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectLongBufferU.ix [0x00007fae5d126990] (c1)
[0,239s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.zipCoderForPos [0x00007fae7c870990] (c2)
[0,239s][debug][gc,nmethod   ] Register NMethod: java.lang.String.coder [0x00007fae7c870d10] (c2)
[0,239s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayDeque.inc [0x00007fae5d126d10] (c1)
[0,240s][debug][gc,nmethod   ] Register NMethod: java.io.File.isInvalid [0x00007fae5d127090] (c1)
[0,240s][debug][gc,nmethod   ] Register NMethod: java.lang.StringConcatHelper.stringOf [0x00007fae5d127810] (c1)
[0,240s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.ReferenceQueue.poll [0x00007fae5d127c90] (c1)
[0,240s][debug][gc,nmethod   ] Register NMethod: java.lang.String.intern [0x00007fae7c871010] ()
[0,240s][debug][gc,nmethod   ] Register NMethod: java.lang.StringConcatHelper.mix [0x00007fae5d129090] (c1)
[0,240s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.LG [0x00007fae7c871790] (c2)
[0,240s][debug][gc,nmethod   ] Register NMethod: java.lang.StringConcatHelper.checkOverflow [0x00007fae5d129890] (c1)
[0,240s][debug][gc,nmethod   ] Register NMethod: java.lang.StringConcatHelper.prepend [0x00007fae5d129d10] (c1)
[0,240s][debug][gc,nmethod   ] Register NMethod: java.io.RandomAccessFile.seek0 [0x00007fae7c871b10] ()
[0,240s][debug][gc,nmethod   ] Register NMethod: java.util.Objects.checkFromIndexSize [0x00007fae5d12a390] (c1)
[0,240s][debug][gc,nmethod   ] Register NMethod: java.io.RandomAccessFile.seek [0x00007fae5d12a890] (c1)
[0,241s][debug][gc,nmethod   ] Register NMethod: java.util.WeakHashMap.maskNull [0x00007fae5d12af90] (c1)
[0,241s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.isMetaName [0x00007fae7c871e90] (c2)
[0,241s][debug][gc,nmethod   ] Register NMethod: java.util.WeakHashMap.getTable [0x00007fae5d12b310] (c1)
[0,241s][debug][gc,nmethod   ] Register NMethod: java.util.WeakHashMap.hash [0x00007fae5d12b710] (c1)
[0,241s][debug][gc,nmethod   ] Register NMethod: java.lang.System.nanoTime [0x00007fae7c872490] ()
[0,241s][debug][gc,nmethod   ] Register NMethod: java.util.WeakHashMap.indexFor [0x00007fae5d12bb90] (c1)
[0,241s][debug][gc,nmethod   ] Register NMethod: java.security.CodeSource.getLocationNoFragString [0x00007fae7c872810] (c1)
[0,241s][debug][gc,nmethod   ] Register NMethod: java.util.WeakHashMap.expungeStaleEntries [0x00007fae5d12be90] (c1)
[0,242s][debug][gc,nmethod   ] Register NMethod: java.lang.String.value [0x00007fae7c872b10] (c1)
[0,242s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENLEN [0x00007fae5d12ce90] (c1)
[0,242s][debug][gc,nmethod   ] Register NMethod: java.io.RandomAccessFile.readFully [0x00007fae5d12d490] (c1)
[0,242s][debug][gc,nmethod   ] Register NMethod: java.security.CodeSource.getLocation [0x00007fae7c872e10] (c1)
[0,243s][debug][gc,nmethod   ] Register NMethod: java.net.URL.getPath [0x00007fae7c873110] (c1)
[0,243s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.tabAt [0x00007fae7c873410] (c2)
[0,243s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.findLoadedClass0 [0x00007fae7c873710] ()
[0,243s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterDataLatin1.equalsIgnoreCase [0x00007fae5d12db90] (c1)
[0,243s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.getClassLoadingLock [0x00007fae5d12e090] (c1)
[0,243s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.findLoadedClass [0x00007fae5d12e710] (c1)
[0,243s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.regionMatchesCI [0x00007fae5d12eb90] (c1)
[0,244s][debug][gc,nmethod   ] Register NMethod: java.lang.String.regionMatches [0x00007fae5d12f210] (c1)
[0,244s][debug][gc,nmethod   ] Register NMethod: jdk.internal.perf.PerfCounter.get [0x00007fae5d130010] (c1)
[0,244s][debug][gc,nmethod   ] Register NMethod: jdk.internal.perf.PerfCounter.add [0x00007fae5d130510] (c1)
[0,244s][debug][gc,nmethod   ] Register NMethod: java.util.zip.Inflater.ensureOpen [0x00007fae5d130d90] (c1)
[0,244s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectLongBufferU.get [0x00007fae5d131310] (c1)
[0,244s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.getLong [0x00007fae5d132390] (c1)
[0,244s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.getLongInternal [0x00007fae5d132b10] (c1)
[0,244s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.loadClass [0x00007fae5d133090] (c1)
[0,244s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.lastIndexOf [0x00007fae7c873e90] (c2)
[0,244s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectLongBufferU.put [0x00007fae5d133490] (c1)
[0,244s][debug][gc,nmethod   ] Register NMethod: java.net.URL.getPort [0x00007fae7c874310] (c1)
[0,244s][debug][gc,nmethod   ] Register NMethod: java.net.URL.getRef [0x00007fae7c874610] (c1)
[0,245s][debug][gc,nmethod   ] Register NMethod: java.net.URL.getAuthority [0x00007fae7c874910] (c1)
[0,245s][debug][gc,nmethod   ] Register NMethod: java.net.URL.getQuery [0x00007fae7c874c10] (c1)
[0,245s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putReferenceRelease [0x00007fae7c874f10] (c2)
[0,245s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.containsKey [0x00007fae5d134510] (c1)
[0,246s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.get [0x00007fae5d134910] (c1)
[0,246s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getModule [0x00007fae7c875210] (c1)
[0,246s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.maybeInstantiateVerifier [0x00007fae5d134e90] (c1)
[0,246s][debug][gc,nmethod   ] Register NMethod: java.io.InputStream.<init> [0x00007fae5d135590] (c1)
[0,246s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.rangeCheck [0x00007fae5d135910] (c1)
[0,247s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.equals [0x00007fae7c875510] (c2)
[0,247s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.initResolved [0x00007fae5d136890] (c1)
[0,247s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getPackageName [0x00007fae5d136c10] (c1)
[0,248s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodTypeForm.parameterSlotCount [0x00007fae7c875990] (c1)
[0,248s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.resize [0x00007fae5d137e10] (c1)
[0,249s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.put12 [0x00007fae5d139a10] (c1)
[0,250s][debug][gc,nmethod   ] Register NMethod: java.util.zip.Inflater.hasPendingOutput [0x00007fae7c875c90] (c1)
[0,250s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$ZipFileInputStream.close [0x00007fae5d13a010] (c1)
[0,250s][debug][gc,nmethod   ] Register NMethod: java.util.Collections$SetFromMap.remove [0x00007fae5d13a990] (c1)
[0,250s][debug][gc,nmethod   ] Register NMethod: java.util.WeakHashMap.remove [0x00007fae5d13ae90] (c1)
[0,250s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayDeque.add [0x00007fae5d13c190] (c1)
[0,250s][debug][gc,nmethod   ] Register NMethod: java.util.HashSet.contains [0x00007fae5d13c510] (c1)
[0,251s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayDeque.addLast [0x00007fae5d13ca90] (c1)
[0,251s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENSIZ [0x00007fae5d13d310] (c1)
[0,251s][debug][gc,nmethod   ] Register NMethod: java.lang.StringConcatHelper.newArray [0x00007fae5d13d910] (c1)
[0,251s][debug][gc,nmethod   ] Register NMethod: java.net.URLStreamHandler.getDefaultPort [0x00007fae7c875f90] (c1)
[0,251s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c876290] ()
[0,251s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodTypeForm.erasedType [0x00007fae7c876590] (c1)
[0,252s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.lookupClass [0x00007fae7c876890] (c1)
[0,252s][debug][gc,nmethod   ] Register NMethod: java.lang.NamedPackage.module [0x00007fae7c876b90] (c1)
[0,253s][debug][gc,nmethod   ] Register NMethod: java.net.URL.isBuiltinStreamHandler [0x00007fae5d13df10] (c1)
[0,253s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedInputStream.getBufIfOpen [0x00007fae7c876e90] (c2)
[0,253s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c877210] ()
[0,253s][debug][gc,nmethod   ] Register NMethod: java.net.URL.isBuiltinStreamHandler [0x00007fae5d13e390] (c1)
[0,253s][debug][gc,nmethod   ] Register NMethod: sun.net.util.IPAddressUtil.checkHostString [0x00007fae5d13f210] (c1)
[0,253s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext [0x00007fae7c877510] (c2)
[0,253s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.getMethodType [0x00007fae5d13f690] (c1)
[0,254s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.ReentrantLock$Sync.tryRelease [0x00007fae7c877810] (c2)
[0,254s][debug][gc,nmethod   ] Register NMethod: sun.net.util.IPAddressUtil.checkHost [0x00007fae5d141510] (c1)
[0,254s][debug][gc,nmethod   ] Register NMethod: sun.net.util.IPAddressUtil.scan [0x00007fae5d144310] (c1)
[0,254s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedInputStream.implRead [0x00007fae7c877c90] (c2)
[0,255s][debug][gc,nmethod   ] Register NMethod: worker.org.gradle.internal.stream.EncodedStream$EncodedInput.hexToByte [0x00007fae7c878110] (c2)
[0,255s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.ImageStringsReader.unmaskedHashCode [0x00007fae5d145710] (c1)
[0,255s][debug][gc,nmethod   ] Register NMethod: java.lang.Module.getDescriptor [0x00007fae7c878410] (c1)
[0,255s][debug][gc,nmethod   ] Register NMethod: java.lang.module.ModuleDescriptor.provides [0x00007fae7c878710] (c1)
[0,255s][debug][gc,nmethod   ] Register NMethod: java.lang.StringConcatHelper.initialCoder [0x00007fae5d146a10] (c1)
[0,255s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$SetN.contains [0x00007fae5d146d10] (c1)
[0,255s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.Wrapper.basicTypeChar [0x00007fae7c878a10] (c1)
[0,255s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.limit [0x00007fae7c878d10] (c1)
[0,255s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipEntry.getSize [0x00007fae7c879010] (c1)
[0,255s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.readFullyAt [0x00007fae5d147310] (c1)
[0,255s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.PhantomReference.<init> [0x00007fae5d147d10] (c1)
[0,256s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.execute [0x00007fae5d148210] (c1)
[0,256s][debug][gc,nmethod   ] Register NMethod: jdk.internal.ref.PhantomCleanable.<init> [0x00007fae5d151890] (c1)
[0,256s][debug][gc,nmethod   ] Register NMethod: jdk.internal.ref.CleanerFactory.cleaner [0x00007fae5d152a10] (c1)
[0,256s][debug][gc,nmethod   ] Register NMethod: jdk.internal.ref.PhantomCleanable.insert [0x00007fae5d152d10] (c1)
[0,256s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.intValue [0x00007fae7c879310] (c1)
[0,256s][debug][gc,nmethod   ] Register NMethod: java.lang.String.checkBoundsOffCount [0x00007fae5d153410] (c1)
[0,256s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedInputStream.read [0x00007fae7c879610] (c2)
[0,256s][debug][gc,nmethod   ] Register NMethod: java.lang.String.indexOf [0x00007fae5d153910] (c1)
[0,256s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.indexOf [0x00007fae5d154390] (c1)
[0,256s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Manifest$FastInputStream.readLine [0x00007fae5d154810] (c1)
[0,256s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader.ensureOpen [0x00007fae5d155690] (c1)
[0,257s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipCoder$UTF8ZipCoder.checkedHash [0x00007fae7c87a490] (c2)
[0,257s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.get [0x00007fae5d156290] (c1)
[0,257s][debug][gc,nmethod   ] Register NMethod: java.io.UnixFileSystem.normalize [0x00007fae5d156710] (c1)
[0,257s][debug][gc,nmethod   ] Register NMethod: java.util.zip.InflaterInputStream.ensureOpen [0x00007fae5d157290] (c1)
[0,257s][debug][gc,nmethod   ] Register NMethod: java.util.zip.Inflater.finished [0x00007fae5d157710] (c1)
[0,257s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.get16 [0x00007fae5d157c10] (c1)
[0,258s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.nextEntryPos [0x00007fae7c87ab90] (c2)
[0,258s][debug][gc,nmethod   ] Register NMethod: java.util.zip.InflaterInputStream.read [0x00007fae5d158010] (c1)
[0,258s][debug][gc,nmethod   ] Register NMethod: java.io.File.<init> [0x00007fae5d159890] (c1)
[0,258s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.max [0x00007fae7c87b090] (c2)
[0,258s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$List12.get [0x00007fae5d15a110] (c1)
[0,258s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayDeque.pollFirst [0x00007fae5d15a710] (c1)
[0,258s][debug][gc,nmethod   ] Register NMethod: jdk.internal.ref.CleanerImpl$PhantomCleanableRef.<init> [0x00007fae5d15af10] (c1)
[0,258s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Cleaner.register [0x00007fae5d15b310] (c1)
[0,258s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.NativeBuffer.address [0x00007fae7c87b390] (c1)
[0,259s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.isMetaName [0x00007fae5d15bc10] (c1)
[0,259s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.checkAndAddEntry [0x00007fae7c87b690] (c2)
[0,259s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.UnixPath.checkNotNul [0x00007fae7c87ce90] (c2)
[0,259s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Reference.refersTo0 [0x00007fae7c87d190] ()
[0,259s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Reference.refersToImpl [0x00007fae5d15c490] (c1)
[0,260s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.Reflection.getCallerClass [0x00007fae7c87d590] ()
[0,260s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.isMetaName [0x00007fae7c87dd10] (c2)
[0,260s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.indexOf [0x00007fae7c87e310] (c2)
[0,261s][debug][gc,nmethod   ] Register NMethod: java.lang.String.equalsIgnoreCase [0x00007fae5d15c810] (c1)
[0,261s][debug][gc,nmethod   ] Register NMethod: java.util.zip.Inflater.inflateBytesBytes [0x00007fae7c87eb10] ()
[0,262s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.isMetaName [0x00007fae5d15d190] (c1)
[0,262s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.match [0x00007fae5d15da10] (c1)
[0,262s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.UnixPath.getFileSystem [0x00007fae7c87ef10] (c1)
[0,263s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.removeEldestEntry [0x00007fae7c87f210] (c1)
[0,263s][debug][gc,nmethod   ] Register NMethod: java.lang.StringCoding.hasNegatives [0x00007fae5d15e410] (c1)
[0,263s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.checkExtraFields [0x00007fae5d15e810] (c1)
[0,263s][debug][gc,nmethod   ] Register NMethod: java.lang.String.getBytesNoRepl [0x00007fae5d160c10] (c1)
[0,263s][debug][gc,nmethod   ] Register NMethod: java.lang.System$2.getBytesNoRepl [0x00007fae5d161790] (c1)
[0,263s][debug][gc,nmethod   ] Register NMethod: java.lang.String.isASCII [0x00007fae5d162410] (c1)
[0,263s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.abs [0x00007fae5d162910] (c1)
[0,263s][debug][gc,nmethod   ] Register NMethod: java.lang.String.getBytesNoRepl1 [0x00007fae5d162c90] (c1)
[0,263s][debug][gc,nmethod   ] Register NMethod: java.lang.StringCoding.countPositives [0x00007fae5d163e10] (c1)
[0,263s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Manifest$FastInputStream.readLine [0x00007fae5d164310] (c1)
[0,263s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae5d164710] (c1)
[0,264s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Manifest$FastInputStream.peek [0x00007fae5d165010] (c1)
[0,264s][debug][gc,nmethod   ] Register NMethod: jdk.internal.access.SharedSecrets.javaUtilJarAccess [0x00007fae5d165510] (c1)
[0,264s][debug][gc,nmethod   ] Register NMethod: java.security.AccessController.executePrivileged [0x00007fae5d165f10] (c1)
[0,264s][debug][gc,nmethod   ] Register NMethod: java.security.AccessController.checkContext [0x00007fae5d166510] (c1)
[0,264s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.LOCSIG [0x00007fae5d166990] (c1)
[0,265s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.isMetaName [0x00007fae7c87f510] (c2)
[0,265s][debug][gc,nmethod   ] Register NMethod: jdk.internal.perf.PerfCounter.addElapsedTimeFrom [0x00007fae5d166f90] (c1)
[0,266s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae5d167390] (c1)
[0,266s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.UnixPath.normalizeAndCheck [0x00007fae5d16e610] (c1)
[0,266s][debug][gc,nmethod   ] Register NMethod: java.lang.Runtime$Version.feature [0x00007fae5d16f790] (c1)
[0,266s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.indexOf [0x00007fae7c87fa90] (c2)
[0,267s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.isManifestName [0x00007fae5d16fd90] (c1)
[0,267s][debug][gc,nmethod   ] Register NMethod: java.lang.Thread.currentCarrierThread [0x00007fae7c880390] ()
[0,267s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Attributes$Name.hash [0x00007fae5d170710] (c1)
[0,267s][debug][gc,nmethod   ] Register NMethod: java.security.AccessController.doPrivileged [0x00007fae5d171c10] (c1)
[0,267s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.fill [0x00007fae5d172610] (c1)
[0,268s][debug][gc,nmethod   ] Register NMethod: java.net.URL.lowerCaseProtocol [0x00007fae5d172a10] (c1)
[0,268s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.initCEN [0x00007fae5d173390] (c1)
[0,269s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.FileURLMapper.getPath [0x00007fae5d177e10] (c1)
[0,270s][debug][gc,nmethod   ] Register NMethod: sun.net.util.IPAddressUtil.scan [0x00007fae5d178790] (c1)
[0,270s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference [0x00007fae5d179810] (c1)
[0,270s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addConstantClass [0x00007fae5d17a510] (c1)
[0,271s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.canEncode [0x00007fae7c880b10] (c2)
[0,271s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.indexOf [0x00007fae7c880e10] (c2)
[0,272s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENNAM [0x00007fae7c881810] (c2)
[0,274s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ClassFileAssembler.emitByte [0x00007fae5d17a890] (c1)
[0,274s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ByteVectorImpl.add [0x00007fae5d17ad10] (c1)
[0,275s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c881b90] ()
[0,275s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c881e90] ()
[0,275s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.checkPtypes [0x00007fae5d17b290] (c1)
[0,275s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.VerifyAccess.isTypeVisible [0x00007fae5d17c490] (c1)
[0,276s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodTypeForm.canonicalizeAll [0x00007fae5d17de10] (c1)
[0,276s][debug][gc,nmethod   ] Register NMethod: java.lang.Object.equals [0x00007fae5d17e890] (c1)
[0,276s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodTypeForm.basicType [0x00007fae7c882410] (c1)
[0,276s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.getName [0x00007fae7c882710] (c1)
[0,276s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.equals [0x00007fae5d17ec10] (c1)
[0,276s][debug][gc,nmethod   ] Register NMethod: java.lang.Number.<init> [0x00007fae5d17fe10] (c1)
[0,276s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.<init> [0x00007fae5d180190] (c1)
[0,276s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c882a10] ()
[0,276s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init> [0x00007fae5d180610] (c1)
[0,276s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ArraysSupport.newLength [0x00007fae5d180d10] (c1)
[0,277s][debug][gc,nmethod   ] Register NMethod: java.io.ByteArrayOutputStream.ensureCapacity [0x00007fae5d181210] (c1)
[0,277s][debug][gc,nmethod   ] Register NMethod: java.io.ByteArrayOutputStream.write [0x00007fae5d181910] (c1)
[0,277s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterDataLatin1.toLowerCase [0x00007fae5d182190] (c1)
[0,277s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.afterNodeInsertion [0x00007fae7c882d10] (c2)
[0,280s][debug][gc,nmethod   ] Register NMethod: java.lang.Enum.name [0x00007fae7c883010] (c1)
[0,281s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterDataLatin1.getProperties [0x00007fae5d182690] (c1)
[0,281s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterDataLatin1.toUpperCaseEx [0x00007fae5d182a10] (c1)
[0,282s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.put [0x00007fae5d182f90] (c1)
[0,282s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale.getLanguage [0x00007fae7c883310] (c1)
[0,283s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.numberOfLeadingZeros [0x00007fae5d183310] (c1)
[0,284s][debug][gc,nmethod   ] Register NMethod: sun.security.util.KnownOIDs.registerNames [0x00007fae7c883610] (c1)
[0,284s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.toUpperCase [0x00007fae5d183810] (c1)
[0,285s][debug][gc,nmethod   ] Register NMethod: java.util.Objects.nonNull [0x00007fae5d184a10] (c1)
[0,286s][debug][gc,nmethod   ] Register NMethod: java.lang.String.toUpperCase [0x00007fae5d184d90] (c1)
[0,286s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.copyOf [0x00007fae5d185390] (c1)
[0,286s][debug][gc,nmethod   ] Register NMethod: java.util.Objects.requireNonNull [0x00007fae7c883910] (c2)
[0,286s][debug][gc,nmethod   ] Register NMethod: java.util.Locale.getLanguage [0x00007fae5d185e90] (c1)
[0,287s][debug][gc,nmethod   ] Register NMethod: java.util.HashSet.add [0x00007fae5d186290] (c1)
[0,287s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap$HashIterator.nextNode [0x00007fae5d186790] (c1)
[0,287s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap$HashIterator.hasNext [0x00007fae5d187190] (c1)
[0,287s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.newNode [0x00007fae5d187590] (c1)
[0,287s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap$Entry.<init> [0x00007fae5d187a90] (c1)
[0,287s][debug][gc,nmethod   ] Register NMethod: java.util.AbstractList.<init> [0x00007fae5d187f90] (c1)
[0,287s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$Node.<init> [0x00007fae5d188410] (c1)
[0,287s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$Itr.hasNext [0x00007fae5d188910] (c1)
[0,287s][debug][gc,nmethod   ] Register NMethod: java.util.Properties.put [0x00007fae5d188d10] (c1)
[0,287s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap$Node.getKey [0x00007fae7c883c10] (c1)
[0,287s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap$Node.getValue [0x00007fae7c883f10] (c1)
[0,287s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterDataLatin1.toUpperCaseEx [0x00007fae7c884210] (c2)
[0,287s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getInt [0x00007fae7c884590] ()
[0,288s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.rotateLeft [0x00007fae5d189290] (c1)
[0,288s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.rotateLeft [0x00007fae7c884990] (c2)
[0,288s][debug][gc,nmethod   ] Register NMethod: sun.security.util.KnownOIDs.register [0x00007fae5d189590] (c1)
[0,288s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getIntUnaligned [0x00007fae5d190790] (c1)
[0,288s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.VarForm.getMemberName [0x00007fae5d190f90] (c1)
[0,288s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.VarHandle.checkAccessModeThenIsDirect [0x00007fae5d191610] (c1)
[0,288s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getIntUnaligned [0x00007fae5d192510] (c1)
[0,288s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle.get [0x00007fae5d192a10] (c1)
[0,288s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle.index [0x00007fae5d193190] (c1)
[0,288s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c884c90] ()
[0,288s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.convEndian [0x00007fae5d193590] (c1)
[0,288s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.reverseBytes [0x00007fae5d193990] (c1)
[0,289s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.VarHandle.accessModeType [0x00007fae5d193c90] (c1)
[0,289s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_LI_I [0x00007fae5d194910] (c1)
[0,289s][debug][gc,nmethod   ] Register NMethod: java.util.WeakHashMap.getTable [0x00007fae5d197110] (c1)
[0,289s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ClassFileAssembler.emitShort [0x00007fae5d197510] (c1)
[0,289s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ClassFileAssembler.cpi [0x00007fae5d197c90] (c1)
[0,289s][debug][gc,nmethod   ] Register NMethod: java.lang.Throwable.fillInStackTrace [0x00007fae7c885210] ()
[0,289s][debug][gc,nmethod   ] Register NMethod: java.util.WeakHashMap$Entry.<init> [0x00007fae5d198110] (c1)
[0,289s][debug][gc,nmethod   ] Register NMethod: java.lang.Throwable.fillInStackTrace [0x00007fae5d198710] (c1)
[0,289s][debug][gc,nmethod   ] Register NMethod: java.util.WeakHashMap.put [0x00007fae5d198d10] (c1)
[0,289s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.clone [0x00007fae5d19a610] (c1)
[0,289s][debug][gc,nmethod   ] Register NMethod: java.util.Collections$SetFromMap.add [0x00007fae5d19ac90] (c1)
[0,289s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.min [0x00007fae5d19b190] (c1)
[0,289s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Modifier.isProtected [0x00007fae5d19b510] (c1)
[0,289s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.ensureCapacityInternal [0x00007fae7c885990] (c2)
[0,290s][debug][gc,nmethod   ] Register NMethod: java.util.WeakHashMap.matchesKey [0x00007fae5d19b890] (c1)
[0,290s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.UTF8.utf8Length [0x00007fae5d19c110] (c1)
[0,290s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ClassFileAssembler.emitConstantPoolUTF8 [0x00007fae5d19d010] (c1)
[0,290s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ByteVectorImpl.getLength [0x00007fae5d19dd90] (c1)
[0,290s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.UTF8.encode [0x00007fae5d19e090] (c1)
[0,290s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.SoftReference.get [0x00007fae5d19f590] (c1)
[0,290s][debug][gc,nmethod   ] Register NMethod: java.io.ObjectStreamField.getName [0x00007fae7c886210] (c1)
[0,290s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c886510] ()
[0,290s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.isAssignableFrom [0x00007fae7c886a90] ()
[0,290s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c886e90] ()
[0,291s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.getReferenceKind [0x00007fae5d19f990] (c1)
[0,291s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.isInterface [0x00007fae7c887190] ()
[0,291s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$BasicType.basicType [0x00007fae5d19fc90] (c1)
[0,291s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ByteVectorImpl.get [0x00007fae5d1a0c90] (c1)
[0,291s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.initClassName [0x00007fae7c887510] ()
[0,291s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.VerifyAccess.isSamePackage [0x00007fae5d1a1210] (c1)
[0,292s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$BasicType.basicType [0x00007fae5d1a1c90] (c1)
[0,292s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.Wrapper.basicTypeChar [0x00007fae5d1a2190] (c1)
[0,292s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c887c90] ()
[0,292s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.isConstructor [0x00007fae5d1a2610] (c1)
[0,292s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c888210] ()
[0,292s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ByteVectorImpl.add [0x00007fae7c888510] (c2)
[0,292s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.forceInterpretation [0x00007fae5d1a2a10] (c1)
[0,292s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Modifier.isStatic [0x00007fae5d1a2d90] (c1)
[0,292s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c888990] ()
[0,292s][debug][gc,nmethod   ] Register NMethod: java.lang.String.equals [0x00007fae7c888f10] (c2)
[0,293s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.put122 [0x00007fae5d1a3110] (c1)
[0,293s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.argument [0x00007fae5d1a3790] (c1)
[0,293s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$Name.initIndex [0x00007fae5d1a3e10] (c1)
[0,293s][debug][gc,nmethod   ] Register NMethod: java.lang.String.getBytes [0x00007fae7c889410] (c2)
[0,293s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.isHidden [0x00007fae7c889890] ()
[0,293s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.<init> [0x00007fae5d1a4210] (c1)
[0,294s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ClassFileAssembler.emitByte [0x00007fae7c889c10] (c2)
[0,294s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.uncustomize [0x00007fae5d1a4590] (c1)
[0,294s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.genericMethodType [0x00007fae5d1a4c10] (c1)
[0,294s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.isResolved [0x00007fae5d1a5f90] (c1)
[0,295s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Field.getName [0x00007fae7c88a190] (c1)
[0,295s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.descriptorString [0x00007fae5d1a6390] (c1)
[0,295s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.isStatic [0x00007fae5d1a8b10] (c1)
[0,295s][debug][gc,nmethod   ] Register NMethod: java.io.ObjectStreamField.getSignature [0x00007fae5d1a8f10] (c1)
[0,295s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.AccessorGenerator.sub [0x00007fae5d1a9510] (c1)
[0,295s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ClassFileAssembler.setStack [0x00007fae5d1a9810] (c1)
[0,295s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodTypeForm.canonicalize [0x00007fae5d1a9b90] (c1)
[0,295s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType$ConcurrentWeakInternSet.add [0x00007fae5d1aa210] (c1)
[0,295s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Modifier.isPublic [0x00007fae5d1ab590] (c1)
[0,295s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ClassFileAssembler.emitConstantPoolMethodref [0x00007fae5d1ab910] (c1)
[0,296s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.equals [0x00007fae5d1ac710] (c1)
[0,296s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.putInt [0x00007fae5d1ad110] (c1)
[0,296s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$Name.index [0x00007fae7c88a490] (c1)
[0,296s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.push [0x00007fae5d1ad710] (c1)
[0,296s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.getMajorVersion [0x00007fae7c88a790] (c1)
[0,296s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.getMethodOrFieldType [0x00007fae5d1ae110] (c1)
[0,296s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ClassFileAssembler.emitConstantPoolNameAndType [0x00007fae5d1af710] (c1)
[0,297s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getReflectionFactory [0x00007fae5d1b0510] (c1)
[0,297s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.<init> [0x00007fae5d1b1090] (c1)
[0,297s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$Loader.getBaseURL [0x00007fae7c88aa90] (c1)
[0,297s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.prepare [0x00007fae5d1b1a10] (c1)
[0,297s][debug][gc,nmethod   ] Register NMethod: java.net.URL.getDefaultPort [0x00007fae5d1b2910] (c1)
[0,297s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectLongBufferU.ix [0x00007fae7c88ad90] (c2)
[0,298s][debug][gc,nmethod   ] Register NMethod: sun.net.www.protocol.jar.Handler.checkNestedProtocol [0x00007fae5d1b2d90] (c1)
[0,298s][debug][gc,nmethod   ] Register NMethod: java.net.URL.toExternalForm [0x00007fae5d1b3210] (c1)
[0,298s][debug][gc,nmethod   ] Register NMethod: java.net.URL.toString [0x00007fae5d1b3690] (c1)
[0,298s][debug][gc,nmethod   ] Register NMethod: java.net.URLStreamHandler.toExternalForm [0x00007fae5d1b3b90] (c1)
[0,298s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Attributes.getValue [0x00007fae5d1b5e90] (c1)
[0,298s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Attributes.get [0x00007fae5d1b6490] (c1)
[0,298s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.mismatch [0x00007fae5d1b6910] (c1)
[0,298s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipCoder$UTF8ZipCoder.compare [0x00007fae5d1b6f90] (c1)
[0,299s][debug][gc,nmethod   ] Register NMethod: java.util.WeakHashMap.remove [0x00007fae5d1b8390] (c1)
[0,299s][debug][gc,nmethod   ] Register NMethod: java.util.zip.Inflater.needsInput [0x00007fae5d1b9690] (c1)
[0,299s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile.getInputStream [0x00007fae5d1b9e10] (c1)
[0,299s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENHOW [0x00007fae7c88b090] (c2)
[0,299s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$ZipFileInputStream.<init> [0x00007fae5d1bc090] (c1)
[0,299s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.Resource.cachedInputStream [0x00007fae5d1bd210] (c1)
[0,300s][debug][gc,nmethod   ] Register NMethod: java.util.zip.Inflater.inflate [0x00007fae5d1bda10] (c1)
[0,300s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENOFF [0x00007fae5d1c0e10] (c1)
[0,300s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipEntry.getCrc [0x00007fae7c88b410] (c1)
[0,300s][debug][gc,nmethod   ] Register NMethod: java.lang.String.indexOf [0x00007fae5d1c1410] (c1)
[0,300s][debug][gc,nmethod   ] Register NMethod: java.lang.String.indexOf [0x00007fae5d1c1a10] (c1)
[0,300s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.BuiltinClassLoader.loadClassOrNull [0x00007fae5d1c2410] (c1)
[0,300s][debug][gc,nmethod   ] Register NMethod: java.lang.System$2.findBootstrapClassOrNull [0x00007fae5d1c3d90] (c1)
[0,300s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.BuiltinClassLoader.loadClass [0x00007fae5d1c4290] (c1)
[0,300s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Manifest.getMainAttributes [0x00007fae7c88b710] (c1)
[0,300s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.ClassLoaders$BootClassLoader.loadClassOrNull [0x00007fae5d1c4810] (c1)
[0,300s][debug][gc,nmethod   ] Register NMethod: worker.org.gradle.internal.classloader.FilteringClassLoader$TrieSet.find [0x00007fae5d1c4d90] (c1)
[0,300s][debug][gc,nmethod   ] Register NMethod: java.lang.ReflectiveOperationException.<init> [0x00007fae5d1c5210] (c1)
[0,300s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Manifest.getEntries [0x00007fae7c88ba10] (c1)
[0,301s][debug][gc,nmethod   ] Register NMethod: worker.org.gradle.internal.util.Trie.find [0x00007fae5d1c5610] (c1)
[0,301s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.append [0x00007fae7c88bd10] (c2)
[0,301s][debug][gc,nmethod   ] Register NMethod: sun.net.www.ParseUtil.encodePath [0x00007fae5d1c6390] (c1)
[0,302s][debug][gc,nmethod   ] Register NMethod: jdk.internal.perf.PerfCounter.increment [0x00007fae5d1c6810] (c1)
[0,303s][debug][gc,nmethod   ] Register NMethod: java.lang.StringConcatHelper.simpleConcat [0x00007fae5d1c6c10] (c1)
[0,303s][debug][gc,nmethod   ] Register NMethod: java.lang.String.concat [0x00007fae5d1c8910] (c1)
[0,303s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.lookupClassOrNull [0x00007fae5d1ca710] (c1)
[0,303s][debug][gc,nmethod   ] Register NMethod: java.lang.StringConcatHelper.newString [0x00007fae5d1cab10] (c1)
[0,303s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c88ca90] ()
[0,304s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.computeIfAbsent [0x00007fae5d1cba90] (c1)
[0,304s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterData.of [0x00007fae5d1cf590] (c1)
[0,304s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToVirtual [0x00007fae7c88cd90] ()
[0,305s][debug][gc,nmethod   ] Register NMethod: java.io.FilterInputStream.<init> [0x00007fae5d1d0590] (c1)
[0,306s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap$EntryIterator.next [0x00007fae5d1d0a10] (c1)
[0,306s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.parameterSlotCount [0x00007fae5d1d0e10] (c1)
[0,306s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap$EntryIterator.next [0x00007fae5d1d1210] (c1)
[0,306s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.replace [0x00007fae7c88d090] (c2)
[0,306s][debug][gc,nmethod   ] Register NMethod: sun.net.util.URLUtil.urlNoFragString [0x00007fae5d1d1590] (c1)
[0,307s][debug][gc,nmethod   ] Register NMethod: worker.org.gradle.internal.classloader.FilteringClassLoader.loadClass [0x00007fae5d1d3010] (c1)
[0,307s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.loadClass [0x00007fae5d1d4310] (c1)
[0,307s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.<init> [0x00007fae5d1d5990] (c1)
[0,307s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.flagsMods [0x00007fae5d1d5e10] (c1)
[0,307s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.init [0x00007fae5d1d6110] (c1)
[0,307s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.getModifiers [0x00007fae5d1d6510] (c1)
[0,308s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c88db10] ()
[0,309s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives.resolve [0x00007fae7c88de10] ()
[0,309s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c88e610] ()
[0,309s][debug][gc,nmethod   ] Register NMethod: java.util.Properties.loadConvert [0x00007fae5d1d6810] (c1)
[0,309s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName$Factory.resolve [0x00007fae5d1d8490] (c1)
[0,309s][debug][gc,nmethod   ] Register NMethod: java.util.Properties$LineReader.readLine [0x00007fae5d1d9110] (c1)
[0,309s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.VerifyAccess.isClassAccessible [0x00007fae5d1dc910] (c1)
[0,310s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.checkForTypeAlias [0x00007fae5d1ddf10] (c1)
[0,310s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.previousLookupClass [0x00007fae7c88e910] (c1)
[0,310s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.rtype [0x00007fae7c88ec10] (c1)
[0,310s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.hashCode [0x00007fae7c88ef10] (c2)
[0,310s][debug][gc,nmethod   ] Register NMethod: java.lang.Module.isNamed [0x00007fae5d1e0890] (c1)
[0,311s][debug][gc,nmethod   ] Register NMethod: java.net.URL.<init> [0x00007fae5d1e0c90] (c1)
[0,311s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENATX_PERMS [0x00007fae5d1e6810] (c1)
[0,311s][debug][gc,nmethod   ] Register NMethod: java.security.CodeSource.getCertificates [0x00007fae5d1e6c90] (c1)
[0,312s][debug][gc,nmethod   ] Register NMethod: java.net.URL.<init> [0x00007fae5d1e7e10] (c1)
[0,312s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile.getZipEntry [0x00007fae5d1e8190] (c1)
[0,313s][debug][gc,nmethod   ] Register NMethod: java.net.URLStreamHandler.setURL [0x00007fae5d1eca90] (c1)
[0,313s][debug][gc,nmethod   ] Register NMethod: java.lang.Throwable.<init> [0x00007fae5d1ee610] (c1)
[0,313s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassNotFoundException.<init> [0x00007fae5d1eec10] (c1)
[0,313s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getSuperclass [0x00007fae7c88f410] ()
[0,313s][debug][gc,nmethod   ] Register NMethod: java.net.URL.set [0x00007fae5d1ef090] (c1)
[0,313s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.reflectionData [0x00007fae5d1eff10] (c1)
[0,313s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedList$ListItr.hasNext [0x00007fae5d1f0690] (c1)
[0,313s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$Itr.checkForComodification [0x00007fae5d1f0a90] (c1)
[0,313s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.getDefinedPackage [0x00007fae5d1f0f90] (c1)
[0,313s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.getModifiers [0x00007fae7c88fb90] (c1)
[0,313s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.getManifest [0x00007fae5d1f1990] (c1)
[0,313s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$Itr.next [0x00007fae5d1f1d10] (c1)
[0,314s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.getManifestFromReference [0x00007fae5d1f2590] (c1)
[0,314s][debug][gc,nmethod   ] Register NMethod: java.security.AccessController.ensureMaterializedForStackWalk [0x00007fae7c88fe90] ()
[0,314s][debug][gc,nmethod   ] Register NMethod: java.util.Objects.requireNonNull [0x00007fae7c890210] (c2)
[0,315s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.getReturnType [0x00007fae7c890510] (c1)
[0,315s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToVirtual [0x00007fae7c890810] ()
[0,315s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.getName [0x00007fae5d1f4590] (c1)
[0,315s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Handler.getExceptionTableLength [0x00007fae5d1f4d90] (c1)
[0,315s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToVirtual [0x00007fae7c890b10] ()
[0,315s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addType [0x00007fae5d1f5210] (c1)
[0,315s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn [0x00007fae5d1f5d90] (c1)
[0,315s][debug][gc,nmethod   ] Register NMethod: java.util.HashSet.<init> [0x00007fae5d1f6d90] (c1)
[0,315s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$BasicType.basicTypeClass [0x00007fae7c890e10] (c1)
[0,315s][debug][gc,nmethod   ] Register NMethod: java.lang.Record.<init> [0x00007fae5d1f7510] (c1)
[0,316s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c891110] ()
[0,316s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c891410] ()
[0,316s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c891990] ()
[0,316s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c891c90] ()
[0,316s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c891f90] ()
[0,316s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c892510] ()
[0,316s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.Wrapper.forPrimitiveType [0x00007fae5d1f7890] (c1)
[0,316s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.insertParameterTypes [0x00007fae5d1f8990] (c1)
[0,316s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c892810] ()
[0,316s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.pop [0x00007fae5d1fa310] (c1)
[0,316s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$Name.type [0x00007fae7c892b10] (c1)
[0,316s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c892e10] ()
[0,316s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c893390] ()
[0,316s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.basicType [0x00007fae5d1fa790] (c1)
[0,317s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.internArgument [0x00007fae5d1fab90] (c1)
[0,317s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$NamedFunction.methodType [0x00007fae5d1fb390] (c1)
[0,317s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ClassFileDumper.isEnabled [0x00007fae7c893690] (c1)
[0,317s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$Name.<init> [0x00007fae5d1fba90] (c1)
[0,317s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$Name.useCount [0x00007fae5d1fbf90] (c1)
[0,317s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Type.getArgumentsAndReturnSizes [0x00007fae5d1fc510] (c1)
[0,318s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.VerifyType.isNullConversion [0x00007fae5d1ff290] (c1)
[0,319s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ArraysSupport.vectorizedHashCode [0x00007fae5d200f90] (c1)
[0,319s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.defineClass1 [0x00007fae7c893990] ()
[0,319s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.findBootstrapClass [0x00007fae7c894190] ()
[0,319s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.addClass [0x00007fae5d202610] (c1)
[0,319s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.BuiltinClassLoader.findLoadedModule [0x00007fae5d203210] (c1)
[0,320s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Reference.clear0 [0x00007fae7c894910] ()
[0,320s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile.ensureOpenOrZipException [0x00007fae5d203d10] (c1)
[0,320s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$ZipFileInputStream.read [0x00007fae5d204190] (c1)
[0,320s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$ZipFileInputStream.initDataOffset [0x00007fae5d204f90] (c1)
[0,320s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.LOCNAM [0x00007fae5d205d90] (c1)
[0,320s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.LOCEXT [0x00007fae5d206210] (c1)
[0,320s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Reference.clear [0x00007fae5d206690] (c1)
[0,320s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.readAt [0x00007fae5d206a10] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayDeque.poll [0x00007fae5d207290] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: jdk.internal.ref.PhantomCleanable.remove [0x00007fae5d207610] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$InflaterCleanupAction.<init> [0x00007fae5d207e90] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$ZipFileInflaterInputStream.<init> [0x00007fae5d208290] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$CleanableResource.getInflater [0x00007fae5d208a10] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.util.zip.InflaterInputStream.<init> [0x00007fae5d209390] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.util.zip.Inflater.setInput [0x00007fae5d209e10] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$ZipFileInflaterInputStream.fill [0x00007fae5d20a590] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.util.zip.InflaterInputStream.close [0x00007fae5d20af10] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: jdk.internal.ref.CleanerImpl$PhantomCleanableRef.performCleanup [0x00007fae5d20b510] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: jdk.internal.ref.PhantomCleanable.clean [0x00007fae5d20b990] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$InflaterCleanupAction.run [0x00007fae5d20bf10] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipCoder$UTF8ZipCoder.hasTrailingSlash [0x00007fae5d20c390] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.max [0x00007fae5d20c810] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$CleanableResource.releaseInflater [0x00007fae5d20cb90] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.AccessibleObject.<init> [0x00007fae5d20d490] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$ZipFileInflaterInputStream.close [0x00007fae5d20d810] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.clamp [0x00007fae5d20e990] (c1)
[0,321s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c894c90] ()
[0,322s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToVirtual [0x00007fae7c894f90] ()
[0,322s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.getInputStream [0x00007fae5d20f690] (c1)
[0,322s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.<init> [0x00007fae5d210410] (c1)
[0,322s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.pop [0x00007fae5d210890] (c1)
[0,322s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.parameter [0x00007fae5d210c90] (c1)
[0,322s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.append [0x00007fae7c895290] (c2)
[0,322s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.hash [0x00007fae5d211110] (c1)
[0,322s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.putByteArray [0x00007fae5d211610] (c1)
[0,322s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addConstantMemberReference [0x00007fae5d211c10] (c1)
[0,323s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.putUTF8 [0x00007fae7c896190] (c2)
[0,323s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.getAbstractTypeFromDescriptor [0x00007fae5d212f10] (c1)
[0,323s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.setTabAt [0x00007fae7c896c10] (c2)
[0,323s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedInputStream.getBufIfOpen [0x00007fae5d215a10] (c1)
[0,323s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.VarHandleByteArrayAsShorts$ArrayHandle.index [0x00007fae5d216190] (c1)
[0,323s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock [0x00007fae5d216590] (c1)
[0,323s][debug][gc,nmethod   ] Register NMethod: java.lang.Short.reverseBytes [0x00007fae5d216c90] (c1)
[0,323s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.convEndian [0x00007fae5d216f90] (c1)
[0,323s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.ReentrantLock$Sync.tryRelease [0x00007fae5d217390] (c1)
[0,323s][debug][gc,nmethod   ] Register NMethod: java.lang.StringUTF16.compress [0x00007fae5d217a90] (c1)
[0,323s][debug][gc,nmethod   ] Register NMethod: java.io.DataInputStream.readFully [0x00007fae5d217f90] (c1)
[0,323s][debug][gc,nmethod   ] Register NMethod: java.lang.String.rangeCheck [0x00007fae5d218990] (c1)
[0,323s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getShort [0x00007fae7c896f10] ()
[0,323s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedInputStream.ensureOpen [0x00007fae5d218f10] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedInputStream.implRead [0x00007fae5d219410] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedInputStream.read [0x00007fae5d21a010] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getShortUnaligned [0x00007fae5d21b810] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: java.io.DataInputStream.readUTF [0x00007fae5d21bd10] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae5d21eb90] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getShortUnaligned [0x00007fae5d21f290] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedInputStream.read1 [0x00007fae5d21f990] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: java.lang.Short.toUnsignedInt [0x00007fae5d220610] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.VarHandleByteArrayAsShorts$ArrayHandle.get [0x00007fae5d220910] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ByteArray.getUnsignedShort [0x00007fae5d221090] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: java.io.DataInputStream.readUTF [0x00007fae5d221a90] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: java.io.DataInputStream.readUnsignedShort [0x00007fae5d221e10] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae5d222990] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: java.io.DataInputStream.readFully [0x00007fae5d223010] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ByteArray.getShort [0x00007fae5d223410] (c1)
[0,324s][debug][gc,nmethod   ] Register NMethod: java.io.DataInputStream.readShort [0x00007fae5d223d90] (c1)
[0,325s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedInputStream.getBufIfOpen [0x00007fae7c897310] (c2)
[0,325s][debug][gc,nmethod   ] Register NMethod: java.io.ByteArrayInputStream.read [0x00007fae5d224890] (c1)
[0,325s][debug][gc,nmethod   ] Register NMethod: java.io.DataInputStream.readUnsignedByte [0x00007fae5d224e10] (c1)
[0,325s][debug][gc,nmethod   ] Register NMethod: java.io.DataInputStream.readByte [0x00007fae5d225410] (c1)
[0,325s][debug][gc,nmethod   ] Register NMethod: java.util.zip.Checksum.update [0x00007fae5d225b10] (c1)
[0,325s][debug][gc,nmethod   ] Register NMethod: java.util.zip.CRC32.updateBytesCheck [0x00007fae5d226010] (c1)
[0,325s][debug][gc,nmethod   ] Register NMethod: java.util.zip.CRC32.updateBytes [0x00007fae5d226690] (c1)
[0,325s][debug][gc,nmethod   ] Register NMethod: sun.util.calendar.ZoneInfoFile$Checksum.update [0x00007fae5d226e10] (c1)
[0,325s][debug][gc,nmethod   ] Register NMethod: java.util.zip.CRC32.update [0x00007fae5d227410] (c1)
[0,325s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleUtils.isUpper [0x00007fae5d227c10] (c1)
[0,326s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Constructor.getModifiers [0x00007fae7c897910] (c1)
[0,326s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.InternalLock.lock [0x00007fae7c897c10] (c2)
[0,326s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.ImageLocation.readValue [0x00007fae5d227f90] (c1)
[0,326s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.InternalLock.unlock [0x00007fae7c898390] (c2)
[0,326s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl.isCompileConstant [0x00007fae7c898a10] (c1)
[0,326s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c898d10] ()
[0,326s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c899010] ()
[0,327s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c899310] ()
[0,327s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c899890] ()
[0,327s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.parameterType [0x00007fae5d228690] (c1)
[0,327s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern$$Lambda/0x80000002a.is [0x00007fae5d228b10] (c1)
[0,327s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern.lambda$Single$14 [0x00007fae5d228f10] (c1)
[0,327s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Matcher.hasMatch [0x00007fae5d229290] (c1)
[0,327s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Matcher.checkMatch [0x00007fae5d229610] (c1)
[0,327s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Matcher.search [0x00007fae5d229b90] (c1)
[0,327s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern$BmpCharPropertyGreedy.match [0x00007fae5d22a710] (c1)
[0,327s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Matcher.start [0x00007fae5d22b310] (c1)
[0,327s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Matcher.end [0x00007fae5d22b990] (c1)
[0,327s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern$Start.match [0x00007fae5d22c010] (c1)
[0,327s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Matcher.find [0x00007fae5d22c810] (c1)
[0,327s][debug][gc,nmethod   ] Register NMethod: java.lang.String.subSequence [0x00007fae5d22ce10] (c1)
[0,327s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern$LastNode.match [0x00007fae5d22d190] (c1)
[0,328s][debug][gc,nmethod   ] Register NMethod: java.lang.String.toString [0x00007fae7c899b90] (c2)
[0,328s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$SetN.<init> [0x00007fae5d22d690] (c1)
[0,328s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.internalMemberName [0x00007fae7c899e90] (c1)
[0,328s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.StringTokenIterator.isDone [0x00007fae7c89a190] (c1)
[0,328s][debug][gc,nmethod   ] Register NMethod: java.util.Collections$EmptyList.isEmpty [0x00007fae7c89a490] (c1)
[0,328s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleUtils.toLower [0x00007fae5d22eb90] (c1)
[0,328s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale.getVariant [0x00007fae7c89a790] (c1)
[0,328s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale.getRegion [0x00007fae7c89aa90] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.StringTokenIterator.current [0x00007fae7c89ad90] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: java.util.Collections.emptyList [0x00007fae5d22f010] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale.getScript [0x00007fae7c89b090] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleUtils.isAlpha [0x00007fae5d22f310] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.StringTokenIterator.currentEnd [0x00007fae7c89b390] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale$Key.hashCode [0x00007fae7c89b690] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Reference.<init> [0x00007fae5d22f710] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.SoftReference.<init> [0x00007fae5d22fc10] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleUtils.isLower [0x00007fae5d230190] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.ParseStatus.isError [0x00007fae5d230510] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale.hashCode [0x00007fae5d230890] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleUtils.toLowerString [0x00007fae5d231010] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.SoftReference.<init> [0x00007fae5d232c10] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.StringTokenIterator.hasNext [0x00007fae5d233190] (c1)
[0,329s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.StringTokenIterator.next [0x00007fae5d233790] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleUtils.isAlphaString [0x00007fae5d234090] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale.<init> [0x00007fae5d235010] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.getLanguage [0x00007fae7c89b990] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.getRegion [0x00007fae7c89bc90] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.getScript [0x00007fae7c89bf90] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.getPrivateuse [0x00007fae7c89c290] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.StringTokenIterator.nextDelimiter [0x00007fae5d235910] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$3$1.accept [0x00007fae5d237d10] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleUtils.toUpperString [0x00007fae5d238390] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.InternalLocaleBuilder.clearExtensions [0x00007fae5d239f90] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleUtils.isEmpty [0x00007fae5d23a790] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleObjectCache.cleanStaleEntries [0x00007fae5d23ac10] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale$Key.<init> [0x00007fae5d23b510] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern$BmpCharPropertyGreedy.match [0x00007fae7c89c590] (c2)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleObjectCache$CacheEntry.<init> [0x00007fae5d23bf90] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale$Key.normalize [0x00007fae5d23c590] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleObjectCache.get [0x00007fae5d23cc90] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: java.util.Collections.emptyList [0x00007fae7c89cd90] (c2)
[0,330s][debug][gc,nmethod   ] Register NMethod: java.util.Locale.<init> [0x00007fae5d23e790] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale$Key.getBaseLocale [0x00007fae5d23eb90] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.InternalLocaleBuilder.<init> [0x00007fae5d23f210] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: java.util.Locale.getInstance [0x00007fae5d23f710] (c1)
[0,330s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale.getInstance [0x00007fae5d240390] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale$Key.hashCode [0x00007fae5d241710] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: java.lang.String.isEmpty [0x00007fae7c89d090] (c2)
[0,331s][debug][gc,nmethod   ] Register NMethod: java.util.Locale.forLanguageTag [0x00007fae5d244c90] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.ParseStatus.reset [0x00007fae5d245910] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.ParseStatus.<init> [0x00007fae5d245c90] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleUtils.isUpper [0x00007fae7c89d390] (c2)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.StringTokenIterator.<init> [0x00007fae5d246110] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Nodes$FixedNodeBuilder.accept [0x00007fae5d246e90] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.parse [0x00007fae5d247e90] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae5d249c90] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleUtils.toTitleString [0x00007fae5d24a090] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale.convertOldISOCodes [0x00007fae5d24c790] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.InternalLocaleBuilder.clear [0x00007fae5d24d210] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.getExtlangs [0x00007fae5d24d690] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.isExtlang [0x00007fae5d24dd10] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.getVariants [0x00007fae5d24ee90] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.isLanguage [0x00007fae5d24f510] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.getExtensions [0x00007fae5d250710] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleUtils.isEmpty [0x00007fae5d250d90] (c1)
[0,331s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.isRegion [0x00007fae5d251210] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.<init> [0x00007fae5d253110] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.parseVariants [0x00007fae5d253810] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.StringTokenIterator.setStart [0x00007fae5d254490] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.InternalLocaleBuilder.setLanguageTag [0x00007fae5d254d10] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.parseLanguage [0x00007fae5d257610] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.parseScript [0x00007fae5d258110] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.parsePrivateuse [0x00007fae5d258c10] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleUtils.isEmpty [0x00007fae5d25a490] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.parseExtlangs [0x00007fae5d25a910] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.provider.LocaleProviderAdapter$$Lambda/0x80000006d.apply [0x00007fae5d25bb10] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.InternalLocaleBuilder.setExtensions [0x00007fae5d25bf90] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LocaleObjectCache.normalizeKey [0x00007fae5d25ff90] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.provider.LocaleProviderAdapter.lambda$toLocaleArray$0 [0x00007fae5d260290] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale$Cache.normalizeKey [0x00007fae5d260e90] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale$Cache.normalizeKey [0x00007fae5d261210] (c1)
[0,332s][debug][gc,nmethod   ] Register NMethod: java.util.Locale$Cache.createObject [0x00007fae5d261710] (c1)
[0,333s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale$Cache.createObject [0x00007fae5d261a90] (c1)
[0,333s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale$Cache.createObject [0x00007fae5d262390] (c1)
[0,333s][debug][gc,nmethod   ] Register NMethod: java.util.Locale$Cache.createObject [0x00007fae5d262b10] (c1)
[0,333s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.parseRegion [0x00007fae5d263790] (c1)
[0,333s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.InternalLocaleBuilder.getLocaleExtensions [0x00007fae5d263f10] (c1)
[0,333s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.InternalLocaleBuilder.getBaseLocale [0x00007fae5d264d90] (c1)
[0,333s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.LanguageTag.parseExtensions [0x00007fae5d266910] (c1)
[0,333s][debug][gc,nmethod   ] Register NMethod: java.util.Locale.hasExtensions [0x00007fae5d268e90] (c1)
[0,333s][debug][gc,nmethod   ] Register NMethod: java.util.Locale.stripExtensions [0x00007fae5d269290] (c1)
[0,333s][debug][gc,nmethod   ] Register NMethod: sun.util.locale.BaseLocale.equals [0x00007fae5d269810] (c1)
[0,334s][debug][gc,nmethod   ] Register NMethod: java.util.Locale.equals [0x00007fae5d26a210] (c1)
[0,336s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c89d690] ()
[0,336s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.<init> [0x00007fae5d26ae90] (c1)
[0,336s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName$Factory.resolveOrFail [0x00007fae5d26b510] (c1)
[0,336s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.Wrapper.forBasicType [0x00007fae5d26c090] (c1)
[0,337s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodTypeForm.cachedLambdaForm [0x00007fae5d26c810] (c1)
[0,337s][debug][gc,nmethod   ] Register NMethod: java.lang.StringUTF16.getChar [0x00007fae5d26cf10] (c1)
[0,338s][debug][gc,nmethod   ] Register NMethod: java.lang.Float.isNaN [0x00007fae5d26d310] (c1)
[0,338s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.<init> [0x00007fae5d26d690] (c1)
[0,338s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToVirtual [0x00007fae7c89d990] ()
[0,339s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae5d26ee90] (c1)
[0,339s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$Itr.<init> [0x00007fae5d271590] (c1)
[0,339s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.iterator [0x00007fae5d271990] (c1)
[0,339s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.getLocal [0x00007fae5d271e90] (c1)
[0,339s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.hash [0x00007fae5d272390] (c1)
[0,340s][debug][gc,nmethod   ] Register NMethod: worker.org.gradle.internal.classloader.FilteringClassLoader$TrieSet.contains [0x00007fae5d272810] (c1)
[0,340s][debug][gc,nmethod   ] Register NMethod: java.net.URLClassLoader$1.<init> [0x00007fae5d272c90] (c1)
[0,340s][debug][gc,nmethod   ] Register NMethod: java.net.URLClassLoader$1.run [0x00007fae5d273090] (c1)
[0,340s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Matcher.search [0x00007fae7c89dc90] (c2)
[0,340s][debug][gc,nmethod   ] Register NMethod: java.net.URLClassLoader.findClass [0x00007fae5d273410] (c1)
[0,340s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JavaUtilJarAccessImpl.getTrustedAttributes [0x00007fae5d274290] (c1)
[0,340s][debug][gc,nmethod   ] Register NMethod: java.net.URLClassLoader.getAndVerifyPackage [0x00007fae5d274690] (c1)
[0,340s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Manifest.getAttributes [0x00007fae5d276210] (c1)
[0,340s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Manifest.getTrustedAttributes [0x00007fae5d276810] (c1)
[0,340s][debug][gc,nmethod   ] Register NMethod: java.net.URLClassLoader$1.run [0x00007fae5d277790] (c1)
[0,341s][debug][gc,nmethod   ] Register NMethod: java.net.URLClassLoader.defineClass [0x00007fae5d279b10] (c1)
[0,341s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives.refKindIsField [0x00007fae5d27d610] (c1)
[0,341s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable$Entry.<init> [0x00007fae5d27d990] (c1)
[0,341s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.ImageHeader.getTableLength [0x00007fae7c89ee90] (c1)
[0,341s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectIntBufferU.ix [0x00007fae5d27dd90] (c1)
[0,341s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.getIntInternal [0x00007fae5d27e110] (c1)
[0,341s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.getInt [0x00007fae5d27e690] (c1)
[0,341s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$BaseIterator.hasNext [0x00007fae5d27ee10] (c1)
[0,341s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectIntBufferU.get [0x00007fae5d27f210] (c1)
[0,341s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader.findResource [0x00007fae5d280290] (c1)
[0,341s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$Traverser.advance [0x00007fae5d280790] (c1)
[0,342s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.putVal [0x00007fae7c89f190] (c2)
[0,342s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.checkAccess [0x00007fae5d281990] (c1)
[0,342s][debug][gc,nmethod   ] Register NMethod: java.lang.StringUTF16.getChar [0x00007fae7c8a1290] (c2)
[0,343s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.indexOf [0x00007fae7c8a1610] (c2)
[0,343s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.tableSizeFor [0x00007fae5d282c90] (c1)
[0,344s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$ValueIterator.next [0x00007fae5d283110] (c1)
[0,345s][debug][gc,nmethod   ] Register NMethod: java.lang.String.substring [0x00007fae7c8a1d10] (c2)
[0,345s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader.checkResource [0x00007fae5d283710] (c1)
[0,345s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectByteBuffer.ix [0x00007fae7c8a2910] (c2)
[0,345s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.newString [0x00007fae7c8a2c10] (c2)
[0,347s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.isClassAccessible [0x00007fae5d284690] (c1)
[0,347s][debug][gc,nmethod   ] Register NMethod: worker.org.gradle.internal.classloader.FilteringClassLoader.classAllowed [0x00007fae5d285190] (c1)
[0,348s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.compareCerts [0x00007fae5d286390] (c1)
[0,348s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipEntry.<init> [0x00007fae5d287290] (c1)
[0,350s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.changeReturnType [0x00007fae5d287c90] (c1)
[0,350s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8a3590] ()
[0,350s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.parameterType [0x00007fae7c8a3890] (c2)
[0,350s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.parameterCount [0x00007fae7c8a3c10] (c2)
[0,350s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.isInstance [0x00007fae7c8a3f10] ()
[0,351s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.getDeclaringClass [0x00007fae7c8a4310] (c1)
[0,351s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.definePackage [0x00007fae5d288190] (c1)
[0,351s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Label.resolve [0x00007fae5d28a290] (c1)
[0,351s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Label.<init> [0x00007fae5d28ad10] (c1)
[0,351s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitInsn [0x00007fae5d28b090] (c1)
[0,351s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.hasAsmInstructions [0x00007fae7c8a4610] (c1)
[0,352s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Handler.getExceptionTableSize [0x00007fae5d28b910] (c1)
[0,353s][debug][gc,nmethod   ] Register NMethod: java.lang.String.indexOf [0x00007fae7c8a4910] (c2)
[0,353s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.min [0x00007fae7c8a4e90] (c2)
[0,353s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.advance [0x00007fae5d28be10] (c1)
[0,353s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.current [0x00007fae5d28c410] (c1)
[0,353s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.indexOf [0x00007fae7c8a5190] (c2)
[0,354s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.getNode [0x00007fae7c8a5610] (c2)
[0,354s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.AnnotationWriter.putAnnotations [0x00007fae5d28d090] (c1)
[0,354s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$NamedFunction.returnType [0x00007fae5d28d910] (c1)
[0,354s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion [0x00007fae5d28e410] (c1)
[0,355s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c8a6010] ()
[0,355s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$BasicType.basicTypeSlots [0x00007fae5d28fb10] (c1)
[0,355s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.Wrapper.stackSlots [0x00007fae5d28ff10] (c1)
[0,355s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c8a6310] ()
[0,355s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.put11 [0x00007fae5d290210] (c1)
[0,355s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn [0x00007fae5d290810] (c1)
[0,355s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode [0x00007fae5d290e10] (c1)
[0,355s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addTypeInternal [0x00007fae5d291d90] (c1)
[0,356s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.getInvocationType [0x00007fae5d292810] (c1)
[0,356s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$Name.isParam [0x00007fae5d293610] (c1)
[0,356s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument [0x00007fae5d293a10] (c1)
[0,356s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8a6610] ()
[0,356s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.checkSymbolicClass [0x00007fae5d295010] (c1)
[0,356s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c8a6910] ()
[0,356s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$ListN.get [0x00007fae5d295590] (c1)
[0,356s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.toMethodDescriptorString [0x00007fae5d295990] (c1)
[0,356s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addConstantMethodref [0x00007fae5d295e90] (c1)
[0,356s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.getInternalName [0x00007fae5d296290] (c1)
[0,356s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.copyOf [0x00007fae5d296c10] (c1)
[0,356s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.getFieldType [0x00007fae5d297010] (c1)
[0,356s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.grow [0x00007fae5d298f10] (c1)
[0,356s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn [0x00007fae5d299a10] (c1)
[0,357s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.<init> [0x00007fae5d29aa10] (c1)
[0,358s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.push [0x00007fae5d29ae10] (c1)
[0,358s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable$Entry.<init> [0x00007fae5d29bc10] (c1)
[0,358s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType [0x00007fae5d29c010] (c1)
[0,358s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitAbstractType [0x00007fae5d29cf90] (c1)
[0,358s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.merge [0x00007fae5d29d390] (c1)
[0,358s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Label.getCanonicalInstance [0x00007fae5d29e110] (c1)
[0,358s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitLabel [0x00007fae5d29e590] (c1)
[0,358s][debug][gc,nmethod   ] Register NMethod: java.util.zip.Inflater.reset [0x00007fae7c8a6e90] ()
[0,358s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.pop [0x00007fae5d29f990] (c1)
[0,358s][debug][gc,nmethod   ] Register NMethod: java.lang.StringCoding.countPositives [0x00007fae7c8a7210] (c2)
[0,358s][debug][gc,nmethod   ] Register NMethod: java.lang.Thread.getAndClearInterrupt [0x00007fae5d2a0710] (c1)
[0,358s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$ZipFileInflaterInputStream.<init> [0x00007fae5d2a0b10] (c1)
[0,358s][debug][gc,nmethod   ] Register NMethod: java.lang.Thread.interrupted [0x00007fae5d2a0f90] (c1)
[0,358s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.cast [0x00007fae5d2a1510] (c1)
[0,359s][debug][gc,nmethod   ] Register NMethod: sun.net.www.protocol.jar.Handler.parseURL [0x00007fae5d2a1a90] (c1)
[0,359s][debug][gc,nmethod   ] Register NMethod: sun.net.www.protocol.jar.Handler.indexOfBangSlash [0x00007fae5d2a2c90] (c1)
[0,359s][debug][gc,nmethod   ] Register NMethod: sun.net.www.protocol.jar.Handler.parseContextSpec [0x00007fae5d2a3f10] (c1)
[0,359s][debug][gc,nmethod   ] Register NMethod: sun.net.www.protocol.jar.Handler.canonicalizeString [0x00007fae5d2a6a90] (c1)
[0,359s][debug][gc,nmethod   ] Register NMethod: java.util.zip.CRC32.<init> [0x00007fae5d2a8290] (c1)
[0,359s][debug][gc,nmethod   ] Register NMethod: java.util.zip.CRC32.getValue [0x00007fae5d2a8610] (c1)
[0,359s][debug][gc,nmethod   ] Register NMethod: java.security.SecureClassLoader$CodeSourceKey.<init> [0x00007fae5d2a8990] (c1)
[0,359s][debug][gc,nmethod   ] Register NMethod: java.security.SecureClassLoader.getProtectionDomain [0x00007fae5d2a8e10] (c1)
[0,359s][debug][gc,nmethod   ] Register NMethod: java.security.SecureClassLoader$1.<init> [0x00007fae5d2a9890] (c1)
[0,359s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.Resource.getBytes [0x00007fae5d2a9c90] (c1)
[0,359s][debug][gc,nmethod   ] Register NMethod: java.security.SecureClassLoader$CodeSourceKey.hashCode [0x00007fae5d2ac510] (c1)
[0,360s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.defineClassSourceLocation [0x00007fae5d2aca90] (c1)
[0,360s][debug][gc,nmethod   ] Register NMethod: java.net.URLStreamHandler.setURL [0x00007fae5d2ad290] (c1)
[0,360s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.preDefineClass [0x00007fae5d2af510] (c1)
[0,360s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader$2.getContentLength [0x00007fae5d2b1210] (c1)
[0,360s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.checkCerts [0x00007fae5d2b1690] (c1)
[0,360s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.postDefineClass [0x00007fae5d2b2e10] (c1)
[0,360s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.getNamedPackage [0x00007fae5d2b3590] (c1)
[0,360s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile$JarFileEntry.getCodeSigners [0x00007fae5d2b3f90] (c1)
[0,360s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.defineClass [0x00007fae5d2b4e90] (c1)
[0,360s][debug][gc,nmethod   ] Register NMethod: java.util.zip.Inflater.reset [0x00007fae5d2b5910] (c1)
[0,360s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath.getResource [0x00007fae5d2b6090] (c1)
[0,360s][debug][gc,nmethod   ] Register NMethod: java.security.SecureClassLoader$CodeSourceKey.equals [0x00007fae5d2b6710] (c1)
[0,361s][debug][gc,nmethod   ] Register NMethod: java.security.CodeSource.<init> [0x00007fae5d2b7390] (c1)
[0,361s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.ensureInitialization [0x00007fae5d2b7b90] (c1)
[0,361s][debug][gc,nmethod   ] Register NMethod: java.security.SecureClassLoader.defineClass [0x00007fae5d2b8990] (c1)
[0,361s][debug][gc,nmethod   ] Register NMethod: java.security.CodeSource.matchCerts [0x00007fae5d2b8e10] (c1)
[0,361s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader$2.getBytes [0x00007fae5d2ba590] (c1)
[0,361s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.BytecodeDescriptor.unparseSig [0x00007fae5d2bb110] (c1)
[0,361s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitTypeInsn [0x00007fae5d2bba10] (c1)
[0,362s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.endCurrentBasicBlockWithNoSuccessor [0x00007fae5d2bc410] (c1)
[0,364s][debug][gc,nmethod   ] Register NMethod: java.net.URLClassLoader.isSealed [0x00007fae5d2bcf10] (c1)
[0,365s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.get [0x00007fae7c8a7610] (c2)
[0,369s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToInterface [0x00007fae7c8a7f90] ()
[0,369s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c8a8310] ()
[0,369s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.enlarge [0x00007fae5d2bfd90] (c1)
[0,369s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Attributes.put [0x00007fae5d2c0510] (c1)
[0,369s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Attributes.putValue [0x00007fae5d2c0c10] (c1)
[0,369s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Attributes$Name.of [0x00007fae5d2c1910] (c1)
[0,369s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.isBuiltinLoader [0x00007fae5d2c2310] (c1)
[0,371s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BoundMethodHandle.<init> [0x00007fae5d2c2810] (c1)
[0,371s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.internalMemberName [0x00007fae5d2c2c10] (c1)
[0,372s][debug][gc,nmethod   ] Register NMethod: java.io.UnixFileSystem.getBooleanAttributes0 [0x00007fae7c8a8890] ()
[0,372s][debug][gc,nmethod   ] Register NMethod: java.io.UnixFileSystem.hasBooleanAttributes [0x00007fae5d2c3090] (c1)
[0,372s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.afterNodeInsertion [0x00007fae5d2c3990] (c1)
[0,372s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.ReentrantLock.unlock [0x00007fae7c8a8c90] (c2)
[0,373s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.linkNodeAtEnd [0x00007fae5d2c3e90] (c1)
[0,373s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile.ensureOpen [0x00007fae7c8a9490] (c2)
[0,373s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.getNode [0x00007fae7c8a9890] (c2)
[0,376s][debug][gc,nmethod   ] Register NMethod: java.lang.String.startsWith [0x00007fae7c8aa290] (c2)
[0,376s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ArraysSupport.mismatch [0x00007fae7c8aaa90] (c2)
[0,377s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Attribute.computeAttributesSize [0x00007fae5d2c4690] (c1)
[0,377s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.AnnotationWriter.computeAnnotationsSize [0x00007fae5d2c4c90] (c1)
[0,377s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Attribute.putAttributes [0x00007fae5d2c5310] (c1)
[0,377s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToInterface [0x00007fae7c8ab090] ()
[0,377s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.getType [0x00007fae5d2c5d90] (c1)
[0,378s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.ImageStringsReader.hashCode [0x00007fae5d2c6390] (c1)
[0,378s][debug][gc,nmethod   ] Register NMethod: java.lang.ThreadLocal.getMap [0x00007fae5d2c6790] (c1)
[0,379s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.checkForSpecialAttributes [0x00007fae7c8ab410] (c2)
[0,379s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader.ensureOpen [0x00007fae7c8ac490] (c2)
[0,379s][debug][gc,nmethod   ] Register NMethod: java.lang.String.isLatin1 [0x00007fae7c8acd90] (c2)
[0,380s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.getJarEntry [0x00007fae5d2c6b10] (c1)
[0,380s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader.getResource [0x00007fae5d2c7010] (c1)
[0,380s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.getEntry [0x00007fae5d2c7990] (c1)
[0,380s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.hasRemaining [0x00007fae5d2c8190] (c1)
[0,381s][debug][gc,nmethod   ] Register NMethod: java.io.File.exists [0x00007fae5d2c8510] (c1)
[0,383s][debug][gc,nmethod   ] Register NMethod: java.util.Optional.empty [0x00007fae5d2c8b10] (c1)
[0,383s][debug][gc,nmethod   ] Register NMethod: jdk.internal.module.SystemModuleFinders$SystemImage.reader [0x00007fae5d2c8e10] (c1)
[0,383s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.ImageReader.requireOpen [0x00007fae5d2c9110] (c1)
[0,383s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.ImageStringsReader.hashCode [0x00007fae5d2c9610] (c1)
[0,383s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.BuiltinClassLoader.moduleReaderFor [0x00007fae5d2c9a90] (c1)
[0,383s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.ImageReader.verifyLocation [0x00007fae5d2ca590] (c1)
[0,383s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.BasicImageReader.getLocationIndex [0x00007fae5d2cac90] (c1)
[0,383s][debug][gc,nmethod   ] Register NMethod: jdk.internal.module.SystemModuleFinders$SystemModuleReader.containsImageLocation [0x00007fae5d2cb610] (c1)
[0,383s][debug][gc,nmethod   ] Register NMethod: jdk.internal.module.SystemModuleFinders$SystemModuleReader.find [0x00007fae5d2cc210] (c1)
[0,383s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.BasicImageReader.verifyLocation [0x00007fae5d2cd590] (c1)
[0,383s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile$Source.getEntryPos [0x00007fae7c8ad090] (c2)
[0,385s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile.getEntry [0x00007fae7c8ae190] (c2)
[0,386s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8af810] ()
[0,386s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.maybeInstantiateVerifier [0x00007fae5d2cdc90] (c1)
[0,386s][debug][gc,nmethod   ] Register NMethod: java.util.logging.LogManager$LoggerContext.getOwner [0x00007fae7c8afb10] (c1)
[0,387s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.<init> [0x00007fae5d2ce310] (c1)
[0,387s][debug][gc,nmethod   ] Register NMethod: sun.net.www.ParseUtil.firstEncodeIndex [0x00007fae7c8afe10] (c2)
[0,387s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.Resource.getBytes [0x00007fae5d2ce810] (c1)
[0,388s][debug][gc,nmethod   ] Register NMethod: java.util.Properties.getProperty [0x00007fae5d2d1110] (c1)
[0,388s][debug][gc,nmethod   ] Register NMethod: sun.net.www.protocol.file.Handler.parseURL [0x00007fae5d2d1a10] (c1)
[0,388s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.allocateInstance [0x00007fae7c8b0510] ()
[0,389s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.ImageStringsReader.match [0x00007fae5d2d1e90] (c1)
[0,389s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.BasicImageReader.match [0x00007fae5d2d2310] (c1)
[0,389s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.getInputStream [0x00007fae5d2d2910] (c1)
[0,389s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getModifiers [0x00007fae7c8b0c90] ()
[0,389s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.BytecodeDescriptor.unparse [0x00007fae5d2d3690] (c1)
[0,389s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$Set12.iterator [0x00007fae5d2d3b10] (c1)
[0,389s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$Set12$1.<init> [0x00007fae5d2d4110] (c1)
[0,389s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.ImageStringsReader.stringFromByteBufferMatches [0x00007fae5d2d4610] (c1)
[0,389s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.ImageLocation.verifyName [0x00007fae5d2d6310] (c1)
[0,389s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.isCallerSensitive [0x00007fae5d2d8890] (c1)
[0,390s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.checkSecurityManager [0x00007fae5d2d8c90] (c1)
[0,390s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.ImageStringsReader.unmaskedHashCode [0x00007fae7c8b1010] (c2)
[0,390s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodVisitor.<init> [0x00007fae5d2d9590] (c1)
[0,390s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.maybeCompile [0x00007fae5d2da210] (c1)
[0,391s][debug][gc,nmethod   ] Register NMethod: java.lang.Character.charCount [0x00007fae5d2da790] (c1)
[0,391s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader$2.getInputStream [0x00007fae5d2dab10] (c1)
[0,391s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.stringSize [0x00007fae5d2db090] (c1)
[0,391s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.getChars [0x00007fae5d2db590] (c1)
[0,391s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.isMethod [0x00007fae5d2dbe10] (c1)
[0,391s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InfoFromMemberName.getReferenceKind [0x00007fae7c8b1690] (c1)
[0,391s][debug][gc,nmethod   ] Register NMethod: java.io.UnixFileSystem.trimSeparator [0x00007fae5d2dc210] (c1)
[0,392s][debug][gc,nmethod   ] Register NMethod: java.io.UnixFileSystem.resolve [0x00007fae5d2dcf10] (c1)
[0,392s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.TypeConvertingMethodAdapter.descriptorToName [0x00007fae5d2def90] (c1)
[0,392s][debug][gc,nmethod   ] Register NMethod: jdk.internal.jimage.ImageLocation.verify [0x00007fae5d2e0290] (c1)
[0,392s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile$JarFileEntry.getCodeSigners [0x00007fae5d2e1810] (c1)
[0,392s][debug][gc,nmethod   ] Register NMethod: java.io.File.<init> [0x00007fae5d2e2710] (c1)
[0,393s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$FileLoader.getResource [0x00007fae5d2e3510] (c1)
[0,393s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.isMultiRelease [0x00007fae7c8b1990] (c2)
[0,394s][debug][gc,nmethod   ] Register NMethod: sun.net.util.IPAddressUtil.checkAuth [0x00007fae5d2e5110] (c1)
[0,394s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState [0x00007fae7c8b2a90] (c2)
[0,394s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader$2.getCodeSourceURL [0x00007fae5d2e6310] (c1)
[0,394s][debug][gc,nmethod   ] Register NMethod: java.lang.String.checkIndex [0x00007fae7c8b2d90] (c2)
[0,394s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.Resource.getByteBuffer [0x00007fae5d2e6710] (c1)
[0,394s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader$2.getCodeSigners [0x00007fae5d2e7210] (c1)
[0,394s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.ensureInitialization [0x00007fae5d2e7690] (c1)
[0,394s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader$2.getManifest [0x00007fae5d2e8490] (c1)
[0,394s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JavaUtilJarAccessImpl.ensureInitialization [0x00007fae5d2e9410] (c1)
[0,395s][debug][gc,nmethod   ] Register NMethod: java.net.URLStreamHandler.parseURL [0x00007fae5d2e9890] (c1)
[0,395s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.preparedLambdaForm [0x00007fae5d2fcf10] (c1)
[0,397s][debug][gc,nmethod   ] Register NMethod: java.lang.Character.isSurrogate [0x00007fae5d2fd910] (c1)
[0,397s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern.has [0x00007fae5d2fdc90] (c1)
[0,397s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern.isSupplementary [0x00007fae5d2fe010] (c1)
[0,397s][debug][gc,nmethod   ] Register NMethod: java.lang.String.codePointAt [0x00007fae5d2fe510] (c1)
[0,397s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.append [0x00007fae5d2fee10] (c1)
[0,397s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.Resource.<init> [0x00007fae5d2ff190] (c1)
[0,397s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.append [0x00007fae5d2ff510] (c1)
[0,398s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader.findResource [0x00007fae5d2ffc10] (c1)
[0,398s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader.checkResource [0x00007fae5d300110] (c1)
[0,398s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.preparedLambdaForm [0x00007fae5d301090] (c1)
[0,398s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.getEntry [0x00007fae7c8b3090] (c2)
[0,398s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.isArrayClone [0x00007fae5d302c90] (c1)
[0,398s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.changeReferenceKind [0x00007fae5d303990] (c1)
[0,398s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.getReferenceKind [0x00007fae7c8b4410] (c2)
[0,398s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader$2.<init> [0x00007fae5d303d10] (c1)
[0,398s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.VerifyAccess.isMemberAccessible [0x00007fae5d304290] (c1)
[0,399s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.putVal [0x00007fae5d305e10] (c1)
[0,400s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToVirtual [0x00007fae7c8b4710] ()
[0,401s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.preparedLambdaForm [0x00007fae5d308810] (c1)
[0,401s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.isVarargs [0x00007fae5d308b90] (c1)
[0,401s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.setVarargs [0x00007fae5d309190] (c1)
[0,401s][debug][gc,nmethod   ] Register NMethod: java.lang.Package.isSealed [0x00007fae5d30a490] (c1)
[0,401s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8b4a10] ()
[0,402s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives.refKindIsMethod [0x00007fae5d30ab90] (c1)
[0,402s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c8b4d10] ()
[0,402s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c8b5010] ()
[0,402s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c8b5590] ()
[0,402s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.VerifyAccess.isTypeVisible [0x00007fae5d30b010] (c1)
[0,402s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives.findMethodHandleType [0x00007fae5d30b990] (c1)
[0,402s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Constructor.<init> [0x00007fae5d30bd10] (c1)
[0,402s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodVisitor.<init> [0x00007fae5d30c190] (c1)
[0,402s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ClassWriter.visitMethod [0x00007fae5d30c510] (c1)
[0,402s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs [0x00007fae5d30cc10] (c1)
[0,402s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitEnd [0x00007fae5d30d190] (c1)
[0,402s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Handler.putExceptionTable [0x00007fae5d30d490] (c1)
[0,402s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.<init> [0x00007fae5d30e010] (c1)
[0,403s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath.getLoader [0x00007fae7c8b5890] (c2)
[0,403s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.hasFrames [0x00007fae5d30f490] (c1)
[0,403s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives.refKindHasReceiver [0x00007fae5d30f810] (c1)
[0,403s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.computeMethodInfoSize [0x00007fae5d30fb90] (c1)
[0,403s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.Invokers.maybeCustomize [0x00007fae5d312310] (c1)
[0,403s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.Invokers.checkExactType [0x00007fae5d312710] (c1)
[0,404s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.Invokers.checkCustomized [0x00007fae5d312c10] (c1)
[0,404s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.maybeCustomize [0x00007fae5d313110] (c1)
[0,404s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.getVersionedEntry [0x00007fae5d313890] (c1)
[0,405s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.putMethodInfo [0x00007fae5d314f90] (c1)
[0,405s][debug][gc,nmethod   ] Register NMethod: jdk.internal.access.SharedSecrets.getJavaLangAccess [0x00007fae5d31b090] (c1)
[0,405s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.keepsAlive [0x00007fae5d31b410] (c1)
[0,406s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.in [0x00007fae5d31c410] (c1)
[0,406s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.VerifyAccess.getClassModifiers [0x00007fae5d31ec90] (c1)
[0,406s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JavaUtilJarAccessImpl.entryFor [0x00007fae5d31f190] (c1)
[0,406s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.entryFor [0x00007fae5d31f910] (c1)
[0,406s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile$JarFileEntry.<init> [0x00007fae5d31ff10] (c1)
[0,406s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.AbstractValidatingLambdaMetafactory.isAdaptableTo [0x00007fae5d320410] (c1)
[0,406s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarEntry.<init> [0x00007fae5d321490] (c1)
[0,407s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENCRC [0x00007fae5d321810] (c1)
[0,407s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENVEM_FA [0x00007fae5d321e10] (c1)
[0,407s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CH [0x00007fae5d322210] (c1)
[0,407s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipUtils.CENTIM [0x00007fae5d322590] (c1)
[0,407s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader.getResource [0x00007fae7c8b9590] (c2)
[0,407s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addConstantFieldref [0x00007fae5d322b90] (c1)
[0,407s][debug][gc,nmethod   ] Register NMethod: java.util.zip.ZipFile.getZipEntry [0x00007fae5d322f90] (c1)
[0,407s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitFieldInsn [0x00007fae5d327910] (c1)
[0,408s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.getConstantPoolCount [0x00007fae7c8bb310] (c1)
[0,408s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.Invokers$Holder.linkToTargetMethod [0x00007fae5d328d90] (c1)
[0,408s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4000400.invoke [0x00007fae5d329310] (c1)
[0,409s][debug][gc,nmethod   ] Register NMethod: sun.net.www.ParseUtil.match [0x00007fae5d329810] (c1)
[0,409s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.Resource.cachedInputStream [0x00007fae5d329d10] (c1)
[0,409s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.Reflection.getClassAccessFlags [0x00007fae7c8bb610] ()
[0,410s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.<init> [0x00007fae7c8bba10] (c2)
[0,410s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.getManifest [0x00007fae5d32a310] (c1)
[0,411s][debug][gc,nmethod   ] Register NMethod: java.util.jar.JarFile.getManifestFromReference [0x00007fae5d32a690] (c1)
[0,411s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae7c8bbe90] (c2)
[0,412s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.length [0x00007fae7c8bc810] (c2)
[0,414s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitCode [0x00007fae5d32c690] (c1)
[0,414s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives.isCallerSensitive [0x00007fae5d32c990] (c1)
[0,414s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives.canBeCalledVirtual [0x00007fae5d32d110] (c1)
[0,415s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8bcb10] ()
[0,415s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives.isPullModeBSM [0x00007fae7c8bce10] (c1)
[0,415s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern.peek [0x00007fae5d32db10] (c1)
[0,415s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.ConstantCallSite.getTarget [0x00007fae5d32e090] (c1)
[0,415s][debug][gc,nmethod   ] Register NMethod: java.util.logging.Logger.getName [0x00007fae7c8bd110] (c1)
[0,415s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.<init> [0x00007fae5d32e590] (c1)
[0,416s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.setLocal [0x00007fae5d32ea10] (c1)
[0,416s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.hashCode [0x00007fae5d32f390] (c1)
[0,417s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.putShort [0x00007fae7c8bd410] (c2)
[0,417s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass [0x00007fae5d32fa90] (c1)
[0,418s][debug][gc,nmethod   ] Register NMethod: java.lang.System.identityHashCode [0x00007fae7c8bd890] ()
[0,418s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.getSharedParameterTypes [0x00007fae7c8bdc90] (c1)
[0,418s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Executable.<init> [0x00007fae5d330210] (c1)
[0,419s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.isCrackable [0x00007fae7c8bdf90] (c1)
[0,419s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.CDS.isDumpingArchive [0x00007fae5d330690] (c1)
[0,419s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8be290] ()
[0,419s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToInterface [0x00007fae7c8be590] ()
[0,420s][debug][gc,nmethod   ] Register NMethod: java.lang.Character.isWhitespace [0x00007fae5d330990] (c1)
[0,420s][debug][gc,nmethod   ] Register NMethod: java.lang.Character.isWhitespace [0x00007fae5d330e90] (c1)
[0,420s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterDataLatin1.isWhitespace [0x00007fae5d331310] (c1)
[0,421s][debug][gc,nmethod   ] Register NMethod: java.util.Optional.ofNullable [0x00007fae5d331810] (c1)
[0,421s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.Invokers$Holder.linkToTargetMethod [0x00007fae5d331d90] (c1)
[0,421s][debug][gc,nmethod   ] Register NMethod: java.util.jar.Manifest$FastInputStream.readLine [0x00007fae7c8be910] (c2)
[0,421s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Type.<init> [0x00007fae5d332410] (c1)
[0,421s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.getInputStackSize [0x00007fae5d332810] (c1)
[0,421s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap$LinkedHashIterator.hasNext [0x00007fae5d332b90] (c1)
[0,421s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.transfer [0x00007fae7c8bf410] (c2)
[0,421s][debug][gc,nmethod   ] Register NMethod: jdk.internal.ref.CleanerFactory.cleaner [0x00007fae7c8c0f10] (c2)
[0,421s][debug][gc,nmethod   ] Register NMethod: java.lang.PublicMethods$Key.matches [0x00007fae5d332f90] (c1)
[0,421s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Type.getReturnTypeOffset [0x00007fae5d333690] (c1)
[0,422s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.get [0x00007fae7c8c1210] (c2)
[0,422s][debug][gc,nmethod   ] Register NMethod: java.lang.System.getSecurityManager [0x00007fae7c8c1610] (c2)
[0,422s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.Resource.getBytes [0x00007fae5d335410] (c1)
[0,422s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.accept [0x00007fae5d337990] (c1)
[0,422s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.constructorMethod [0x00007fae5d338a90] (c1)
[0,422s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.allocateInstance [0x00007fae5d338f10] (c1)
[0,422s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae5d339410] (c1)
[0,422s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Type.getTypeInternal [0x00007fae5d340910] (c1)
[0,422s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ReflectionFactory.copyMethod [0x00007fae5d342510] (c1)
[0,422s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.ReflectAccess.copyMethod [0x00007fae5d342a90] (c1)
[0,423s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.addCount [0x00007fae7c8c1910] (c2)
[0,423s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.copy [0x00007fae5d342e90] (c1)
[0,423s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.<init> [0x00007fae5d343910] (c1)
[0,423s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap$LinkedHashIterator.nextNode [0x00007fae5d344090] (c1)
[0,424s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Edge.<init> [0x00007fae5d344890] (c1)
[0,424s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.AbstractClassLoaderValue$Sub.parent [0x00007fae7c8c2010] (c1)
[0,424s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.skipIdentifier [0x00007fae5d344c90] (c1)
[0,425s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.TypeConvertingMethodAdapter.cast [0x00007fae5d345610] (c1)
[0,425s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.merge [0x00007fae5d345e90] (c1)
[0,425s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.putByte [0x00007fae7c8c2310] (c2)
[0,429s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c8c2810] ()
[0,431s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.ClassLoaders.platformClassLoader [0x00007fae5d347c10] (c1)
[0,432s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.compare [0x00007fae5d347f10] (c1)
[0,433s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.ProxyGenerator.dotToSlash [0x00007fae5d348310] (c1)
[0,433s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap$LinkedValueIterator.next [0x00007fae5d348690] (c1)
[0,433s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.<init> [0x00007fae5d348a90] (c1)
[0,434s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getComponentType [0x00007fae5d349890] (c1)
[0,434s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.forName0 [0x00007fae7c8c2b10] ()
[0,434s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap$HashIterator.<init> [0x00007fae5d349d10] (c1)
[0,434s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.forName [0x00007fae5d34a490] (c1)
[0,434s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.forName [0x00007fae5d34a990] (c1)
[0,434s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap$KeyIterator.next [0x00007fae5d34ae10] (c1)
[0,434s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitFrameStart [0x00007fae5d34b210] (c1)
[0,434s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitFrameEnd [0x00007fae5d34b890] (c1)
[0,435s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.computeAllFrames [0x00007fae5d34c110] (c1)
[0,435s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.get [0x00007fae7c8c3310] (c2)
[0,436s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Symbol.<init> [0x00007fae7c8c3790] (c2)
[0,436s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.CopyOnWriteArrayList.setArray [0x00007fae7c8c3b90] (c1)
[0,437s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.transfer [0x00007fae7c8c3e90] (c2)
[0,437s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.put [0x00007fae7c8c5c90] (c2)
[0,437s][debug][gc,nmethod   ] Register NMethod: java.util.logging.LogManager.getProperty [0x00007fae5d34f190] (c1)
[0,437s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.get [0x00007fae5d34f610] (c1)
[0,438s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Blocker.begin [0x00007fae7c8c6290] (c2)
[0,438s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Blocker.end [0x00007fae7c8c6610] (c2)
[0,438s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.putIfAbsent [0x00007fae7c8c6910] (c2)
[0,438s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.nextGetIndex [0x00007fae5d34fc10] (c1)
[0,438s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapByteBuffer.byteOffset [0x00007fae5d350090] (c1)
[0,439s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.size [0x00007fae7c8c6c10] (c1)
[0,439s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapByteBuffer.getShort [0x00007fae5d350390] (c1)
[0,439s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.session [0x00007fae7c8c6f10] (c2)
[0,439s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory.getOpcodeOffset [0x00007fae5d351410] (c1)
[0,440s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.<init> [0x00007fae5d351990] (c1)
[0,440s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.privateGetDeclaredMethods [0x00007fae5d353210] (c1)
[0,441s][debug][gc,nmethod   ] Register NMethod: java.security.AccessController.executePrivileged [0x00007fae5d353f90] (c1)
[0,441s][debug][gc,nmethod   ] Register NMethod: java.util.Objects.hash [0x00007fae5d354590] (c1)
[0,441s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.<init> [0x00007fae5d354910] (c1)
[0,441s][debug][gc,nmethod   ] Register NMethod: java.lang.Byte.<init> [0x00007fae5d356310] (c1)
[0,441s][debug][gc,nmethod   ] Register NMethod: java.lang.Byte.hashCode [0x00007fae5d356790] (c1)
[0,441s][debug][gc,nmethod   ] Register NMethod: java.lang.Byte.hashCode [0x00007fae5d356a90] (c1)
[0,441s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.hashCode [0x00007fae5d356e10] (c1)
[0,442s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getAnnotationType [0x00007fae7c8c7210] (c1)
[0,442s][debug][gc,nmethod   ] Register NMethod: java.security.AccessController.doPrivileged [0x00007fae5d358010] (c1)
[0,442s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToInterface [0x00007fae7c8c7510] ()
[0,444s][debug][gc,nmethod   ] Register NMethod: org.junit.platform.commons.util.ReflectionUtils$$Lambda/0x00007fadb40fc000.compare [0x00007fae5d358690] (c1)
[0,444s][debug][gc,nmethod   ] Register NMethod: org.junit.platform.commons.util.ReflectionUtils.defaultMethodSorter [0x00007fae5d358c10] (c1)
[0,444s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.<init> [0x00007fae7c8c7890] (c2)
[0,444s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.visitor.Reifier.getFactory [0x00007fae7c8c7c90] (c1)
[0,444s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.tree.SimpleClassTypeSignature.getName [0x00007fae7c8c7f90] (c1)
[0,444s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.tree.ClassTypeSignature.getPath [0x00007fae7c8c8290] (c1)
[0,444s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.tree.SimpleClassTypeSignature.getDollar [0x00007fae7c8c8590] (c1)
[0,444s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.allocateUninitializedArray [0x00007fae7c8c8890] (c2)
[0,444s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Array.newArray [0x00007fae7c8c8d10] ()
[0,445s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.getRoot [0x00007fae7c8c9490] (c1)
[0,445s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.tree.SimpleClassTypeSignature.getTypeArguments [0x00007fae7c8c9790] (c1)
[0,445s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.TypeConvertingMethodAdapter.convertType [0x00007fae5d359510] (c1)
[0,445s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Modifier.isPrivate [0x00007fae5d35ed90] (c1)
[0,445s][debug][gc,nmethod   ] Register NMethod: org.junit.platform.commons.util.Preconditions.condition [0x00007fae5d35f110] (c1)
[0,445s][debug][gc,nmethod   ] Register NMethod: org.junit.platform.commons.util.Preconditions.notNull [0x00007fae5d35f590] (c1)
[0,445s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.current [0x00007fae7c8c9a90] (c2)
[0,446s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.allocateUninitializedArray0 [0x00007fae7c8c9f90] (c2)
[0,446s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath.getLoader [0x00007fae7c8ca410] (c2)
[0,446s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.ClassLoaders$AppClassLoader.defineOrCheckPackage [0x00007fae5d35fb10] (c1)
[0,446s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.BuiltinClassLoader.defineOrCheckPackage [0x00007fae5d35fe90] (c1)
[0,446s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$ListN.size [0x00007fae5d360d10] (c1)
[0,446s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.newNode [0x00007fae5d361090] (c1)
[0,446s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.BuiltinClassLoader.defineClass [0x00007fae5d361590] (c1)
[0,446s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.afterNodeInsertion [0x00007fae5d363210] (c1)
[0,446s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.BuiltinClassLoader.getAndVerifyPackage [0x00007fae5d363a90] (c1)
[0,447s][debug][gc,nmethod   ] Register NMethod: java.lang.String.valueOf [0x00007fae5d365610] (c1)
[0,447s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Collectors$CollectorImpl.characteristics [0x00007fae7c8ce210] (c1)
[0,447s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReduceOps$3ReducingSink.accept [0x00007fae5d365a90] (c1)
[0,447s][debug][gc,nmethod   ] Register NMethod: java.lang.String.indexOf [0x00007fae7c8ce510] (c2)
[0,448s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c8cea90] ()
[0,448s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.allocateUninitializedArray [0x00007fae7c8ced90] (c2)
[0,448s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull [0x00007fae5d365f90] (c1)
[0,448s][debug][gc,nmethod   ] Register NMethod: java.lang.String.replace [0x00007fae7c8cf210] (c2)
[0,448s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl.computeValueConversions [0x00007fae5d367e90] (c1)
[0,448s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.isConvertibleTo [0x00007fae5d368e90] (c1)
[0,448s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl.makePairwiseConvert [0x00007fae5d36a110] (c1)
[0,449s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.asTypeUncached [0x00007fae5d36a490] (c1)
[0,449s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.isSafeToCache [0x00007fae5d36b690] (c1)
[0,449s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl.makePairwiseConvert [0x00007fae5d36bb10] (c1)
[0,449s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ClassWriter.<init> [0x00007fae5d36c010] (c1)
[0,449s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ClassVisitor.<init> [0x00007fae5d36c390] (c1)
[0,449s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ClassWriter.<init> [0x00007fae5d36c710] (c1)
[0,449s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.asSpecial [0x00007fae5d36cf10] (c1)
[0,449s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable$Entry.<init> [0x00007fae7c8cfe10] (c2)
[0,449s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.invokeStatic [0x00007fae5d36e310] (c1)
[0,449s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4028000.invoke [0x00007fae5d36eb90] (c1)
[0,450s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant [0x00007fae5d36f410] (c1)
[0,450s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToInterface [0x00007fae7c8d0210] ()
[0,450s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.BytecodeDescriptor.unparseMethod [0x00007fae5d36f990] (c1)
[0,450s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant [0x00007fae5d370510] (c1)
[0,451s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.make [0x00007fae5d372d10] (c1)
[0,451s][debug][gc,nmethod   ] Register NMethod: java.util.Objects.hashCode [0x00007fae5d373390] (c1)
[0,451s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl.makePairwiseConvertByEditor [0x00007fae5d373810] (c1)
[0,451s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial [0x00007fae5d37b710] (c1)
[0,451s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.checkMethodName [0x00007fae5d37c290] (c1)
[0,451s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractPipeline.isParallel [0x00007fae5d37ce90] (c1)
[0,452s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.resolveOrFail [0x00007fae5d37d210] (c1)
[0,452s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.getParameterCount [0x00007fae5d37de10] (c1)
[0,452s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Array.newInstance [0x00007fae5d37e190] (c1)
[0,452s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$2$1.accept [0x00007fae5d37e510] (c1)
[0,452s][debug][gc,nmethod   ] Register NMethod: java.util.Spliterators$ArraySpliterator.characteristics [0x00007fae7c8d0590] (c1)
[0,452s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.isEmpty [0x00007fae5d37ec10] (c1)
[0,452s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractPipeline.getStreamAndOpFlags [0x00007fae7c8d0890] (c1)
[0,452s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$StatelessOp.opIsStateful [0x00007fae7c8d0b90] (c1)
[0,452s][debug][gc,nmethod   ] Register NMethod: java.util.stream.PipelineHelper.<init> [0x00007fae5d37ef90] (c1)
[0,452s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.isDefault [0x00007fae5d37f310] (c1)
[0,452s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Collectors$$Lambda/0x00007fadb408de08.accept [0x00007fae5d37f810] (c1)
[0,452s][debug][gc,nmethod   ] Register NMethod: sun.reflect.annotation.AnnotationInvocationHandler.invoke [0x00007fae5d37fd90] (c1)
[0,452s][debug][gc,nmethod   ] Register NMethod: org.junit.platform.commons.util.ReflectionUtils$$Lambda/0x00007fadb40f7878.test [0x00007fae5d381a90] (c1)
[0,453s][debug][gc,nmethod   ] Register NMethod: java.util.stream.SortedOps$SizedRefSortingSink.accept [0x00007fae5d382110] (c1)
[0,453s][debug][gc,nmethod   ] Register NMethod: org.junit.platform.commons.util.AnnotationUtils.isInJavaLangAnnotationPackage [0x00007fae5d382690] (c1)
[0,453s][debug][gc,nmethod   ] Register NMethod: java.util.Collections$EmptySet.contains [0x00007fae7c8d0e90] (c1)
[0,453s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Collectors$CollectorImpl.supplier [0x00007fae7c8d1190] (c1)
[0,453s][debug][gc,nmethod   ] Register NMethod: java.util.stream.StreamOpFlag.combineOpFlags [0x00007fae5d382d10] (c1)
[0,453s][debug][gc,nmethod   ] Register NMethod: java.util.stream.StreamOpFlag.getMask [0x00007fae5d383110] (c1)
[0,453s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Collectors$CollectorImpl.combiner [0x00007fae7c8d1490] (c1)
[0,453s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Collectors$CollectorImpl.accumulator [0x00007fae7c8d1790] (c1)
[0,453s][debug][gc,nmethod   ] Register NMethod: java.lang.Boolean.booleanValue [0x00007fae7c8d1a90] (c1)
[0,453s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.annotationData [0x00007fae5d383490] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.util.StringJoiner.checkAddLength [0x00007fae5d383a90] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReduceOps$Box.get [0x00007fae7c8d1d90] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.util.Optional.isPresent [0x00007fae5d384410] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getInterfaces [0x00007fae5d384810] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.values [0x00007fae5d385090] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractPipeline.<init> [0x00007fae5d385490] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Executable.declaredAnnotations [0x00007fae5d385f10] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.sequencedValues [0x00007fae5d386f10] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline.<init> [0x00007fae5d387710] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Sink$ChainedReference.<init> [0x00007fae5d387a90] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$StatelessOp.<init> [0x00007fae5d388190] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Sink$ChainedReference.end [0x00007fae5d388610] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: sun.reflect.annotation.AnnotationParser.toArray [0x00007fae5d388a90] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.util.stream.StreamOpFlag.isKnown [0x00007fae5d389110] (c1)
[0,454s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getInterfaces [0x00007fae5d389490] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap$LinkedValues.toArray [0x00007fae5d389810] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.prepareArray [0x00007fae5d389c90] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap$LinkedHashIterator.<init> [0x00007fae5d38a690] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.valuesToArray [0x00007fae5d38ac90] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Collectors$CollectorImpl.finisher [0x00007fae7c8d2090] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$ArrayListSpliterator.characteristics [0x00007fae7c8d2390] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.stream.StreamOpFlag.fromCharacteristics [0x00007fae5d38b890] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractPipeline.<init> [0x00007fae5d38be90] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline.<init> [0x00007fae5d38c390] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$Head.<init> [0x00007fae5d38c710] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.stream.StreamSupport.stream [0x00007fae5d38cb10] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.Spliterator.getExactSizeIfKnown [0x00007fae5d38d310] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.stream.FindOps$FindSink.cancellationRequested [0x00007fae7c8d2690] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractPipeline.wrapSink [0x00007fae5d38d890] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractPipeline.wrapAndCopyInto [0x00007fae5d38e090] (c1)
[0,455s][debug][gc,nmethod   ] Register NMethod: org.junit.platform.commons.util.AnnotationUtils.findMetaAnnotation [0x00007fae5d38e810] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Sink.end [0x00007fae5d38f790] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractPipeline.copyInto [0x00007fae5d38fa90] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: jdk.proxy2.$Proxy4.annotationType [0x00007fae5d390610] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractPipeline.evaluate [0x00007fae5d390e10] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: jdk.proxy2.$Proxy10.annotationType [0x00007fae5d391990] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$3.<init> [0x00007fae5d392190] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline.map [0x00007fae5d392710] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractPipeline.sourceSpliterator [0x00007fae5d392f90] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Sink$ChainedReference.begin [0x00007fae5d394990] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$3.opWrapSink [0x00007fae5d394e10] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$3$1.<init> [0x00007fae5d395710] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.entrySet [0x00007fae5d395f10] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap$LinkedEntryIterator.<init> [0x00007fae5d396310] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.getChar [0x00007fae5d396690] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.sequencedEntrySet [0x00007fae5d396a10] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap$LinkedEntrySet.iterator [0x00007fae5d397290] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Collectors$CollectorImpl.<init> [0x00007fae5d397790] (c1)
[0,456s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8 [0x00007fae7c8d2990] (c2)
[0,457s][debug][gc,nmethod   ] Register NMethod: sun.reflect.annotation.AnnotationInvocationHandler.hashCodeImpl [0x00007fae5d397d10] (c1)
[0,457s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.copyMethods [0x00007fae5d398b10] (c1)
[0,457s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Sink$ChainedReference.cancellationRequested [0x00007fae5d399d10] (c1)
[0,457s][debug][gc,nmethod   ] Register NMethod: java.util.Spliterators$ArraySpliterator.forEachRemaining [0x00007fae5d39a190] (c1)
[0,457s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReduceOps$ReduceOp.<init> [0x00007fae5d39aa10] (c1)
[0,457s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReduceOps$3.<init> [0x00007fae5d39ae10] (c1)
[0,457s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReduceOps.makeRef [0x00007fae5d39b390] (c1)
[0,457s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReduceOps$3.getOpFlags [0x00007fae5d39c090] (c1)
[0,457s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReduceOps$Box.<init> [0x00007fae5d39c710] (c1)
[0,457s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReduceOps$ReduceOp.evaluateSequential [0x00007fae5d39ca90] (c1)
[0,457s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline.collect [0x00007fae5d39d310] (c1)
[0,457s][debug][gc,nmethod   ] Register NMethod: java.util.StringJoiner.<init> [0x00007fae5d39e910] (c1)
[0,457s][debug][gc,nmethod   ] Register NMethod: java.util.StringJoiner.toString [0x00007fae5d39f790] (c1)
[0,457s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.isField [0x00007fae5d39fd90] (c1)
[0,458s][debug][gc,nmethod   ] Register NMethod: java.lang.String.join [0x00007fae5d3a0190] (c1)
[0,458s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getClassLoader [0x00007fae7c8d4390] (c2)
[0,458s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.make [0x00007fae5d3a2810] (c1)
[0,458s][debug][gc,nmethod   ] Register NMethod: java.lang.System$2.join [0x00007fae5d3a4790] (c1)
[0,458s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.add [0x00007fae7c8d4690] (c2)
[0,459s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.asType [0x00007fae5d3a6f10] (c1)
[0,459s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory.getLoadOpcode [0x00007fae5d3a7b10] (c1)
[0,459s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodVisitor.visitVarInsn [0x00007fae5d3a8010] (c1)
[0,459s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory.getParameterSize [0x00007fae5d3a8510] (c1)
[0,459s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.getDirectConstructorCommon [0x00007fae5d3a8990] (c1)
[0,459s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.asConstructor [0x00007fae5d3a9310] (c1)
[0,459s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.VM.isSystemDomainLoader [0x00007fae5d3a9d90] (c1)
[0,460s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle.getTarget [0x00007fae7c8d4c10] (c1)
[0,460s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.storeFence [0x00007fae5d3aa410] (c1)
[0,460s][debug][gc,nmethod   ] Register NMethod: java.lang.Module.implIsExportedOrOpen [0x00007fae5d3aa790] (c1)
[0,460s][debug][gc,nmethod   ] Register NMethod: java.util.HashSet.iterator [0x00007fae5d3ab410] (c1)
[0,461s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.internalForm [0x00007fae7c8d4f10] (c1)
[0,461s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.advance [0x00007fae7c8d5210] (c2)
[0,462s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.asTypeCached [0x00007fae5d3ab990] (c1)
[0,462s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap$LinkedKeyIterator.next [0x00007fae5d3ac210] (c1)
[0,462s][debug][gc,nmethod   ] Register NMethod: org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.getUniqueId [0x00007fae7c8d5610] (c1)
[0,462s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.setMajorVersionAndClassName [0x00007fae5d3ac610] (c1)
[0,462s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.getConstantPoolLength [0x00007fae5d3aca90] (c1)
[0,462s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.computeBootstrapMethodsSize [0x00007fae5d3ace10] (c1)
[0,462s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.<init> [0x00007fae5d3ad310] (c1)
[0,462s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.putConstantPool [0x00007fae5d3ad810] (c1)
[0,462s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ClassWriter.visit [0x00007fae5d3add90] (c1)
[0,462s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.putBootstrapMethods [0x00007fae5d3aed90] (c1)
[0,462s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaFormEditor$TransformKey.inRange [0x00007fae5d3af610] (c1)
[0,462s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaFormEditor$TransformKey.<init> [0x00007fae5d3af990] (c1)
[0,463s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaFormEditor.getInCache [0x00007fae5d3afd90] (c1)
[0,463s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InfoFromMemberName.getModifiers [0x00007fae5d3b1490] (c1)
[0,463s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Constructor.viewAsType [0x00007fae5d3b1890] (c1)
[0,463s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Type.getDescriptor [0x00007fae5d3b1e90] (c1)
[0,463s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.FieldVisitor.<init> [0x00007fae5d3b2b90] (c1)
[0,463s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ClassWriter.visitField [0x00007fae5d3b2f10] (c1)
[0,463s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.FieldWriter.<init> [0x00007fae5d3b3610] (c1)
[0,463s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.FieldVisitor.<init> [0x00007fae5d3b3d90] (c1)
[0,464s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.isEmpty [0x00007fae5d3b4a10] (c1)
[0,464s][debug][gc,nmethod   ] Register NMethod: java.util.Collections$UnmodifiableCollection$1.hasNext [0x00007fae5d3b4d90] (c1)
[0,464s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8d5910] ()
[0,464s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.defineClass0 [0x00007fae7c8d5c10] ()
[0,464s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstanceNoCheck [0x00007fae5d3b5210] (c1)
[0,464s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup$ClassOption.optionsToFlag [0x00007fae5d3b5710] (c1)
[0,464s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner [0x00007fae5d3b5f90] (c1)
[0,464s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup$ClassFile.<init> [0x00007fae5d3b6610] (c1)
[0,464s][debug][gc,nmethod   ] Register NMethod: java.util.Optional.isEmpty [0x00007fae5d3b6a10] (c1)
[0,464s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup$ClassDefiner.<init> [0x00007fae5d3b6e10] (c1)
[0,464s][debug][gc,nmethod   ] Register NMethod: java.lang.System$2.defineClass [0x00007fae5d3b7390] (c1)
[0,464s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner [0x00007fae5d3b7790] (c1)
[0,465s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern$Slice.match [0x00007fae5d3b8410] (c1)
[0,465s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup$ClassDefiner.defineClass [0x00007fae5d3b8d10] (c1)
[0,465s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.append [0x00007fae7c8d6490] (c2)
[0,465s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Matcher.reset [0x00007fae5d3ba390] (c1)
[0,465s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.ceil [0x00007fae5d3baf10] (c1)
[0,465s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Matcher.match [0x00007fae5d3bb290] (c1)
[0,465s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.keySet [0x00007fae5d3bbe10] (c1)
[0,465s][debug][gc,nmethod   ] Register NMethod: java.lang.StrictMath.ceil [0x00007fae5d3bc210] (c1)
[0,465s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.getExponent [0x00007fae5d3bc590] (c1)
[0,465s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.calculateHashMapCapacity [0x00007fae5d3bc910] (c1)
[0,465s][debug][gc,nmethod   ] Register NMethod: java.lang.StrictMath.floorOrCeil [0x00007fae5d3bcd90] (c1)
[0,465s][debug][gc,nmethod   ] Register NMethod: java.util.Optional.empty [0x00007fae7c8d7110] (c2)
[0,465s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ClassWriter.toByteArray [0x00007fae5d3bd490] (c1)
[0,465s][debug][gc,nmethod   ] Register NMethod: org.junit.platform.engine.UniqueId.hashCode [0x00007fae5d3c5910] (c1)
[0,465s][debug][gc,nmethod   ] Register NMethod: java.util.HashSet.isEmpty [0x00007fae5d3c5e10] (c1)
[0,466s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToInterface [0x00007fae7c8d7410] ()
[0,466s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8d7790] ()
[0,466s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c8d7a90] ()
[0,467s][debug][gc,nmethod   ] Register NMethod: java.util.Set.of [0x00007fae5d3c6310] (c1)
[0,467s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleStatics.dumper [0x00007fae5d3c6710] (c1)
[0,467s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c8d7d90] ()
[0,467s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c8d8310] ()
[0,467s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.toString [0x00007fae7c8d8610] (c2)
[0,468s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Field.getModifiers [0x00007fae7c8d9010] (c1)
[0,468s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.compareTo [0x00007fae5d3c6a10] (c1)
[0,468s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ArraysSupport.mismatch [0x00007fae5d3c6e10] (c1)
[0,468s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.compareTo [0x00007fae5d3c7610] (c1)
[0,468s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ByteVectorImpl.getLength [0x00007fae7c8d9310] (c2)
[0,468s][debug][gc,nmethod   ] Register NMethod: java.io.ObjectStreamField.getField [0x00007fae7c8d9610] (c1)
[0,468s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Field.getType [0x00007fae7c8d9910] (c1)
[0,469s][debug][gc,nmethod   ] Register NMethod: java.io.ObjectStreamField.getTypeCode [0x00007fae5d3c7d10] (c1)
[0,469s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.findBoundCallerLookup [0x00007fae5d3c8890] (c1)
[0,469s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.checkMethod [0x00007fae5d3c9310] (c1)
[0,469s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BoundMethodHandle$Species_L.<init> [0x00007fae5d3c9e10] (c1)
[0,469s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.maybeBindCaller [0x00007fae5d3ca290] (c1)
[0,469s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8d9c10] ()
[0,469s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon [0x00007fae5d3caf90] (c1)
[0,469s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives.linkCallSite [0x00007fae5d3ccf10] (c1)
[0,470s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives.staticArgumentsPulled [0x00007fae5d3cd810] (c1)
[0,470s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives.linkCallSiteImpl [0x00007fae5d3cdc10] (c1)
[0,470s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToInterface [0x00007fae7c8d9f10] ()
[0,470s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.ConstantCallSite.<init> [0x00007fae5d3ceb90] (c1)
[0,470s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.CallSite.<init> [0x00007fae5d3cf510] (c1)
[0,470s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives$CallSiteContext.make [0x00007fae5d3cfe10] (c1)
[0,470s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleNatives$CallSiteContext.<init> [0x00007fae5d3d0390] (c1)
[0,470s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.isAncestorLoaderOf [0x00007fae5d3d0710] (c1)
[0,470s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.CallSite.makeSite [0x00007fae5d3d1390] (c1)
[0,470s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitLdcInsn [0x00007fae5d3d3590] (c1)
[0,471s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaMetafactory.metafactory [0x00007fae5d3d4b10] (c1)
[0,471s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.hasFullPrivilegeAccess [0x00007fae5d3d5e10] (c1)
[0,471s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.revealDirect [0x00007fae5d3d6190] (c1)
[0,471s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InfoFromMemberName.<init> [0x00007fae5d3d7f10] (c1)
[0,472s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InfoFromMemberName.getName [0x00007fae5d3d8310] (c1)
[0,472s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InfoFromMemberName.getMethodType [0x00007fae5d3d8c10] (c1)
[0,472s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory.<init> [0x00007fae5d3d9010] (c1)
[0,472s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory.lambdaClassName [0x00007fae5d3dc490] (c1)
[0,472s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaProxyClassArchive.findFromArchive [0x00007fae7c8da290] ()
[0,473s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BootstrapMethodInvoker.invoke [0x00007fae5d3dd110] (c1)
[0,473s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.CDS.isSharingEnabled [0x00007fae5d3e9010] (c1)
[0,473s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.AbstractValidatingLambdaMetafactory.<init> [0x00007fae5d3e9310] (c1)
[0,474s][debug][gc,nmethod   ] Register NMethod: java.util.Collections$1.hasNext [0x00007fae7c8daa90] (c1)
[0,474s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$Set12.<init> [0x00007fae5d3f0d90] (c1)
[0,475s][debug][gc,nmethod   ] Register NMethod: java.lang.StringConcatHelper.prepend [0x00007fae7c8dad90] (c2)
[0,476s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8db310] ()
[0,476s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$NamedFunction.intrinsicName [0x00007fae5d3f2090] (c1)
[0,476s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.emitStoreResult [0x00007fae5d3f2590] (c1)
[0,476s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.<init> [0x00007fae5d3f2a10] (c1)
[0,476s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c8db610] ()
[0,477s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName$Factory.resolveOrNull [0x00007fae5d3f2e10] (c1)
[0,477s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments [0x00007fae5d3f3410] (c1)
[0,478s][debug][gc,nmethod   ] Register NMethod: java.util.Collections$UnmodifiableCollection.<init> [0x00007fae5d3f4190] (c1)
[0,478s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ConstantPool.getUTF8At0 [0x00007fae7c8db910] ()
[0,478s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ConstantPool.getUTF8At [0x00007fae5d3f4710] (c1)
[0,478s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterData.of [0x00007fae7c8dc090] (c2)
[0,478s][debug][gc,nmethod   ] Register NMethod: java.util.Collections$UnmodifiableCollection.contains [0x00007fae5d3f4b10] (c1)
[0,478s][debug][gc,nmethod   ] Register NMethod: java.util.HashSet.<init> [0x00007fae5d3f4f90] (c1)
[0,479s][debug][gc,nmethod   ] Register NMethod: java.util.RegularEnumSet.contains [0x00007fae5d3f5690] (c1)
[0,479s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8dc390] ()
[0,479s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.getUnnamedModule [0x00007fae7c8dc690] (c1)
[0,480s][debug][gc,nmethod   ] Register NMethod: java.lang.Enum.equals [0x00007fae5d3f5e90] (c1)
[0,480s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodVisitor.visitInsn [0x00007fae5d3f6210] (c1)
[0,480s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodVisitor.visitMethodInsn [0x00007fae5d3f6710] (c1)
[0,480s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Type.getArgumentTypes [0x00007fae5d3f6f90] (c1)
[0,480s][debug][gc,nmethod   ] Register NMethod: java.lang.Character.isHighSurrogate [0x00007fae5d3faa10] (c1)
[0,480s][debug][gc,nmethod   ] Register NMethod: java.lang.Character.codePointAt [0x00007fae5d3fad90] (c1)
[0,480s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.FieldWriter.visitEnd [0x00007fae5d3fb790] (c1)
[0,481s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.ReferenceQueue.poll [0x00007fae7c8dc990] (c2)
[0,482s][debug][gc,nmethod   ] Register NMethod: java.util.Spliterators$ArraySpliterator.<init> [0x00007fae5d3fba90] (c1)
[0,482s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.getDirectMethodNoSecurityManager [0x00007fae5d3fbe90] (c1)
[0,483s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.TypeConvertingMethodAdapter.<init> [0x00007fae5d3fc290] (c1)
[0,483s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodVisitor.visitCode [0x00007fae5d3fc610] (c1)
[0,483s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodVisitor.visitMaxs [0x00007fae5d3fcb10] (c1)
[0,483s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodVisitor.visitEnd [0x00007fae5d3fd010] (c1)
[0,484s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory.generateConstructor [0x00007fae5d3fd510] (c1)
[0,484s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.<init> [0x00007fae5d3ff210] (c1)
[0,484s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.convertArgumentTypes [0x00007fae5d3ff690] (c1)
[0,484s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.invocationOpcode [0x00007fae5d400d90] (c1)
[0,484s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory.getReturnOpcode [0x00007fae5d401a90] (c1)
[0,484s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ClassWriter.visitEnd [0x00007fae5d401e90] (c1)
[0,485s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.<init> [0x00007fae5d402190] (c1)
[0,485s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ClassVisitor.<init> [0x00007fae5d402990] (c1)
[0,485s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate [0x00007fae5d403610] (c1)
[0,485s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$Set12.contains [0x00007fae5d406a10] (c1)
[0,485s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass [0x00007fae5d407110] (c1)
[0,486s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$NamedFunction.member [0x00007fae5d40af10] (c1)
[0,486s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.isPrivate [0x00007fae5d40b290] (c1)
[0,486s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.refKindOpcode [0x00007fae5d40b690] (c1)
[0,486s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke [0x00007fae5d40c390] (c1)
[0,486s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.append [0x00007fae5d40e010] (c1)
[0,486s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable [0x00007fae5d40e410] (c1)
[0,487s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterDataLatin1.isWhitespace [0x00007fae7c8dcc90] (c2)
[0,487s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BoundMethodHandle$Species_L.make [0x00007fae5d410190] (c1)
[0,487s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.shouldBeInitialized0 [0x00007fae7c8dd010] ()
[0,487s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.shouldBeInitialized [0x00007fae5d410690] (c1)
[0,487s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl.countNonNull [0x00007fae5d410b90] (c1)
[0,488s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.<init> [0x00007fae5d411090] (c1)
[0,488s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.AnnotatedElement.isAnnotationPresent [0x00007fae5d411490] (c1)
[0,488s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.keepsAlive [0x00007fae5d411910] (c1)
[0,488s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.getApproximateCommonClassLoader [0x00007fae5d412c10] (c1)
[0,488s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.makeAllocator [0x00007fae5d413f90] (c1)
[0,489s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.stream [0x00007fae5d414990] (c1)
[0,489s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.spliterator [0x00007fae5d414e10] (c1)
[0,489s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.stream [0x00007fae5d415190] (c1)
[0,489s][debug][gc,nmethod   ] Register NMethod: java.util.Spliterators.spliterator [0x00007fae5d415690] (c1)
[0,489s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.hashCode [0x00007fae7c8dd410] (c2)
[0,489s][debug][gc,nmethod   ] Register NMethod: java.util.Spliterators.checkFromToBounds [0x00007fae5d415d10] (c1)
[0,489s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getAnnotation [0x00007fae5d416c90] (c1)
[0,489s][debug][gc,nmethod   ] Register NMethod: java.lang.Boolean.valueOf [0x00007fae5d417510] (c1)
[0,489s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getDeclaredAnnotations [0x00007fae5d417890] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: jdk.proxy2.$Proxy9.annotationType [0x00007fae5d418090] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.afterNodeAccess [0x00007fae5d418890] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getAnnotations [0x00007fae5d418b90] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: java.util.Spliterators$ArraySpliterator.estimateSize [0x00007fae5d419390] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: org.junit.platform.commons.util.AnnotationUtils.findAnnotation [0x00007fae5d419710] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: jdk.proxy3.$Proxy5.annotationType [0x00007fae5d41b510] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.getDeclaredAnnotations [0x00007fae5d41bd10] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: jdk.proxy2.$Proxy11.annotationType [0x00007fae5d41c510] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Executable.getDeclaredAnnotations [0x00007fae5d41cd10] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: jdk.proxy3.$Proxy12.hashCode [0x00007fae5d41d490] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: jdk.proxy3.$Proxy12.annotationType [0x00007fae5d41dc90] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.isAnnotationPresent [0x00007fae5d41e490] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: jdk.proxy3.$Proxy5.hashCode [0x00007fae5d41ee90] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: jdk.proxy3.$Proxy12.equals [0x00007fae5d41f690] (c1)
[0,490s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getDeclaredAnnotation [0x00007fae5d420190] (c1)
[0,491s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Executable.getAnnotation [0x00007fae5d420a10] (c1)
[0,491s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.getAnnotation [0x00007fae5d421490] (c1)
[0,491s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.getRoot [0x00007fae5d422010] (c1)
[0,491s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getTypeName [0x00007fae5d422390] (c1)
[0,491s][debug][gc,nmethod   ] Register NMethod: org.junit.platform.commons.util.AnnotationUtils.findAnnotation [0x00007fae5d424f10] (c1)
[0,491s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.AccessibleObject.getDeclaredAnnotation [0x00007fae5d426110] (c1)
[0,491s][debug][gc,nmethod   ] Register NMethod: sun.reflect.annotation.AnnotationInvocationHandler.equalsImpl [0x00007fae5d426510] (c1)
[0,492s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$ArrayListSpliterator.getFence [0x00007fae5d42a690] (c1)
[0,492s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.resolveOrFail [0x00007fae5d42aa90] (c1)
[0,493s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.getDirectMethodForConstant [0x00007fae5d42bf90] (c1)
[0,493s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getProtectionDomain0 [0x00007fae7c8dda10] ()
[0,493s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.canBeCached [0x00007fae5d42da10] (c1)
[0,493s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern.lambda$ALL$10 [0x00007fae7c8de190] (c1)
[0,493s][debug][gc,nmethod   ] Register NMethod: java.lang.Module.allows [0x00007fae5d42fa10] (c1)
[0,493s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.FieldWriter.computeFieldInfoSize [0x00007fae5d430410] (c1)
[0,493s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern$$Lambda/0x00007fadb408bdd0.is [0x00007fae5d430d10] (c1)
[0,494s][debug][gc,nmethod   ] Register NMethod: java.lang.Character.isLowSurrogate [0x00007fae5d431090] (c1)
[0,494s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.FieldWriter.putFieldInfo [0x00007fae5d431410] (c1)
[0,494s][debug][gc,nmethod   ] Register NMethod: java.lang.Module.isExported [0x00007fae5d432890] (c1)
[0,494s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c8de490] ()
[0,494s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaFormBuffer.ownedCount [0x00007fae5d433010] (c1)
[0,494s][debug][gc,nmethod   ] Register NMethod: java.lang.Module.canRead [0x00007fae5d433310] (c1)
[0,494s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$Name.<init> [0x00007fae5d435910] (c1)
[0,495s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.useCount [0x00007fae5d436690] (c1)
[0,495s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.shouldBeInitialized [0x00007fae5d436e10] (c1)
[0,495s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.checkPointer [0x00007fae5d437a90] (c1)
[0,495s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.checkPrimitivePointer [0x00007fae5d438190] (c1)
[0,496s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.mark [0x00007fae5d438c90] (c1)
[0,496s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.markToCurrent [0x00007fae5d438f90] (c1)
[0,496s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8dea10] ()
[0,496s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c8ded10] ()
[0,497s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToInterface [0x00007fae7c8df010] ()
[0,497s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.append [0x00007fae7c8df390] (c2)
[0,497s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.put [0x00007fae7c8e0090] (c2)
[0,498s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.put12 [0x00007fae7c8e1910] (c2)
[0,499s][debug][gc,nmethod   ] Register NMethod: java.lang.String.indexOf [0x00007fae7c8e1e90] (c2)
[0,500s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.putVal [0x00007fae7c8e2410] (c2)
[0,502s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.BuiltinClassLoader.isSealed [0x00007fae5d439390] (c1)
[0,503s][debug][gc,nmethod   ] Register NMethod: java.lang.ThreadLocal.get [0x00007fae5d43c210] (c1)
[0,504s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedReader.ensureOpen [0x00007fae5d43c910] (c1)
[0,504s][debug][gc,nmethod   ] Register NMethod: java.io.StreamTokenizer.read [0x00007fae5d43ce10] (c1)
[0,504s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedReader.implRead [0x00007fae5d43d610] (c1)
[0,505s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedReader.read [0x00007fae5d43df90] (c1)
[0,505s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext [0x00007fae5d43f890] (c1)
[0,505s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.PolicyParser.peek [0x00007fae5d440190] (c1)
[0,506s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.InternalLock.lock [0x00007fae7c8e3c90] (c2)
[0,506s][debug][gc,nmethod   ] Register NMethod: java.lang.String.copyValueOf [0x00007fae5d440c90] (c1)
[0,506s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.InternalLock.unlock [0x00007fae7c8e4410] (c2)
[0,506s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.PolicyParser.match [0x00007fae5d441090] (c1)
[0,506s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.position [0x00007fae7c8e4c90] (c1)
[0,506s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext [0x00007fae7c8e4f90] (c2)
[0,506s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.ReentrantLock$Sync.tryRelease [0x00007fae7c8e5390] (c2)
[0,507s][debug][gc,nmethod   ] Register NMethod: java.io.StreamTokenizer.nextToken [0x00007fae5d445c10] (c1)
[0,507s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.CarrierThreadLocal.get [0x00007fae5d449910] (c1)
[0,507s][debug][gc,nmethod   ] Register NMethod: java.lang.System$2.getCarrierThreadLocal [0x00007fae5d449f10] (c1)
[0,507s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock [0x00007fae7c8e5810] (c2)
[0,508s][debug][gc,nmethod   ] Register NMethod: java.lang.StringUTF16.compress [0x00007fae7c8e5d10] (c2)
[0,508s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.emitReferenceCast [0x00007fae5d44a490] (c1)
[0,508s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.ReentrantLock.lock [0x00007fae7c8e6210] (c2)
[0,508s][debug][gc,nmethod   ] Register NMethod: java.lang.String.contains [0x00007fae5d44ba10] (c1)
[0,509s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedReader.implRead [0x00007fae7c8e6910] (c2)
[0,509s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterDataLatin1.getProperties [0x00007fae7c8e6e10] (c2)
[0,509s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterDataLatin1.equalsIgnoreCase [0x00007fae7c8e7110] (c2)
[0,510s][debug][gc,nmethod   ] Register NMethod: java.security.Permission.getName [0x00007fae7c8e7410] (c1)
[0,510s][debug][gc,nmethod   ] Register NMethod: java.security.PermissionCollection.isReadOnly [0x00007fae7c8e7710] (c1)
[0,511s][debug][gc,nmethod   ] Register NMethod: java.lang.String.startsWith [0x00007fae5d44bf10] (c1)
[0,511s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectByteBuffer.get [0x00007fae7c8e7a10] (c2)
[0,512s][debug][gc,nmethod   ] Register NMethod: java.io.StreamTokenizer.read [0x00007fae7c8e7e10] (c2)
[0,512s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.lastIndexOf [0x00007fae7c8e9090] (c2)
[0,514s][debug][gc,nmethod   ] Register NMethod: java.io.BufferedReader.read [0x00007fae7c8e9410] (c2)
[0,516s][debug][gc,nmethod   ] Register NMethod: java.lang.String.regionMatches [0x00007fae7c8ea590] (c2)
[0,522s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$Itr.next [0x00007fae5d44cc10] (c1)
[0,523s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ArraysSupport.vectorizedMismatch [0x00007fae5d44d490] (c1)
[0,523s][debug][gc,nmethod   ] Register NMethod: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit.systemProperty [0x00007fae7c8eae10] (c1)
[0,523s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.indexOfRange [0x00007fae5d44dc10] (c1)
[0,523s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.ArraysSupport.mismatch [0x00007fae5d44e590] (c1)
[0,523s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.contains [0x00007fae5d44ed90] (c1)
[0,523s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.indexOf [0x00007fae5d44f290] (c1)
[0,524s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.fill [0x00007fae5d44f690] (c1)
[0,524s][debug][gc,nmethod   ] Register NMethod: java.lang.String.substring [0x00007fae5d44fb90] (c1)
[0,524s][debug][gc,nmethod   ] Register NMethod: com.sun.org.apache.xerces.internal.util.Status.isExceptional [0x00007fae7c8eb110] (c1)
[0,525s][debug][gc,nmethod   ] Register NMethod: com.sun.org.apache.xerces.internal.util.XMLChar.isValid [0x00007fae5d450110] (c1)
[0,525s][debug][gc,nmethod   ] Register NMethod: com.sun.org.apache.xerces.internal.util.XMLChar.isInvalid [0x00007fae5d450590] (c1)
[0,526s][debug][gc,nmethod   ] Register NMethod: com.sun.org.apache.xerces.internal.util.XMLChar.isContent [0x00007fae5d450b10] (c1)
[0,526s][debug][gc,nmethod   ] Register NMethod: java.lang.String.startsWith [0x00007fae7c8eb410] (c2)
[0,527s][debug][gc,nmethod   ] Register NMethod: java.lang.String.toLowerCase [0x00007fae5d450f90] (c1)
[0,527s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.toLowerCase [0x00007fae5d451590] (c1)
[0,527s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.fill [0x00007fae7c8ebb90] (c2)
[0,528s][debug][gc,nmethod   ] Register NMethod: sun.net.www.ParseUtil.firstEncodeIndex [0x00007fae5d452790] (c1)
[0,532s][debug][gc,nmethod   ] Register NMethod: ch.qos.logback.core.joran.spi.ElementPath.get [0x00007fae5d453810] (c1)
[0,533s][debug][gc,nmethod   ] Register NMethod: ch.qos.logback.core.joran.spi.ElementPath.size [0x00007fae5d454090] (c1)
[0,533s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.ReflectAccess.getExecutableSharedParameterTypes [0x00007fae5d454490] (c1)
[0,533s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ReflectionFactory.getExecutableSharedParameterTypes [0x00007fae5d454910] (c1)
[0,533s][debug][gc,nmethod   ] Register NMethod: java.lang.PublicMethods$Key.hashCode [0x00007fae5d454e90] (c1)
[0,533s][debug][gc,nmethod   ] Register NMethod: java.lang.PublicMethods$MethodList.<init> [0x00007fae5d455310] (c1)
[0,533s][debug][gc,nmethod   ] Register NMethod: java.lang.PublicMethods$MethodList.length [0x00007fae5d455710] (c1)
[0,533s][debug][gc,nmethod   ] Register NMethod: java.lang.PublicMethods$Key.<init> [0x00007fae5d455c10] (c1)
[0,534s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.getParameterTypes [0x00007fae5d456290] (c1)
[0,534s][debug][gc,nmethod   ] Register NMethod: java.lang.PublicMethods$MethodList.merge [0x00007fae5d456810] (c1)
[0,534s][debug][gc,nmethod   ] Register NMethod: java.lang.PublicMethods.merge [0x00007fae5d457b90] (c1)
[0,535s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$List12.size [0x00007fae5d458e10] (c1)
[0,535s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.storeInsnOpcode [0x00007fae5d459210] (c1)
[0,535s][debug][gc,nmethod   ] Register NMethod: ch.qos.logback.core.joran.spi.SimpleRuleStore.isKleeneStar [0x00007fae5d45a190] (c1)
[0,535s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.inflate [0x00007fae5d45a590] (c1)
[0,536s][debug][gc,nmethod   ] Register NMethod: ch.qos.logback.core.joran.spi.ElementPath.peekLast [0x00007fae5d45aa90] (c1)
[0,536s][debug][gc,nmethod   ] Register NMethod: java.lang.String.startsWith [0x00007fae7c8ec090] (c2)
[0,536s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Constructor.getDeclaringClass [0x00007fae7c8ec810] (c1)
[0,536s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.getNode [0x00007fae7c8ecb10] (c2)
[0,536s][debug][gc,nmethod   ] Register NMethod: java.util.StringJoiner.add [0x00007fae5d45b490] (c1)
[0,540s][debug][gc,nmethod   ] Register NMethod: java.lang.Character.isJavaIdentifierPart [0x00007fae5d45c690] (c1)
[0,540s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterDataLatin1.isJavaIdentifierPart [0x00007fae5d45cb10] (c1)
[0,541s][debug][gc,nmethod   ] Register NMethod: java.lang.ClassLoader.checkName [0x00007fae7c8ed510] (c2)
[0,542s][debug][gc,nmethod   ] Register NMethod: ch.qos.logback.core.joran.spi.ElementSelector.fullPathMatch [0x00007fae5d45d010] (c1)
[0,542s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.dropParameterTypes [0x00007fae5d45e790] (c1)
[0,542s][debug][gc,nmethod   ] Register NMethod: ch.qos.logback.core.joran.util.beans.BeanUtil.getParameterCount [0x00007fae5d460090] (c1)
[0,542s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaFormEditor$TransformKey.packedBytes [0x00007fae5d460710] (c1)
[0,542s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToVirtual [0x00007fae7c8edb10] ()
[0,542s][debug][gc,nmethod   ] Register NMethod: ch.qos.logback.core.joran.spi.SimpleRuleStore.isSuffixPattern [0x00007fae5d460a10] (c1)
[0,542s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaFormEditor$TransformKey.bval [0x00007fae5d461610] (c1)
[0,542s][debug][gc,nmethod   ] Register NMethod: sun.net.www.ParseUtil.firstEncodeIndex [0x00007fae7c8ede10] (c2)
[0,543s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaFormEditor$TransformKey.of [0x00007fae5d461910] (c1)
[0,543s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c8ee510] ()
[0,543s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c8eea90] ()
[0,543s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaFormEditor.bindArgumentType [0x00007fae5d462210] (c1)
[0,543s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitAnnotation [0x00007fae5d462710] (c1)
[0,543s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.AnnotationWriter.create [0x00007fae5d462d90] (c1)
[0,543s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.AnnotationWriter.<init> [0x00007fae5d463610] (c1)
[0,543s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.AnnotationVisitor.<init> [0x00007fae5d463c90] (c1)
[0,543s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.AnnotationVisitor.<init> [0x00007fae5d464010] (c1)
[0,543s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.AnnotationWriter.visitEnd [0x00007fae5d464c90] (c1)
[0,543s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8eed90] ()
[0,543s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.Wrapper.isSubwordOrInt [0x00007fae5d465190] (c1)
[0,543s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.Wrapper.isNumeric [0x00007fae5d465810] (c1)
[0,543s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.Wrapper.isIntegral [0x00007fae5d465b90] (c1)
[0,543s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.methodType [0x00007fae5d466010] (c1)
[0,543s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c8ef090] ()
[0,543s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaFormEditor.bindArgumentForm [0x00007fae5d466490] (c1)
[0,544s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c8ef610] ()
[0,544s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.returnType [0x00007fae5d468990] (c1)
[0,546s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern$GroupTail.match [0x00007fae5d468e90] (c1)
[0,546s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.Invokers.callSiteForm [0x00007fae5d469790] (c1)
[0,546s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.trim [0x00007fae5d46b990] (c1)
[0,547s][debug][gc,nmethod   ] Register NMethod: java.lang.Character.codePointBefore [0x00007fae5d46c090] (c1)
[0,547s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern$BmpCharProperty.match [0x00007fae5d46c990] (c1)
[0,547s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.protectionDomain [0x00007fae5d46d210] (c1)
[0,547s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BootstrapMethodInvoker.widenAndCast [0x00007fae5d46dd10] (c1)
[0,547s][debug][gc,nmethod   ] Register NMethod: java.lang.String.trim [0x00007fae5d46eb90] (c1)
[0,547s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.Reflection.areNestMates [0x00007fae7c8efb90] ()
[0,547s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.AbstractValidatingLambdaMetafactory.isAdaptableToAsReturn [0x00007fae5d46f210] (c1)
[0,547s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.AbstractValidatingLambdaMetafactory.isAdaptableToAsReturnStrict [0x00007fae5d46f990] (c1)
[0,548s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReduceOps$3ReducingSink.<init> [0x00007fae5d470290] (c1)
[0,548s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass [0x00007fae5d470790] (c1)
[0,548s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaProxyClassArchive.find [0x00007fae5d471010] (c1)
[0,548s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaProxyClassArchive.loadedByBuiltinLoader [0x00007fae5d471c90] (c1)
[0,548s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.findConstructor [0x00007fae5d472410] (c1)
[0,548s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.AbstractValidatingLambdaMetafactory.checkDescriptor [0x00007fae5d473190] (c1)
[0,548s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles$Lookup.getDirectConstructor [0x00007fae5d476710] (c1)
[0,548s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite [0x00007fae5d476a90] (c1)
[0,549s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReduceOps$3ReducingSink.begin [0x00007fae5d479b10] (c1)
[0,549s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaFormEditor.lambdaFormEditor [0x00007fae5d47a010] (c1)
[0,549s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.editor [0x00007fae5d47a590] (c1)
[0,549s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaFormEditor.<init> [0x00007fae5d47ab90] (c1)
[0,549s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.AbstractValidatingLambdaMetafactory.validateMetafactoryArgs [0x00007fae5d47af90] (c1)
[0,550s][debug][gc,nmethod   ] Register NMethod: java.lang.String.hashCode [0x00007fae5d486710] (c1)
[0,552s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.UnixFileSystem.provider [0x00007fae7c8eff90] (c1)
[0,552s][debug][gc,nmethod   ] Register NMethod: java.lang.StringConcatHelper.newString [0x00007fae7c8f0290] (c2)
[0,553s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.NativeBuffer.setOwner [0x00007fae7c8f0610] (c1)
[0,553s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.NativeBuffer.size [0x00007fae7c8f0910] (c1)
[0,553s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.NativeBuffer.owner [0x00007fae7c8f0c10] (c1)
[0,553s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.UnixFileSystem.needToResolveAgainstDefaultDirectory [0x00007fae7c8f0f10] (c1)
[0,557s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.CopyOnWriteArrayList.getArray [0x00007fae7c8f1210] (c1)
[0,562s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToVirtual [0x00007fae7c8f1510] ()
[0,563s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.UnixPath.<init> [0x00007fae5d486e10] (c1)
[0,576s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodVisitor.visitFieldInsn [0x00007fae5d487210] (c1)
[0,576s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Reference.refersTo [0x00007fae5d487710] (c1)
[0,576s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial [0x00007fae5d487b10] (c1)
[0,576s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReduceOps$ReduceOp.evaluateSequential [0x00007fae5d488510] (c1)
[0,577s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline.filter [0x00007fae5d488c90] (c1)
[0,577s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$2.opWrapSink [0x00007fae5d489510] (c1)
[0,577s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$2.<init> [0x00007fae5d489e10] (c1)
[0,577s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$2$1.begin [0x00007fae5d48a390] (c1)
[0,577s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$2$1.<init> [0x00007fae5d48a810] (c1)
[0,581s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern.next [0x00007fae5d48b010] (c1)
[0,581s][debug][gc,nmethod   ] Register NMethod: java.util.Formatter$Flags.contains [0x00007fae5d48b590] (c1)
[0,581s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Matcher.groupCount [0x00007fae5d48b910] (c1)
[0,581s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern.matcher [0x00007fae5d48bc90] (c1)
[0,581s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Matcher.<init> [0x00007fae5d48c310] (c1)
[0,581s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Matcher.checkGroup [0x00007fae5d48cc10] (c1)
[0,581s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern$GroupHead.match [0x00007fae5d48d810] (c1)
[0,581s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.position [0x00007fae5d48df10] (c1)
[0,582s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Matcher.search [0x00007fae5d48e410] (c1)
[0,584s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern$BmpCharPropertyGreedy.match [0x00007fae7c8f1810] (c2)
[0,593s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.get [0x00007fae7c8f2410] (c2)
[0,593s][debug][gc,nmethod   ] Register NMethod: java.lang.NamedPackage.<init> [0x00007fae5d48f090] (c1)
[0,594s][debug][gc,nmethod   ] Register NMethod: java.net.URL.<init> [0x00007fae7c8f2e90] (c2)
[0,597s][debug][gc,nmethod   ] Register NMethod: java.util.Locale.getDefault [0x00007fae5d490190] (c1)
[0,597s][debug][gc,nmethod   ] Register NMethod: java.lang.Object.equals [0x00007fae7c8f5110] (c2)
[0,598s][debug][gc,nmethod   ] Register NMethod: java.lang.String.toLowerCase [0x00007fae5d490510] (c1)
[0,598s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.SoftReference.get [0x00007fae7c8f5410] (c2)
[0,599s][debug][gc,nmethod   ] Register NMethod: com.google.protobuf.GeneratedMessageV3$Builder.onChanged [0x00007fae5d490c90] (c1)
[0,601s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.arrayOffset [0x00007fae5d491190] (c1)
[0,601s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.position [0x00007fae5d491790] (c1)
[0,601s][debug][gc,nmethod   ] Register NMethod: java.nio.charset.CoderResult.isUnderflow [0x00007fae5d491b10] (c1)
[0,601s][debug][gc,nmethod   ] Register NMethod: java.nio.CharBuffer.position [0x00007fae5d491e90] (c1)
[0,601s][debug][gc,nmethod   ] Register NMethod: java.nio.CharBuffer.arrayOffset [0x00007fae5d492290] (c1)
[0,601s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.remaining [0x00007fae5d492890] (c1)
[0,601s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.limit [0x00007fae5d492c10] (c1)
[0,601s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.capacity [0x00007fae7c8f5790] (c1)
[0,601s][debug][gc,nmethod   ] Register NMethod: java.nio.charset.CharsetEncoder.maxBytesPerChar [0x00007fae7c8f5a90] (c1)
[0,601s][debug][gc,nmethod   ] Register NMethod: java.nio.CharBuffer.position [0x00007fae5d493110] (c1)
[0,601s][debug][gc,nmethod   ] Register NMethod: java.lang.ThreadLocal$ThreadLocalMap.getEntry [0x00007fae5d493490] (c1)
[0,602s][debug][gc,nmethod   ] Register NMethod: java.io.FileInputStream.readBytes [0x00007fae7c8f5d90] ()
[0,602s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.<init> [0x00007fae5d493c90] (c1)
[0,603s][debug][gc,nmethod   ] Register NMethod: java.io.FileDescriptor.<init> [0x00007fae5d494e10] (c1)
[0,603s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.equals [0x00007fae5d495210] (c1)
[0,603s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$JarLoader$2.getCodeSourceURL [0x00007fae7c8f6190] (c2)
[0,603s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.NativeReferenceQueue.poll [0x00007fae7c8f6510] (c2)
[0,605s][debug][gc,nmethod   ] Register NMethod: sun.net.util.IPAddressUtil.checkHostString [0x00007fae7c8f6810] (c2)
[0,606s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.clamp [0x00007fae7c8f6d10] (c2)
[0,608s][debug][gc,nmethod   ] Register NMethod: java.lang.String.indexOf [0x00007fae7c8f7010] (c2)
[0,608s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c8f7890] ()
[0,608s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c8f7b90] ()
[0,608s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c8f8110] ()
[0,611s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c8f8410] ()
[0,612s][debug][gc,nmethod   ] Register NMethod: sun.net.www.ParseUtil.encodePath [0x00007fae7c8f8710] (c2)
[0,612s][debug][gc,nmethod   ] Register NMethod: java.io.FileInputStream.read [0x00007fae5d495790] (c1)
[0,612s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.copyOf [0x00007fae7c8f8e10] (c2)
[0,612s][debug][gc,nmethod   ] Register NMethod: java.io.FileDescriptor.attach [0x00007fae5d495d10] (c1)
[0,613s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial [0x00007fae5d496e10] (c1)
[0,613s][debug][gc,nmethod   ] Register NMethod: java.io.FileDescriptor.valid [0x00007fae5d497910] (c1)
[0,613s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.<init> [0x00007fae5d497d10] (c1)
[0,613s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.<init> [0x00007fae5d498090] (c1)
[0,614s][debug][gc,nmethod   ] Register NMethod: java.io.FileDescriptor$1.get [0x00007fae5d498a10] (c1)
[0,614s][debug][gc,nmethod   ] Register NMethod: java.io.FileDescriptor$1.getHandle [0x00007fae5d498d90] (c1)
[0,614s][debug][gc,nmethod   ] Register NMethod: java.io.FileCleanable.<init> [0x00007fae5d499110] (c1)
[0,614s][debug][gc,nmethod   ] Register NMethod: java.io.FileDescriptor.registerCleanup [0x00007fae5d499510] (c1)
[0,614s][debug][gc,nmethod   ] Register NMethod: java.io.FileCleanable.register [0x00007fae5d499d10] (c1)
[0,614s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.Resource.getManifest [0x00007fae7c8f9510] (c1)
[0,614s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.Resource.getCodeSigners [0x00007fae7c8f9810] (c1)
[0,618s][debug][gc,nmethod   ] Register NMethod: java.net.URLStreamHandler.setURL [0x00007fae7c8f9b10] (c2)
[0,620s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.UnixPath.isEmpty [0x00007fae5d49aa90] (c1)
[0,622s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath.getResource [0x00007fae7c8fb010] (c2)
[0,625s][debug][gc,nmethod   ] Register NMethod: java.lang.String.hashCode [0x00007fae7c8fec10] (c2)
[0,635s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReduceOps$3.makeSink [0x00007fae5d49ae90] (c1)
[0,635s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReduceOps$3.makeSink [0x00007fae5d49b210] (c1)
[0,636s][debug][gc,nmethod   ] Register NMethod: java.util.Collections$UnmodifiableCollection$1.next [0x00007fae5d49b910] (c1)
[0,636s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.equals [0x00007fae5d49bd90] (c1)
[0,638s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.Invokers$Holder.linkToTargetMethod [0x00007fae5d49d010] (c1)
[0,639s][debug][gc,nmethod   ] Register NMethod: java.lang.Module.isStaticallyExportedOrOpen [0x00007fae5d49d510] (c1)
[0,639s][debug][gc,nmethod   ] Register NMethod: java.lang.Short.<init> [0x00007fae5d49e010] (c1)
[0,639s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaFormEditor.bindArgumentL [0x00007fae5d49e490] (c1)
[0,639s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.bindTo [0x00007fae5d49ea10] (c1)
[0,639s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToVirtual [0x00007fae7c8ff290] ()
[0,639s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.leadingReferenceParameter [0x00007fae5d49f590] (c1)
[0,639s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.bindArgumentL [0x00007fae5d49fc90] (c1)
[0,639s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BoundMethodHandle.bindArgumentL [0x00007fae5d4a0790] (c1)
[0,639s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToVirtual [0x00007fae7c8ff590] ()
[0,639s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.VerifyAccess.isModuleAccessible [0x00007fae5d4a1090] (c1)
[0,639s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToVirtual [0x00007fae7c8ff890] ()
[0,640s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.ClassSpecializer$SpeciesData.fieldCount [0x00007fae5d4a2510] (c1)
[0,641s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.tree.SimpleClassTypeSignature.make [0x00007fae5d4a2990] (c1)
[0,641s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.tree.SimpleClassTypeSignature.<init> [0x00007fae5d4a2f10] (c1)
[0,642s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.parseClassTypeSignatureSuffix [0x00007fae5d4a3310] (c1)
[0,642s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.parsePackageNameAndSimpleClassTypeSignature [0x00007fae5d4a3990] (c1)
[0,642s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.tree.ClassTypeSignature.make [0x00007fae5d4a4b90] (c1)
[0,642s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.tree.ClassTypeSignature.<init> [0x00007fae5d4a5090] (c1)
[0,642s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.parseClassTypeSignature [0x00007fae5d4a5490] (c1)
[0,642s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.ReflectionFactory.config [0x00007fae5d4a7310] (c1)
[0,643s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToVirtual [0x00007fae7c8ffb90] ()
[0,643s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.setInputFrameFromDescriptor [0x00007fae5d4a7610] (c1)
[0,644s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectIntBufferU.ix [0x00007fae7c8ffe90] (c2)
[0,644s][debug][gc,nmethod   ] Register NMethod: org.gradle.internal.io.StreamByteBuffer.access$000 [0x00007fae7c900190] (c1)
[0,644s][debug][gc,nmethod   ] Register NMethod: org.gradle.internal.io.StreamByteBuffer$StreamByteBufferOutputStream.write [0x00007fae5d4a8590] (c1)
[0,644s][debug][gc,nmethod   ] Register NMethod: org.gradle.internal.io.StreamByteBuffer$StreamByteBufferChunk.spaceLeft [0x00007fae5d4a8b90] (c1)
[0,644s][debug][gc,nmethod   ] Register NMethod: org.gradle.internal.io.StreamByteBuffer$StreamByteBufferChunk.write [0x00007fae5d4a8e90] (c1)
[0,644s][debug][gc,nmethod   ] Register NMethod: org.gradle.internal.io.LineBufferingOutputStream.endsWithLineSeparator [0x00007fae5d4a9310] (c1)
[0,644s][debug][gc,nmethod   ] Register NMethod: org.gradle.internal.io.StreamByteBuffer.allocateSpace [0x00007fae5d4a9710] (c1)
[0,645s][debug][gc,nmethod   ] Register NMethod: org.gradle.internal.io.LineBufferingOutputStream.write [0x00007fae5d4aa410] (c1)
[0,645s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getPackageName [0x00007fae7c900490] (c2)
[0,645s][debug][gc,nmethod   ] Register NMethod: java.util.Collections$EmptyIterator.hasNext [0x00007fae7c901490] (c1)
[0,645s][debug][gc,nmethod   ] Register NMethod: java.nio.file.attribute.FileTime.<init> [0x00007fae5d4ab810] (c1)
[0,645s][debug][gc,nmethod   ] Register NMethod: java.nio.file.attribute.FileTime.from [0x00007fae5d4abc10] (c1)
[0,646s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c901790] ()
[0,647s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.release [0x00007fae7c901a90] (c2)
[0,647s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.<init> [0x00007fae5d4ac310] (c1)
[0,647s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.make [0x00007fae5d4ac690] (c1)
[0,647s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.init [0x00007fae5d4acb10] (c1)
[0,647s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.parseFieldTypeSignature [0x00007fae5d4ace90] (c1)
[0,647s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.scope.AbstractScope.<init> [0x00007fae5d4ad210] (c1)
[0,647s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.parser.SignatureParser.parseFieldTypeSignature [0x00007fae5d4ad610] (c1)
[0,647s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.factory.CoreReflectionFactory.make [0x00007fae5d4adf90] (c1)
[0,647s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.factory.CoreReflectionFactory.<init> [0x00007fae5d4ae490] (c1)
[0,647s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Method.getSharedExceptionTypes [0x00007fae7c902210] (c1)
[0,647s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.visitor.Reifier.<init> [0x00007fae5d4ae890] (c1)
[0,648s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Handler.<init> [0x00007fae5d4aec90] (c1)
[0,648s][debug][gc,nmethod   ] Register NMethod: sun.reflect.annotation.AnnotationType.memberTypes [0x00007fae7c902510] (c1)
[0,648s][debug][gc,nmethod   ] Register NMethod: sun.reflect.generics.visitor.Reifier.make [0x00007fae5d4af110] (c1)
[0,648s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitTryCatchBlock [0x00007fae5d4af610] (c1)
[0,648s][debug][gc,nmethod   ] Register NMethod: sun.reflect.annotation.AnnotationType.memberDefaults [0x00007fae7c902810] (c1)
[0,648s][debug][gc,nmethod   ] Register NMethod: sun.reflect.annotation.AnnotationType.retention [0x00007fae7c902b10] (c1)
[0,648s][debug][gc,nmethod   ] Register NMethod: java.lang.System$2.getAnnotationType [0x00007fae5d4b0090] (c1)
[0,648s][debug][gc,nmethod   ] Register NMethod: java.lang.Class$ReflectionData.<init> [0x00007fae5d4b0490] (c1)
[0,648s][debug][gc,nmethod   ] Register NMethod: java.lang.Class$Atomic.casReflectionData [0x00007fae5d4b0810] (c1)
[0,648s][debug][gc,nmethod   ] Register NMethod: sun.reflect.annotation.AnnotationType.getInstance [0x00007fae5d4b0c10] (c1)
[0,651s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c902e10] ()
[0,652s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c903110] ()
[0,652s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.normalizeNames [0x00007fae5d4b1710] (c1)
[0,653s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference [0x00007fae7c903410] (c2)
[0,656s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Cleaner$1.apply [0x00007fae7c904a10] (c2)
[0,656s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BoundMethodHandle.tooComplex [0x00007fae5d4b3310] (c1)
[0,656s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BoundMethodHandle.rebind [0x00007fae5d4b3c10] (c1)
[0,657s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.expressionCount [0x00007fae5d4b4690] (c1)
[0,657s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BoundMethodHandle.fieldCount [0x00007fae5d4b4a10] (c1)
[0,658s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.methodType [0x00007fae5d4b5090] (c1)
[0,658s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DelegatingMethodHandle.chooseDelegatingForm [0x00007fae5d4b5810] (c1)
[0,658s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DelegatingMethodHandle.<init> [0x00007fae5d4b5e10] (c1)
[0,660s][debug][gc,nmethod   ] Register NMethod: java.util.regex.Pattern$Node.<init> [0x00007fae5d4b6510] (c1)
[0,660s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.pool.ClassAliasPool$CAPKey.charAt [0x00007fae5d4b6910] (c1)
[0,660s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.pool.ClassAliasPool$CAPKey.length [0x00007fae5d4b6d90] (c1)
[0,661s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle.<init> [0x00007fae5d4b7210] (c1)
[0,661s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c904d90] ()
[0,663s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c905090] ()
[0,663s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c905390] ()
[0,663s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c905910] ()
[0,664s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c905c10] ()
[0,664s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c905f10] ()
[0,664s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c906490] ()
[0,664s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.Wrapper.isDoubleWord [0x00007fae5d4b7c10] (c1)
[0,664s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c906790] ()
[0,664s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c906d10] ()
[0,664s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c907010] ()
[0,664s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c907590] ()
[0,664s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c907890] ()
[0,664s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c907b90] ()
[0,664s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.fill [0x00007fae5d4b7f90] (c1)
[0,665s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c908110] ()
[0,665s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c908410] ()
[0,665s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c908710] ()
[0,665s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.intrinsicName [0x00007fae5d4b8610] (c1)
[0,665s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.emitStoreInsn [0x00007fae5d4b8910] (c1)
[0,665s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c908c90] ()
[0,665s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c909210] ()
[0,665s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.execute [0x00007fae7c909510] (c2)
[0,665s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaFormBuffer.changeName [0x00007fae5d4b8f10] (c1)
[0,665s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.UnixPath.toUnixPath [0x00007fae5d4b9910] (c1)
[0,668s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.putVal [0x00007fae7c90e690] (c2)
[0,669s][debug][gc,nmethod   ] Register NMethod: java.lang.Package$VersionInfo.getInstance [0x00007fae5d4ba090] (c1)
[0,669s][debug][gc,nmethod   ] Register NMethod: java.lang.Package.<init> [0x00007fae5d4ba710] (c1)
[0,676s][debug][gc,nmethod   ] Register NMethod: java.util.WeakHashMap.hash [0x00007fae7c910910] (c2)
[0,678s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.SimpleMethodHandle.make [0x00007fae5d4bb010] (c1)
[0,678s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.SimpleMethodHandle.<init> [0x00007fae5d4bb490] (c1)
[0,678s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.<init> [0x00007fae5d4bb910] (c1)
[0,679s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c910c90] ()
[0,680s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitEnd [0x00007fae7c910f90] (c2)
[0,680s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c911290] ()
[0,680s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c911590] ()
[0,680s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c911b10] ()
[0,681s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addConstant [0x00007fae5d4bbd90] (c1)
[0,684s][debug][gc,nmethod   ] Register NMethod: java.io.FileDescriptor.close0 [0x00007fae7c911e10] ()
[0,684s][debug][gc,nmethod   ] Register NMethod: java.io.FileDescriptor.unregisterCleanup [0x00007fae5d4bff10] (c1)
[0,684s][debug][gc,nmethod   ] Register NMethod: java.io.FileDescriptor.close [0x00007fae5d4c0510] (c1)
[0,685s][debug][gc,nmethod   ] Register NMethod: java.io.FileInputStream.open0 [0x00007fae7c912190] ()
[0,685s][debug][gc,nmethod   ] Register NMethod: java.io.FileInputStream.open [0x00007fae5d4c0d10] (c1)
[0,685s][debug][gc,nmethod   ] Register NMethod: jdk.internal.ref.PhantomCleanable.clear [0x00007fae5d4c1210] (c1)
[0,685s][debug][gc,nmethod   ] Register NMethod: java.io.FileInputStream.<init> [0x00007fae5d4c1690] (c1)
[0,685s][debug][gc,nmethod   ] Register NMethod: java.io.FileInputStream$1.<init> [0x00007fae5d4c2590] (c1)
[0,685s][debug][gc,nmethod   ] Register NMethod: java.io.FileInputStream.close [0x00007fae5d4c2990] (c1)
[0,686s][debug][gc,nmethod   ] Register NMethod: java.io.FileInputStream$1.close [0x00007fae5d4c3390] (c1)
[0,686s][debug][gc,nmethod   ] Register NMethod: java.io.FileDescriptor.closeAll [0x00007fae5d4c3d90] (c1)
[0,686s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.desiredAssertionStatus0 [0x00007fae7c912510] ()
[0,687s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.desiredAssertionStatus [0x00007fae5d4c5510] (c1)
[0,688s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractOwnableSynchronizer.<init> [0x00007fae5d4c5f90] (c1)
[0,688s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.<init> [0x00007fae5d4c6310] (c1)
[0,688s][debug][gc,nmethod   ] Register NMethod: java.io.UnixFileSystem.getLength0 [0x00007fae7c912910] ()
[0,688s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$FileLoader$1.getCodeSourceURL [0x00007fae5d4c6790] (c1)
[0,688s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$FileLoader$1.getInputStream [0x00007fae5d4c6b90] (c1)
[0,688s][debug][gc,nmethod   ] Register NMethod: java.io.UnixFileSystem.getLength [0x00007fae5d4c7010] (c1)
[0,688s][debug][gc,nmethod   ] Register NMethod: java.io.File.length [0x00007fae5d4c7510] (c1)
[0,688s][debug][gc,nmethod   ] Register NMethod: jdk.internal.loader.URLClassPath$FileLoader$1.getContentLength [0x00007fae5d4c7b10] (c1)
[0,688s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.Invokers$Holder.linkToTargetMethod [0x00007fae5d4c8190] (c1)
[0,688s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial [0x00007fae5d4c8890] (c1)
[0,689s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.identityForm [0x00007fae5d4c9490] (c1)
[0,689s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DelegatingMethodHandle.rebind [0x00007fae5d4c9a10] (c1)
[0,689s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle.<init> [0x00007fae5d4c9f10] (c1)
[0,689s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl.makeIntrinsic [0x00007fae5d4ca990] (c1)
[0,689s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BoundMethodHandle.bindSingle [0x00007fae5d4cb510] (c1)
[0,689s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles.makeIdentity [0x00007fae5d4cb890] (c1)
[0,690s][debug][gc,nmethod   ] Register NMethod: java.lang.Thread.onSpinWait [0x00007fae5d4cc990] (c1)
[0,690s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$ArrayListSpliterator.estimateSize [0x00007fae5d4ccc90] (c1)
[0,696s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.putVal [0x00007fae5d4cd110] (c1)
[0,696s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writePosition [0x00007fae7c912d10] (c1)
[0,697s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.put [0x00007fae5d4cec10] (c1)
[0,697s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.SimpleMethodHandle.speciesData [0x00007fae5d4cf210] (c1)
[0,697s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.SimpleMethodHandle.copyWithExtendL [0x00007fae5d4cf510] (c1)
[0,697s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.rotateRight [0x00007fae5d4cf910] (c1)
[0,701s][debug][gc,nmethod   ] Register NMethod: java.lang.System.checkKey [0x00007fae5d4cfc10] (c1)
[0,705s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.fullFence [0x00007fae7c913010] ()
[0,705s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.AbstractBytesStore.start [0x00007fae7c913390] (c1)
[0,706s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c913690] ()
[0,707s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MemberName.getFactory [0x00007fae5d4d0390] (c1)
[0,707s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.setClassWriter [0x00007fae7c913c10] (c1)
[0,707s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.getClassData [0x00007fae7c913f10] (c1)
[0,707s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c914210] ()
[0,708s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable [0x00007fae5d4d0690] (c1)
[0,708s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c914510] ()
[0,709s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c914810] ()
[0,709s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.valueOf [0x00007fae5d4d1810] (c1)
[0,709s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c914b10] ()
[0,709s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c915090] ()
[0,709s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.searchMethods [0x00007fae5d4d1e90] (c1)
[0,710s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.getConcreteOutputType [0x00007fae5d4d3310] (c1)
[0,711s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.ensureClassInitialized0 [0x00007fae7c915390] ()
[0,712s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c915710] ()
[0,712s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c915c90] ()
[0,712s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c916210] ()
[0,713s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.execute [0x00007fae5d4d3a90] (c1)
[0,713s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.putAbstractType [0x00007fae5d4dd190] (c1)
[0,713s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c916510] ()
[0,713s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c916a90] ()
[0,713s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.copyOfRange [0x00007fae5d4dfa90] (c1)
[0,713s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.<init> [0x00007fae5d4e0e90] (c1)
[0,714s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.create [0x00007fae5d4e1390] (c1)
[0,714s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.fixResult [0x00007fae5d4e1f10] (c1)
[0,714s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCode [0x00007fae5d4e2490] (c1)
[0,714s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c916d90] ()
[0,714s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c917310] ()
[0,714s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c917610] ()
[0,714s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c917b90] ()
[0,714s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.lookupPregenerated [0x00007fae5d4e2a90] (c1)
[0,715s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.putShort [0x00007fae5d4e4c90] (c1)
[0,715s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BoundMethodHandle.editor [0x00007fae5d4e5210] (c1)
[0,716s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.uncheckedWritePosition [0x00007fae7c917e90] (c1)
[0,716s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putByte [0x00007fae7c918190] ()
[0,716s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putLong [0x00007fae7c918510] ()
[0,717s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.safeLimit [0x00007fae7c918890] (c1)
[0,717s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putInt [0x00007fae7c918b90] ()
[0,717s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c918f10] ()
[0,717s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_LII_V [0x00007fae5d4e5910] (c1)
[0,718s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.translate [0x00007fae5d4e9490] (c1)
[0,718s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putByte [0x00007fae5d4e9790] (c1)
[0,718s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.getLong [0x00007fae5d4e9b10] (c1)
[0,718s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.addExact [0x00007fae5d4e9e10] (c1)
[0,719s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.VM.isJavaLangInvokeInited [0x00007fae5d4ea290] (c1)
[0,720s][debug][gc,nmethod   ] Register NMethod: java.lang.Throwable.<init> [0x00007fae5d4ea590] (c1)
[0,721s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeOffsetPositionMoved [0x00007fae5d4eab90] (c1)
[0,721s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.putLong [0x00007fae5d4eaf90] (c1)
[0,721s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeLong [0x00007fae5d4eb290] (c1)
[0,721s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeOffsetPositionMoved [0x00007fae5d4eb710] (c1)
[0,722s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7c919490] ()
[0,722s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c919790] ()
[0,722s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c919a90] ()
[0,722s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c91a010] ()
[0,723s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.ensureClassInitialized [0x00007fae5d4ec590] (c1)
[0,724s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.weakCompareAndSetInt [0x00007fae5d4eca90] (c1)
[0,724s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c91a310] ()
[0,724s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c91a610] ()
[0,724s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c91a910] ()
[0,724s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c91ae90] ()
[0,725s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c91b190] ()
[0,725s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c91b490] ()
[0,725s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c91b790] ()
[0,725s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7c91bd10] ()
[0,726s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle.set [0x00007fae5d4ece10] (c1)
[0,726s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putIntUnaligned [0x00007fae5d4ed590] (c1)
[0,726s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.checkSize [0x00007fae5d4eda90] (c1)
[0,726s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putIntUnaligned [0x00007fae5d4edf90] (c1)
[0,729s][debug][gc,nmethod   ] Register NMethod: java.net.URLStreamHandler.parseURL [0x00007fae7c91c010] (c2)
[0,730s][debug][gc,nmethod   ] Register NMethod: java.lang.Object.<init> [0x00007fae7c922410] (c2)
[0,730s][debug][gc,nmethod   ] Register NMethod: java.lang.Thread.onSpinWait [0x00007fae7c922710] (c2)
[0,730s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.rotateRight [0x00007fae7c922a10] (c2)
[0,730s][debug][gc,nmethod   ] Register NMethod: sun.net.www.protocol.file.Handler.parseURL [0x00007fae7c922d10] (c2)
[0,739s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getIntVolatile [0x00007fae7c923010] ()
[0,740s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteOrder.nativeOrder [0x00007fae5d4ee590] (c1)
[0,743s][debug][gc,nmethod   ] Register NMethod: sun.nio.fs.UnixPath.getFileSystem [0x00007fae5d4ee890] (c1)
[0,744s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.util.ObjectUtils.requireNonNull [0x00007fae5d4eec10] (c1)
[0,744s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodTypeForm.canonicalize [0x00007fae7c923410] (c2)
[0,745s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.checkOffset [0x00007fae5d4eef90] (c1)
[0,745s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.util.Longs.requireNonNegative [0x00007fae5d4ef490] (c1)
[0,746s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readLimit [0x00007fae5d4efc90] (c1)
[0,747s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.copyMemory0 [0x00007fae7c923790] ()
[0,747s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.start [0x00007fae5d4f0090] (c1)
[0,747s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.toIntExact [0x00007fae5d4f0510] (c1)
[0,747s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readPosition [0x00007fae7c923b90] (c1)
[0,747s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.copyMemoryChecks [0x00007fae5d4f0990] (c1)
[0,748s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readCheckOffset [0x00007fae5d4f2010] (c1)
[0,748s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.copyMemory [0x00007fae5d4f2410] (c1)
[0,748s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.toArray [0x00007fae5d4f3b10] (c1)
[0,748s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.getByte [0x00007fae5d4f4010] (c1)
[0,748s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readOffsetPositionMoved [0x00007fae5d4f4390] (c1)
[0,748s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.capacity [0x00007fae7c923e90] (c1)
[0,748s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readCheckOffset0 [0x00007fae5d4f4e10] (c1)
[0,748s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.array [0x00007fae5d4f5890] (c1)
[0,748s][debug][gc,nmethod   ] Register NMethod: org.magicwerk.brownies.collections.GapList.size [0x00007fae7c924190] (c1)
[0,749s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.limit [0x00007fae5d4f5e90] (c1)
[0,750s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.methodType [0x00007fae7c924490] (c2)
[0,750s][debug][gc,nmethod   ] Register NMethod: java.io.ByteArrayInputStream.read [0x00007fae5d4f6210] (c1)
[0,750s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.readByte [0x00007fae5d4f6c10] (c1)
[0,750s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.wordIndex [0x00007fae5d4f7090] (c1)
[0,751s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.readByte [0x00007fae5d4f7390] (c1)
[0,752s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapByteBuffer.ix [0x00007fae5d4f8010] (c1)
[0,756s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.position [0x00007fae5d4f8310] (c1)
[0,756s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.checkInvariants [0x00007fae5d4f8710] (c1)
[0,756s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readByte [0x00007fae5d4f8a90] (c1)
[0,758s][debug][gc,nmethod   ] Register NMethod: java.lang.ThreadLocal.get [0x00007fae5d4f9110] (c1)
[0,758s][debug][gc,nmethod   ] Register NMethod: net.jpountz.util.SafeUtils.checkRange [0x00007fae5d4f9790] (c1)
[0,758s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.makeImpl [0x00007fae7c92d290] (c2)
[0,759s][debug][gc,nmethod   ] Register NMethod: io.sirix.settings.Fixed.getStandardProperty [0x00007fae7c936890] (c1)
[0,760s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.setPage [0x00007fae7c936b90] (c1)
[0,760s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.refCount [0x00007fae7c936e90] (c1)
[0,760s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.assertNotClosed [0x00007fae5d4f9c90] (c1)
[0,760s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NodeDelegate.getNodeKey [0x00007fae7c937190] (c1)
[0,760s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.delegate [0x00007fae7c937490] (c1)
[0,760s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.RevisionRootPage.getRevision [0x00007fae7c937790] (c1)
[0,761s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.AbstractForwardingNode.getNodeDelegate [0x00007fae5d4fa190] (c1)
[0,761s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.AbstractForwardingNode.getNodeKey [0x00007fae5d4fa590] (c1)
[0,761s][debug][gc,nmethod   ] Register NMethod: io.sirix.api.PageReadOnlyTrx.recordPageOffset [0x00007fae5d4faa10] (c1)
[0,761s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NodeDelegate.getParentKey [0x00007fae7c937a90] (c1)
[0,761s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.assertNotClosed [0x00007fae5d4fad10] (c1)
[0,761s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeByte [0x00007fae5d4fb210] (c1)
[0,761s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getCurrentNode [0x00007fae7c937d90] (c1)
[0,761s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeByte [0x00007fae5d4fb790] (c1)
[0,761s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.PageContainer.getModified [0x00007fae7c938090] (c1)
[0,761s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.Access.i64 [0x00007fae5d4fbb90] (c1)
[0,761s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.UnsafeAccess.getLong [0x00007fae5d4fbf90] (c1)
[0,761s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectKeyNode.delegate [0x00007fae5d4fc410] (c1)
[0,761s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.BytesStore.safeLimit [0x00007fae5d4fc990] (c1)
[0,762s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.pageKey [0x00007fae5d4fcd90] (c1)
[0,762s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getMostRecentPageContainer [0x00007fae5d4fd590] (c1)
[0,762s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.ClassSpecializer$SpeciesData.factory [0x00007fae5d4fe090] (c1)
[0,762s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DelegatingMethodHandle.whichKind [0x00007fae5d4fe610] (c1)
[0,762s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$SubList.size [0x00007fae7c938390] (c1)
[0,762s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BoundMethodHandle$SpeciesData.extendWith [0x00007fae5d4fea10] (c1)
[0,762s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$Name.<init> [0x00007fae5d4ffa90] (c1)
[0,762s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.delegate [0x00007fae7c938690] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm [0x00007fae5d500a10] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.getRecord [0x00007fae5d503d10] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectKeyNode.structDelegate [0x00007fae7c938990] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.ReferenceCountedTracer.throwExceptionIfReleased [0x00007fae5d504210] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.AbstractForwardingNode.getParentKey [0x00007fae5d504810] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.assertNotClosed [0x00007fae5d504c90] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getValue [0x00007fae5d505190] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.throwExceptionIfReleased [0x00007fae5d506590] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.getDescendantCount [0x00007fae7c938c90] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectNode.structDelegate [0x00007fae7c938f90] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.getPage [0x00007fae7c939290] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectNode.delegate [0x00007fae5d506d10] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.keySet [0x00007fae5d507290] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.putByte [0x00007fae5d507990] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.setCurrentNode [0x00007fae5d507c90] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.rawWriteByte [0x00007fae5d508290] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeByte [0x00007fae5d508690] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeByte [0x00007fae5d508a90] (c1)
[0,763s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.Frame.push [0x00007fae7c939590] (c2)
[0,764s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeByte [0x00007fae5d508f10] (c1)
[0,764s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeLong [0x00007fae5d50a090] (c1)
[0,764s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.appendUtf8Char [0x00007fae5d50a490] (c1)
[0,764s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.readLong [0x00007fae5d50c110] (c1)
[0,764s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeLong [0x00007fae5d50c510] (c1)
[0,764s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.readLong [0x00007fae5d50d690] (c1)
[0,764s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.getLong [0x00007fae7c939b10] (c2)
[0,764s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.structDelegate [0x00007fae7c939e10] (c1)
[0,764s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.expandTo [0x00007fae5d50e310] (c1)
[0,764s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.PageContainer.getModifiedAsUnorderedKeyValuePage [0x00007fae5d50e710] (c1)
[0,764s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.setDescendantCount [0x00007fae7c93a110] (c1)
[0,764s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectKeyNode.getKind [0x00007fae5d50eb90] (c1)
[0,764s][debug][gc,nmethod   ] Register NMethod: com.google.common.base.Preconditions.checkArgument [0x00007fae5d50ef10] (c1)
[0,764s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.filter.AbstractFilter.getTrx [0x00007fae7c93a410] (c1)
[0,764s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.RevisionRootPage.delegate [0x00007fae7c93a710] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.recalculateWordsInUse [0x00007fae5d50f590] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.JsonDocumentRootNode.delegate [0x00007fae7c93aa10] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.nextNonWhitespace [0x00007fae5d50fb10] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectNode.getHash [0x00007fae7c93ad10] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordPage [0x00007fae5d512c90] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectKeyNode.getHash [0x00007fae7c93b010] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.AbstractAxis.getCursor [0x00007fae7c93b310] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: com.google.common.base.Preconditions.checkArgument [0x00007fae5d514b10] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveTo [0x00007fae5d514f90] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.checkItemIfDeleted [0x00007fae5d516810] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.getRightSiblingKey [0x00007fae7c93b610] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordForModification [0x00007fae5d516c90] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: io.sirix.utils.IntToObjectMap.calcBaseHashIndex [0x00007fae5d518690] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getPageContainer [0x00007fae5d518990] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.capacity [0x00007fae7c93b910] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getRecord [0x00007fae5d519e10] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeHashing.getCurrentNode [0x00007fae5d51b390] (c1)
[0,765s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeLong [0x00007fae5d51b890] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.api.PageReadOnlyTrx.recordPageOffset [0x00007fae7c93bc10] (c2)
[0,766s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeLong [0x00007fae5d51bc90] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getStructuralNode [0x00007fae5d51c210] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: com.google.common.base.Preconditions.checkState [0x00007fae5d51c710] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getNodeKey [0x00007fae5d51cb90] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.utils.IntToObjectMap.find [0x00007fae5d51d290] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.AbstractAxis.hasNext [0x00007fae5d51da90] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.nodeReadOnlyTrxDelegate [0x00007fae5d51e510] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getDescendantCount [0x00007fae5d51ea10] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NameNodeDelegate.getLocalNameKey [0x00007fae7c93bf10] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap$KeyIterator.<init> [0x00007fae5d51ee90] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap$KeySet.iterator [0x00007fae5d51f210] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.hasArray [0x00007fae5d51f710] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectKeyNode.setHash [0x00007fae7c93c210] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.utils.IntToObjectMap.get [0x00007fae5d51fb10] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.setDescendantCount [0x00007fae5d520010] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.moveTo [0x00007fae5d520490] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeHashing.setAddDescendants [0x00007fae5d521410] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.hasRightSibling [0x00007fae5d521f10] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectNode.setHash [0x00007fae7c93c510] (c1)
[0,766s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.hasRightSibling [0x00007fae5d522490] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getRightSiblingKey [0x00007fae5d522890] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.AbstractAxis.resetToLastKey [0x00007fae5d522d10] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.ChildAxis.nextKey [0x00007fae5d523390] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.AbstractAxis.tryToComputeNext [0x00007fae5d523e90] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractStringNode.delegate [0x00007fae5d524510] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.HashCommon.mix [0x00007fae5d524a90] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.isNameNode [0x00007fae5d524d90] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.getLocalNameKey [0x00007fae5d525490] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getLocalNameKey [0x00007fae5d525890] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.AbstractAxis.nextLong [0x00007fae5d526210] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.hasRightSibling [0x00007fae5d526d10] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.JsonDocumentRootNode.structDelegate [0x00007fae7c93c810] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: com.google.common.collect.ForwardingObject.<init> [0x00007fae5d527590] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getRightSiblingKey [0x00007fae5d527990] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.filter.PathNameFilter.filter [0x00007fae5d528210] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.multiplyHigh [0x00007fae5d529c90] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.Maths.unsignedLongMulXorFold [0x00007fae5d52a010] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.MathsJDK9.unsignedLongMulXorFoldImp [0x00007fae5d52a390] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.bitCount [0x00007fae5d52a790] (c1)
[0,767s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.XXH3.XXH3_mix16B [0x00007fae5d52ab10] (c1)
[0,768s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getKind [0x00007fae5d52ba10] (c1)
[0,768s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractNumberNode.delegate [0x00007fae5d52c190] (c1)
[0,768s][debug][gc,nmethod   ] Register NMethod: io.brackit.query.atomic.QNm.getLocalName [0x00007fae7c93cb10] (c1)
[0,768s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.AbstractForwardingNode.<init> [0x00007fae5d52c710] (c1)
[0,768s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.JsonDocumentRootNode.getHash [0x00007fae7c93ce10] (c1)
[0,768s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.size [0x00007fae7c93d110] (c1)
[0,768s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.AbstractForwardingPage.getOrCreateReference [0x00007fae5d52cb90] (c1)
[0,768s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.getFirstChildKey [0x00007fae7c93d410] (c1)
[0,768s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.cardinality [0x00007fae5d52d110] (c1)
[0,768s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.set [0x00007fae5d52d690] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: org.magicwerk.brownies.collections.GapList.doGet [0x00007fae5d52e510] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.ensureCapacity [0x00007fae5d52eb90] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: org.magicwerk.brownies.collections.GapList.get [0x00007fae5d52f110] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.get [0x00007fae5d530190] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.clear [0x00007fae5d530f10] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.delegates.BitmapReferencesPage.getOrCreateReference [0x00007fae5d531410] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.delegates.BitmapReferencesPage.index [0x00007fae5d531c10] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.and [0x00007fae5d532690] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.checkRange [0x00007fae5d532f90] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.getLastChildKey [0x00007fae7c93d710] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.flip [0x00007fae5d534b10] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.setFirstChildKey [0x00007fae7c93da10] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl$CountingWrapper.getTarget [0x00007fae7c93dd10] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.nextQuotedValue [0x00007fae5d535710] (c1)
[0,769s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.getLeftSiblingKey [0x00007fae7c93e010] (c1)
[0,770s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.clear [0x00007fae5d537710] (c1)
[0,770s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.underlyingObject [0x00007fae7c93e310] (c1)
[0,770s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectKeyNode.getPathNodeKey [0x00007fae7c93e610] (c1)
[0,770s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.hashCode [0x00007fae5d538010] (c1)
[0,770s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.hashCode [0x00007fae5d538310] (c1)
[0,770s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.AbstractForwardingNode.getNodeKey [0x00007fae7c93e910] (c2)
[0,771s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectKeyNode.getKind [0x00007fae7c93ec90] (c2)
[0,771s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.createRecord [0x00007fae5d538690] (c1)
[0,771s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.peek [0x00007fae5d53af10] (c1)
[0,771s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind.getId [0x00007fae7c93ef90] (c1)
[0,771s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ArrayNode.delegate [0x00007fae5d53b890] (c1)
[0,771s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.RevisionRootPage.getMaxNodeKeyInDocumentIndex [0x00007fae7c93f290] (c1)
[0,771s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ArrayNode.structDelegate [0x00007fae7c93f590] (c1)
[0,771s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4005800.invoke [0x00007fae5d53be10] (c1)
[0,771s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial [0x00007fae5d53c690] (c1)
[0,771s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NodeDelegate.getHashFunction [0x00007fae7c93f890] (c1)
[0,771s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.JsonDocumentRootNode.setHash [0x00007fae7c93fb90] (c1)
[0,771s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.getKind [0x00007fae5d53cf10] (c1)
[0,771s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ArrayNode.getHash [0x00007fae7c93fe90] (c1)
[0,771s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractResourceSession.assertNotClosed [0x00007fae5d53d610] (c1)
[0,772s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getStructuralNode [0x00007fae5d53db10] (c1)
[0,772s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.assertNotClosed [0x00007fae7c940190] (c2)
[0,772s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ArrayNode.getKind [0x00007fae5d53e310] (c1)
[0,772s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.setRecord [0x00007fae5d53e690] (c1)
[0,772s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectNode.getKind [0x00007fae5d53f010] (c1)
[0,772s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractResourceSession.getResourceConfig [0x00007fae5d53f390] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.immutable.json.AbstractImmutableJsonStructuralNode.<init> [0x00007fae5d53f990] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveToParent [0x00007fae5d53fd90] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.<init> [0x00007fae5d540610] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.<init> [0x00007fae5d540b10] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.setFirstChildKey [0x00007fae5d541210] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractStringNode.structDelegate [0x00007fae7c940490] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ArrayNode.setHash [0x00007fae7c940790] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getActualRevisionRootPage [0x00007fae5d541690] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.delegate [0x00007fae7c940a90] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae5d541d10] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.incrementChildCount [0x00007fae5d542310] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.incrementChildCount [0x00007fae5d542690] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeReadOnlyTrxImpl.getNode [0x00007fae5d542b90] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.hasLeftSibling [0x00007fae5d545890] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NodeDelegate.<init> [0x00007fae5d545e10] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.hasLeftSibling [0x00007fae5d546490] (c1)
[0,773s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.assertNotClosed [0x00007fae7c940d90] (c2)
[0,774s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.AbstractLongList.push [0x00007fae5d546890] (c1)
[0,774s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.add [0x00007fae5d546c90] (c1)
[0,774s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectNumberNode.getKind [0x00007fae5d547310] (c1)
[0,774s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.grow [0x00007fae5d547690] (c1)
[0,774s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.isEmpty [0x00007fae5d548010] (c1)
[0,774s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.AbstractLongList.popLong [0x00007fae5d548390] (c1)
[0,774s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectKeyNode.delegate [0x00007fae7c941090] (c2)
[0,774s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeHashing.isBulkInsert [0x00007fae7c941410] (c1)
[0,774s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.rewind [0x00007fae5d548a10] (c1)
[0,774s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.rewind [0x00007fae5d548d90] (c1)
[0,774s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.removeLong [0x00007fae5d549110] (c1)
[0,775s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.pageKey [0x00007fae7c941710] (c2)
[0,775s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.RevisionRootPage.incrementAndGetMaxNodeKeyInDocumentIndex [0x00007fae5d54a390] (c1)
[0,775s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.AbstractLongList.peekLong [0x00007fae5d54a710] (c1)
[0,775s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.getLong [0x00007fae5d54ab10] (c1)
[0,775s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.AbstractForwardingNode.getParentKey [0x00007fae7c941b10] (c2)
[0,775s][debug][gc,nmethod   ] Register NMethod: java.lang.Character.digit [0x00007fae5d54b990] (c1)
[0,775s][debug][gc,nmethod   ] Register NMethod: java.lang.Character.digit [0x00007fae5d54be10] (c1)
[0,775s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterDataLatin1.digit [0x00007fae5d54c310] (c1)
[0,775s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getValue [0x00007fae7c941e90] (c2)
[0,775s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.filter.AbstractFilter.<init> [0x00007fae5d54c810] (c1)
[0,775s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.AbstractAxis.reset [0x00007fae5d54cf10] (c1)
[0,775s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.filter.AbstractFilter.getTrx [0x00007fae5d54d290] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.AbstractAxis.<init> [0x00007fae5d54d610] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.getNodeKey [0x00007fae5d54e010] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: io.brackit.query.atomic.QNm.<init> [0x00007fae5d54e710] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.moveTo [0x00007fae5d54ed90] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.putMapping [0x00007fae5d54f490] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.BytesStore.safeLimit [0x00007fae7c942390] (c2)
[0,776s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeHashing.rollingAdd [0x00007fae5d54f910] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.addExact [0x00007fae5d553210] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.doPeek [0x00007fae5d553690] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: io.sirix.utils.IntToObjectMap.put [0x00007fae5d55d810] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeOffsetPositionMoved [0x00007fae7c942690] (c2)
[0,776s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.getName [0x00007fae7c942d10] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: io.brackit.query.atomic.QNm.getPrefix [0x00007fae7c943010] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2LongOpenHashMap.put [0x00007fae5d55e090] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.getLevel [0x00007fae7c943310] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractIndexController.notifyChange [0x00007fae5d55e690] (c1)
[0,776s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.multiplyHigh [0x00007fae7c943610] (c2)
[0,776s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.valueOf [0x00007fae5d55f290] (c1)
[0,777s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectStringNode.getKind [0x00007fae5d55f990] (c1)
[0,777s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.moveToParentObjectKeyArrayOrDocumentRoot [0x00007fae5d55fd10] (c1)
[0,777s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getFirstChildKey [0x00007fae5d561890] (c1)
[0,777s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getMostRecentPageContainer [0x00007fae7c943910] (c2)
[0,777s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.setRightSiblingKey [0x00007fae7c944290] (c1)
[0,777s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectNode.delegate [0x00007fae7c944590] (c2)
[0,778s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ArrayNode.getPathNodeKey [0x00007fae7c944910] (c1)
[0,778s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.RevisionRootPage.getNamePageReference [0x00007fae5d561d10] (c1)
[0,778s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeInt [0x00007fae5d562310] (c1)
[0,778s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeInt [0x00007fae5d562710] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: io.sirix.utils.NamePageHash.generateHashForString [0x00007fae5d562c90] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2LongOpenHashMap.get [0x00007fae5d563010] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.underlyingObject [0x00007fae5d563a90] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.UnsafeAccess.byteOrder [0x00007fae5d563f10] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.Access.byteOrder [0x00007fae5d564310] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.storeDeweyIDs [0x00007fae5d564890] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.storeDeweyIDs [0x00007fae5d564f90] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.setLastChildKey [0x00007fae5d565790] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.adaptForInsert [0x00007fae5d565e90] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NodeDelegate.getKind [0x00007fae5d567a90] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.setLastChildKey [0x00007fae5d567e10] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeHashing.adaptHashesWithAdd [0x00007fae5d568310] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.LongHashFunction.hashBytes [0x00007fae5d568990] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.LongHashFunction.unsafeHash [0x00007fae5d568e90] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.XXH3.access$100 [0x00007fae5d569310] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.XXH3.access$500 [0x00007fae5d569610] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.XXH3.XXH3_avalanche [0x00007fae5d569990] (c1)
[0,779s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.XXH3$AsLongHashFunction.hash [0x00007fae5d569d10] (c1)
[0,780s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.LongHashFunction.hashByteBuffer [0x00007fae5d56a590] (c1)
[0,780s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getNodeKey [0x00007fae5d56b890] (c1)
[0,780s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.throwExceptionIfReleased [0x00007fae7c944c10] (c2)
[0,780s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeHashing.isValueNode [0x00007fae5d56c010] (c1)
[0,780s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getPathNode [0x00007fae5d56d190] (c1)
[0,780s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractNumberNode.structDelegate [0x00007fae7c944f90] (c1)
[0,780s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getFirstChildKey [0x00007fae5d56da10] (c1)
[0,780s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeTrxImpl.assertRunning [0x00007fae5d56e290] (c1)
[0,780s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl.profileBoolean [0x00007fae5d56ea90] (c1)
[0,780s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeTrxImpl.intermediateCommitIfRequired [0x00007fae5d56f310] (c1)
[0,780s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeTrxImpl.checkAccessAndCommit [0x00007fae5d56fc90] (c1)
[0,780s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordPage [0x00007fae7c945290] (c2)
[0,781s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AppendableUtil.findUtf8Length [0x00007fae5d570a10] (c1)
[0,781s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NameNodeDelegate.getPrefixKey [0x00007fae7c945e90] (c1)
[0,781s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.appendUtf8 [0x00007fae5d571190] (c1)
[0,781s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.getPathKind [0x00007fae7c946190] (c1)
[0,781s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.putInt [0x00007fae5d571b10] (c1)
[0,781s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.objectvalue.StringValue.getValue [0x00007fae7c946490] (c1)
[0,781s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.adaptNodesAndHashesForInsertAsChild [0x00007fae5d571e10] (c1)
[0,781s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeInt [0x00007fae5d573090] (c1)
[0,781s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeInt [0x00007fae5d573490] (c1)
[0,781s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.nextName [0x00007fae5d573910] (c1)
[0,782s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeInt [0x00007fae5d574d10] (c1)
[0,782s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.loadPage [0x00007fae5d575e90] (c1)
[0,782s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getPage [0x00007fae5d577390] (c1)
[0,782s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.getChildCount [0x00007fae7c946790] (c1)
[0,782s][debug][gc,nmethod   ] Register NMethod: java.lang.String.encode [0x00007fae5d577810] (c1)
[0,782s][debug][gc,nmethod   ] Register NMethod: java.lang.String.getBytes [0x00007fae5d577e90] (c1)
[0,782s][debug][gc,nmethod   ] Register NMethod: java.lang.String.encodeUTF8 [0x00007fae5d578490] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.XXH3.XXH3_64bits_internal [0x00007fae5d579090] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.hasFirstChild [0x00007fae5d58ab90] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.hasFirstChild [0x00007fae5d58af90] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.getParentKind [0x00007fae5d58b510] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.ChildAxis.<init> [0x00007fae5d58bc10] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getParentKind [0x00007fae5d58bf90] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.ChildAxis.reset [0x00007fae5d58d390] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.getPathNodeKey [0x00007fae5d58d790] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.Utils.buildName [0x00007fae5d58e810] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap.find [0x00007fae5d58f510] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.keyForName [0x00007fae5d58fd90] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.internal.Bootstrap.isJava9Plus [0x00007fae5d590410] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.filter.PathNameFilter.<init> [0x00007fae5d590710] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.filter.PathKindFilter.<init> [0x00007fae5d591a10] (c1)
[0,783s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryWriter.getPathNodeKey [0x00007fae5d592410] (c1)
[0,784s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap.put [0x00007fae5d595a10] (c1)
[0,784s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getNamePage [0x00007fae5d596010] (c1)
[0,784s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processName [0x00007fae5d596b90] (c1)
[0,784s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.refCount [0x00007fae5d597010] (c1)
[0,784s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.immutable.json.ImmutableArrayNode.getPathNodeKey [0x00007fae5d597490] (c1)
[0,784s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.nextString [0x00007fae5d597890] (c1)
[0,784s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getLeftSiblingKey [0x00007fae5d598e90] (c1)
[0,784s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.setRightSiblingKey [0x00007fae5d599310] (c1)
[0,784s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.isObjectKey [0x00007fae5d599790] (c1)
[0,784s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.getNode [0x00007fae5d599e90] (c1)
[0,784s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeReadOnlyTrxImpl.isObjectKey [0x00007fae5d59a590] (c1)
[0,784s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractDeweyIDManager.newRightSiblingID [0x00007fae5d59ae10] (c1)
[0,784s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.getPathNodeKey [0x00007fae5d59d310] (c1)
[0,785s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertAsSibling [0x00007fae5d59dc10] (c1)
[0,785s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.adaptTrxPosAndStack [0x00007fae5d5a0e10] (c1)
[0,785s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectNode.getKind [0x00007fae7c946a90] (c2)
[0,785s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ArrayNode.getKind [0x00007fae7c946d90] (c2)
[0,785s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.MethodHandleFieldAccessorImpl.isStatic [0x00007fae5d5a2190] (c1)
[0,785s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.setCurrentNode [0x00007fae7c947090] (c2)
[0,786s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getReference [0x00007fae7c947410] ()
[0,786s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Field.getOverrideFieldAccessor [0x00007fae5d5a2510] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getRecord [0x00007fae7c947b90] (c2)
[0,786s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.getPrefixKey [0x00007fae5d5a2990] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeStopBit [0x00007fae5d5a2d90] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getPathKind [0x00007fae5d5a3990] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.writeStopBit [0x00007fae5d5a4290] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.filter.PathKindFilter.filter [0x00007fae5d5a4610] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveTo [0x00007fae7c949290] (c2)
[0,786s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.Jvm.isJava9Plus [0x00007fae5d5a5190] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap.get [0x00007fae5d5a5510] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.immutable.json.ImmutableArrayNode.getKind [0x00007fae5d5a5f90] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getDescendantCount [0x00007fae7c94ab10] (c2)
[0,786s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.HashCountEntryNode.incrementValue [0x00007fae5d5a6310] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.getMemory [0x00007fae5d5a6690] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.fieldOffset [0x00007fae5d5a6990] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.writeUtf8 [0x00007fae5d5a6e10] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.checkBase [0x00007fae5d5a7190] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.ensureJava9Plus [0x00007fae5d5a7690] (c1)
[0,786s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.getObject [0x00007fae5d5a7a10] (c1)
[0,787s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.getStringCoder [0x00007fae5d5a7e10] (c1)
[0,787s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.extractBytes [0x00007fae5d5a8190] (c1)
[0,787s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractStringNode.delegate [0x00007fae7c94ae90] (c2)
[0,787s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.getObject [0x00007fae5d5a8b90] (c1)
[0,787s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.getStringCoderForStringOrStringBuilder [0x00007fae5d5a9190] (c1)
[0,787s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeHashing.setAddDescendants [0x00007fae7c94b210] (c2)
[0,787s][debug][gc,nmethod   ] Register NMethod: java.lang.reflect.Field.getByte [0x00007fae5d5aa410] (c1)
[0,787s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.objectvalue.StringValue.<init> [0x00007fae5d5aae10] (c1)
[0,787s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.setDescendantCount [0x00007fae7c94b710] (c2)
[0,787s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.objectvalue.StringValue.getKind [0x00007fae5d5ab410] (c1)
[0,787s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeUtf8 [0x00007fae5d5ab790] (c1)
[0,787s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.objectvalue.StringValue.getValue [0x00007fae5d5ad210] (c1)
[0,787s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectStringNode.<init> [0x00007fae5d5ad590] (c1)
[0,787s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.moveToParent [0x00007fae5d5adc10] (c1)
[0,787s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonObjectStringNode [0x00007fae5d5ae310] (c1)
[0,787s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getPageContainer [0x00007fae7c94ba90] (c2)
[0,788s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.filter.FilterAxis.nextKey [0x00007fae5d5af910] (c1)
[0,788s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryWriter.movePathSummary [0x00007fae5d5b0a90] (c1)
[0,788s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeLong [0x00007fae7c94c610] (c2)
[0,788s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.filter.FilterAxis.reset [0x00007fae5d5b2710] (c1)
[0,788s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordForModification [0x00007fae7c94c910] (c2)
[0,788s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeByte [0x00007fae7c94e110] (c2)
[0,788s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.filter.FilterAxis.<init> [0x00007fae5d5b2c90] (c1)
[0,788s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsFirstChild [0x00007fae5d5b5190] (c1)
[0,788s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertObjectRecordAsRightSibling [0x00007fae5d5ba890] (c1)
[0,788s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap.get [0x00007fae5d5beb10] (c1)
[0,789s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.hasFirstChild [0x00007fae5d5bf790] (c1)
[0,789s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getLevel [0x00007fae5d5c0010] (c1)
[0,789s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeByte [0x00007fae7c94e410] (c2)
[0,789s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.AbstractForwardingPageReadOnlyTrx.getNamePage [0x00007fae5d5c1310] (c1)
[0,789s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.createNameKey [0x00007fae5d5c1f90] (c1)
[0,789s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.getObjectRecordValue [0x00007fae5d5c3410] (c1)
[0,789s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectStringNode.getKind [0x00007fae7c94e990] (c2)
[0,789s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.NamePage.setName [0x00007fae5d5c4e90] (c1)
[0,789s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeByte [0x00007fae7c94ec90] (c2)
[0,789s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeByte [0x00007fae7c94f810] (c2)
[0,789s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectKeyNode.<init> [0x00007fae5d5c6010] (c1)
[0,789s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.AbstractForwardingNode.getNodeDelegate [0x00007fae7c950390] (c2)
[0,790s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.getParentKey [0x00007fae5d5c6d90] (c1)
[0,790s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeByte [0x00007fae7c950690] (c2)
[0,790s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectKeyNode.computeHash [0x00007fae5d5c7490] (c1)
[0,790s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb427a800.invoke [0x00007fae5d5c9e10] (c1)
[0,790s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getParentKey [0x00007fae5d5ca690] (c1)
[0,790s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ArrayNode.delegate [0x00007fae7c950c10] (c2)
[0,790s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.name.Names.setName [0x00007fae5d5cae10] (c1)
[0,790s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordPage [0x00007fae5d5cd710] (c1)
[0,790s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeLong [0x00007fae7c950f90] (c2)
[0,790s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeLong [0x00007fae7c951510] (c2)
[0,790s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveTo [0x00007fae5d5cf290] (c1)
[0,790s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.assertNotClosed [0x00007fae7c951a90] (c2)
[0,790s][debug][gc,nmethod   ] Register NMethod: com.google.common.base.Preconditions.checkArgument [0x00007fae7c951d90] (c2)
[0,791s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getRecord [0x00007fae5d5d0b10] (c1)
[0,791s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordForModification [0x00007fae5d5d2090] (c1)
[0,791s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.checkItemIfDeleted [0x00007fae7c952090] (c2)
[0,791s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.addObjectRecord [0x00007fae5d5d3a90] (c1)
[0,791s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getMostRecentPageContainer [0x00007fae5d5d9710] (c1)
[0,791s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getPageContainer [0x00007fae5d5da210] (c1)
[0,791s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.hashCode [0x00007fae5d5db310] (c1)
[0,791s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.IndexType.getID [0x00007fae7c952390] (c1)
[0,791s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$Itr.hasNext [0x00007fae7c952690] (c2)
[0,791s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4285800.invokeExact_MT [0x00007fae5d5db610] (c1)
[0,791s][debug][gc,nmethod   ] Register NMethod: jdk.internal.reflect.MethodHandleByteFieldAccessorImpl.getByte [0x00007fae5d5dc310] (c1)
[0,792s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb429c800.invoke [0x00007fae5d5dd790] (c1)
[0,792s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.RevisionRootPage.incrementAndGetMaxNodeKeyInDocumentIndex [0x00007fae7c952990] (c2)
[0,792s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.computeIfAbsent [0x00007fae5d5de910] (c1)
[0,792s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.getByte [0x00007fae5d5e0990] (c1)
[0,792s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.ValueNodeDelegate.getRawValue [0x00007fae5d5e1290] (c1)
[0,792s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.afterNodeAccess [0x00007fae5d5e1710] (c1)
[0,792s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractStringNode.computeHash [0x00007fae5d5e2790] (c1)
[0,792s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeLong [0x00007fae7c952c90] (c2)
[0,792s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonObjectKeyNode [0x00007fae5d5e4b90] (c1)
[0,792s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertValue [0x00007fae5d5e5d90] (c1)
[0,792s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.setFirstChildOfObjectKeyNode [0x00007fae5d5e6e90] (c1)
[0,792s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.IndexLogKey.hashCode [0x00007fae5d5e7e90] (c1)
[0,792s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.incrementChildCount [0x00007fae7c953810] (c2)
[0,792s][debug][gc,nmethod   ] Register NMethod: java.nio.charset.CoderResult.isOverflow [0x00007fae5d5e8310] (c1)
[0,792s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.IndexLogKey.equals [0x00007fae5d5e8690] (c1)
[0,792s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.ValueNodeDelegate.<init> [0x00007fae5d5e8f10] (c1)
[0,793s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.Maths.unsignedLongMulXorFold [0x00007fae7c953b10] (c2)
[0,793s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeLong [0x00007fae7c953e10] (c2)
[0,793s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.XXH3.XXH3_mix16B [0x00007fae7c954990] (c2)
[0,794s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getMostRecentPageContainer [0x00007fae7c954e10] (c2)
[0,794s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonDeweyIDManager.newRecordValueID [0x00007fae5d5e9790] (c1)
[0,794s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractBooleanNode.delegate [0x00007fae5d5eac10] (c1)
[0,795s][debug][gc,nmethod   ] Register NMethod: java.lang.StringUTF16.putChar [0x00007fae5d5eb190] (c1)
[0,795s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.appendUtf8Char [0x00007fae7c955690] (c2)
[0,795s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.push [0x00007fae5d5eb590] (c1)
[0,796s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractDeweyIDManager.newFirstChildID [0x00007fae5d5ebf90] (c1)
[0,796s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processTrxMovement [0x00007fae5d5ee410] (c1)
[0,796s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.endObject [0x00007fae5d5f0410] (c1)
[0,796s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectNode.<init> [0x00007fae5d5f1710] (c1)
[0,796s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processEndObject [0x00007fae5d5f1e90] (c1)
[0,797s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonObjectNode [0x00007fae5d5f2390] (c1)
[0,797s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.beginObject [0x00007fae5d5f3610] (c1)
[0,797s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb427bc00.guard [0x00007fae5d5f4690] (c1)
[0,797s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectNode.computeHash [0x00007fae5d5f5590] (c1)
[0,798s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.canEncode [0x00007fae5d5f7e90] (c1)
[0,798s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$DMH/0x00007fadb4029c00.invokeSpecial [0x00007fae5d5f8210] (c1)
[0,798s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertObjectRecordAsFirstChild [0x00007fae5d5f8a10] (c1)
[0,798s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processBeginObject [0x00007fae5d5fcb10] (c1)
[0,799s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DelegatingMethodHandle$Holder.delegate [0x00007fae5d5fd090] (c1)
[0,799s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeReadOnlyTrxImpl.isArray [0x00007fae5d5fd790] (c1)
[0,799s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.addObject [0x00007fae5d5fe010] (c1)
[0,799s][debug][gc,nmethod   ] Register NMethod: java.nio.CharBuffer.array [0x00007fae5d603710] (c1)
[0,799s][debug][gc,nmethod   ] Register NMethod: java.nio.CharBuffer.hasArray [0x00007fae5d603d10] (c1)
[0,799s][debug][gc,nmethod   ] Register NMethod: sun.nio.cs.UTF_8.updatePositions [0x00007fae5d604110] (c1)
[0,800s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getRecord [0x00007fae7c956310] (c2)
[0,801s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4254ae8.<init> [0x00007fae5d604890] (c1)
[0,802s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveTo [0x00007fae7c957d90] (c2)
[0,802s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordForModification [0x00007fae7c959b10] (c2)
[0,803s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4293260.<init> [0x00007fae5d604c90] (c1)
[0,803s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.immutable.json.ImmutableObjectKeyNode.getKind [0x00007fae5d605090] (c1)
[0,803s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.nextNonWhitespace [0x00007fae7c95bb10] (c2)
[0,804s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.bitCount [0x00007fae7c95c190] (c2)
[0,804s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getKind [0x00007fae7c95c490] (c2)
[0,804s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getPageContainer [0x00007fae7c95c810] (c2)
[0,805s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.AbstractAxis.hasNext [0x00007fae7c95d610] (c2)
[0,805s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getNodeKey [0x00007fae7c95ef90] (c2)
[0,805s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertObjectAsRightSibling [0x00007fae5d605410] (c1)
[0,805s][debug][gc,nmethod   ] Register NMethod: io.sirix.utils.IntToObjectMap.find [0x00007fae7c95f410] (c2)
[0,805s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.peek [0x00007fae7c95f910] (c2)
[0,805s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordPage [0x00007fae7c95fd90] (c2)
[0,805s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.Preconditions.checkFromToIndex [0x00007fae7c961090] (c2)
[0,806s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.hashCode [0x00007fae7c961410] (c2)
[0,806s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$Itr.next [0x00007fae7c961710] (c2)
[0,806s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.XXH3.XXH3_avalanche [0x00007fae7c961c90] (c2)
[0,806s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.hasRightSibling [0x00007fae7c961f90] (c2)
[0,806s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NodeDelegate.getKind [0x00007fae7c962310] (c2)
[0,806s][debug][gc,nmethod   ] Register NMethod: com.google.common.base.Objects.hashCode [0x00007fae5d608790] (c1)
[0,806s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.iterator [0x00007fae7c962610] (c2)
[0,806s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.constructorMethod [0x00007fae7c962990] (c2)
[0,806s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.objectvalue.NumberValue.getValue [0x00007fae7c962d10] (c1)
[0,807s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.allocateInstance [0x00007fae7c963010] (c2)
[0,807s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.moveTo [0x00007fae7c963510] (c2)
[0,807s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.clear [0x00007fae7c963e90] (c2)
[0,807s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getStructuralNode [0x00007fae7c964390] (c2)
[0,808s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.checkInvariants [0x00007fae7c964690] (c2)
[0,808s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.getLocalNameKey [0x00007fae7c964990] (c2)
[0,808s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.hashCode [0x00007fae5d608b10] (c1)
[0,808s][debug][gc,nmethod   ] Register NMethod: java.lang.String.compareTo [0x00007fae5d608e90] (c1)
[0,808s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.HashCommon.mix [0x00007fae7c964c90] (c2)
[0,808s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2LongOpenHashMap.find [0x00007fae5d609790] (c1)
[0,808s][debug][gc,nmethod   ] Register NMethod: java.nio.CharBuffer.limit [0x00007fae5d60a010] (c1)
[0,808s][debug][gc,nmethod   ] Register NMethod: java.nio.CharBuffer.limit [0x00007fae5d60a390] (c1)
[0,808s][debug][gc,nmethod   ] Register NMethod: java.nio.CharBuffer.<init> [0x00007fae5d60a790] (c1)
[0,808s][debug][gc,nmethod   ] Register NMethod: io.sirix.utils.IntToObjectMap.prvtPut [0x00007fae5d60ab90] (c1)
[0,809s][debug][gc,nmethod   ] Register NMethod: io.brackit.query.atomic.QNm.hashCode [0x00007fae5d60b490] (c1)
[0,809s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.filter.PathNameFilter.filter [0x00007fae7c964f90] (c2)
[0,809s][debug][gc,nmethod   ] Register NMethod: io.brackit.query.atomic.QNm.atomicCode [0x00007fae7c965590] (c1)
[0,809s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.NamePage.incrementAndGetMaxNodeKey [0x00007fae5d60b990] (c1)
[0,809s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.appendChars [0x00007fae5d60c010] (c1)
[0,809s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.peek [0x00007fae5d60cb10] (c1)
[0,809s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractNullNode.delegate [0x00007fae5d60d490] (c1)
[0,810s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.inflate [0x00007fae7c965890] (c2)
[0,810s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractNullNode.structDelegate [0x00007fae7c966010] (c1)
[0,810s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.AbstractAxis.nextLong [0x00007fae7c966310] (c2)
[0,810s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.NullNode.getKind [0x00007fae5d60da10] (c1)
[0,810s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.getBytes [0x00007fae5d60dd90] (c1)
[0,810s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractStringNode.<init> [0x00007fae5d60e310] (c1)
[0,810s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.StringNode.getKind [0x00007fae5d60e910] (c1)
[0,811s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeTrxImpl.getCurrentNode [0x00007fae5d60ec90] (c1)
[0,811s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.checkPrecondition [0x00007fae5d60f190] (c1)
[0,811s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractBooleanNode.structDelegate [0x00007fae7c966f90] (c1)
[0,811s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.isLiteral [0x00007fae5d60fe10] (c1)
[0,811s][debug][gc,nmethod   ] Register NMethod: java.lang.StringUTF16.compress [0x00007fae7c967290] (c2)
[0,811s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.peekKeyword [0x00007fae5d610c90] (c1)
[0,811s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.NullNode.getKind [0x00007fae7c967790] (c2)
[0,812s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapCharBuffer.<init> [0x00007fae5d612b10] (c1)
[0,812s][debug][gc,nmethod   ] Register NMethod: java.nio.CharBuffer.wrap [0x00007fae5d612f10] (c1)
[0,812s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processString [0x00007fae5d613510] (c1)
[0,812s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.StringNode.<init> [0x00007fae5d613d10] (c1)
[0,812s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.parseInt [0x00007fae5d614390] (c1)
[0,812s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.NumberNode.getKind [0x00007fae5d617290] (c1)
[0,812s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonStringNode [0x00007fae5d617610] (c1)
[0,812s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertStringValue [0x00007fae5d618c90] (c1)
[0,812s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processNull [0x00007fae5d61c190] (c1)
[0,813s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.nextNull [0x00007fae5d61c990] (c1)
[0,813s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.NullNode.<init> [0x00007fae5d61da10] (c1)
[0,813s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonNullNode [0x00007fae5d61e010] (c1)
[0,813s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNullValueAsRightSibling [0x00007fae5d61f310] (c1)
[0,813s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractNullNode.<init> [0x00007fae5d621d90] (c1)
[0,813s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertNullValue [0x00007fae5d622310] (c1)
[0,813s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractNumberNode.delegate [0x00007fae7c967a90] (c2)
[0,813s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.stringSize [0x00007fae5d625610] (c1)
[0,814s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.inflate [0x00007fae7c967e10] (c2)
[0,814s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.getChars [0x00007fae5d625b10] (c1)
[0,814s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractNullNode.computeHash [0x00007fae5d626690] (c1)
[0,814s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsRightSibling [0x00007fae5d629090] (c1)
[0,814s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getNodeKey [0x00007fae7c968390] (c2)
[0,814s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4284c00.linkToTargetMethod [0x00007fae5d62bd10] (c1)
[0,814s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4284000.invoke [0x00007fae5d62c310] (c1)
[0,815s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.moveTo [0x00007fae5d62ca10] (c1)
[0,815s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.invokeStatic [0x00007fae5d62d990] (c1)
[0,815s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4284800.invoke [0x00007fae5d62e090] (c1)
[0,815s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4282400.invoke [0x00007fae5d62f210] (c1)
[0,815s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.invokeStatic [0x00007fae5d62f990] (c1)
[0,815s][debug][gc,nmethod   ] Register NMethod: java.util.Objects.isNull [0x00007fae5d630190] (c1)
[0,815s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4280400.invoke [0x00007fae5d630510] (c1)
[0,815s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractNullNode.delegate [0x00007fae7c968890] (c2)
[0,815s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.BooleanNode.getKind [0x00007fae5d631410] (c1)
[0,815s][debug][gc,nmethod   ] Register NMethod: java.util.LinkedHashMap.afterNodeAccess [0x00007fae7c968c10] (c2)
[0,815s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb427a400.invoke [0x00007fae5d631790] (c1)
[0,816s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractNumberNode.<init> [0x00007fae5d631c90] (c1)
[0,816s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.valueOf [0x00007fae5d632290] (c1)
[0,816s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.IndexLogKey.hashCode [0x00007fae7c968f90] (c2)
[0,816s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb429c000.tableSwitch [0x00007fae5d632a10] (c1)
[0,816s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.StringNode.getKind [0x00007fae7c969310] (c2)
[0,816s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeHashing.rollingAdd [0x00007fae7c969610] (c2)
[0,817s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.IndexLogKey.equals [0x00007fae7c96d010] (c2)
[0,817s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getRightSiblingKey [0x00007fae7c96d590] (c2)
[0,817s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.peek [0x00007fae7c96d910] (c2)
[0,817s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeHashing.getStructuralNode [0x00007fae5d634010] (c1)
[0,817s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeHashing.setCurrentNode [0x00007fae5d634990] (c1)
[0,817s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeHashing.getCurrentNode [0x00007fae7c96dd10] (c2)
[0,818s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractNumberNode.computeHash [0x00007fae5d635190] (c1)
[0,818s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeHashing.rollingAdd [0x00007fae5d640590] (c1)
[0,818s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.rewind [0x00007fae7c96e090] (c2)
[0,818s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.peekNumber [0x00007fae5d643e90] (c1)
[0,818s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.nextQuotedValue [0x00007fae7c96e390] (c2)
[0,818s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4254ae8.<init> [0x00007fae7c96f910] (c2)
[0,818s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.toString [0x00007fae5d645190] (c1)
[0,819s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.readNumber [0x00007fae5d645810] (c1)
[0,819s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeReadOnlyTrxImpl.getNode [0x00007fae7c96fc90] (c2)
[0,819s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.getNodeKey [0x00007fae7c970410] (c2)
[0,819s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.JsonNumber.stringToNumber [0x00007fae5d645c90] (c1)
[0,819s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractIndexController.notifyChange [0x00007fae7c970910] (c2)
[0,820s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.add [0x00007fae7c970d90] (c2)
[0,820s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4293260.<init> [0x00007fae7c971190] (c2)
[0,821s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.AbstractLongList.popLong [0x00007fae7c971510] (c2)
[0,821s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.removeLong [0x00007fae7c971990] (c2)
[0,822s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.NumberNode.getKind [0x00007fae7c971e10] (c2)
[0,822s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AppendableUtil.findUtf8Length [0x00007fae7c972110] (c2)
[0,822s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readLimit [0x00007fae7c972810] (c2)
[0,823s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.setRecord [0x00007fae7c972b10] (c2)
[0,823s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processNumber [0x00007fae5d646a10] (c1)
[0,823s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.NumberNode.<init> [0x00007fae5d647310] (c1)
[0,823s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonNumberNode [0x00007fae5d647990] (c1)
[0,823s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertNumberValue [0x00007fae5d648d10] (c1)
[0,823s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNumberValueAsRightSibling [0x00007fae5d64c210] (c1)
[0,824s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.AbstractLongList.peekLong [0x00007fae7c973210] (c2)
[0,824s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.appendUtf8 [0x00007fae7c973610] (c2)
[0,824s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.doPeek [0x00007fae7c974990] (c2)
[0,824s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.limit [0x00007fae7c975490] (c2)
[0,824s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.getLong [0x00007fae7c975810] (c2)
[0,825s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.limit [0x00007fae7c975b90] (c2)
[0,825s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.<init> [0x00007fae7c975f90] (c2)
[0,825s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.setRecord [0x00007fae7c976310] (c2)
[0,825s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.incrementChildCount [0x00007fae7c976b90] (c2)
[0,826s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NodeDelegate.<init> [0x00007fae7c976f10] (c2)
[0,826s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.hasLeftSibling [0x00007fae7c977310] (c2)
[0,826s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.underlyingObject [0x00007fae7c977690] (c2)
[0,827s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.immutable.json.ImmutableArrayNode.getKind [0x00007fae7c977a10] (c2)
[0,827s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.computeIfAbsent [0x00007fae7c977d10] (c2)
[0,827s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeBoolean [0x00007fae5d64ed10] (c1)
[0,827s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeBoolean [0x00007fae5d64f190] (c1)
[0,827s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractBooleanNode.<init> [0x00007fae5d64f710] (c1)
[0,827s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.UnsafeAccess.byteOrder [0x00007fae7c979f10] (c2)
[0,828s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.nextBoolean [0x00007fae5d64fc90] (c1)
[0,828s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractBooleanNode.computeHash [0x00007fae5d650e90] (c1)
[0,828s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processBoolean [0x00007fae5d653c90] (c1)
[0,828s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.BooleanNode.<init> [0x00007fae5d654490] (c1)
[0,828s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.moveToParentObjectKeyArrayOrDocumentRoot [0x00007fae7c97a210] (c2)
[0,828s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertBooleanValue [0x00007fae5d654b10] (c1)
[0,829s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.storeDeweyIDs [0x00007fae7c97ab90] (c2)
[0,829s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertBooleanValueAsRightSibling [0x00007fae5d657e10] (c1)
[0,829s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonBooleanNode [0x00007fae5d65a510] (c1)
[0,829s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.setLastChildKey [0x00007fae7c97b010] (c2)
[0,830s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeHashing.adaptHashesWithAdd [0x00007fae7c97b390] (c2)
[0,830s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.adaptForInsert [0x00007fae7c97b890] (c2)
[0,831s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.LongHashFunction.unsafeHash [0x00007fae7c97c490] (c2)
[0,831s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.XXH3$AsLongHashFunction.hash [0x00007fae7c97c810] (c2)
[0,832s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.LongHashFunction.hashByteBuffer [0x00007fae7c97cc10] (c2)
[0,832s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.<init> [0x00007fae7c97d110] (c2)
[0,832s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.XXH3.access$500 [0x00007fae7c97d410] (c2)
[0,833s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.BooleanNode.getKind [0x00007fae7c97d710] (c2)
[0,833s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getNodeKey [0x00007fae7c97da10] (c2)
[0,834s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeTrxImpl.intermediateCommitIfRequired [0x00007fae7c97dd90] (c2)
[0,834s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeTrxImpl.checkAccessAndCommit [0x00007fae7c97e210] (c2)
[0,835s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractDeweyIDManager.newRightSiblingID [0x00007fae7c97e890] (c2)
[0,835s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getLeftSiblingKey [0x00007fae7c97ef90] (c2)
[0,836s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.getLogKey [0x00007fae7c97f310] (c1)
[0,837s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ArrayNode.<init> [0x00007fae5d65b810] (c1)
[0,837s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processEndArray [0x00007fae5d65bf90] (c1)
[0,837s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.endArray [0x00007fae5d65c490] (c1)
[0,837s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonArrayNode [0x00007fae5d65d510] (c1)
[0,837s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ArrayNode.computeHash [0x00007fae5d65e810] (c1)
[0,839s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.beginArray [0x00007fae5d661210] (c1)
[0,839s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeHashing.rollingAdd [0x00007fae7c97f610] (c2)
[0,839s][debug][gc,nmethod   ] Register NMethod: com.google.common.base.Preconditions.checkState [0x00007fae7c981c90] (c2)
[0,840s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.arrayOffset [0x00007fae7c981f90] (c2)
[0,840s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.setRightSiblingKey [0x00007fae7c982310] (c2)
[0,840s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeReadOnlyTrxImpl.isObjectKey [0x00007fae7c982690] (c2)
[0,842s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processBeginArray [0x00007fae5d662310] (c1)
[0,842s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertArrayAsRightSibling [0x00007fae5d662890] (c1)
[0,842s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae7c982a90] (c2)
[0,843s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.adaptTrxPosAndStack [0x00007fae7c984210] (c2)
[0,843s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertArray [0x00007fae5d665a10] (c1)
[0,843s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractBooleanNode.delegate [0x00007fae7c984c90] (c2)
[0,844s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeReadOnlyTrxImpl.isArray [0x00007fae7c985010] (c2)
[0,844s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.createRecord [0x00007fae7c985410] (c2)
[0,844s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.checkPrecondition [0x00007fae7c989210] (c2)
[0,844s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae7c989590] (c2)
[0,845s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.grow [0x00007fae7c989910] (c2)
[0,845s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.nextString [0x00007fae7c989c90] (c2)
[0,846s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.refCount [0x00007fae7c98a210] (c2)
[0,846s][debug][gc,nmethod   ] Register NMethod: java.lang.String.encode [0x00007fae7c98a590] (c2)
[0,846s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.peekKeyword [0x00007fae7c98ab90] (c2)
[0,847s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.getStringCoderForStringOrStringBuilder [0x00007fae7c98b910] (c2)
[0,847s][debug][gc,nmethod   ] Register NMethod: java.lang.CharacterDataLatin1.digit [0x00007fae7c98bc90] (c2)
[0,848s][debug][gc,nmethod   ] Register NMethod: net.openhft.hashing.XXH3.XXH3_64bits_internal [0x00007fae7c98c090] (c2)
[0,848s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.ValueNodeDelegate.<init> [0x00007fae7c990c90] (c2)
[0,848s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb429c800.invoke [0x00007fae7c991090] (c2)
[0,848s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.isLiteral [0x00007fae7c991410] (c2)
[0,848s][debug][gc,nmethod   ] Register NMethod: java.lang.System$2.decodeASCII [0x00007fae5d66b110] (c1)
[0,848s][debug][gc,nmethod   ] Register NMethod: sun.nio.cs.UTF_8$Decoder.decodeLoop [0x00007fae5d66b510] (c1)
[0,848s][debug][gc,nmethod   ] Register NMethod: java.lang.String.decodeASCII [0x00007fae5d66bd10] (c1)
[0,848s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeStopBit [0x00007fae7c991710] (c2)
[0,849s][debug][gc,nmethod   ] Register NMethod: sun.nio.cs.UTF_8$Decoder.xflow [0x00007fae5d66c310] (c1)
[0,849s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.nextNull [0x00007fae7c992510] (c2)
[0,849s][debug][gc,nmethod   ] Register NMethod: java.nio.charset.CharsetDecoder.decode [0x00007fae5d66cc10] (c1)
[0,851s][debug][gc,nmethod   ] Register NMethod: sun.nio.cs.UTF_8$Decoder.decodeArrayLoop [0x00007fae5d66f010] (c1)
[0,852s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonStringNode [0x00007fae7c992910] (c2)
[0,855s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.append [0x00007fae5d676190] (c1)
[0,856s][debug][gc,nmethod   ] Register NMethod: java.io.InputStreamReader.read [0x00007fae5d676810] (c1)
[0,856s][debug][gc,nmethod   ] Register NMethod: sun.nio.cs.StreamDecoder.ensureOpen [0x00007fae5d676c90] (c1)
[0,856s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertAsSibling [0x00007fae7c993810] (c2)
[0,856s][debug][gc,nmethod   ] Register NMethod: sun.nio.cs.StreamDecoder.read [0x00007fae5d677110] (c1)
[0,857s][debug][gc,nmethod   ] Register NMethod: sun.nio.cs.StreamDecoder.lockedRead [0x00007fae5d678b10] (c1)
[0,857s][debug][gc,nmethod   ] Register NMethod: sun.nio.cs.StreamDecoder.implRead [0x00007fae5d679b90] (c1)
[0,859s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeUtf8 [0x00007fae7c996b10] (c2)
[0,859s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl.profileBoolean [0x00007fae7c999390] (c2)
[0,861s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.fillBuffer [0x00007fae5d67b110] (c1)
[0,872s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsRightSibling [0x00007fae7c999710] (c2)
[0,873s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processNull [0x00007fae7c99c190] (c2)
[0,880s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractStringNode.computeHash [0x00007fae7c99f810] (c2)
[0,885s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.AbstractAxis.hasNext [0x00007fae7c9a5910] (c2)
[0,886s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb427a800.invoke [0x00007fae7c9acf90] (c2)
[0,887s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$DMH/0x00007fadb4029c00.invokeSpecial [0x00007fae7c9ad490] (c2)
[0,887s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNullValueAsRightSibling [0x00007fae7c9ad890] (c2)
[0,888s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DelegatingMethodHandle$Holder.delegate [0x00007fae7c9af910] (c2)
[0,889s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.stringSize [0x00007fae7c9afd10] (c2)
[0,890s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertStringValue [0x00007fae7c9b0110] (c2)
[0,890s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonNullNode [0x00007fae7c9b7c90] (c2)
[0,891s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.AbstractAxis.resetToLastKey [0x00007fae7c9b8890] (c2)
[0,892s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processString [0x00007fae7c9b8f10] (c2)
[0,893s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertNullValue [0x00007fae7c9c0a10] (c2)
[0,893s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.peekNumber [0x00007fae7c9c3c10] (c2)
[0,893s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb427bc00.guard [0x00007fae7c9c4710] (c2)
[0,893s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractNullNode.computeHash [0x00007fae7c9c5110] (c2)
[0,896s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.valueOf [0x00007fae7c9ca890] (c2)
[0,898s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.parseInt [0x00007fae7c9cac10] (c2)
[0,899s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.getKey [0x00007fae7c9cb610] (c1)
[0,901s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.AbstractAxis.<init> [0x00007fae7c9cb910] (c2)
[0,905s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeInt [0x00007fae7c9cc210] (c2)
[0,906s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeInt [0x00007fae7c9cc510] (c2)
[0,906s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeInt [0x00007fae7c9cd090] (c2)
[0,914s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.getChars [0x00007fae7c9cd610] (c2)
[0,916s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertNewContent [0x00007fae5d67ba90] (c1)
[0,918s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertNewContent [0x00007fae5d67d810] (c1)
[0,919s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.AbstractAxis.tryToComputeNext [0x00007fae7c9cde10] (c2)
[0,928s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.setFirstChildKey [0x00007fae7c9d2110] (c2)
[0,931s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb427a400.invoke [0x00007fae7c9d2490] (c2)
[0,932s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.JsonNumber.stringToNumber [0x00007fae7c9d2790] (c2)
[0,950s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.toString [0x00007fae7c9d3410] (c2)
[0,953s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonNumberNode [0x00007fae7c9d4290] (c2)
[0,954s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getFirstChildKey [0x00007fae7c9d4f10] (c2)
[0,955s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processNumber [0x00007fae7c9d5290] (c2)
[0,960s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNumberValueAsRightSibling [0x00007fae7c9d9590] (c2)
[0,961s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertNumberValue [0x00007fae7c9db810] (c2)
[0,964s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.<init> [0x00007fae7c9dec10] (c2)
[0,966s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.grow [0x00007fae7c9def10] (c2)
[0,967s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.flip [0x00007fae5d67f490] (c1)
[0,967s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.IndirectPage.delegate [0x00007fae7c9df910] (c1)
[0,969s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractNumberNode.computeHash [0x00007fae7c9dfc10] (c2)
[0,971s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.nextBoolean [0x00007fae7c9e5f10] (c2)
[0,972s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.flip [0x00007fae5d67f810] (c1)
[0,974s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.PageContainer.getComplete [0x00007fae7c9e6390] (c1)
[0,980s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonBooleanNode [0x00007fae7c9e6690] (c2)
[0,984s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.position [0x00007fae7c9e7310] (c2)
[0,989s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processBoolean [0x00007fae7c9e7690] (c2)
[0,994s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertNewContent [0x00007fae7c9eb010] (c2)
[0,994s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapCharBuffer.<init> [0x00007fae5d67fc10] (c1)
[0,998s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.RevisionRootPage.getCurrentMaxLevelOfDocumentIndexIndirectPages [0x00007fae7c9f0a90] (c1)
[1,004s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.TransactionIntentLog.get [0x00007fae5d680010] (c1)
[1,005s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractBooleanNode.computeHash [0x00007fae7c9f0d90] (c2)
[1,010s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapCharBuffer.slice [0x00007fae5d680690] (c1)
[1,011s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.adaptNodesAndHashesForInsertAsChild [0x00007fae7c9f6d10] (c2)
[1,020s][debug][gc,nmethod   ] Register NMethod: io.sirix.utils.IntToObjectMap.put [0x00007fae7c9f8090] (c2)
[1,030s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.hasFirstChild [0x00007fae7c9f8990] (c2)
[1,031s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.filter.PathNameFilter.<init> [0x00007fae7c9f8d90] (c2)
[1,035s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryWriter.movePathSummary [0x00007fae7c9f9790] (c2)
[1,037s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.getPathNodeKey [0x00007fae7c9fb510] (c2)
[1,039s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.setKey [0x00007fae5d680c10] (c1)
[1,053s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.appendChars [0x00007fae7c9fb910] (c2)
[1,060s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.discardMark [0x00007fae5d680f90] (c1)
[1,065s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapByteBuffer.compact [0x00007fae5d681290] (c1)
[1,066s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsFirstChild [0x00007fae7c9fbf90] (c2)
[1,068s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveToParent [0x00007fae7ca01f10] (c2)
[1,069s][debug][gc,nmethod   ] Register NMethod: java.io.FileInputStream.available0 [0x00007fae7ca02310] ()
[1,069s][debug][gc,nmethod   ] Register NMethod: java.io.FileInputStream.available [0x00007fae5d681c90] (c1)
[1,075s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getLevel [0x00007fae7ca02690] (c2)
[1,076s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.Utils.buildName [0x00007fae7ca02a90] (c2)
[1,076s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.<init> [0x00007fae5d682190] (c1)
[1,087s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.filter.FilterAxis.<init> [0x00007fae7ca02f10] (c2)
[1,095s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getResourceSession [0x00007fae5d682890] (c1)
[1,099s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonArrayNode [0x00007fae7ca05690] (c2)
[1,099s][debug][gc,nmethod   ] Register NMethod: java.nio.CharBuffer.arrayOffset [0x00007fae7ca06310] (c2)
[1,102s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryWriter.getPathNodeKey [0x00007fae7ca06690] (c2)
[1,106s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.setLogKey [0x00007fae5d682e90] (c1)
[1,107s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.getPathNodeKey [0x00007fae7ca0be10] (c2)
[1,112s][debug][gc,nmethod   ] Register NMethod: org.magicwerk.brownies.collections.GapList.add [0x00007fae5d683210] (c1)
[1,112s][debug][gc,nmethod   ] Register NMethod: org.magicwerk.brownies.collections.IList.checkIndexAdd [0x00007fae5d683790] (c1)
[1,112s][debug][gc,nmethod   ] Register NMethod: org.magicwerk.brownies.collections.GapList.doEnsureCapacity [0x00007fae5d684710] (c1)
[1,112s][debug][gc,nmethod   ] Register NMethod: sun.nio.cs.StreamDecoder.inReady [0x00007fae5d685490] (c1)
[1,113s][debug][gc,nmethod   ] Register NMethod: sun.nio.cs.StreamDecoder.readBytes [0x00007fae5d685c10] (c1)
[1,113s][debug][gc,nmethod   ] Register NMethod: org.magicwerk.brownies.collections.GapList.doAdd [0x00007fae5d687c10] (c1)
[1,116s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.TransactionIntentLog.put [0x00007fae5d68a990] (c1)
[1,119s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.PageContainer.<init> [0x00007fae5d68b010] (c1)
[1,120s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.PageContainer.getInstance [0x00007fae5d68b410] (c1)
[1,130s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getRevisionNumber [0x00007fae5d68bc90] (c1)
[1,134s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.IndirectPage.getOrCreateReference [0x00007fae5d68c290] (c1)
[1,135s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.<init> [0x00007fae5d68d210] (c1)
[1,139s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.UberPage.getPageCountExp [0x00007fae5d68e510] (c1)
[1,140s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getCurrentMaxIndirectPageTreeLevel [0x00007fae5d68ec10] (c1)
[1,140s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getPageReference [0x00007fae5d692d90] (c1)
[1,144s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.set [0x00007fae5d697c90] (c1)
[1,146s][debug][gc,nmethod   ] Register NMethod: java.nio.CharBuffer.position [0x00007fae7ca12590] (c2)
[1,147s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$1.removeEldestEntry [0x00007fae5d698110] (c1)
[1,148s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getUberPage [0x00007fae5d698510] (c1)
[1,149s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.AbstractForwardingPageReadOnlyTrx.getUberPage [0x00007fae5d698b10] (c1)
[1,150s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.appendLogRecord [0x00007fae5d699210] (c1)
[1,150s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.TreeModifierImpl.prepareIndirectPage [0x00007fae5d699890] (c1)
[1,151s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.TreeModifierImpl.prepareLeafOfTree [0x00007fae5d69b010] (c1)
[1,151s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.lambda$prepareRecordPage$3 [0x00007fae5d69cd10] (c1)
[1,151s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertArrayAsRightSibling [0x00007fae7ca12910] (c2)
[1,157s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.delegates.BitmapReferencesPage.createNewReference [0x00007fae5d69ec90] (c1)
[1,162s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ArrayNode.computeHash [0x00007fae7ca14f90] (c2)
[1,165s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertArray [0x00007fae7ca1a710] (c2)
[1,191s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.recalculateWordsInUse [0x00007fae7ca23e10] (c2)
[1,227s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.recalculateWordsInUse [0x00007fae7ca24210] (c2)
[1,244s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.position [0x00007fae7ca24590] (c2)
[1,293s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.<init> [0x00007fae5d69fa10] (c1)
[1,310s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.<init> [0x00007fae7ca24910] (c2)
[1,328s][debug][gc,nmethod   ] Register NMethod: java.nio.CharBuffer.<init> [0x00007fae7ca25010] (c2)
[1,360s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.position [0x00007fae7ca25690] (c2)
[1,386s][debug][gc,nmethod   ] Register NMethod: java.nio.charset.CharsetDecoder.decode [0x00007fae7ca25a90] (c2)
[1,406s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.append [0x00007fae7ca26290] (c2)
[1,434s][debug][gc,nmethod   ] Register NMethod: java.nio.CharBuffer.wrap [0x00007fae7ca27310] (c2)
[1,436s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.fillBuffer [0x00007fae7ca27a10] (c2)
[1,484s][debug][gc,nmethod   ] Register NMethod: java.lang.String.decodeASCII [0x00007fae7ca2a410] (c2)
[1,484s][debug][gc,nmethod   ] Register NMethod: java.lang.System$2.decodeASCII [0x00007fae7ca2a990] (c2)
[1,487s][debug][gc,nmethod   ] Register NMethod: sun.nio.cs.UTF_8$Decoder.decodeArrayLoop [0x00007fae7ca2af90] (c2)
[1,693s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.cardinality [0x00007fae7ca2c390] (c2)
[1,983s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.numberOfTrailingZeros [0x00007fae5d6a0a90] (c1)
[1,983s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.wordIndex [0x00007fae7ca2c790] (c2)
[1,983s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.numberOfTrailingZeros [0x00007fae5d6a0f10] (c1)
[1,983s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.nextSetBit [0x00007fae5d6a1310] (c1)
[1,983s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.delegates.BitmapReferencesPage.getReferences [0x00007fae7ca2ca90] (c1)
[1,983s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.<init> [0x00007fae5d6a2290] (c1)
[2,037s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList$1.hasNext [0x00007fae5d6a2890] (c1)
[2,045s][debug][gc,nmethod   ] Register NMethod: java.lang.Short.shortValue [0x00007fae7ca2cd90] (c1)
[2,063s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList.size [0x00007fae7ca2d090] (c1)
[2,078s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.set [0x00007fae7ca2d390] (c2)
[2,115s][debug][gc,nmethod   ] Register NMethod: java.lang.Short.valueOf [0x00007fae5d6a2c90] (c1)
[2,115s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortListIterator.next [0x00007fae5d6a3310] (c1)
[2,115s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortListIterator.next [0x00007fae5d6a3a10] (c1)
[2,115s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortIterator.next [0x00007fae5d6a3f90] (c1)
[2,116s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList$1.nextShort [0x00007fae5d6a4410] (c1)
[2,157s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.copyOf [0x00007fae7ca2d810] (c2)
[2,228s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.shorts.AbstractShortList.iterator [0x00007fae5d6a4b10] (c1)
[2,228s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.shorts.AbstractShortList.listIterator [0x00007fae5d6a5210] (c1)
[2,228s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList.listIterator [0x00007fae5d6a5910] (c1)
[2,228s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList$1.<init> [0x00007fae5d6a5f10] (c1)
[2,228s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.shorts.AbstractShortList.ensureIndex [0x00007fae5d6a6310] (c1)
[2,239s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.delegates.ReferencesPage4.getOrCreateReference [0x00007fae5d6a7a10] (c1)
[2,439s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.fillBuffer [0x00007fae5d6a9590] (c1)
[2,623s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.flip [0x00007fae7ca2e110] (c2)
[2,676s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.get [0x00007fae7ca2eb10] (c2)
[2,686s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.delegates.BitmapReferencesPage.index [0x00007fae7ca2ef10] (c2)
[2,689s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.and [0x00007fae7ca30310] (c2)
[2,984s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.fillBuffer [0x00007fae7ca30a10] (c2)
[3,109s][debug][gc,nmethod   ] Register NMethod: org.magicwerk.brownies.collections.GapList.get [0x00007fae7ca33490] (c2)
[3,129s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getAndAddInt [0x00007fae5d6a9f10] (c1)
[3,130s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.AbstractForwardingNode.getNodeDelegate [0x00007fae7ca33990] (c2)
[3,133s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeByte [0x00007fae7ca33d10] (c2)
[3,133s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeStopBit0 [0x00007fae5d6aa410] (c1)
[3,136s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeByte [0x00007fae7ca34910] (c2)
[3,136s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle.internalMemberName [0x00007fae7ca35510] (c2)
[3,140s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.writeStopBit [0x00007fae7ca35890] (c2)
[3,140s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.util.Longs.requireNonNegative [0x00007fae7ca36790] (c2)
[3,143s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeInt [0x00007fae7ca36a90] (c2)
[3,144s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.util.ObjectUtils.requireNonNull [0x00007fae7ca37790] (c2)
[3,144s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.min [0x00007fae7ca37a90] (c2)
[3,144s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.checkOffset [0x00007fae7ca37d90] (c2)
[3,144s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.toIntExact [0x00007fae7ca38090] (c2)
[3,144s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.putLong [0x00007fae7ca38390] (c2)
[3,147s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.rawWriteByte [0x00007fae7ca38690] (c2)
[3,147s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.putByte [0x00007fae7ca39210] (c2)
[3,147s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.translate [0x00007fae7ca39510] (c2)
[3,150s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.copyMemory [0x00007fae7ca39810] (c2)
[3,151s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.checkSize [0x00007fae7ca3a410] (c2)
[3,151s][debug][gc,nmethod   ] Register NMethod: jdk.internal.util.Preconditions.checkFromIndexSize [0x00007fae7ca3a710] (c2)
[3,151s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.ValueNodeDelegate.getRawValue [0x00007fae7ca3aa10] (c2)
[3,152s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeLong [0x00007fae5d6aac10] (c1)
[3,153s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeByte [0x00007fae5d6aaf90] (c1)
[3,153s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeInt [0x00007fae5d6ab290] (c1)
[3,153s][debug][gc,nmethod   ] Register NMethod: java.util.Objects.checkIndex [0x00007fae7ca3ad10] (c2)
[3,153s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemoryLoop [0x00007fae5d6ab710] (c1)
[3,153s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.putInt [0x00007fae7ca3b010] (c2)
[3,153s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle.get [0x00007fae7ca3b310] (c2)
[3,153s][debug][gc,nmethod   ] Register NMethod: java.lang.Class.cast [0x00007fae7ca3b790] (c2)
[3,153s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodType.checkSlotCount [0x00007fae7ca3bb10] (c2)
[3,154s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.write [0x00007fae5d6abe90] (c1)
[3,154s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.SHA2.implCompress [0x00007fae5d6add90] (c1)
[3,154s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getIntUnaligned [0x00007fae7ca3be10] (c2)
[3,154s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb429c400.delegate [0x00007fae7ca3c110] (c2)
[3,154s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.getByte [0x00007fae7ca3c510] (c2)
[3,154s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.ReferenceCountedUtil.throwExceptionIfReleased [0x00007fae7ca3c810] (c2)
[3,155s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.util.Ints.requireNonNegative [0x00007fae5d6ae590] (c1)
[3,155s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeLong [0x00007fae7ca3cc90] (c2)
[3,155s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.Utils.putVarLong [0x00007fae5d6aec90] (c1)
[3,155s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.Maths.toUInt31 [0x00007fae5d6af090] (c1)
[3,155s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.write [0x00007fae5d6af810] (c1)
[3,155s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.write [0x00007fae5d6afd10] (c1)
[3,155s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.copyMemory [0x00007fae5d6b0090] (c1)
[3,155s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.isImmutableEmptyByteStore [0x00007fae5d6b0410] (c1)
[3,155s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.ensureCapacity [0x00007fae5d6b0810] (c1)
[3,155s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.SHA2.implCompress0 [0x00007fae5d6b0c90] (c1)
[3,155s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.safeCopySize [0x00007fae7ca3cf90] (c1)
[3,155s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.RandomCommon.writeRemaining [0x00007fae5d6b1c90] (c1)
[3,155s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeLimit [0x00007fae7ca3d290] (c1)
[3,155s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeCheckOffset [0x00007fae5d6b2090] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.SHA2.implCompressCheck [0x00007fae5d6b2b10] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeByte [0x00007fae7ca3d590] (c2)
[3,156s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_LI_I [0x00007fae7ca3d890] (c2)
[3,156s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeSerializerImpl.serialize [0x00007fae5d6b3210] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.read [0x00007fae5d6b3710] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles.identity [0x00007fae5d6b3c10] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.RandomDataInput.toByteArray [0x00007fae5d6b4590] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind.serializeDelegate [0x00007fae5d6b4910] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.readRemaining [0x00007fae5d6b4f10] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.toByteArray [0x00007fae5d6b5290] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NodeDelegate.getPreviousRevisionNumber [0x00007fae7ca3e510] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NodeDelegate.getLastModifiedRevisionNumber [0x00007fae7ca3e810] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.NumberNode.getKind [0x00007fae5d6b5890] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind.serializeStructNodeJsonValueNode [0x00007fae5d6b5c90] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write [0x00007fae5d6b6310] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.ByteArrayAccess.b2iBig64 [0x00007fae5d6b6690] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae5d6bce90] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write [0x00007fae5d6bd310] (c1)
[3,156s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractNumberNode.getValue [0x00007fae7ca3eb10] (c1)
[3,157s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.capacity [0x00007fae7ca3ee10] (c1)
[3,157s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae5d6bd990] (c1)
[3,157s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.read [0x00007fae5d6bde10] (c1)
[3,157s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae5d6bf010] (c1)
[3,157s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae5d6bf390] (c1)
[3,157s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.lambda$new$0 [0x00007fae5d6bff90] (c1)
[3,157s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.Jvm.arrayByteBaseOffset [0x00007fae5d6c0310] (c1)
[3,158s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.BytesStore.realCapacity [0x00007fae5d6c0610] (c1)
[3,158s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.RandomCommon.readLimit [0x00007fae5d6c0990] (c1)
[3,158s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles.constant [0x00007fae5d6c0d10] (c1)
[3,159s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory$$Lambda/0x00007fadb422ca68.apply [0x00007fae5d6c2510] (c1)
[3,159s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.writeInt [0x00007fae5d6c2910] (c1)
[3,159s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.writeInt [0x00007fae5d6c2c90] (c1)
[3,159s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getChildCount [0x00007fae5d6c3410] (c1)
[3,159s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind$28.serialize [0x00007fae5d6c3890] (c1)
[3,160s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.BooleanNode.getKind [0x00007fae5d6cc910] (c1)
[3,160s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.getInt [0x00007fae5d6ccd10] (c1)
[3,160s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractBooleanNode.getValue [0x00007fae7ca3f110] (c1)
[3,160s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.putInt [0x00007fae5d6cd010] (c1)
[3,160s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putInt [0x00007fae5d6cd310] (c1)
[3,160s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.StringNode.getKind [0x00007fae5d6cd610] (c1)
[3,160s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.write [0x00007fae5d6cd910] (c1)
[3,160s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind$26.serialize [0x00007fae5d6cdc90] (c1)
[3,161s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.write [0x00007fae5d6ce290] (c1)
[3,164s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeInt [0x00007fae5d6cf390] (c1)
[3,164s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.ValueNodeDelegate.isCompressed [0x00007fae7ca3f410] (c1)
[3,164s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind.serializeValDelegate [0x00007fae5d6cf710] (c1)
[3,164s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae5d6cff90] (c1)
[3,164s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.AbstractStringNode.getValNodeDelegate [0x00007fae7ca3f710] (c1)
[3,164s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.NullNode.getKind [0x00007fae5d6d0610] (c1)
[3,165s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.readRemaining [0x00007fae7ca3fa10] (c2)
[3,165s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind$29.serialize [0x00007fae5d6d0910] (c1)
[3,165s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.unmonitored [0x00007fae7ca3fd10] (c1)
[3,165s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.isDirectMemory [0x00007fae7ca40010] (c1)
[3,165s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.AbstractBytesStore.readPosition [0x00007fae7ca40310] (c1)
[3,165s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.ResourceConfiguration.storeChildCount [0x00007fae7ca40610] (c1)
[3,165s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.atomic.AtomicReference.get [0x00007fae7ca40910] (c1)
[3,165s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.<init> [0x00007fae5d6d0e90] (c1)
[3,165s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.canReleaseInBackground [0x00007fae7ca40c10] (c1)
[3,165s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.CopyOnWriteArrayList.size [0x00007fae5d6d1390] (c1)
[3,165s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.loadFence [0x00007fae5d6d1790] (c1)
[3,165s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.AbstractForwardingPageReadOnlyTrx.getResourceSession [0x00007fae5d6d1b10] (c1)
[3,166s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.sumCount [0x00007fae5d6d2210] (c1)
[3,166s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae7ca40f10] (c2)
[3,166s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ArrayNode.getKind [0x00007fae5d6d2810] (c1)
[3,166s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getLastChildKey [0x00007fae5d6d2c10] (c1)
[3,166s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind.serializeJsonObjectOrArrayStructDelegate [0x00007fae5d6d3090] (c1)
[3,167s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind.writeHash [0x00007fae5d6d4e90] (c1)
[3,167s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.CopyOnWriteArrayList.<init> [0x00007fae5d6d5310] (c1)
[3,167s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.order [0x00007fae5d6d5910] (c1)
[3,167s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeStopBit0 [0x00007fae7ca41710] (c2)
[3,167s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind$27.serialize [0x00007fae5d6d5d90] (c1)
[3,167s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.SHA2.implCompress0 [0x00007fae7ca42d90] (c2)
[3,167s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.read [0x00007fae7ca43c90] (c2)
[3,168s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractResourceSession.getResourceConfig [0x00007fae7ca44a90] (c2)
[3,168s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.SHA2.implCompress [0x00007fae7ca44d90] (c2)
[3,168s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind$20.serialize [0x00007fae5d6d6b90] (c1)
[3,169s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.Jvm.isResourceTracing [0x00007fae5d6d7e10] (c1)
[3,169s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.convEndian [0x00007fae5d6d8110] (c1)
[3,169s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.nextPutIndex [0x00007fae5d6d8510] (c1)
[3,169s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.ReferenceChangeListenerManager.callReferenceChangeListeners [0x00007fae5d6d8a10] (c1)
[3,169s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.Maths.toUInt31 [0x00007fae7ca45210] (c2)
[3,169s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.putLongUnaligned [0x00007fae5d6d9510] (c1)
[3,169s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.putLongUnalignedInternal [0x00007fae5d6d9f10] (c1)
[3,169s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.atomic.AtomicInteger.incrementAndGet [0x00007fae5d6da690] (c1)
[3,169s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted$$Lambda/0x00007fadb422ec30.<init> [0x00007fae5d6daa10] (c1)
[3,169s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.ReferenceChangeListenerManager.<init> [0x00007fae5d6dae10] (c1)
[3,171s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.ReferenceCountedTracer.onReleased [0x00007fae5d6db610] (c1)
[3,171s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeSerializerImpl.serialize [0x00007fae7ca45510] (c2)
[3,171s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemoryLoop [0x00007fae7ca46410] (c2)
[3,171s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.<init> [0x00007fae5d6dbe90] (c1)
[3,171s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putLongUnaligned [0x00007fae5d6de310] (c1)
[3,172s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapByteBuffer.putLong [0x00007fae5d6deb90] (c1)
[3,172s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putLongUnaligned [0x00007fae5d6dfc90] (c1)
[3,172s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.IOTools.counter [0x00007fae5d6e0190] (c1)
[3,172s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapByteBuffer.put [0x00007fae5d6e0810] (c1)
[3,172s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.nextPutIndex [0x00007fae5d6e0f10] (c1)
[3,172s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeByte [0x00007fae5d6e1410] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.writeByte [0x00007fae5d6e1890] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.putByte [0x00007fae5d6e2010] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted$$Lambda/0x00007fadb422ac48.<init> [0x00007fae5d6e2410] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.<init> [0x00007fae5d6e2810] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.compareAndSwapInt [0x00007fae5d6e3290] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.checkNativeAddress [0x00007fae5d6e3890] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.ByteArrayAccess.b2iBig64 [0x00007fae7ca46b10] (c2)
[3,173s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getAndAddLong [0x00007fae5d6e3b90] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.limit [0x00007fae5d6e4090] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.ensureCapacity [0x00007fae7ca47110] (c2)
[3,173s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapByteBuffer.byteOffset [0x00007fae7ca47810] (c2)
[3,173s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.valueCompareAndSet [0x00007fae5d6e4490] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.bytesStore [0x00007fae5d6e4910] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.writeIntLE [0x00007fae5d6e4d10] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.isDirectMemory [0x00007fae7ca47b10] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.realCapacity [0x00007fae7ca47e10] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.DigestBase.engineGetDigestLength [0x00007fae7ca48110] (c1)
[3,173s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapByteBuffer.isDirect [0x00007fae7ca48410] (c1)
[3,174s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.atomic.AtomicLong.get [0x00007fae7ca48710] (c1)
[3,174s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.failIfBytesOnBytes [0x00007fae5d6e5190] (c1)
[3,174s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.toByteArray [0x00007fae7ca48a10] (c2)
[3,174s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeInt [0x00007fae7ca4a110] (c2)
[3,175s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.toByteArray [0x00007fae5d6e5f90] (c1)
[3,175s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.compareAndSwapInt [0x00007fae5d6e6e90] (c1)
[3,175s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.<init> [0x00007fae5d6e7210] (c1)
[3,175s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putShort [0x00007fae7ca4ae10] ()
[3,175s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.<init> [0x00007fae5d6e7610] (c1)
[3,175s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.VanillaBytes.<init> [0x00007fae5d6e8210] (c1)
[3,176s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.reserve [0x00007fae5d6e8590] (c1)
[3,176s][debug][gc,nmethod   ] Register NMethod: java.io.OutputStream.flush [0x00007fae5d6e9890] (c1)
[3,176s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.AbstractBytesStore.canReleaseInBackground [0x00007fae5d6e9b90] (c1)
[3,176s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.ReferenceChangeListenerManager.notifyRemoved [0x00007fae5d6e9f90] (c1)
[3,176s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.release [0x00007fae5d6ea590] (c1)
[3,177s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.release [0x00007fae5d6eaa10] (c1)
[3,177s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$ListItr.hasNext [0x00007fae5d6ebd90] (c1)
[3,177s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$StatefulOp.opIsStateful [0x00007fae7ca4b190] (c1)
[3,177s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.XXHashJNI.XXH32_init [0x00007fae7ca4b490] ()
[3,177s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.reserve [0x00007fae5d6ec110] (c1)
[3,177s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$EntrySpliterator.characteristics [0x00007fae7ca4b890] (c1)
[3,177s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeCheckOffset [0x00007fae7ca4bb90] (c2)
[3,178s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae5d6ec590] (c1)
[3,178s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.ReferenceChangeListenerManager.notifyAdded [0x00007fae5d6ee110] (c1)
[3,178s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes$UncheckedRandomDataInputHolder.<init> [0x00007fae5d6ee690] (c1)
[3,178s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.read [0x00007fae7ca4c310] (c2)
[3,179s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae5d6eea90] (c1)
[3,179s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$Traverser.<init> [0x00007fae5d6f0410] (c1)
[3,179s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32JNI.checkState [0x00007fae5d6f0890] (c1)
[3,179s][debug][gc,nmethod   ] Register NMethod: net.jpountz.util.Native.isLoaded [0x00007fae5d6f0d90] (c1)
[3,179s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$AbstractImmutableList.iterator [0x00007fae5d6f1190] (c1)
[3,179s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.allocate [0x00007fae5d6f1790] (c1)
[3,179s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$ListItr.<init> [0x00007fae5d6f1c90] (c1)
[3,179s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Reference.<init> [0x00007fae7ca4d890] (c2)
[3,179s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageKind$1.serializePage [0x00007fae5d6f2090] (c1)
[3,180s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes$UncheckedRandomDataInputHolder.<init> [0x00007fae5d6fe510] (c1)
[3,180s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.RandomCommon.writeLimit [0x00007fae5d6fe990] (c1)
[3,180s][debug][gc,nmethod   ] Register NMethod: net.jpountz.util.SafeUtils.checkLength [0x00007fae5d6fed90] (c1)
[3,180s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.ResourceConfiguration.getBinaryEncodingVersion [0x00007fae7ca4dc10] (c1)
[3,180s][debug][gc,nmethod   ] Register NMethod: io.sirix.BinaryEncodingVersion.byteVersion [0x00007fae7ca4df10] (c1)
[3,180s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.getPageKey [0x00007fae7ca4e210] (c1)
[3,180s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.DigestBase.implCompressMultiBlock0 [0x00007fae5d6ff210] (c1)
[3,180s][debug][gc,nmethod   ] Register NMethod: net.jpountz.util.SafeUtils.checkRange [0x00007fae5d6ff790] (c1)
[3,180s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.getBytes [0x00007fae7ca4e510] (c1)
[3,180s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.ByteArrayAccess.i2bBig4 [0x00007fae5d700210] (c1)
[3,180s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.<init> [0x00007fae5d700c90] (c1)
[3,180s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.AbstractBytesStore.<init> [0x00007fae5d701090] (c1)
[3,180s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.isDirectMemory [0x00007fae5d701410] (c1)
[3,181s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.getIndexType [0x00007fae7ca4e810] (c1)
[3,181s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.DigestBase.engineUpdate [0x00007fae5d701890] (c1)
[3,181s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.bytesStore [0x00007fae5d702c10] (c1)
[3,182s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.wrapWithNativeBytes [0x00007fae5d703310] (c1)
[3,182s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.RandomCommon.writePosition [0x00007fae5d703a10] (c1)
[3,182s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.lambda$new$0 [0x00007fae7ca4eb10] (c2)
[3,182s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractSpinedBuffer.count [0x00007fae5d703e10] (c1)
[3,182s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.RandomDataInput.toByteArray [0x00007fae7ca4ef90] (c2)
[3,182s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.BytesStore.wrap [0x00007fae5d704290] (c1)
[3,182s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.write [0x00007fae7ca50610] (c2)
[3,182s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.NumberNode.getKind [0x00007fae7ca52810] (c2)
[3,182s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.wrap [0x00007fae5d704b10] (c1)
[3,183s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.<init> [0x00007fae5d704f10] (c1)
[3,183s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.initWords [0x00007fae5d705c90] (c1)
[3,183s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.getDeweyIds [0x00007fae7ca52b10] (c1)
[3,183s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.putShort [0x00007fae5d706190] (c1)
[3,183s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.ensureNotFinished [0x00007fae5d706590] (c1)
[3,183s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeShort [0x00007fae5d706a90] (c1)
[3,183s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.getSlots [0x00007fae7ca52e10] (c1)
[3,183s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4Factory.fastCompressor [0x00007fae7ca53110] (c1)
[3,183s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putShort [0x00007fae5d706f10] (c1)
[3,183s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Node.getChildCount [0x00007fae7ca53410] (c1)
[3,186s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageKind$1.serializePage [0x00007fae5d707290] (c1)
[3,186s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.getReferencesMap [0x00007fae7ca53710] (c1)
[3,186s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapByteBuffer.<init> [0x00007fae5d713690] (c1)
[3,187s][debug][gc,nmethod   ] Register NMethod: java.io.FilterOutputStream.<init> [0x00007fae5d713b90] (c1)
[3,187s][debug][gc,nmethod   ] Register NMethod: com.google.common.base.Preconditions.checkPositionIndexes [0x00007fae5d714190] (c1)
[3,187s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.write [0x00007fae7ca53a10] (c2)
[3,187s][debug][gc,nmethod   ] Register NMethod: com.google.common.base.Preconditions.checkState [0x00007fae5d714710] (c1)
[3,187s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.weakCompareAndSetLong [0x00007fae5d714e10] (c1)
[3,187s][debug][gc,nmethod   ] Register NMethod: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher.checkNotDone [0x00007fae5d715190] (c1)
[3,187s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.Bytes.isClear [0x00007fae5d715890] (c1)
[3,188s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind.serializeStructNodeJsonValueNode [0x00007fae7ca55c10] (c2)
[3,188s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.<init> [0x00007fae5d716290] (c1)
[3,188s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$ListN.size [0x00007fae7ca57710] (c2)
[3,189s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.SerializationType.serializeBitSet [0x00007fae5d716f90] (c1)
[3,189s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeShort [0x00007fae5d717b10] (c1)
[3,189s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeShort [0x00007fae5d718090] (c1)
[3,189s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.BooleanNode.getKind [0x00007fae7ca57a10] (c2)
[3,189s][debug][gc,nmethod   ] Register NMethod: java.io.OutputStream.<init> [0x00007fae5d718490] (c1)
[3,189s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.flush [0x00007fae5d718810] (c1)
[3,189s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.atomic.AtomicInteger.incrementAndGet [0x00007fae7ca57d10] (c2)
[3,189s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.VanillaBytes.bytesForRead [0x00007fae5d718e10] (c1)
[3,189s][debug][gc,nmethod   ] Register NMethod: java.util.Collection.stream [0x00007fae5d719f10] (c1)
[3,189s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.isElastic [0x00007fae7ca58010] (c1)
[3,189s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.getResourceConfig [0x00007fae7ca58310] (c1)
[3,190s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getChildCount [0x00007fae7ca58610] (c2)
[3,191s][debug][gc,nmethod   ] Register NMethod: java.nio.MappedByteBuffer.position [0x00007fae5d71a390] (c1)
[3,191s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.<init> [0x00007fae5d71a890] (c1)
[3,191s][debug][gc,nmethod   ] Register NMethod: java.nio.MappedByteBuffer.limit [0x00007fae5d71ac90] (c1)
[3,191s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.readBytes [0x00007fae5d71b190] (c1)
[3,191s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae7ca58990] (c2)
[3,192s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageKind$1.serializePage [0x00007fae5d71c010] (c1)
[3,192s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.ReferenceCountedTracer.throwExceptionIfReleased [0x00007fae7ca59090] (c2)
[3,192s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.writeShort [0x00007fae5d727f90] (c1)
[3,192s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory$$Lambda/0x00007fadb422ca68.apply [0x00007fae7ca59390] (c2)
[3,192s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.writeShort [0x00007fae5d728710] (c1)
[3,192s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae7ca59910] (c2)
[3,194s][debug][gc,nmethod   ] Register NMethod: java.nio.MappedByteBuffer.<init> [0x00007fae5d728b10] (c1)
[3,194s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.allocateMemory0 [0x00007fae7ca59f90] ()
[3,194s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.atomic.AtomicLong.incrementAndGet [0x00007fae5d728f10] (c1)
[3,194s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ForEachOps$ForEachOp$OfRef.accept [0x00007fae5d729290] (c1)
[3,194s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.wrap [0x00007fae5d729710] (c1)
[3,194s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.alignToHeapWordSize [0x00007fae5d729d10] (c1)
[3,195s][debug][gc,nmethod   ] Register NMethod: java.util.stream.SortedOps$OfRef.<init> [0x00007fae5d72a290] (c1)
[3,195s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractPipeline.exactOutputSizeIfKnown [0x00007fae5d72ab10] (c1)
[3,195s][debug][gc,nmethod   ] Register NMethod: java.io.ByteArrayOutputStream.close [0x00007fae5d72b710] (c1)
[3,196s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.allocateMemory [0x00007fae5d72ba10] (c1)
[3,196s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.allocateMemoryChecks [0x00007fae5d72ca90] (c1)
[3,196s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.atomic.AtomicLong.addAndGet [0x00007fae5d72d010] (c1)
[3,196s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.VM.isDirectMemoryPageAligned [0x00007fae5d72d390] (c1)
[3,196s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write [0x00007fae7ca5a310] (c2)
[3,196s][debug][gc,nmethod   ] Register NMethod: java.nio.Bits.pageSize [0x00007fae5d72d690] (c1)
[3,196s][debug][gc,nmethod   ] Register NMethod: java.io.ByteArrayOutputStream.<init> [0x00007fae5d72da90] (c1)
[3,196s][debug][gc,nmethod   ] Register NMethod: java.util.stream.SortedOps$AbstractRefSortingSink.<init> [0x00007fae5d72e710] (c1)
[3,197s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.forEach [0x00007fae5d72ef10] (c1)
[3,197s][debug][gc,nmethod   ] Register NMethod: java.util.stream.SortedOps$OfRef.opWrapSink [0x00007fae5d72fa10] (c1)
[3,197s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Finalizer.register [0x00007fae5d731090] (c1)
[3,197s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32.<init> [0x00007fae5d731490] (c1)
[3,197s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.XXHashFactory.newStreamingHash32 [0x00007fae5d731890] (c1)
[3,197s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4Factory.nativeInstance [0x00007fae5d732010] (c1)
[3,197s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.XXHashFactory.nativeInstance [0x00007fae5d732890] (c1)
[3,197s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32JNI.update [0x00007fae5d733110] (c1)
[3,197s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.FinalReference.<init> [0x00007fae5d733810] (c1)
[3,197s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32$1.<init> [0x00007fae5d733d10] (c1)
[3,197s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32JNI.getValue [0x00007fae5d734110] (c1)
[3,198s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32$1.reset [0x00007fae5d734790] (c1)
[3,198s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write [0x00007fae7ca5ac10] (c2)
[3,198s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4Factory.fastestInstance [0x00007fae5d735090] (c1)
[3,198s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.callOnRelease [0x00007fae5d738b90] (c1)
[3,198s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.StringNode.getKind [0x00007fae7ca5b510] (c2)
[3,198s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$CollectionView.<init> [0x00007fae5d73a490] (c1)
[3,198s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4263af8.apply [0x00007fae5d73a890] (c1)
[3,198s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4263d30.test [0x00007fae5d73ad90] (c1)
[3,199s][debug][gc,nmethod   ] Register NMethod: java.security.MessageDigestSpi.<init> [0x00007fae5d73b390] (c1)
[3,200s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeLimit [0x00007fae5d73b710] (c1)
[3,200s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.wrap [0x00007fae5d73bb10] (c1)
[3,200s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.<init> [0x00007fae5d73c090] (c1)
[3,200s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readPosition [0x00007fae5d73c710] (c1)
[3,203s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeLimit [0x00007fae5d73cb10] (c1)
[3,203s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.BytesStore.wrap [0x00007fae5d73d410] (c1)
[3,203s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readLimit [0x00007fae5d73da10] (c1)
[3,203s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.elasticByteBuffer [0x00007fae5d73de10] (c1)
[3,203s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.SHA2.implCompress0 [0x00007fae7ca5b810] (c2)
[3,203s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.BytesStore.copyTo [0x00007fae5d73e610] (c1)
[3,203s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.Bytes.elasticByteBuffer [0x00007fae5d73fe10] (c1)
[3,204s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.writeIntLE [0x00007fae7ca5c910] (c2)
[3,204s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.Bytes.elasticByteBuffer [0x00007fae5d740190] (c1)
[3,204s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.lambda$parallelSerializationOfKeyValuePages$0 [0x00007fae5d741090] (c1)
[3,204s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractPipeline.isParallel [0x00007fae7ca5cc90] (c2)
[3,204s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.BytesStore.bytesForRead [0x00007fae5d741490] (c1)
[3,204s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.NullNode.getKind [0x00007fae7ca5cf90] (c2)
[3,206s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readPosition [0x00007fae5d742590] (c1)
[3,206s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.<init> [0x00007fae5d745310] (c1)
[3,206s][debug][gc,nmethod   ] Register NMethod: java.security.MessageDigest.<init> [0x00007fae5d745690] (c1)
[3,206s][debug][gc,nmethod   ] Register NMethod: java.security.MessageDigest$Delegate.<init> [0x00007fae5d745b90] (c1)
[3,206s][debug][gc,nmethod   ] Register NMethod: java.security.MessageDigest.digest [0x00007fae5d746110] (c1)
[3,207s][debug][gc,nmethod   ] Register NMethod: java.security.MessageDigest$Delegate.engineDigest [0x00007fae5d746710] (c1)
[3,207s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4Compressor.compress [0x00007fae5d746b90] (c1)
[3,207s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind.serializeValDelegate [0x00007fae7ca5d290] (c2)
[3,207s][debug][gc,nmethod   ] Register NMethod: java.security.MessageDigest$Delegate.clone [0x00007fae5d747010] (c1)
[3,207s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.DigestBase.implCompressMultiBlock0 [0x00007fae7ca5eb10] (c2)
[3,207s][debug][gc,nmethod   ] Register NMethod: java.security.MessageDigest$Delegate$CloneableDelegate.<init> [0x00007fae5d747d90] (c1)
[3,207s][debug][gc,nmethod   ] Register NMethod: java.io.DataOutputStream.flush [0x00007fae5d748390] (c1)
[3,207s][debug][gc,nmethod   ] Register NMethod: java.security.MessageDigest$Delegate.engineUpdate [0x00007fae5d748810] (c1)
[3,207s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.<init> [0x00007fae5d748c90] (c1)
[3,208s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.AbstractBytesStore.<init> [0x00007fae5d749290] (c1)
[3,208s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.BytesStore.elasticByteBuffer [0x00007fae5d749690] (c1)
[3,208s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.BytesStore.bytesForWrite [0x00007fae5d749a10] (c1)
[3,208s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.CopyOnWriteArrayList.clear [0x00007fae5d74a210] (c1)
[3,208s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.checkResize [0x00007fae5d74a810] (c1)
[3,209s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind.serializeDelegate [0x00007fae7ca5f090] (c2)
[3,209s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.DigestBase.implCompressMultiBlockCheck [0x00007fae5d74ad10] (c1)
[3,209s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.AbstractForwardingPageReadOnlyTrx.getResourceSession [0x00007fae7ca61410] (c2)
[3,210s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.atomic.AtomicLong.compareAndSet [0x00007fae5d74b590] (c1)
[3,211s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind$27.serialize [0x00007fae7ca61810] (c2)
[3,211s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.DigestBase.engineUpdate [0x00007fae5d74b910] (c1)
[3,211s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind$28.serialize [0x00007fae7ca64890] (c2)
[3,211s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.Invokers$Holder.linkToTargetMethod [0x00007fae7ca68710] (c2)
[3,212s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getLastChildKey [0x00007fae7ca68a90] (c2)
[3,212s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ArrayNode.getKind [0x00007fae7ca68e10] (c2)
[3,212s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.flushBufferedData [0x00007fae5d74ca10] (c1)
[3,214s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae7ca69110] (c2)
[3,215s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial [0x00007fae7ca6c810] (c2)
[3,216s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.write [0x00007fae7ca6ce90] (c2)
[3,216s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae7ca6d910] (c2)
[3,217s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapByteBuffer.<init> [0x00007fae5d74db10] (c1)
[3,217s][debug][gc,nmethod   ] Register NMethod: jdk.internal.access.SharedSecrets.getJavaUtilCollectionAccess [0x00007fae5d74df10] (c1)
[3,217s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractPipeline.evaluateToArrayNode [0x00007fae5d74e410] (c1)
[3,217s][debug][gc,nmethod   ] Register NMethod: java.util.TimSort.sort [0x00007fae5d74ef10] (c1)
[3,217s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.DigestBase.implCompressMultiBlock0 [0x00007fae7ca6e090] (c2)
[3,217s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections.listFromTrustedArrayNullsAllowed [0x00007fae5d74fd10] (c1)
[3,217s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.write [0x00007fae7ca6e590] (c2)
[3,218s][debug][gc,nmethod   ] Register NMethod: java.nio.Bits.tryReserveMemory [0x00007fae5d750490] (c1)
[3,218s][debug][gc,nmethod   ] Register NMethod: com.google.common.base.Preconditions.checkArgument [0x00007fae5d750b10] (c1)
[3,218s][debug][gc,nmethod   ] Register NMethod: io.sirix.io.bytepipe.ByteHandlerPipeline.serialize [0x00007fae5d751610] (c1)
[3,218s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.BytesStore.realCapacity [0x00007fae7ca6f010] (c2)
[3,218s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.Bytes.wrapForRead [0x00007fae5d752010] (c1)
[3,218s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.setMemory [0x00007fae5d752e10] (c1)
[3,218s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.setMemory0 [0x00007fae7ca6f310] ()
[3,218s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Nodes.flatten [0x00007fae5d753210] (c1)
[3,218s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.setMemory [0x00007fae5d753f90] (c1)
[3,218s][debug][gc,nmethod   ] Register NMethod: java.nio.Bits.reserveMemory [0x00007fae5d754e10] (c1)
[3,218s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.addReferences [0x00007fae5d757690] (c1)
[3,218s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.setMemoryChecks [0x00007fae5d758710] (c1)
[3,219s][debug][gc,nmethod   ] Register NMethod: java.security.MessageDigest.update [0x00007fae5d759590] (c1)
[3,219s][debug][gc,nmethod   ] Register NMethod: com.google.common.hash.MessageDigestHashFunction.newHasher [0x00007fae5d759e90] (c1)
[3,219s][debug][gc,nmethod   ] Register NMethod: java.io.FilterOutputStream.close [0x00007fae5d75b390] (c1)
[3,219s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.sort [0x00007fae5d75c190] (c1)
[3,219s][debug][gc,nmethod   ] Register NMethod: jdk.internal.ref.Cleaner.<init> [0x00007fae5d75c690] (c1)
[3,219s][debug][gc,nmethod   ] Register NMethod: jdk.internal.ref.Cleaner.create [0x00007fae5d75cc90] (c1)
[3,219s][debug][gc,nmethod   ] Register NMethod: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher.hash [0x00007fae5d75d810] (c1)
[3,219s][debug][gc,nmethod   ] Register NMethod: jdk.internal.ref.Cleaner.add [0x00007fae5d75fe10] (c1)
[3,219s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectByteBuffer$Deallocator.<init> [0x00007fae5d760410] (c1)
[3,219s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae7ca6f690] (c2)
[3,219s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.Bytes.elasticHeapByteBuffer [0x00007fae5d760890] (c1)
[3,220s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.XXHashJNI.XXH32_update [0x00007fae7ca6ff90] ()
[3,220s][debug][gc,nmethod   ] Register NMethod: java.lang.ref.Finalizer.<init> [0x00007fae5d761590] (c1)
[3,220s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.XXHashJNI.XXH32_free [0x00007fae7ca70390] ()
[3,220s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.XXHashJNI.XXH32_digest [0x00007fae7ca70710] ()
[3,223s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.XXHashFactory.fastestInstance [0x00007fae5d761f10] (c1)
[3,223s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32.asChecksum [0x00007fae5d765a10] (c1)
[3,223s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32$1.getValue [0x00007fae5d765f10] (c1)
[3,223s][debug][gc,nmethod   ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32$1.update [0x00007fae5d766810] (c1)
[3,223s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4263f78.accept [0x00007fae5d766c90] (c1)
[3,223s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readLimit [0x00007fae5d767210] (c1)
[3,223s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.lambda$parallelSerializationOfKeyValuePages$1 [0x00007fae5d767c10] (c1)
[3,224s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectByteBuffer.<init> [0x00007fae5d768090] (c1)
[3,224s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.DigestBase.engineDigest [0x00007fae5d769a10] (c1)
[3,224s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.ByteArrayAccess.i2bBig [0x00007fae5d769f90] (c1)
[3,225s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4Utils.maxCompressedLength [0x00007fae5d76ac10] (c1)
[3,225s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4JNI.LZ4_compress_limitedOutput [0x00007fae7ca70b10] ()
[3,225s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.SHA2.clone [0x00007fae5d76b810] (c1)
[3,225s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.SHA2$SHA256.clone [0x00007fae5d76c490] (c1)
[3,225s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.<init> [0x00007fae5d76d190] (c1)
[3,225s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4JNICompressor.compress [0x00007fae5d771590] (c1)
[3,225s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4Compressor.maxCompressedLength [0x00007fae5d772b10] (c1)
[3,225s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.close [0x00007fae5d772e90] (c1)
[3,226s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.finish [0x00007fae5d773490] (c1)
[3,226s][debug][gc,nmethod   ] Register NMethod: java.nio.DirectByteBuffer.address [0x00007fae5d774090] (c1)
[3,226s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.internal.util.DirectBufferUtil.addressOrThrow [0x00007fae5d774b90] (c1)
[3,226s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.init [0x00007fae5d775210] (c1)
[3,226s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.setAddress [0x00007fae5d775c10] (c1)
[3,227s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.allocateNewByteBufferBackedStore [0x00007fae5d776810] (c1)
[3,227s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.reserveTransfer [0x00007fae5d777690] (c1)
[3,227s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.resizeHelper [0x00007fae5d778290] (c1)
[3,227s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.VanillaBytes.realCapacity [0x00007fae5d77b990] (c1)
[3,228s][debug][gc,nmethod   ] Register NMethod: java.util.stream.SpinedBuffer.ensureCapacity [0x00007fae5d77be10] (c1)
[3,228s][debug][gc,nmethod   ] Register NMethod: java.util.stream.SpinedBuffer.clear [0x00007fae5d77d610] (c1)
[3,228s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.sort [0x00007fae5d77e190] (c1)
[3,228s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getRevisionNumber [0x00007fae5d77e690] (c1)
[3,229s][debug][gc,nmethod   ] Register NMethod: java.util.stream.SpinedBuffer.<init> [0x00007fae5d77ed10] (c1)
[3,229s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.allocate [0x00007fae5d77f290] (c1)
[3,229s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.ReferenceChangeListenerManager.notifyTransferred [0x00007fae5d780210] (c1)
[3,229s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractSpinedBuffer.<init> [0x00007fae5d780790] (c1)
[3,229s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.AbstractBytesStore.readRemaining [0x00007fae5d780b10] (c1)
[3,229s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.AbstractBytesStore.writeRemaining [0x00007fae5d781190] (c1)
[3,229s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Nodes$SpinedNodeBuilder.asArray [0x00007fae5d781910] (c1)
[3,229s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.reserveTransfer [0x00007fae5d781c90] (c1)
[3,229s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putLongUnaligned [0x00007fae7ca70f90] (c2)
[3,230s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.<init> [0x00007fae5d782610] (c1)
[3,230s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.compressionLevel [0x00007fae5d783210] (c1)
[3,230s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.write [0x00007fae5d784a90] (c1)
[3,230s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.SHA2.implDigest [0x00007fae5d785c90] (c1)
[3,230s][debug][gc,nmethod   ] Register NMethod: io.sirix.io.bytepipe.LZ4Compressor.serialize [0x00007fae5d787810] (c1)
[3,230s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$EntrySpliterator.forEachRemaining [0x00007fae5d787e90] (c1)
[3,230s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.performRelease [0x00007fae5d788990] (c1)
[3,231s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted$$Lambda/0x00007fadb422ac48.run [0x00007fae5d788d10] (c1)
[3,231s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.<init> [0x00007fae5d789610] (c1)
[3,231s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind$29.serialize [0x00007fae7ca71310] (c2)
[3,231s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.<init> [0x00007fae5d789e90] (c1)
[3,231s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.Jvm.address [0x00007fae5d78dc10] (c1)
[3,231s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.<init> [0x00007fae5d78e310] (c1)
[3,231s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.inThreadPerformRelease [0x00007fae5d792010] (c1)
[3,232s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.Maths.toInt32 [0x00007fae5d792790] (c1)
[3,232s][debug][gc,nmethod   ] Register NMethod: java.io.OutputStream.flush [0x00007fae7ca73a90] (c2)
[3,236s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.resize [0x00007fae5d793310] (c1)
[3,237s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae7ca73d90] (c2)
[3,238s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind.serializeJsonObjectOrArrayStructDelegate [0x00007fae7ca77590] (c2)
[3,238s][debug][gc,nmethod   ] Register NMethod: java.util.stream.AbstractPipeline.evaluate [0x00007fae5d797b90] (c1)
[3,239s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapByteBuffer.putLong [0x00007fae7ca7c990] (c2)
[3,239s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind$26.serialize [0x00007fae7ca7cf10] (c2)
[3,242s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Nodes$SpinedNodeBuilder.copyInto [0x00007fae5d798a10] (c1)
[3,243s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline.makeNodeBuilder [0x00007fae5d798d90] (c1)
[3,243s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.DigestBase.engineDigest [0x00007fae5d799110] (c1)
[3,243s][debug][gc,nmethod   ] Register NMethod: java.security.MessageDigestSpi.clone [0x00007fae5d79a510] (c1)
[3,243s][debug][gc,nmethod   ] Register NMethod: java.util.stream.SpinedBuffer.copyInto [0x00007fae5d79b010] (c1)
[3,243s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.entrySet [0x00007fae5d79c210] (c1)
[3,243s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$EntrySpliterator.<init> [0x00007fae5d79c890] (c1)
[3,243s][debug][gc,nmethod   ] Register NMethod: java.util.stream.SpinedBuffer.capacity [0x00007fae5d79cc90] (c1)
[3,243s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Nodes$SpinedNodeBuilder.end [0x00007fae5d79d310] (c1)
[3,243s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline.lambda$toArray$0 [0x00007fae5d79d690] (c1)
[3,243s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Nodes$SpinedNodeBuilder.build [0x00007fae5d79da90] (c1)
[3,243s][debug][gc,nmethod   ] Register NMethod: java.util.stream.SortedOps$RefSortingSink.begin [0x00007fae5d79de10] (c1)
[3,244s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$EntrySetView.spliterator [0x00007fae5d79e710] (c1)
[3,244s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Nodes$SpinedNodeBuilder.<init> [0x00007fae5d79ed90] (c1)
[3,244s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$$Lambda/0x00007fadb417c5c0.apply [0x00007fae5d79f390] (c1)
[3,244s][debug][gc,nmethod   ] Register NMethod: java.util.stream.SortedOps$RefSortingSink$$Lambda/0x00007fadb417e9d0.<init> [0x00007fae5d79f810] (c1)
[3,244s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Nodes.builder [0x00007fae5d79fc10] (c1)
[3,244s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Nodes$SpinedNodeBuilder.begin [0x00007fae5d7a0290] (c1)
[3,244s][debug][gc,nmethod   ] Register NMethod: java.util.stream.SpinedBuffer.asArray [0x00007fae5d7a0710] (c1)
[3,244s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.AbstractForwardingPageReadOnlyTrx.getReader [0x00007fae5d7a1190] (c1)
[3,244s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getReader [0x00007fae5d7a1890] (c1)
[3,245s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putIntUnaligned [0x00007fae7ca80c10] (c2)
[3,245s][debug][gc,nmethod   ] Register NMethod: java.util.stream.SortedOps$RefSortingSink.end [0x00007fae5d7a1e90] (c1)
[3,246s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.CopyOnWriteArrayList.size [0x00007fae7ca80f10] (c2)
[3,252s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$EntrySetView.<init> [0x00007fae5d7a3b10] (c1)
[3,252s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind$20.serialize [0x00007fae7ca81210] (c2)
[3,254s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeStopBit [0x00007fae5d7a3f90] (c1)
[3,254s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$ArrayListSpliterator.<init> [0x00007fae5d7a4b90] (c1)
[3,254s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.compareAndSwapInt [0x00007fae7ca88090] (c2)
[3,255s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.ReferenceChangeListenerManager.callReferenceChangeListeners [0x00007fae7ca88390] (c2)
[3,255s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Nodes.builder [0x00007fae5d7a4f90] (c1)
[3,257s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.ReferenceCountedTracer.onReleased [0x00007fae7ca88810] (c2)
[3,257s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.RandomCommon.readLimit [0x00007fae7ca89190] (c2)
[3,258s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.valueCompareAndSet [0x00007fae7ca89490] (c2)
[3,260s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.<init> [0x00007fae7ca89790] (c2)
[3,262s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.<init> [0x00007fae7ca8a010] (c2)
[3,263s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.storeStoreFence [0x00007fae5d7a5990] (c1)
[3,263s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapByteBuffer.put [0x00007fae7ca8b090] (c2)
[3,269s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.toByteArray [0x00007fae7ca8b490] (c2)
[3,272s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.computeIfAbsent [0x00007fae7ca8c390] (c2)
[3,280s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.readByte [0x00007fae7ca8e710] (c2)
[3,286s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.failIfBytesOnBytes [0x00007fae7ca8ea90] (c2)
[3,302s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.<init> [0x00007fae7ca8ed90] (c2)
[3,304s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae5d7a5d10] (c1)
[3,305s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae5d7a7690] (c1)
[3,305s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.limit [0x00007fae7ca8f290] (c2)
[3,306s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.bytesStore [0x00007fae7ca8f690] (c2)
[3,307s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.writeByte [0x00007fae7ca8fa90] (c2)
[3,307s][debug][gc,nmethod   ] Register NMethod: java.io.ByteArrayOutputStream.close [0x00007fae7ca8fe90] (c2)
[3,309s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.reserve [0x00007fae7ca90190] (c2)
[3,311s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.order [0x00007fae7ca90790] (c2)
[3,312s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.reserve [0x00007fae7ca90a90] (c2)
[3,319s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.<init> [0x00007fae7ca91190] (c2)
[3,323s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageKind$1.serializePage [0x00007fae7ca92f10] (c2)
[3,323s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.VanillaBytes.<init> [0x00007fae7ca9cd90] (c2)
[3,323s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.atomic.AtomicLong.incrementAndGet [0x00007fae7ca9eb90] (c2)
[3,327s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.atomic.AtomicLong.addAndGet [0x00007fae7ca9ee90] (c2)
[3,333s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae7ca9f190] (c2)
[3,337s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.atomic.AtomicLong.compareAndSet [0x00007fae7caa2810] (c2)
[3,338s][debug][gc,nmethod   ] Register NMethod: java.lang.String.<init> [0x00007fae5d7a9210] (c1)
[3,338s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes$UncheckedRandomDataInputHolder.<init> [0x00007fae7caa2b10] (c2)
[3,339s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.RandomCommon.writeLimit [0x00007fae7caa2e10] (c2)
[3,341s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.setHashCode [0x00007fae7caa3110] (c1)
[3,341s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.setBytes [0x00007fae7caa3410] (c1)
[3,342s][debug][gc,nmethod   ] Register NMethod: java.io.DataOutputStream.incCount [0x00007fae5d7ab910] (c1)
[3,343s][debug][gc,nmethod   ] Register NMethod: java.util.stream.Sink.begin [0x00007fae5d7abc90] (c1)
[3,349s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.release [0x00007fae7caa3710] (c2)
[3,355s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.performRelease [0x00007fae7caa4610] (c2)
[3,365s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.readLong [0x00007fae7caa4910] (c2)
[3,370s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.Wrapper.forceType [0x00007fae5d7abf90] (c1)
[3,374s][debug][gc,nmethod   ] Register NMethod: java.util.ReverseOrderListView.size [0x00007fae5d7ac290] (c1)
[3,375s][debug][gc,nmethod   ] Register NMethod: sun.invoke.util.Wrapper.wrapperType [0x00007fae5d7ac710] (c1)
[3,375s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm.uncustomize [0x00007fae7caa4c90] (c2)
[3,376s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae7caa4f90] (c2)
[3,376s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind.writeHash [0x00007fae7caa8710] (c2)
[3,380s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$ArrayListSpliterator.forEachRemaining [0x00007fae5d7ada10] (c1)
[3,381s][debug][gc,nmethod   ] Register NMethod: java.io.ByteArrayOutputStream.toByteArray [0x00007fae5d7ae590] (c1)
[3,381s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.AbstractBytesStore.canReleaseInBackground [0x00007fae7caa9210] (c2)
[3,381s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.rangeCheck [0x00007fae7caa9510] (c2)
[3,382s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.checkNativeAddress [0x00007fae7caa9810] (c2)
[3,382s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.invokeStatic [0x00007fae5d7aea90] (c1)
[3,382s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BoundMethodHandle$Species_I.make [0x00007fae5d7af310] (c1)
[3,382s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.BoundMethodHandle$Species_LLLL.make [0x00007fae5d7af810] (c1)
[3,383s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.invokeStatic [0x00007fae5d7afe10] (c1)
[3,383s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandles.insertArgumentsChecks [0x00007fae5d7b0690] (c1)
[3,383s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectKeyNode.getNameKey [0x00007fae7caa9b10] (c1)
[3,383s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb427b800.reinvoke [0x00007fae5d7b1010] (c1)
[3,384s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectKeyNode.getKind [0x00007fae5d7b1890] (c1)
[3,384s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getChildCount [0x00007fae7caa9e10] (c2)
[3,384s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectStringNode.getKind [0x00007fae5d7b1c90] (c1)
[3,384s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl$CountingWrapper.countDown [0x00007fae5d7b2090] (c1)
[3,384s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind$22.serialize [0x00007fae5d7b2610] (c1)
[3,384s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getLastChildKey [0x00007fae7caaa190] (c2)
[3,384s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind$21.serialize [0x00007fae5d7b3090] (c1)
[3,390s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeStopBit [0x00007fae7caaa590] (c2)
[3,390s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectNode.getKind [0x00007fae5d7b5d10] (c1)
[3,390s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.release [0x00007fae7caab390] (c2)
[3,391s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind$19.serialize [0x00007fae5d7b6110] (c1)
[3,391s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.Utils.putVarLong [0x00007fae7caac410] (c2)
[3,392s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.json.ObjectNumberNode.getKind [0x00007fae7caad210] (c2)
[3,393s][debug][gc,nmethod   ] Register NMethod: java.io.DataOutputStream.write [0x00007fae5d7b7290] (c1)
[3,393s][debug][gc,nmethod   ] Register NMethod: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher.update [0x00007fae5d7b7910] (c1)
[3,396s][debug][gc,nmethod   ] Register NMethod: java.io.FilterOutputStream.write [0x00007fae5d7b8290] (c1)
[3,396s][debug][gc,nmethod   ] Register NMethod: java.io.DataOutputStream.<init> [0x00007fae5d7b8710] (c1)
[3,396s][debug][gc,nmethod   ] Register NMethod: com.google.common.hash.HashCode$BytesHashCode.asBytes [0x00007fae5d7b8e90] (c1)
[3,396s][debug][gc,nmethod   ] Register NMethod: com.google.common.hash.AbstractHashFunction.hashBytes [0x00007fae5d7b9410] (c1)
[3,401s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putLong [0x00007fae5d7ba590] (c1)
[3,401s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeLong [0x00007fae5d7ba910] (c1)
[3,401s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.writeLong [0x00007fae5d7bad90] (c1)
[3,401s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.putLong [0x00007fae5d7bb390] (c1)
[3,401s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.putLong [0x00007fae7caad510] (c2)
[3,404s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapByteBuffer.<init> [0x00007fae7caad810] (c2)
[3,404s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.allocate [0x00007fae7caadf10] (c2)
[3,405s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.getNameNodeDelegate [0x00007fae7caae490] (c1)
[3,405s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NameNodeDelegate.getURIKey [0x00007fae7caae790] (c1)
[3,405s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NameNodeDelegate.getPathNodeKey [0x00007fae7caaea90] (c1)
[3,405s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.getReferences [0x00007fae7caaed90] (c1)
[3,409s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.HashEntryNode.getNodeKey [0x00007fae7caaf090] (c1)
[3,409s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.HashCountEntryNode.getNodeKey [0x00007fae7caaf390] (c1)
[3,410s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.RandomCommon.readRemaining [0x00007fae5d7bb790] (c1)
[3,418s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind.serializeJsonObjectOrArrayStructDelegate [0x00007fae7caaf690] (c2)
[3,422s][debug][gc,nmethod   ] Register NMethod: com.google.common.hash.AbstractHashFunction.newHasher [0x00007fae5d7bbc90] (c1)
[3,431s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.writeLong [0x00007fae7cab4a10] (c2)
[3,431s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.writeLong [0x00007fae7cab4d10] (c2)
[3,432s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.fill [0x00007fae7cab5110] (c2)
[3,432s][debug][gc,nmethod   ] Register NMethod: java.lang.Thread.isInterrupted [0x00007fae7cab5590] (c1)
[3,433s][debug][gc,nmethod   ] Register NMethod: java.nio.channels.spi.AbstractInterruptibleChannel.isOpen [0x00007fae5d7bc110] (c1)
[3,434s][debug][gc,nmethod   ] Register NMethod: java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn [0x00007fae5d7bc490] (c1)
[3,434s][debug][gc,nmethod   ] Register NMethod: java.lang.Thread.blockedOn [0x00007fae5d7bca10] (c1)
[3,434s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.fill [0x00007fae7cab5890] (c2)
[3,434s][debug][gc,nmethod   ] Register NMethod: java.lang.System$2.blockedOn [0x00007fae5d7bcf90] (c1)
[3,435s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.bytesStore [0x00007fae7cab5e10] (c1)
[3,436s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.fill [0x00007fae7cab6110] (c2)
[3,436s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.clear [0x00007fae7cab6710] (c2)
[3,438s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write0 [0x00007fae5d7bd310] (c1)
[3,438s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write0 [0x00007fae5d7bde10] (c1)
[3,438s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.setHash [0x00007fae7cab6d10] (c1)
[3,439s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$BaseIterator.<init> [0x00007fae5d7be710] (c1)
[3,440s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$ValueIterator.<init> [0x00007fae5d7beb90] (c1)
[3,440s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.values [0x00007fae5d7bef10] (c1)
[3,440s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$ValuesView.iterator [0x00007fae5d7bf590] (c1)
[3,440s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.getHashCode [0x00007fae7cab7010] (c1)
[3,440s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.clearPage [0x00007fae5d7bfb10] (c1)
[3,441s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.clear [0x00007fae5d7bfe90] (c1)
[3,441s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.clearPage [0x00007fae5d7c1010] (c1)
[3,441s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.start [0x00007fae7cab7310] (c2)
[3,441s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.fill [0x00007fae7cab7690] (c2)
[3,441s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.NativeThread.current0 [0x00007fae7cab7f90] ()
[3,441s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.NativeThread.currentNativeThread [0x00007fae5d7c1b10] (c1)
[3,441s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.FileChannelImpl.beginBlocking [0x00007fae5d7c1e90] (c1)
[3,441s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.FileChannelImpl.ensureOpen [0x00007fae5d7c2290] (c1)
[3,441s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.FileChannelImpl.endBlocking [0x00007fae5d7c2790] (c1)
[3,441s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.NativeThreadSet.add [0x00007fae5d7c2b90] (c1)
[3,441s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.NativeThreadSet.remove [0x00007fae5d7c3790] (c1)
[3,441s][debug][gc,nmethod   ] Register NMethod: java.nio.channels.spi.AbstractInterruptibleChannel.end [0x00007fae5d7c3e10] (c1)
[3,442s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.setKey [0x00007fae7cab8310] (c2)
[3,442s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.UnixFileDispatcherImpl.size0 [0x00007fae7cab8610] ()
[3,442s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.IOStatus.normalize [0x00007fae5d7c4810] (c1)
[3,442s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.UnixFileDispatcherImpl.size [0x00007fae5d7c4b90] (c1)
[3,443s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PagePersister.serializePage [0x00007fae5d7c4f10] (c1)
[3,443s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.commit [0x00007fae5d7c5a90] (c1)
[3,443s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.FileChannelImpl.size [0x00007fae5d7c6a90] (c1)
[3,443s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageKind.getKind [0x00007fae5d7c8910] (c1)
[3,443s][debug][gc,nmethod   ] Register NMethod: java.nio.channels.spi.AbstractInterruptibleChannel.begin [0x00007fae5d7c9110] (c1)
[3,443s][debug][gc,nmethod   ] Register NMethod: io.sirix.io.filechannel.FileChannelWriter.write [0x00007fae5d7c9d10] (c1)
[3,443s][debug][gc,nmethod   ] Register NMethod: io.sirix.io.filechannel.FileChannelWriter.write [0x00007fae5d7ca090] (c1)
[3,443s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.VanillaBytes.write [0x00007fae5d7ca690] (c1)
[3,443s][debug][gc,nmethod   ] Register NMethod: io.sirix.io.filechannel.FileChannelWriter.getOffset [0x00007fae5d7cab10] (c1)
[3,443s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.VanillaBytes.write [0x00007fae5d7cb290] (c1)
[3,443s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.Bytes.bytesForWrite [0x00007fae5d7cb890] (c1)
[3,443s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.fill [0x00007fae7cab8a10] (c2)
[3,445s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write [0x00007fae5d7cc490] (c1)
[3,445s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.canReadDirect [0x00007fae5d7cc890] (c1)
[3,445s][debug][gc,nmethod   ] Register NMethod: io.sirix.io.filechannel.FileChannelWriter.writePageReference [0x00007fae5d7cce90] (c1)
[3,445s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.commit [0x00007fae5d7d6490] (c1)
[3,445s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write [0x00007fae5d7d7190] (c1)
[3,445s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.write [0x00007fae5d7d8290] (c1)
[3,445s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writePosition [0x00007fae5d7d9210] (c1)
[3,446s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writePosition [0x00007fae5d7d9610] (c1)
[3,446s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.VanillaBytes.write0 [0x00007fae5d7da310] (c1)
[3,449s][debug][gc,nmethod   ] Register NMethod: java.nio.MappedByteBuffer.limit [0x00007fae5d7db510] (c1)
[3,449s][debug][gc,nmethod   ] Register NMethod: java.nio.MappedByteBuffer.position [0x00007fae5d7db990] (c1)
[3,450s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.NativeDispatcher.needsPositionLock [0x00007fae7cab9210] (c1)
[3,450s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write0 [0x00007fae7cab9510] (c2)
[3,452s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.getHash [0x00007fae7caba990] (c1)
[3,452s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.getPageFragments [0x00007fae7cabac90] (c1)
[3,452s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.writeLong [0x00007fae5d7dbe10] (c1)
[3,452s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.SerializationType.writeHash [0x00007fae5d7dc210] (c1)
[3,453s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.SerializationType.writePageFragments [0x00007fae5d7dd110] (c1)
[3,454s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeLong [0x00007fae7cabaf90] (c2)
[3,455s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.underlyingObject [0x00007fae7cabbb10] (c1)
[3,455s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.underlyingObject [0x00007fae7cabbe10] (c2)
[3,456s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.writeLong [0x00007fae7cabc210] (c2)
[3,458s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.readBytes [0x00007fae7cabce90] (c2)
[3,460s][debug][gc,nmethod   ] Register NMethod: java.nio.MappedByteBuffer.position [0x00007fae5d7de210] (c1)
[3,465s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandleImpl$CountingWrapper.maybeStopCounting [0x00007fae5d7de710] (c1)
[3,466s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$Traverser.advance [0x00007fae7cabd410] (c2)
[3,466s][debug][gc,nmethod   ] Register NMethod: java.lang.Math.multiplyExact [0x00007fae5d7dee90] (c1)
[3,466s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.appendUtf8Char [0x00007fae5d7df710] (c1)
[3,469s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write0 [0x00007fae7cabdb90] (c2)
[3,483s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.IOUtil.bufferAddress [0x00007fae5d7e1390] (c1)
[3,484s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer$2.acquireSession [0x00007fae5d7e1790] (c1)
[3,484s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer$2.releaseSession [0x00007fae5d7e1f10] (c1)
[3,484s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer$2.getBufferAddress [0x00007fae5d7e2890] (c1)
[3,484s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.IOUtil.acquireScope [0x00007fae5d7e2c10] (c1)
[3,484s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.IOStatus.normalize [0x00007fae5d7e3b90] (c1)
[3,484s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.IOUtil.releaseScope [0x00007fae5d7e3f10] (c1)
[3,484s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.charAt [0x00007fae5d7e4b10] (c1)
[3,484s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.charAt [0x00007fae5d7e4e90] (c1)
[3,484s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataInput.rawReadByte [0x00007fae5d7e5590] (c1)
[3,485s][debug][gc,nmethod   ] Register NMethod: net.jpountz.util.SafeUtils.readIntLE [0x00007fae5d7e5a10] (c1)
[3,485s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.readInt [0x00007fae5d7e5e90] (c1)
[3,485s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.readInt [0x00007fae5d7e6290] (c1)
[3,485s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readInt [0x00007fae5d7e6f10] (c1)
[3,485s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.append [0x00007fae5d7e7610] (c1)
[3,486s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cabf910] ()
[3,486s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cabfc10] ()
[3,486s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cabff10] ()
[3,486s][debug][gc,nmethod   ] Register NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitCode [0x00007fae7cac0210] (c2)
[3,487s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$DMH/0x00007fadb40f8800.invokeStatic [0x00007fae5d7e7a10] (c1)
[3,488s][debug][gc,nmethod   ] Register NMethod: jdk.internal.vm.Continuation.enterSpecial [0x00007fae7cac0510] ()
[3,488s][debug][gc,nmethod   ] Register NMethod: java.lang.Thread.isVirtual [0x00007fae5d7e8110] (c1)
[3,488s][debug][gc,nmethod   ] Register NMethod: java.nio.channels.spi.AbstractInterruptibleChannel.begin [0x00007fae5d7e8510] (c1)
[3,489s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.setAsTypeCache [0x00007fae5d7e9190] (c1)
[3,489s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae5d7e9b90] (c1)
[3,490s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes$ReportUnoptimised.reportOnce [0x00007fae5d7eab90] (c1)
[3,490s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataInput.read [0x00007fae5d7eae90] (c1)
[3,490s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.read [0x00007fae5d7eb390] (c1)
[3,490s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.VanillaBytes.read [0x00007fae5d7ec110] (c1)
[3,490s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cac0910] ()
[3,491s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7cac0c10] ()
[3,491s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7cac1190] ()
[3,491s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7cac1490] ()
[3,491s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.InvokerBytecodeGenerator.assertStaticType [0x00007fae5d7ecf10] (c1)
[3,491s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.setDeweyId [0x00007fae5d7ed910] (c1)
[3,491s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.getDeweyId [0x00007fae5d7ede90] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.getSlot [0x00007fae5d7ee310] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.setSlot [0x00007fae5d7ee790] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.IndexLogKey.<init> [0x00007fae5d7eee10] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.HashEntryNode.getKey [0x00007fae7cac1a10] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.HashCountEntryNode.getValue [0x00007fae7cac1d10] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.HashEntryNode.getValue [0x00007fae7cac2010] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.readByte [0x00007fae5d7ef210] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.readByte [0x00007fae5d7ef690] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getValue [0x00007fae5d7efe10] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.clear [0x00007fae5d7f1210] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getByte [0x00007fae5d7f1b10] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.getByte [0x00007fae5d7f1e90] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.IndexLogKey.getRecordPageKey [0x00007fae7cac2310] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.setCharAt [0x00007fae5d7f2290] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readByte [0x00007fae5d7f2610] (c1)
[3,492s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.IndexLogKey.getIndexType [0x00007fae7cac2610] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.isLatin1 [0x00007fae7cac2910] (c2)
[3,493s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.scoped.StrongReferenceScopedResource.get [0x00007fae7cac2c10] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.IndexLogKey.getIndexNumber [0x00007fae7cac2f10] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.IndexLogKey.getRevisionNumber [0x00007fae7cac3210] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.setCharAt [0x00007fae5d7f2c10] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx$RecordPage.page [0x00007fae7cac3510] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: java.lang.StringLatin1.canEncode [0x00007fae7cac3810] (c2)
[3,493s][debug][gc,nmethod   ] Register NMethod: java.lang.Byte.valueOf [0x00007fae5d7f3890] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.setLength [0x00007fae5d7f3c90] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: java.lang.AbstractStringBuilder.setLength [0x00007fae5d7f4010] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap.insert [0x00007fae5d7f4990] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.HashEntryNode.<init> [0x00007fae5d7f5010] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: java.lang.ThreadLocal.get [0x00007fae5d7f5610] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: java.util.function.UnaryOperator.lambda$identity$0 [0x00007fae5d7f5a10] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: java.util.function.UnaryOperator$$Lambda/0x00007fadb41cfc98.apply [0x00007fae5d7f5d10] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.threads.CleaningThreadLocal.get [0x00007fae5d7f6090] (c1)
[3,493s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getInt [0x00007fae5d7f6690] (c1)
[3,494s][debug][gc,nmethod   ] Register NMethod: sun.misc.Unsafe.getInt [0x00007fae5d7f6990] (c1)
[3,494s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.readInt [0x00007fae5d7f6d90] (c1)
[3,494s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4258c00.linkToTargetMethod [0x00007fae5d7f7210] (c1)
[3,494s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.readInt [0x00007fae5d7f7810] (c1)
[3,494s][debug][gc,nmethod   ] Register NMethod: java.lang.invoke.LambdaForm$DMH/0x00007fadb4258400.newInvokeSpecial [0x00007fae5d7f7f90] (c1)
[3,494s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeKind.getKind [0x00007fae5d7f8a10] (c1)
[3,494s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataInput.readStopBit [0x00007fae5d7f9210] (c1)
[3,494s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.hash [0x00007fae7cac3b10] (c2)
[3,494s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getRecord [0x00007fae5d7f9590] (c1)
[3,494s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.readStopBit [0x00007fae5d7fa810] (c1)
[3,494s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getRecordPage [0x00007fae5d7fb390] (c1)
[3,494s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getDataRecord [0x00007fae5d7fcb90] (c1)
[3,495s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.AbstractForwardingNode.<init> [0x00007fae7cac3e10] (c2)
[3,495s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getRecord [0x00007fae5d7fdf90] (c1)
[3,495s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getMostRecentPageContainer [0x00007fae5d7ff510] (c1)
[3,495s][debug][gc,nmethod   ] Register NMethod: java.util.Objects.equals [0x00007fae7cac4110] (c2)
[3,495s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.Utils.getVarLong [0x00007fae5d800010] (c1)
[3,495s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getPageContainer [0x00007fae5d800510] (c1)
[3,495s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.computeIfAbsent [0x00007fae5d801610] (c1)
[3,495s][debug][gc,nmethod   ] Register NMethod: io.sirix.io.BytesUtils.doWrite [0x00007fae5d803690] (c1)
[3,495s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getReferenceToLeafOfSubtree [0x00007fae5d804090] (c1)
[3,495s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.NodeSerializerImpl.deserialize [0x00007fae5d805210] (c1)
[3,495s][debug][gc,nmethod   ] Register NMethod: io.brackit.query.atomic.AbstractAtomic.<init> [0x00007fae7cac4410] (c2)
[3,495s][debug][gc,nmethod   ] Register NMethod: io.brackit.query.jdm.AbstractItem.<init> [0x00007fae7cac4710] (c2)
[3,495s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.dereferenceIndirectPageReference [0x00007fae5d805d90] (c1)
[3,495s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap.getOrDefault [0x00007fae5d806210] (c1)
[3,495s][debug][gc,nmethod   ] Register NMethod: io.brackit.query.sequence.AbstractSequence.<init> [0x00007fae7cac4a10] (c2)
[3,495s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.isMostRecentlyReadPathSummaryPage [0x00007fae5d806c90] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4254ae8.apply [0x00007fae5d807210] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.getRightSibling [0x00007fae7cac4d10] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getLeafPageReference [0x00007fae5d807790] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.lambda$getPageContainer$2 [0x00007fae5d807b10] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getName [0x00007fae5d808590] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readCheckOffset [0x00007fae7cac5010] (c2)
[3,496s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.hashCode [0x00007fae5d80a590] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NameNodeDelegate.<init> [0x00007fae5d80ae10] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NodeDelegate.hashCode [0x00007fae5d80b510] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: io.sirix.node.delegates.NameNodeDelegate.hashCode [0x00007fae5d80c390] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.<init> [0x00007fae5d80d810] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: io.sirix.axis.pathsummary.AbstractAxis.hasNext [0x00007fae5d80eb10] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.getParent [0x00007fae7cac5510] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.path.summary.PathNode.setParent [0x00007fae7cac5810] (c1)
[3,496s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.readUnsignedByte [0x00007fae5d80f410] (c1)
[3,497s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.NamePage.getName [0x00007fae5d80f810] (c1)
[3,497s][debug][gc,nmethod   ] Register NMethod: io.sirix.index.name.Names.getName [0x00007fae5d810a10] (c1)
[3,497s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readSkip [0x00007fae5d811110] (c1)
[3,497s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.RandomCommon.readRemaining [0x00007fae7cac5b10] (c2)
[3,497s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.getSlot [0x00007fae7cac5e10] (c2)
[3,497s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readLong [0x00007fae5d811790] (c1)
[3,497s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.SerializationType.readHash [0x00007fae5d811e90] (c1)
[3,497s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readOffsetPositionMoved [0x00007fae7cac6190] (c2)
[3,497s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertAsSibling [0x00007fae5d812610] (c1)
[3,497s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.SerializationType.readPageFragments [0x00007fae5d815810] (c1)
[3,498s][debug][gc,nmethod   ] Register NMethod: java.nio.Buffer.remaining [0x00007fae7cac6790] (c2)
[3,498s][debug][gc,nmethod   ] Register NMethod: java.lang.Long.numberOfTrailingZeros [0x00007fae7cac6a90] (c2)
[3,498s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.getDeweyId [0x00007fae7cac6d90] (c2)
[3,499s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.setPageFragments [0x00007fae5d816790] (c1)
[3,499s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.asList [0x00007fae5d816b10] (c1)
[3,499s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays$ArrayList.<init> [0x00007fae5d817310] (c1)
[3,499s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList.<init> [0x00007fae5d817a10] (c1)
[3,499s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays$ArrayList.get [0x00007fae5d818390] (c1)
[3,499s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageReference.setLogKey [0x00007fae7cac7110] (c2)
[3,499s][debug][gc,nmethod   ] Register NMethod: java.util.AbstractList.<init> [0x00007fae7cac7410] (c2)
[3,499s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.nextSetBit [0x00007fae7cac7710] (c2)
[3,499s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.delegates.FullReferencesPage.getReferences [0x00007fae5d818810] (c1)
[3,500s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeHashing.adaptHashesWithAdd [0x00007fae5d819110] (c1)
[3,500s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readInt [0x00007fae7cac7b90] (c2)
[3,500s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordForModification [0x00007fae5d819790] (c1)
[3,500s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processString [0x00007fae5d81b190] (c1)
[3,500s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordPage [0x00007fae5d81b910] (c1)
[3,500s][debug][gc,nmethod   ] Register NMethod: io.sirix.cache.PageContainer.getModifiedAsUnorderedKeyValuePage [0x00007fae7cac8390] (c2)
[3,500s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertStringValue [0x00007fae5d81d410] (c1)
[3,501s][debug][gc,nmethod   ] Register NMethod: java.util.Arrays.copyOf [0x00007fae7cac8710] (c2)
[3,501s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.adaptNodesAndHashesForInsertAsChild [0x00007fae5d820910] (c1)
[3,501s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsFirstChild [0x00007fae5d821b90] (c1)
[3,501s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractDeweyIDManager.newFirstChildID [0x00007fae7cac9090] (c2)
[3,502s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getMostRecentPageContainer [0x00007fae7cac9790] (c2)
[3,503s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.delegates.BitmapReferencesPage.getOrCreateReference [0x00007fae7caca010] (c2)
[3,504s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getValue [0x00007fae7cacb310] (c2)
[3,505s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeHashing.adaptHashesWithAdd [0x00007fae7cacbc10] (c2)
[3,506s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordPage [0x00007fae7cacc090] (c2)
[3,508s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageKind$1.serializePage [0x00007fae7cacd590] (c2)
[3,509s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getPageContainer [0x00007fae7cadd190] (c2)
[3,509s][debug][gc,nmethod   ] Register NMethod: java.lang.System$2.currentCarrierThread [0x00007fae7caddf10] (c2)
[3,511s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Blocker.end [0x00007fae5d827210] (c1)
[3,511s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Blocker.currentCarrierThread [0x00007fae7cade210] (c2)
[3,513s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Blocker.begin [0x00007fae5d827d10] (c1)
[3,513s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordForModification [0x00007fae7cade510] (c2)
[3,515s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processString [0x00007fae7cae0e90] (c2)
[3,515s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getRecord [0x00007fae7cae2b10] (c2)
[3,516s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveTo [0x00007fae7cae4a10] (c2)
[3,521s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getParentKind [0x00007fae7cae6c10] (c2)
[3,524s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertStringValue [0x00007fae7cae9310] (c2)
[3,558s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertAsSibling [0x00007fae7caec910] (c2)
[3,568s][debug][gc,nmethod   ] Register NMethod: java.nio.HeapCharBuffer.slice [0x00007fae7caf5890] (c2)
[3,579s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.adaptNodesAndHashesForInsertAsChild [0x00007fae7caf5e90] (c2)
[3,589s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4293260.apply [0x00007fae5d828b10] (c1)
[3,603s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsFirstChild [0x00007fae7caf7210] (c2)
[3,620s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.AbstractNodeTrxImpl.getCurrentNode [0x00007fae7cafc890] (c2)
[3,621s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.longs.AbstractLongList.push [0x00007fae7cafcc90] (c2)
[3,624s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.append [0x00007fae5d829090] (c1)
[3,626s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.moveTo [0x00007fae7cafd090] (c2)
[3,626s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.readEscapeCharacter [0x00007fae5d829410] (c1)
[3,626s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertArrayAsRightSibling [0x00007fae7cafd510] (c2)
[3,626s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.moveToParent [0x00007fae7cafff90] (c2)
[3,629s][debug][gc,nmethod   ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertArray [0x00007fae7cb00510] (c2)
[3,638s][debug][gc,nmethod   ] Register NMethod: com.google.gson.stream.JsonReader.readEscapeCharacter [0x00007fae7cb03d90] (c2)
[3,642s][debug][gc,nmethod   ] Register NMethod: java.lang.StringBuilder.append [0x00007fae7cb04290] (c2)
[3,685s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getResourceSession [0x00007fae7cb05390] (c2)
[3,700s][debug][gc,nmethod   ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList$1.nextShort [0x00007fae7cb05690] (c2)
[3,738s][debug][gc,nmethod   ] Register NMethod: java.util.HashMap.computeIfAbsent [0x00007fae7cb05b10] (c2)
[3,759s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.IndirectPage.getOrCreateReference [0x00007fae7cb07b90] (c2)
[3,797s][debug][gc,nmethod   ] Register NMethod: java.lang.Short.valueOf [0x00007fae7cb09f90] (c2)
[3,862s][debug][gc,nmethod   ] Register NMethod: io.sirix.access.trx.page.TreeModifierImpl.prepareIndirectPage [0x00007fae7cb0a290] (c2)
[3,879s][debug][gc,nmethod   ] Register NMethod: java.io.FileInputStream.read [0x00007fae7cb0d610] (c2)
[4,005s][debug][gc,nmethod   ] Register NMethod: java.nio.ByteBuffer.flip [0x00007fae7cb0de10] (c2)
[4,006s][debug][gc,nmethod   ] Register NMethod: sun.nio.cs.StreamDecoder.inReady [0x00007fae7cb0e110] (c2)
[4,008s][debug][gc,nmethod   ] Register NMethod: sun.nio.cs.StreamDecoder.readBytes [0x00007fae7cb0ea90] (c2)
[4,107s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.release [0x00007fae7cb10090] (c2)
[4,109s][debug][gc,nmethod   ] Register NMethod: java.nio.Bits.reserveMemory [0x00007fae5d82c110] (c1)
[4,110s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.release [0x00007fae7cb11110] (c2)
[4,110s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.RandomCommon.writePosition [0x00007fae7cb12290] (c2)
[4,119s][debug][gc,nmethod   ] Register NMethod: java.io.ByteArrayOutputStream.write [0x00007fae7cb12590] (c2)
[4,120s][debug][gc,nmethod   ] Register NMethod: java.io.ByteArrayOutputStream.ensureCapacity [0x00007fae7cb12f90] (c2)
[4,121s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.BytesStore.copyTo [0x00007fae7cb13410] (c2)
[4,135s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.weakCompareAndSetInt [0x00007fae7cb14d10] (c2)
[4,141s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.ByteArrayAccess.i2bBig [0x00007fae7cb15010] (c2)
[4,146s][debug][gc,nmethod   ] Register NMethod: com.google.common.hash.AbstractHasher.<init> [0x00007fae5d82e990] (c1)
[4,146s][debug][gc,nmethod   ] Register NMethod: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher.<init> [0x00007fae5d82ed90] (c1)
[4,148s][debug][gc,nmethod   ] Register NMethod: com.google.common.hash.AbstractByteHasher.putBytes [0x00007fae5d82f410] (c1)
[4,148s][debug][gc,nmethod   ] Register NMethod: com.google.common.hash.AbstractHashFunction.hashBytes [0x00007fae5d82ff10] (c1)
[4,154s][info ][gc           ] Trigger: Learning 1 of 5. Free (8596M) is below initial threshold (8601M)
[4,155s][info ][gc,ergo      ] Free: 8592M, Max: 4096K regular, 8592M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[4,155s][info ][gc,start     ] GC(0) Concurrent reset
[4,156s][info ][gc,task      ] GC(0) Using 5 of 10 workers for concurrent reset
[4,156s][info ][gc,ergo      ] GC(0) Pacer for Reset. Non-Taxable: 12288M
[4,156s][info ][gc           ] GC(0) Concurrent reset 0,472ms
[4,156s][info ][gc,start     ] GC(0) Pause Init Mark (unload classes)
[4,156s][info ][gc,task      ] GC(0) Using 10 of 10 workers for init marking
[4,156s][info ][gc,ergo      ] GC(0) Pacer for Mark. Expected Live: 1228M, Free: 8592M, Non-Taxable: 859M, Alloc Tax Rate: 0,2x
[4,156s][info ][gc           ] GC(0) Pause Init Mark (unload classes) 0,033ms
[4,156s][info ][gc,start     ] GC(0) Concurrent marking roots
[4,156s][info ][gc,task      ] GC(0) Using 5 of 10 workers for concurrent marking roots
[4,156s][debug][gc,tlab      ] GC(0) TLAB totals: thrds: 19  refills: 741 max: 586 slow allocs: 1 max 1 waste:  0,9% gc: 27574592B max: 4119048B slow: 1889200B max: 672808B
[4,157s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeShort [0x00007fae7cb15590] (c2)
[4,157s][info ][gc           ] GC(0) Concurrent marking roots 1,414ms
[4,157s][info ][gc,start     ] GC(0) Concurrent marking (unload classes)
[4,157s][info ][gc,task      ] GC(0) Using 5 of 10 workers for concurrent marking
[4,164s][debug][gc,nmethod   ] Register NMethod: com.google.common.base.Preconditions.checkPositionIndexes [0x00007fae7cb15f10] (c2)
[4,164s][debug][gc,nmethod   ] Register NMethod: java.util.BitSet.<init> [0x00007fae7cb16290] (c2)
[4,165s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.getAndSetInt [0x00007fae5d830f90] (c1)
[4,166s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline.sorted [0x00007fae5d831490] (c1)
[4,167s][debug][gc,nmethod   ] Register NMethod: java.io.DataOutputStream.flush [0x00007fae7cb16710] (c2)
[4,169s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.getAndSetAccess [0x00007fae5d831910] (c1)
[4,172s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ForkJoinTask.<init> [0x00007fae5d831c10] (c1)
[4,175s][debug][gc,nmethod   ] Register NMethod: sun.security.provider.DigestBase.engineUpdate [0x00007fae7cb16b90] (c2)
[4,176s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.<init> [0x00007fae7cb17d90] (c2)
[4,176s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.wrapWithNativeBytes [0x00007fae7cb18e90] (c2)
[4,179s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$ListItr.hasNext [0x00007fae7cb19310] (c2)
[4,181s][debug][gc,nmethod   ] Register NMethod: java.util.ImmutableCollections$AbstractImmutableList.iterator [0x00007fae7cb19610] (c2)
[4,182s][debug][gc,nmethod   ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.flush [0x00007fae7cb19a90] (c2)
[4,184s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.VanillaBytes.bytesForRead [0x00007fae7cb19e10] (c2)
[4,185s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline.toArray [0x00007fae5d831f90] (c1)
[4,186s][debug][gc,nmethod   ] Register NMethod: java.util.Map$Entry.comparingByKey [0x00007fae5d832710] (c1)
[4,233s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$2$1.accept [0x00007fae7cb1a690] (c2)
[4,234s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.KeyValueLeafPage.addReferences [0x00007fae7cb1ab10] (c2)
[4,241s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap$Traverser.<init> [0x00007fae7cb1ae90] (c2)
[4,254s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.push [0x00007fae5d832c10] (c1)
[4,266s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.CountedCompleter.<init> [0x00007fae5d833c10] (c1)
[4,270s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$ArrayListSpliterator.trySplit [0x00007fae5d834090] (c1)
[4,270s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ForkJoinTask.fork [0x00007fae5d834410] (c1)
[4,270s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ForEachOps$ForEachTask.<init> [0x00007fae5d834c90] (c1)
[4,270s][debug][gc,nmethod   ] Register NMethod: java.util.ArrayList$ArrayListSpliterator.trySplit [0x00007fae5d835310] (c1)
[4,270s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.CountedCompleter.addToPendingCount [0x00007fae5d835a90] (c1)
[4,292s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ForkJoinTask.doExec [0x00007fae5d835d90] (c1)
[4,304s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ReferencePipeline$3$1.accept [0x00007fae7cb1b210] (c2)
[4,309s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.CountedCompleter.exec [0x00007fae5d836510] (c1)
[4,310s][debug][gc,nmethod   ] Register NMethod: java.util.stream.ForEachOps$ForEachTask.compute [0x00007fae5d836910] (c1)
[4,324s][debug][gc,nmethod   ] Register NMethod: io.sirix.page.PageKind$1.serializePage [0x00007fae7cb1b690] (c2)
[4,329s][debug][gc,nmethod   ] Register NMethod: java.lang.Integer.numberOfLeadingZeros [0x00007fae7cb2c990] (c2)
[4,331s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.CountedCompleter.weakCompareAndSetPendingCount [0x00007fae5d838190] (c1)
[4,334s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.nextLocalTask [0x00007fae5d838590] (c1)
[4,338s][debug][gc,nmethod   ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.capacity [0x00007fae5d838f10] (c1)
[4,338s][debug][gc,nmethod   ] Register NMethod: java.lang.Thread.blockedOn [0x00007fae7cb2cc90] (c2)
[4,339s][debug][gc,nmethod   ] Register NMethod: java.nio.MappedByteBuffer.limit [0x00007fae5d839390] (c1)
[4,340s][debug][gc,nmethod   ] Register NMethod: java.nio.MappedByteBuffer.rewind [0x00007fae5d839890] (c1)
[4,340s][debug][gc,nmethod   ] Register NMethod: java.nio.MappedByteBuffer.rewind [0x00007fae5d839d90] (c1)
[4,348s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.IOUtil.write [0x00007fae5d83a210] (c1)
[4,348s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.IOUtil.writeFromNativeBuffer [0x00007fae5d83b110] (c1)
[4,349s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.UnixFileDispatcherImpl.pwrite0 [0x00007fae7cb2d210] ()
[4,349s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.IOUtil.write [0x00007fae5d83d210] (c1)
[4,349s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.UnixFileDispatcherImpl.pwrite [0x00007fae5d83d590] (c1)
[4,349s][debug][gc,nmethod   ] Register NMethod: java.util.concurrent.ConcurrentHashMap.clear [0x00007fae7cb2d610] (c2)
[4,349s][info ][gc           ] GC(0) Concurrent marking (unload classes) 191,399ms
[4,349s][info ][gc,start     ] GC(0) Pause Final Mark (unload classes)
[4,349s][info ][gc,task      ] GC(0) Using 10 of 10 workers for final marking
[4,349s][info ][gc,ergo      ] GC(0) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10388M, Max CSet: 512M, Min Garbage: 0B
[4,349s][info ][gc,ergo      ] GC(0) Collectable Garbage: 2591M (99%), Immediate: 1620M (62%), CSet: 971M (37%)
[4,349s][info ][gc,ergo      ] GC(0) Pacer for Evacuation. Used CSet: 1360M, Free: 9772M, Non-Taxable: 977M, Alloc Tax Rate: 1,1x
[4,349s][info ][gc           ] GC(0) Pause Final Mark (unload classes) 0,451ms
[4,349s][info ][gc,start     ] GC(0) Concurrent thread roots
[4,349s][info ][gc,task      ] GC(0) Using 5 of 10 workers for Concurrent thread roots
[4,350s][debug][gc,nmethod   ] Register NMethod: sun.nio.ch.FileChannelImpl.writeInternal [0x00007fae5d83d990] (c1)
[4,351s][info ][gc           ] GC(0) Concurrent thread roots 1,737ms
[4,351s][info ][gc,start     ] GC(0) Concurrent weak references
[4,351s][info ][gc,task      ] GC(0) Using 5 of 10 workers for concurrent weak references
[4,352s][info ][gc,ref       ] GC(0) Encountered references: Soft: 3785, Weak: 2611, Final: 2682, Phantom: 3602
[4,352s][info ][gc,ref       ] GC(0) Discovered  references: Soft: 0, Weak: 897, Final: 2682, Phantom: 3536
[4,352s][info ][gc,ref       ] GC(0) Enqueued    references: Soft: 0, Weak: 754, Final: 2682, Phantom: 3224
[4,352s][info ][gc           ] GC(0) Concurrent weak references 0,604ms
[4,352s][info ][gc,start     ] GC(0) Concurrent weak roots
[4,352s][info ][gc,task      ] GC(0) Using 5 of 10 workers for concurrent weak root
[4,352s][debug][gc,nmethod   ] Register NMethod: java.lang.Object.notifyAll [0x00007fae7cb2d910] ()
[4,353s][debug][gc,nmethod   ] Register NMethod: jdk.internal.misc.Unsafe.freeMemory0 [0x00007fae7cb2dc90] ()
[4,354s][info ][gc           ] GC(0) Concurrent weak roots 2,184ms
[4,354s][info ][gc,start     ] GC(0) Concurrent cleanup
[4,354s][info ][gc           ] GC(0) Concurrent cleanup 3531M->1911M(5132M) 0,177ms
[4,354s][info ][gc,ergo      ] GC(0) Free: 9768M, Max: 4096K regular, 8148M humongous, Frag: 17% external, 0% internal; Reserve: 607M, Max: 4096K
[4,354s][info ][gc,start     ] GC(0) Concurrent class unloading
[4,354s][info ][gc,task      ] GC(0) Using 5 of 10 workers for concurrent class unloading
[4,354s][debug][gc,phases,start] GC(0) ClassLoaderData
[4,354s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.atomic.AtomicLong.decrementAndGet [0x00007fae5d83f110] (c1)
[4,354s][debug][gc,phases      ] GC(0) ClassLoaderData 0,019ms
[4,354s][debug][gc,phases,start] GC(0) Trigger cleanups
[4,354s][debug][gc,phases      ] GC(0) Trigger cleanups 0,006ms
[4,354s][debug][gc,nmethod     ] Register NMethod: jdk.internal.ref.Cleaner.clean [0x00007fae5d83f490] (c1)
[4,354s][debug][gc,nmethod     ] Register NMethod: jdk.internal.ref.Cleaner.remove [0x00007fae5d83ff90] (c1)
[4,354s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.freeMemoryChecks [0x00007fae5d840910] (c1)
[4,354s][debug][gc,nmethod     ] Register NMethod: java.nio.Bits.unreserveMemory [0x00007fae5d840d90] (c1)
[4,355s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer$Deallocator.run [0x00007fae5d841290] (c1)
[4,355s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.checkPointer [0x00007fae7cb2e010] (c2)
[4,355s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.FileChannelImpl.write [0x00007fae5d841990] (c1)
[4,355s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelWriter.flushBuffer [0x00007fae5d842590] (c1)
[4,355s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.freeMemory [0x00007fae5d843590] (c1)
[4,355s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.atomic.AtomicLong.decrementAndGet [0x00007fae7cb2e310] (c2)
[4,356s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.BytesStore.copyTo [0x00007fae5d73e610]
[4,356s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.atomic.AtomicLong.addAndGet [0x00007fae5d72d010]
[4,356s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.ByteArrayOutputStream.close [0x00007fae5d72b710]
[4,356s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.atomic.AtomicLong.incrementAndGet [0x00007fae5d728f10]
[4,356s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.readBytes [0x00007fae5d71b190]
[4,356s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getChildCount [0x00007fae7ca58610]
[4,356s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.HeapByteBuffer.<init> [0x00007fae5d713690]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.PageKind$1.serializePage [0x00007fae5d707290]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.RandomCommon.writePosition [0x00007fae5d703a10]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.security.provider.DigestBase.engineUpdate [0x00007fae5d701890]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.security.provider.DigestBase.implCompressMultiBlock0 [0x00007fae5d6ff210]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.RandomCommon.writeLimit [0x00007fae5d6fe990]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes$UncheckedRandomDataInputHolder.<init> [0x00007fae5d6fe510]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.PageKind$1.serializePage [0x00007fae5d6f2090]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.ByteBuffer.allocate [0x00007fae5d6f1790]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae5d6eea90]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae5d6ec590]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.reserve [0x00007fae5d6ec110]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.release [0x00007fae5d6eaa10]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.release [0x00007fae5d6ea590]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.readEscapeCharacter [0x00007fae5d829410]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringBuilder.append [0x00007fae5d829090]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsFirstChild [0x00007fae5d821b90]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.adaptNodesAndHashesForInsertAsChild [0x00007fae5d820910]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertStringValue [0x00007fae5d81d410]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordPage [0x00007fae5d81b910]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processString [0x00007fae5d81b190]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordForModification [0x00007fae5d819790]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeHashing.adaptHashesWithAdd [0x00007fae5d819110]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertAsSibling [0x00007fae5d812610]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write0 [0x00007fae5d7bde10]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write0 [0x00007fae5d7bd310]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.clear [0x00007fae7cab6710]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.Arrays.fill [0x00007fae7cab6110]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.Arrays.fill [0x00007fae7cab5890]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.Arrays.fill [0x00007fae7cab5110]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.RandomCommon.readRemaining [0x00007fae5d7bb790]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.write [0x00007fae5d6cd910]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.StringNode.getKind [0x00007fae5d6cd610]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.BooleanNode.getKind [0x00007fae5d6cc910]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.NodeKind$28.serialize [0x00007fae5d6c3890]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.writeLong [0x00007fae5d7bad90]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.writeLong [0x00007fae5d7ba910]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.computeIfAbsent [0x00007fae5d801610]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.putLong [0x00007fae5d7ba590]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getPageContainer [0x00007fae5d800510]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getChildCount [0x00007fae5d6c3410]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getMostRecentPageContainer [0x00007fae5d7ff510]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getRecord [0x00007fae5d7fdf90]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory$$Lambda/0x00007fadb422ca68.apply [0x00007fae5d6c2510]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.release [0x00007fae7caab390]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.RandomCommon.readLimit [0x00007fae5d6c0990]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.BytesStore.realCapacity [0x00007fae5d6c0610]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.lambda$new$0 [0x00007fae5d6bff90]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae5d6bf390]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae5d6bf010]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.read [0x00007fae5d6bde10]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae5d6bd990]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write [0x00007fae5d6bd310]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae5d6bce90]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.security.provider.ByteArrayAccess.b2iBig64 [0x00007fae5d6b6690]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeStopBit [0x00007fae7c991710]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.decodeASCII [0x00007fae5d66bd10]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.write [0x00007fae5d6b6310]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.NodeKind.serializeStructNodeJsonValueNode [0x00007fae5d6b5c90]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.System$2.decodeASCII [0x00007fae5d66b110]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.NumberNode.getKind [0x00007fae5d6b5890]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.toByteArray [0x00007fae5d6b5290]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.readRemaining [0x00007fae5d6b4f10]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.NodeKind.serializeDelegate [0x00007fae5d6b4910]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.RandomDataInput.toByteArray [0x00007fae5d6b4590]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.read [0x00007fae5d6b3710]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.NodeSerializerImpl.serialize [0x00007fae5d6b3210]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.release [0x00007fae7caa3710]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getValue [0x00007fae5d7efe10]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.writeCheckOffset [0x00007fae5d6b2090]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.KeyValueLeafPage.getSlot [0x00007fae5d7ee310]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.KeyValueLeafPage.getDeweyId [0x00007fae5d7ede90]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.security.provider.SHA2.implCompress0 [0x00007fae5d6b0c90]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.ensureCapacity [0x00007fae5d6b0810]
[4,357s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertArray [0x00007fae5d665a10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.write [0x00007fae5d6af810]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.Maths.toUInt31 [0x00007fae5d6af090]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.Utils.putVarLong [0x00007fae5d6aec90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.getIntUnaligned [0x00007fae7ca3be10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.security.provider.SHA2.implCompress [0x00007fae5d6add90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.write [0x00007fae5d6abe90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertArrayAsRightSibling [0x00007fae5d662890]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemoryLoop [0x00007fae5d6ab710]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeInt [0x00007fae5d6ab290]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.writeByte [0x00007fae5d6aaf90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.readInt [0x00007fae5d7e6f10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.writeLong [0x00007fae5d6aac10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeStopBit0 [0x00007fae5d6aa410]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.ArrayNode.computeHash [0x00007fae5d65e810]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae5d7a7690]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae5d7a5d10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonArrayNode [0x00007fae5d65d510]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.fillBuffer [0x00007fae5d6a9590]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.Arrays.copyOf [0x00007fae7ca2d810]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList$1.nextShort [0x00007fae5d6a4410]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeHashing.adaptHashesWithAdd [0x00007fae7c97b390]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeStopBit [0x00007fae5d7a3f90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonBooleanNode [0x00007fae5d65a510]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Short.valueOf [0x00007fae5d6a2c90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.BitSet.nextSetBit [0x00007fae5d6a1310]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Long.numberOfTrailingZeros [0x00007fae5d6a0f10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processBoolean [0x00007fae5d653c90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.AbstractBooleanNode.computeHash [0x00007fae5d650e90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.fillBuffer [0x00007fae7ca27a10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.nextBoolean [0x00007fae5d64fc90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.BitSet.recalculateWordsInUse [0x00007fae7ca23e10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.computeIfAbsent [0x00007fae7c977d10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertArray [0x00007fae7ca1a710]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.underlyingObject [0x00007fae7c977690]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.channels.spi.AbstractInterruptibleChannel.begin [0x00007fae5d7c9110]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.appendUtf8 [0x00007fae7c973610]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNumberValueAsRightSibling [0x00007fae5d64c210]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.NodeKind.serializeJsonObjectOrArrayStructDelegate [0x00007fae7ca77590]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertArrayAsRightSibling [0x00007fae7ca12910]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae7ca73d90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertNumberValue [0x00007fae5d648d10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonNumberNode [0x00007fae5d647990]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processNumber [0x00007fae5d646a10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.KeyValueLeafPage.setRecord [0x00007fae7c972b10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.TreeModifierImpl.prepareIndirectPage [0x00007fae5d699890]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.JsonNumber.stringToNumber [0x00007fae5d645c90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Long.hashCode [0x00007fae5d5db310]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getPageContainer [0x00007fae5d5da210]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getMostRecentPageContainer [0x00007fae5d5d9710]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Long.toString [0x00007fae5d645190]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.peekNumber [0x00007fae5d643e90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeHashing.rollingAdd [0x00007fae5d640590]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordForModification [0x00007fae5d5d2090]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getRecord [0x00007fae5d5d0b10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveTo [0x00007fae5d5cf290]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.performRelease [0x00007fae5d788990]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordPage [0x00007fae5d5cd710]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.AbstractNumberNode.computeHash [0x00007fae5d635190]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.IndirectPage.getOrCreateReference [0x00007fae5d68c290]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb427a800.invoke [0x00007fae5d5c9e10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.putLongUnaligned [0x00007fae7ca70f90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.nio.cs.StreamDecoder.readBytes [0x00007fae5d685c10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.AbstractForwardingNode.getNodeDelegate [0x00007fae7c950390]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.nio.cs.StreamDecoder.inReady [0x00007fae5d685490]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.writeByte [0x00007fae7c94f810]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeHashing.rollingAdd [0x00007fae7c969610]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.writeByte [0x00007fae7c94ec90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.PageReference.setLogKey [0x00007fae5d682e90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.index.path.summary.PathSummaryReader.getLevel [0x00007fae5d5c0010]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getResourceSession [0x00007fae5d682890]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsFirstChild [0x00007fae5d5b5190]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb427a400.invoke [0x00007fae5d631790]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.BooleanNode.getKind [0x00007fae5d631410]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsFirstChild [0x00007fae7c9fbf90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.axis.filter.FilterAxis.<init> [0x00007fae5d5b2c90]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.PageReference.setKey [0x00007fae5d680c10]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.writeByte [0x00007fae7c94e110]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordForModification [0x00007fae7c94c910]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.writeLong [0x00007fae7c94c610]
[4,358s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.security.provider.ByteArrayAccess.i2bBig [0x00007fae5d769f90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsRightSibling [0x00007fae5d629090]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.index.path.summary.PathSummaryWriter.movePathSummary [0x00007fae5d5b0a90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.adaptNodesAndHashesForInsertAsChild [0x00007fae7c9f6d10]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.AbstractNullNode.computeHash [0x00007fae5d626690]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getPageContainer [0x00007fae7c94ba90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.HeapCharBuffer.slice [0x00007fae5d680690]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.moveToParent [0x00007fae5d5adc10]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Long.getChars [0x00007fae5d625b10]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Long.stringSize [0x00007fae5d625610]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeUtf8 [0x00007fae5d5ab790]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertNullValue [0x00007fae5d622310]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.util.StringUtils.getStringCoderForStringOrStringBuilder [0x00007fae5d5a9190]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNullValueAsRightSibling [0x00007fae5d61f310]
[4,359s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Reference.enqueueFromPending [0x00007fae5d6f1790] (c1)
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.AbstractBytesStore.canReleaseInBackground [0x00007fae5d6e9b90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.OutputStream.flush [0x00007fae5d6e9890]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.ByteBuffer.flip [0x00007fae5d67f810]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.reserve [0x00007fae5d6e8590]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonNullNode [0x00007fae5d61e010]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.VanillaBytes.<init> [0x00007fae5d6e8210]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.nextNull [0x00007fae5d61c990]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.immutable.json.ImmutableArrayNode.getKind [0x00007fae5d5a5f90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processNull [0x00007fae5d61c190]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.<init> [0x00007fae5d6e7210]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertStringValue [0x00007fae5d618c90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.BitSet.toByteArray [0x00007fae5d6e5f90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveTo [0x00007fae7c949290]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.writeStopBit [0x00007fae5d5a4290]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeFactoryImpl.createJsonStringNode [0x00007fae5d617610]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeStopBit [0x00007fae5d5a2d90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.failIfBytesOnBytes [0x00007fae5d6e5190]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.NumberNode.getKind [0x00007fae5d617290]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Integer.parseInt [0x00007fae5d614390]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getRecord [0x00007fae7c947b90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.jpountz.lz4.LZ4BlockOutputStream.writeIntLE [0x00007fae5d6e4d10]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.bytesStore [0x00007fae5d6e4910]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.valueCompareAndSet [0x00007fae5d6e4490]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processString [0x00007fae5d613510]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.CharBuffer.wrap [0x00007fae5d612f10]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.Bits.reserveMemory [0x00007fae5d754e10]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.adaptTrxPosAndStack [0x00007fae5d5a0e10]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.ByteBuffer.limit [0x00007fae5d6e4090]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.peekKeyword [0x00007fae5d610c90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.isLiteral [0x00007fae5d60fe10]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertAsSibling [0x00007fae5d59dc10]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.checkNativeAddress [0x00007fae5d6e3890]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.checkPrecondition [0x00007fae5d60f190]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.compareAndSwapInt [0x00007fae5d6e3290]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.VanillaReferenceCounted.<init> [0x00007fae5d6e2810]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeTrxImpl.getCurrentNode [0x00007fae5d60ec90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.StringNode.getKind [0x00007fae5d60e910]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.writeByte [0x00007fae5d6e1890]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.getPathNodeKey [0x00007fae5d59d310]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertNewContent [0x00007fae5d67ba90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.NullNode.getKind [0x00007fae5d60da10]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.HeapByteBuffer.put [0x00007fae5d6e0810]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractDeweyIDManager.newRightSiblingID [0x00007fae5d59ae10]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.putLongUnaligned [0x00007fae5d6dfc90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.HeapByteBuffer.putLong [0x00007fae5d6deb90]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeInt [0x00007fae7c9cc510]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.AbstractNullNode.delegate [0x00007fae5d60d490]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.peek [0x00007fae5d60cb10]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeReadOnlyTrxImpl.isObjectKey [0x00007fae5d59a590]
[4,359s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.AbstractStringBuilder.appendChars [0x00007fae5d60c010]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.setRightSiblingKey [0x00007fae5d599310]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.<init> [0x00007fae5d6dbe90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getLeftSiblingKey [0x00007fae5d598e90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.nextString [0x00007fae5d597890]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.refCount [0x00007fae5d597010]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.CharBuffer.<init> [0x00007fae5d60a790]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.ReferenceCountedTracer.onReleased [0x00007fae5d6db610]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.KeyValueLeafPage.processEntries [0x00007fae7ca69110]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.index.path.summary.PathSummaryWriter.getPathNodeKey [0x00007fae5d592410]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.atomic.AtomicInteger.incrementAndGet [0x00007fae5d6da690]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processString [0x00007fae7c9b8f10]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.clear [0x00007fae7c963e90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.index.path.summary.PathSummaryReader.moveTo [0x00007fae7c963510]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.ReferenceChangeListenerManager.callReferenceChangeListeners [0x00007fae5d6d8a10]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.axis.filter.PathNameFilter.<init> [0x00007fae5d590710]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.NodeKind$20.serialize [0x00007fae5d6d6b90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.Utils.buildName [0x00007fae5d58e810]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordPage [0x00007fae7c95fd90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.peek [0x00007fae7c95f910]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.getPathNodeKey [0x00007fae5d58d790]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertStringValue [0x00007fae7c9b0110]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getParentKind [0x00007fae5d58bf90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.NodeKind$27.serialize [0x00007fae5d6d5d90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getLastChildKey [0x00007fae7ca68a90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.index.path.summary.PathSummaryReader.getNodeKey [0x00007fae7c95ef90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.hasFirstChild [0x00007fae5d58af90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.axis.AbstractAxis.hasNext [0x00007fae7c95d610]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.ByteBuffer.order [0x00007fae5d6d5910]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.hashing.XXH3.XXH3_64bits_internal [0x00007fae5d579090]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.NodeKind.writeHash [0x00007fae5d6d4e90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.NodeKind.serializeJsonObjectOrArrayStructDelegate [0x00007fae5d6d3090]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getPageContainer [0x00007fae7c95c810]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.atomic.AtomicLong.compareAndSet [0x00007fae5d74b590]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getLastChildKey [0x00007fae5d6d2c10]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.ArrayNode.getKind [0x00007fae5d6d2810]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.nextQuotedValue [0x00007fae5d535710]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4293260.<init> [0x00007fae5d604c90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.AbstractForwardingPageReadOnlyTrx.getResourceSession [0x00007fae5d6d1b10]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordForModification [0x00007fae7c959b10]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.BitSet.flip [0x00007fae5d534b10]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveTo [0x00007fae7c957d90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.CopyOnWriteArrayList.size [0x00007fae5d6d1390]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.ByteBuffer.<init> [0x00007fae5d6d0e90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4254ae8.<init> [0x00007fae5d604890]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getRecord [0x00007fae7c956310]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.BitSet.and [0x00007fae5d532690]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.NodeKind$29.serialize [0x00007fae5d6d0910]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.delegates.BitmapReferencesPage.index [0x00007fae5d531c10]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.delegates.BitmapReferencesPage.getOrCreateReference [0x00007fae5d531410]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.NullNode.getKind [0x00007fae5d6d0610]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae5d6cff90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.BitSet.get [0x00007fae5d530190]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.encode [0x00007fae5d577810]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.NodeKind.serializeValDelegate [0x00007fae5d6cf710]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: org.magicwerk.brownies.collections.GapList.get [0x00007fae5d52f110]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.BitSet.set [0x00007fae5d52d690]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.write [0x00007fae5d6ce290]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.writeInt [0x00007fae5d573490]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.NodeKind$26.serialize [0x00007fae5d6cdc90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.BitSet.cardinality [0x00007fae5d52d110]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeInt [0x00007fae5d573090]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsRightSibling [0x00007fae7c999710]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.adaptNodesAndHashesForInsertAsChild [0x00007fae5d571e10]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeReadOnlyTrxImpl.isArray [0x00007fae5d5fd790]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.misc.Unsafe.putInt [0x00007fae5d571b10]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.DelegatingMethodHandle$Holder.delegate [0x00007fae5d5fd090]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.AbstractForwardingNode.<init> [0x00007fae5d52c710]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.appendUtf8 [0x00007fae5d571190]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.AbstractNumberNode.delegate [0x00007fae5d52c190]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getKind [0x00007fae5d52ba10]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AppendableUtil.findUtf8Length [0x00007fae5d570a10]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordPage [0x00007fae7c945290]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.hashing.XXH3.XXH3_mix16B [0x00007fae5d52ab10]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeTrxImpl.checkAccessAndCommit [0x00007fae5d56fc90]
[4,360s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeTrxImpl.intermediateCommitIfRequired [0x00007fae5d56f310]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.fillBuffer [0x00007fae5d67b110]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Long.bitCount [0x00007fae5d52a790]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.MethodHandleImpl.profileBoolean [0x00007fae5d56ea90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeUtf8 [0x00007fae7c996b10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.hashing.Maths.unsignedLongMulXorFold [0x00007fae5d52a010]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Math.multiplyHigh [0x00007fae5d529c90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.axis.filter.PathNameFilter.filter [0x00007fae5d528210]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.LambdaForm$DMH/0x00007fadb4029c00.invokeSpecial [0x00007fae5d5f8210]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.canEncode [0x00007fae5d5f7e90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getNodeKey [0x00007fae5d56b890]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.axis.AbstractAxis.nextLong [0x00007fae5d526210]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.hashing.LongHashFunction.hashByteBuffer [0x00007fae5d56a590]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.hashing.XXH3$AsLongHashFunction.hash [0x00007fae5d569d10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.index.path.summary.PathNode.getLocalNameKey [0x00007fae5d525490]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.hashing.XXH3.XXH3_avalanche [0x00007fae5d569990]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertAsSibling [0x00007fae7c993810]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.hashing.XXH3.access$500 [0x00007fae5d569610]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb427bc00.guard [0x00007fae5d5f4690]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: it.unimi.dsi.fastutil.HashCommon.mix [0x00007fae5d524a90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.hashing.LongHashFunction.unsafeHash [0x00007fae5d568e90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.AbstractStringNode.delegate [0x00007fae5d524510]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.axis.AbstractAxis.tryToComputeNext [0x00007fae5d523e90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeHashing.adaptHashesWithAdd [0x00007fae5d568310]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.delegates.NodeDelegate.getKind [0x00007fae5d567a90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.axis.AbstractAxis.resetToLastKey [0x00007fae5d522d10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.adaptForInsert [0x00007fae5d565e90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getRightSiblingKey [0x00007fae5d522890]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.hasRightSibling [0x00007fae5d521f10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeHashing.setAddDescendants [0x00007fae5d521410]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.inflate [0x00007fae5d45a590]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.index.path.summary.PathSummaryReader.moveTo [0x00007fae5d520490]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.setDescendantCount [0x00007fae5d520010]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractDeweyIDManager.newFirstChildID [0x00007fae5d5ebf90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.setLastChildKey [0x00007fae5d565790]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.AbstractStringBuilder.append [0x00007fae5d676190]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.storeDeweyIDs [0x00007fae5d564f90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.nio.cs.UTF_8$Decoder.decodeArrayLoop [0x00007fae5d66f010]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getDescendantCount [0x00007fae5d51ea10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.axis.AbstractAxis.hasNext [0x00007fae5d51da90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.hashing.UnsafeAccess.byteOrder [0x00007fae5d563f10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.underlyingObject [0x00007fae5d563a90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.utils.IntToObjectMap.find [0x00007fae5d51d290]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.index.path.summary.PathSummaryReader.getNodeKey [0x00007fae5d51cb90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeInt [0x00007fae5d562710]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.net.www.ParseUtil.firstEncodeIndex [0x00007fae5d452790]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.common.base.Preconditions.checkState [0x00007fae5d51c710]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeInt [0x00007fae5d562310]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.index.path.summary.PathSummaryReader.getStructuralNode [0x00007fae5d51c210]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.writeLong [0x00007fae5d51bc90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.appendUtf8Char [0x00007fae7c955690]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.writeLong [0x00007fae5d51b890]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeHashing.getCurrentNode [0x00007fae5d51b390]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.AbstractBooleanNode.delegate [0x00007fae5d5eac10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getMostRecentPageContainer [0x00007fae7c943910]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getRecord [0x00007fae5d519e10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getFirstChildKey [0x00007fae5d561890]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.charset.CharsetDecoder.decode [0x00007fae5d66cc10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getPageContainer [0x00007fae5d518990]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.moveToParentObjectKeyArrayOrDocumentRoot [0x00007fae5d55fd10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getMostRecentPageContainer [0x00007fae7c954e10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordForModification [0x00007fae5d516c90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.writeLong [0x00007fae7c953e10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.ObjectStringNode.getKind [0x00007fae5d55f990]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.delegates.ValueNodeDelegate.<init> [0x00007fae5d5e8f10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.checkItemIfDeleted [0x00007fae5d516810]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.cache.IndexLogKey.equals [0x00007fae5d5e8690]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveTo [0x00007fae5d514f90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.cache.IndexLogKey.hashCode [0x00007fae5d5e7e90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractIndexController.notifyChange [0x00007fae5d55e690]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.prepareRecordPage [0x00007fae5d512c90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.nextNonWhitespace [0x00007fae5d50fb10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Integer.rotateRight [0x00007fae5d4cf910]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.BitSet.recalculateWordsInUse [0x00007fae5d50f590]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.utils.IntToObjectMap.put [0x00007fae5d55d810]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.common.base.Preconditions.checkArgument [0x00007fae5d50ef10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.ObjectKeyNode.getKind [0x00007fae5d50eb90]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.ArrayList$Itr.next [0x00007fae5d44cc10]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.doPeek [0x00007fae5d553690]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.cache.PageContainer.getModifiedAsUnorderedKeyValuePage [0x00007fae5d50e710]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Thread.onSpinWait [0x00007fae5d4cc990]
[4,361s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.writeLong [0x00007fae7c952c90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.readLong [0x00007fae5d50d690]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.AbstractStringNode.computeHash [0x00007fae5d5e2790]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeLong [0x00007fae5d50c510]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.startsWith [0x00007fae5d44bf10]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeHashing.rollingAdd [0x00007fae5d54f910]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.appendUtf8Char [0x00007fae5d50a490]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeLong [0x00007fae5d50a090]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.LinkedHashMap.afterNodeAccess [0x00007fae5d5e1710]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeByte [0x00007fae5d508f10]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.delegates.ValueNodeDelegate.getRawValue [0x00007fae5d5e1290]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.computeIfAbsent [0x00007fae5d5de910]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.writeByte [0x00007fae5d508a90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.writeByte [0x00007fae5d508690]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.rawWriteByte [0x00007fae5d508290]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.setCurrentNode [0x00007fae5d507c90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.misc.Unsafe.putByte [0x00007fae5d507990]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.ObjectNode.delegate [0x00007fae5d506d10]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb429c800.invoke [0x00007fae5d5dd790]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.throwExceptionIfReleased [0x00007fae5d506590]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getValue [0x00007fae5d505190]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.index.path.summary.PathSummaryReader.assertNotClosed [0x00007fae5d504c90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.AbstractForwardingNode.getParentKey [0x00007fae5d504810]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.moveTo [0x00007fae5d54ed90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.io.ReferenceCountedTracer.throwExceptionIfReleased [0x00007fae5d504210]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.getNodeKey [0x00007fae5d54e010]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.axis.AbstractAxis.<init> [0x00007fae5d54d610]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext [0x00007fae5d43f890]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.BufferedReader.read [0x00007fae5d43df90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.BufferedReader.implRead [0x00007fae5d43d610]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.StreamTokenizer.read [0x00007fae5d43ce10]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getValue [0x00007fae7c941e90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.CharacterDataLatin1.digit [0x00007fae5d54c310]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.ThreadLocal.get [0x00007fae5d43c210]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.getMostRecentPageContainer [0x00007fae5d4fd590]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.Frame.execute [0x00007fae7c909510]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.getLong [0x00007fae5d54ab10]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.pageKey [0x00007fae5d4fcd90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: it.unimi.dsi.fastutil.longs.AbstractLongList.peekLong [0x00007fae5d54a710]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.BytesStore.safeLimit [0x00007fae5d4fc990]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.RevisionRootPage.incrementAndGetMaxNodeKeyInDocumentIndex [0x00007fae5d54a390]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.ObjectKeyNode.delegate [0x00007fae5d4fc410]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.removeLong [0x00007fae5d549110]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.putVal [0x00007fae7c8e2410]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.ByteBuffer.rewind [0x00007fae5d548d90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.writeByte [0x00007fae5d4fb790]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: it.unimi.dsi.fastutil.longs.AbstractLongList.popLong [0x00007fae5d548390]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.grow [0x00007fae5d547690]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.put [0x00007fae7c8e0090]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.ObjectNumberNode.getKind [0x00007fae5d547310]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.add [0x00007fae5d546c90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: it.unimi.dsi.fastutil.longs.AbstractLongList.push [0x00007fae5d546890]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.writeByte [0x00007fae5d4fb210]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.assertNotClosed [0x00007fae5d4fad10]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.api.PageReadOnlyTrx.recordPageOffset [0x00007fae5d4faa10]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.AbstractForwardingNode.getNodeKey [0x00007fae5d4fa590]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.AbstractForwardingNode.getNodeDelegate [0x00007fae5d4fa190]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.assertNotClosed [0x00007fae5d4f9c90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.delegates.NodeDelegate.<init> [0x00007fae5d545e10]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.hasLeftSibling [0x00007fae5d545890]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeReadOnlyTrxImpl.getNode [0x00007fae5d542b90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.incrementChildCount [0x00007fae5d542690]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.delegates.StructNodeDelegate.incrementChildCount [0x00007fae5d542310]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.<init> [0x00007fae5d541d10]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.setFirstChildKey [0x00007fae5d541210]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.delegates.StructNodeDelegate.<init> [0x00007fae5d540b10]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.<init> [0x00007fae5d540610]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveToParent [0x00007fae5d53fd90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.BitSet.checkInvariants [0x00007fae5d4f8710]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.ByteBuffer.position [0x00007fae5d4f8310]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.readByte [0x00007fae5d4f7390]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.node.AbstractResourceSession.getResourceConfig [0x00007fae5d53f390]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.ObjectNode.getKind [0x00007fae5d53f010]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.page.KeyValueLeafPage.setRecord [0x00007fae5d53e690]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.ArrayNode.getKind [0x00007fae5d53e310]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.BitSet.wordIndex [0x00007fae5d4f7090]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.node.json.ArrayNode.delegate [0x00007fae5d53b890]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.stream.ReduceOps$ReduceOp.evaluateSequential [0x00007fae5d39ca90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.ByteBuffer.limit [0x00007fae5d4f5e90]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: com.google.gson.stream.JsonReader.peek [0x00007fae5d53af10]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.readOffsetPositionMoved [0x00007fae5d4f4390]
[4,362s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.misc.Unsafe.getByte [0x00007fae5d4f4010]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.copyMemory [0x00007fae5d4f2410]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.readCheckOffset [0x00007fae5d4f2010]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Math.toIntExact [0x00007fae5d4f0510]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.start [0x00007fae5d4f0090]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.createRecord [0x00007fae5d538690]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.readLimit [0x00007fae5d4efc90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.util.Longs.requireNonNegative [0x00007fae5d4ef490]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.checkOffset [0x00007fae5d4eef90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.FileInputStream.read [0x00007fae5d495790]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.util.ObjectUtils.requireNonNull [0x00007fae5d4eec10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.clear [0x00007fae5d537710]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.Buffer.<init> [0x00007fae5d493c90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.checkSize [0x00007fae5d4eda90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.putIntUnaligned [0x00007fae5d4ed590]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.Buffer.limit [0x00007fae5d492c10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.Buffer.remaining [0x00007fae5d492890]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.CharBuffer.arrayOffset [0x00007fae5d492290]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.CharBuffer.position [0x00007fae5d491e90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.ByteBuffer.position [0x00007fae5d491790]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.ByteBuffer.arrayOffset [0x00007fae5d491190]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.weakCompareAndSetInt [0x00007fae5d4eca90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.writeLong [0x00007fae5d4eb290]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.misc.Unsafe.putLong [0x00007fae5d4eaf90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeOffsetPositionMoved [0x00007fae5d4eab90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.Buffer.position [0x00007fae5d48df10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.misc.Unsafe.getLong [0x00007fae5d4e9b10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.translate [0x00007fae5d4e9490]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.hashCode [0x00007fae5d486710]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.<init> [0x00007fae5d339410]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.DirectMethodHandle.allocateInstance [0x00007fae5d338f10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.stream.AbstractPipeline.isParallel [0x00007fae5d37ce90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.DirectMethodHandle.constructorMethod [0x00007fae5d338a90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.Resource.getBytes [0x00007fae5d335410]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial [0x00007fae5d37b710]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.CharacterDataLatin1.isWhitespace [0x00007fae5d331310]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Integer.valueOf [0x00007fae5d4d1810]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.ByteVector.putShort [0x00007fae7c8bd410]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitCode [0x00007fae5d32c690]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.<init> [0x00007fae7c8bbe90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringUTF16.compress [0x00007fae5d217a90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.ReentrantLock$Sync.tryRelease [0x00007fae5d217390]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock [0x00007fae5d216590]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.Invokers$Holder.linkToTargetMethod [0x00007fae5d328d90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Class.cast [0x00007fae5d2a1510]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Thread.interrupted [0x00007fae5d2a0f90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.jar.JarFile.getInputStream [0x00007fae5d20f690]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Math.clamp [0x00007fae5d20e990]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.ArrayList.grow [0x00007fae5d298f10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.AbstractList.<init> [0x00007fae5d187f90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.LinkedHashMap.newNode [0x00007fae5d187590]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.ImmutableCollections$ListN.size [0x00007fae5d360d10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.Arrays.copyOf [0x00007fae5d185390]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.CharacterDataLatin1.toUpperCaseEx [0x00007fae5d182a10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.CharacterDataLatin1.getProperties [0x00007fae5d182690]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.ByteArrayOutputStream.write [0x00007fae5d181910]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.ByteArrayOutputStream.ensureCapacity [0x00007fae5d181210]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.getNode [0x00007fae7c8a5610]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.reflect.generics.parser.SignatureParser.current [0x00007fae5d28c410]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.URLClassPath.getLoader [0x00007fae7c8b5890]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.reflect.generics.parser.SignatureParser.advance [0x00007fae5d28be10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Object.equals [0x00007fae5d17e890]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.allocateUninitializedArray [0x00007fae7c8c8890]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.MethodWriter.visitEnd [0x00007fae5d30d190]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.reflect.ByteVectorImpl.add [0x00007fae5d17ad10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.reflect.ClassFileAssembler.emitByte [0x00007fae5d17a890]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.indexOf [0x00007fae7c880e10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.canEncode [0x00007fae7c880b10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference [0x00007fae5d179810]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.putVal [0x00007fae5d305e10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.URLClassPath$JarLoader.checkResource [0x00007fae5d283710]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.jar.JarFile.getManifestFromReference [0x00007fae5d1f2590]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.ArrayList$Itr.next [0x00007fae5d1f1d10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.jar.JarFile.getManifest [0x00007fae5d1f1990]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.putVal [0x00007fae7c89f190]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.HeapByteBuffer.byteOffset [0x00007fae5d350090]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.ConcurrentHashMap$Traverser.advance [0x00007fae5d280790]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.URLClassPath$JarLoader.findResource [0x00007fae5d280290]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Blocker.end [0x00007fae7c8c6610]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Blocker.begin [0x00007fae7c8c6290]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.net.URLStreamHandler.setURL [0x00007fae5d1eca90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipFile.getZipEntry [0x00007fae5d1e8190]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.DirectIntBufferU.ix [0x00007fae5d27dd90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.net.URLClassLoader.defineClass [0x00007fae5d279b10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.<init> [0x00007fae5d167390]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.net.URL.<init> [0x00007fae5d1e0c90]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.net.URLStreamHandler.parseURL [0x00007fae5d2e9890]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.net.URLClassLoader$1.run [0x00007fae5d277790]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.<init> [0x00007fae5d112610]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.MethodType.methodType [0x00007fae5d111d10]
[4,363s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.ArrayList.add [0x00007fae5d111510]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.regex.Matcher.search [0x00007fae7c89dc90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringCoding.countPositives [0x00007fae5d163e10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.URLClassPath$JarLoader$2.getCodeSourceURL [0x00007fae5d2e6310]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.Arrays.copyOf [0x00007fae5d10f910]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.put [0x00007fae5d10f310]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.ArrayList.iterator [0x00007fae5d271990]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringBuilder.<init> [0x00007fae5d10ef90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.ArrayList$Itr.<init> [0x00007fae5d271590]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.ref.Reference.reachabilityFence [0x00007fae5d10ec90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.<init> [0x00007fae5d26ee90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipFile$Source.isMetaName [0x00007fae5d15d190]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.replace [0x00007fae5d10a390]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringUTF16.compress [0x00007fae5d109e10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.putVal [0x00007fae5d107f90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipFile$Source.isMetaName [0x00007fae7c87dd10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringUTF16.getChar [0x00007fae5d26cf10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipFile$Source.isMetaName [0x00007fae5d15bc10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.util.Preconditions.checkFromIndexSize [0x00007fae5d107b10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.Objects.requireNonNull [0x00007fae5d107690]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipFile$Source.checkAndAddEntry [0x00007fae5d104a90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.nio.fs.UnixPath.checkNotNul [0x00007fae5d104610]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipCoder$UTF8ZipCoder.checkedHash [0x00007fae5d103d90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipFile$Source.zipCoderForPos [0x00007fae5d102f10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipFile$Source.nextEntryPos [0x00007fae5d102390]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.CharacterData.of [0x00007fae5d1cf590]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipFile$Source.isMetaName [0x00007fae5d101590]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipUtils.CENNAM [0x00007fae5d101110]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.computeIfAbsent [0x00007fae5d1cba90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipUtils.CENHOW [0x00007fae5d100810]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.get [0x00007fae5d156290]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipUtils.LG [0x00007fae5d0ffe10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringCoding.countPositives [0x00007fae5d0ff910]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.URLClassPath$JarLoader.ensureOpen [0x00007fae5d155690]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.allocateUninitializedArray0 [0x00007fae5d0fec90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.jar.Manifest$FastInputStream.readLine [0x00007fae5d154810]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.MethodType.makeImpl [0x00007fae5d0fca10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringConcatHelper.newString [0x00007fae5d1cab10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.indexOf [0x00007fae5d153910]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.setTabAt [0x00007fae5d0fc590]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.putReferenceRelease [0x00007fae5d0fc210]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.BufferedInputStream.read [0x00007fae7c879610]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.replace [0x00007fae5d0fac90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.ref.Reference.<init> [0x00007fae5d0fa810]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.ref.CleanerFactory.cleaner [0x00007fae5d152a10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringBuilder.length [0x00007fae5d0fa090]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.AbstractStringBuilder.append [0x00007fae5d0f9490]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.net.www.protocol.file.Handler.parseURL [0x00007fae5d2d1a10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringBuilder.toString [0x00007fae5d0f8c10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.net.www.ParseUtil.encodePath [0x00007fae5d1c6390]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.Frame.execute [0x00007fae5d148210]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.Resource.getBytes [0x00007fae5d2ce810]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringBuilder.append [0x00007fae5d0f8890]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.ByteVector.putByte [0x00007fae5d0f8310]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.AbstractStringBuilder.<init> [0x00007fae5d0f7e10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8 [0x00007fae5d0f7110]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.net.www.ParseUtil.firstEncodeIndex [0x00007fae7c8afe10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.MethodType.parameterCount [0x00007fae5d0f6d90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.ArrayList.<init> [0x00007fae5d2ce310]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.SymbolTable$Entry.<init> [0x00007fae5d0f6990]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.SymbolTable.put [0x00007fae5d0f5b10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.MethodType.parameterType [0x00007fae5d0f5710]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.Symbol.<init> [0x00007fae5d0f4e10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.jimage.ImageStringsReader.unmaskedHashCode [0x00007fae5d145710]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.ByteVector.putUTF8 [0x00007fae5d0f3a90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.ByteVector.putShort [0x00007fae5d0f3510]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Class.getClassLoader [0x00007fae5d0f2390]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.SymbolTable.get [0x00007fae5d0f1f10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.indexOf [0x00007fae5d1c1410]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.ReentrantLock$Sync.tryRelease [0x00007fae7c877810]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.net.www.ParseUtil.firstEncodeIndex [0x00007fae5d0efd10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext [0x00007fae7c877510]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.net.util.IPAddressUtil.checkHostString [0x00007fae5d13f210]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Blocker.end [0x00007fae5d0ef490]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.Resource.cachedInputStream [0x00007fae5d1bd210]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.Optional.empty [0x00007fae5d2c8b10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Blocker.begin [0x00007fae5d0ee710]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.BufferedInputStream.getBufIfOpen [0x00007fae7c876e90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.jar.JarFile.getEntry [0x00007fae5d2c7990]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.URLClassPath$JarLoader.getResource [0x00007fae5d2c7010]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock [0x00007fae7c868b10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.indexOf [0x00007fae5d0ee010]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.WeakHashMap.remove [0x00007fae5d13ae90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.newString [0x00007fae5d0ec790]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.substring [0x00007fae5d0ebc90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState [0x00007fae7c868510]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.util.Preconditions.checkFromToIndex [0x00007fae5d0eb310]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.ByteVector.put12 [0x00007fae5d139a10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.InternalLock.unlock [0x00007fae5d0eab10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: worker.org.gradle.internal.stream.EncodedStream$EncodedInput.hexToByte [0x00007fae5d0ea090]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.util.ArraysSupport.mismatch [0x00007fae7c8aaa90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.startsWith [0x00007fae7c8aa290]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.hashCode [0x00007fae7c868190]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.getNode [0x00007fae7c8a9890]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.BufferedInputStream.implRead [0x00007fae5d0e9a90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Class.getPackageName [0x00007fae5d136c10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.BufferedInputStream.read [0x00007fae5d0e7a10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.LinkedHashMap.afterNodeInsertion [0x00007fae5d2c3990]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.Arrays.rangeCheck [0x00007fae5d135910]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.InternalLock.lock [0x00007fae5d0e7210]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.jar.JarFile.maybeInstantiateVerifier [0x00007fae5d134e90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.BufferedInputStream.getBufIfOpen [0x00007fae5d0e6a10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.DirectMethodHandle.internalMemberName [0x00007fae5d2c2c10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.ReentrantLock.unlock [0x00007fae5d0e6390]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.LinkedHashMap.get [0x00007fae5d134910]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext [0x00007fae5d0e5a90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.ReentrantLock$Sync.tryRelease [0x00007fae5d0e5390]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.release [0x00007fae5d0e4890]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState [0x00007fae5d0e4510]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.io.BufferedInputStream.getBufIfOpen [0x00007fae5d0e4190]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock [0x00007fae5d0e3a90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.locks.ReentrantLock.lock [0x00007fae5d0e2f90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.ref.NativeReferenceQueue.poll [0x00007fae5d0e2890]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.lastIndexOf [0x00007fae7c873e90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.org.objectweb.asm.Frame.push [0x00007fae5d1ad710]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.MethodType.hashCode [0x00007fae5d0e2090]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.regex.Pattern$BmpCharPropertyGreedy.match [0x00007fae7c89c590]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.MethodType.checkSlotCount [0x00007fae5d0e0f10]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.System.getSecurityManager [0x00007fae5d0e0490]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.regionMatches [0x00007fae5d12f210]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.AbstractStringBuilder.append [0x00007fae5d0df690]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringBuilder.append [0x00007fae5d0de790]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.CharacterDataLatin1.equalsIgnoreCase [0x00007fae5d12db90]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipUtils.SH [0x00007fae5d0de390]
[4,364s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.get [0x00007fae5d0dd110]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.jar.JarFile.ensureInitialization [0x00007fae5d2b7b90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.MethodTypeForm.canonicalize [0x00007fae5d0dc310]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.WeakHashMap.hash [0x00007fae5d12b710]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.WeakHashMap.getTable [0x00007fae5d12b310]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.AbstractStringBuilder.isLatin1 [0x00007fae5d0dbf90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipFile$Source.isMetaName [0x00007fae7c871e90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.URLClassPath.getResource [0x00007fae5d2b6090]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringConcatHelper.prepend [0x00007fae5d129d10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.LambdaForm.uncustomize [0x00007fae5d1a4590]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.AbstractStringBuilder.ensureCapacityInternal [0x00007fae5d0da410]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.jar.JarFile$JarFileEntry.getCodeSigners [0x00007fae5d2b3f90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.ref.ReferenceQueue.poll [0x00007fae5d127c90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.Collections.emptyList [0x00007fae5d22f010]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.getBytes [0x00007fae5d0d8990]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashSet.add [0x00007fae5d0d8510]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.DirectLongBufferU.ix [0x00007fae5d126990]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.jar.JarFile.getEntry [0x00007fae5d126190]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.URLClassPath.getLoader [0x00007fae5d124110]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.get [0x00007fae5d0d7d10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.put [0x00007fae5d0d7710]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.afterNodeInsertion [0x00007fae5d0d7090]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.regex.Pattern$BmpCharPropertyGreedy.match [0x00007fae5d22a710]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.putVal [0x00007fae5d0d5290]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.jar.JarFile.getJarEntry [0x00007fae5d123910]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.regex.Matcher.search [0x00007fae5d229b90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.URLClassPath$JarLoader.getResource [0x00007fae5d123010]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.DirectByteBuffer.get [0x00007fae5d121290]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.MemberName.getReferenceKind [0x00007fae5d19f990]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.getNode [0x00007fae5d0d4010]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.Resource.getBytes [0x00007fae5d2a9c90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.ref.SoftReference.get [0x00007fae5d19f590]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.HashMap.hash [0x00007fae5d0d3610]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.InternalLock.unlock [0x00007fae7c898390]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.DirectByteBuffer.ix [0x00007fae5d120f90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.reflect.ByteVectorImpl.getLength [0x00007fae5d19dd90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.addCount [0x00007fae5d0d2690]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.InternalLock.lock [0x00007fae7c897c10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.casTabAt [0x00007fae5d0d2290]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.putIfAbsent [0x00007fae5d0d1f10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.nio.Buffer.session [0x00007fae5d11f910]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.toString [0x00007fae5d11f610]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Math.min [0x00007fae5d19b190]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.putVal [0x00007fae5d0cdc90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipFile.getEntry [0x00007fae5d11da90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.jar.JarFile.isMultiRelease [0x00007fae5d11d610]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipFile$Source.getEntryPos [0x00007fae5d11c410]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.util.locale.LocaleUtils.isUpper [0x00007fae5d227c10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.tabAt [0x00007fae5d0cd290]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.loader.URLClassPath$JarLoader.ensureOpen [0x00007fae5d11bc10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.lastIndexOf [0x00007fae5d0ccb90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.Checksum.update [0x00007fae5d225b10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.jar.JarFile.checkForSpecialAttributes [0x00007fae5d11a190]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.startsWith [0x00007fae5d0cc110]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.util.ArraysSupport.mismatch [0x00007fae5d0cb910]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.indexOf [0x00007fae5d0cb010]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.VarHandleGuards.guard_LI_I [0x00007fae5d194910]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.isLatin1 [0x00007fae7c85e410]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.indexOf [0x00007fae5d0ca710]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.indexOf [0x00007fae5d0c9e10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.indexOf [0x00007fae5d0c9a90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.isEmpty [0x00007fae5d0c9690]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Math.max [0x00007fae5d0c9310]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.canEncode [0x00007fae5d0c8f90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.startsWith [0x00007fae5d0c8210]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Math.min [0x00007fae5d0c7e90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.indexOfChar [0x00007fae5d0c7990]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Object.<init> [0x00007fae7c85da10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.ClassLoader.checkName [0x00007fae5d119310]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.checkIndex [0x00007fae5d0c7210]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle.get [0x00007fae5d192a10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.zip.ZipFile.ensureOpen [0x00007fae5d118c90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.getIntUnaligned [0x00007fae5d192510]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.charAt [0x00007fae5d0c6610]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringCoding.countPositives [0x00007fae7c86f510]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.isLatin1 [0x00007fae5d0c6290]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.length [0x00007fae5d0c5e10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.coder [0x00007fae5d0c5a90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.ref.Cleaner$1.apply [0x00007fae5d117e10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: sun.security.util.KnownOIDs.register [0x00007fae5d189590]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.Objects.requireNonNull [0x00007fae5d0c3010]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.ArrayList.get [0x00007fae5d116690]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.Objects.equals [0x00007fae5d0c1610]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Integer.rotateLeft [0x00007fae5d189290]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.equals [0x00007fae5d0c0e10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.Objects.checkIndex [0x00007fae5d116310]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.util.ArraysSupport.vectorizedHashCode [0x00007fae5d0bf790]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.misc.Unsafe.allocateUninitializedArray [0x00007fae5d115b10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.equals [0x00007fae5d0bee10]
[4,365s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.NativeReferenceQueue.signal [0x00007fae5d26cf10] (c1)
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.util.ArraysSupport.vectorizedHashCode [0x00007fae7c86ec10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.StringLatin1.hashCode [0x00007fae5d0bde90]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: jdk.internal.util.ArraysSupport.signedHashCode [0x00007fae5d0bda10]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.util.ArrayList$Itr.hasNext [0x00007fae5d188910]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.String.hashCode [0x00007fae5d0bd310]
[4,365s][debug][gc,nmethod     ] GC(0) Unregister NMethod: java.lang.Object.<init> [0x00007fae5d0bd010]
[4,365s][info ][gc             ] GC(0) Concurrent class unloading 10,802ms
[4,365s][info ][gc,start       ] GC(0) Concurrent strong roots
[4,365s][info ][gc,task        ] GC(0) Using 5 of 10 workers for concurrent strong root
[4,365s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.VM.addFinalRefCount [0x00007fae5d0c7210] (c1)
[4,365s][debug][gc,nmethod     ] Register NMethod: java.util.BitSet.set [0x00007fae7c86ec10] (c2)
[4,365s][info ][gc             ] GC(0) Concurrent strong roots 0,302ms
[4,365s][info ][gc,start       ] GC(0) Concurrent evacuation
[4,365s][info ][gc,task        ] GC(0) Using 5 of 10 workers for concurrent evacuation
[4,366s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.ReferenceQueue.enqueue0 [0x00007fae5d0f1f10] (c1)
[4,366s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.clearPage [0x00007fae7c973610] (c2)
[4,366s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.NativeReferenceQueue.enqueue [0x00007fae5d0bee10] (c1)
[4,366s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.ReentrantLock$Sync.isHeldExclusively [0x00007fae5d0c3010] (c1)
[4,366s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.ReferenceQueue.remove0 [0x00007fae5d117e10] (c1)
[4,366s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.ReferenceQueue.poll0 [0x00007fae5d1bd210] (c1)
[4,366s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Finalizer.reportComplete [0x00007fae7c868b10] ()
[4,366s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.FinalReference.get [0x00007fae5d188910] (c1)
[4,366s][debug][gc,nmethod     ] Register NMethod: java.lang.System$2.invokeFinalize [0x00007fae5d100810] (c1)
[4,367s][debug][gc,nmethod     ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32JNI.finalize [0x00007fae5d328d90] (c1)
[4,367s][debug][gc,nmethod     ] Register NMethod: java.lang.Object.finalize [0x00007fae5d0d7090] (c1)
[4,367s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.NativeReferenceQueue.remove [0x00007fae5d491190] (c1)
[4,367s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Reference.getFromInactiveFinalReference [0x00007fae5d0e0490] (c1)
[4,367s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Finalizer.runFinalizer [0x00007fae5d136c10] (c1)
[4,367s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.FinalReference.clear [0x00007fae5d2e6310] (c1)
[4,367s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Reference.clearInactiveFinalReference [0x00007fae5d17e890] (c1)
[4,367s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Blocker.end [0x00007fae7c86f510] (c2)
[4,367s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Blocker.begin [0x00007fae7c873e90] (c2)
[4,368s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.putReference [0x00007fae7c8bd410] ()
[4,368s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.ReferenceQueue.signal [0x00007fae5d102f10] (c1)
[4,368s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signalAll [0x00007fae5d102390] (c1)
[4,368s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.ReferenceQueue.enqueue [0x00007fae5d28be10] (c1)
[4,368s][debug][gc,nmethod     ] Register NMethod: jdk.internal.ref.PhantomCleanable.isListEmpty [0x00007fae5d139a10] (c1)
[4,368s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandleNatives.clearCallSiteContext [0x00007fae7c876e90] ()
[4,368s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.InnocuousThread.eraseThreadLocals [0x00007fae5d19b190] (c1)
[4,369s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandleNatives$CallSiteContext.run [0x00007fae5d227c10] (c1)
[4,369s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.ReferenceQueue.remove0 [0x00007fae5d604890] (c1)
[4,369s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.ReferenceQueue.remove [0x00007fae5d44bf10] (c1)
[4,402s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap$BaseIterator.hasNext [0x00007fae7c85da10] (c2)
[4,454s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm.compileToBytecode [0x00007fae5d0f9490] (c1)
[4,459s][info ][gc             ] GC(0) Concurrent evacuation 93,311ms
[4,459s][info ][gc,start       ] GC(0) Pause Init Update Refs
[4,459s][info ][gc,ergo        ] GC(0) Pacer for Update Refs. Used: 2338M, Free: 9745M, Non-Taxable: 974M, Alloc Tax Rate: 1,1x
[4,459s][info ][gc             ] GC(0) Pause Init Update Refs 0,041ms
[4,459s][info ][gc,start       ] GC(0) Concurrent update references
[4,459s][info ][gc,task        ] GC(0) Using 5 of 10 workers for concurrent reference update
[4,474s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.charAt [0x00007fae5d525490] (c1)
[4,474s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.peekUnsignedByte [0x00007fae5d129d10] (c1)
[4,474s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.isEqual [0x00007fae5d71b190] (c1)
[4,474s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.isEqual [0x00007fae5d109e10] (c1)
[4,474s][debug][gc,nmethod     ] Register NMethod: java.nio.HeapByteBuffer.isReadOnly [0x00007fae7c85e410] (c1)
[4,475s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.NativeReferenceQueue.poll [0x00007fae5d19f590] (c1)
[4,475s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap.remove [0x00007fae5d27dd90] (c1)
[4,476s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageReference.<init> [0x00007fae7c977690] (c2)
[4,476s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap.replaceNode [0x00007fae5d0d4010] (c1)
[4,476s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readSkip [0x00007fae5d60a790] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.HashEntryNode.getKind [0x00007fae5d67f810] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap.find [0x00007fae5d12b310] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.HashEntryNode.getKind [0x00007fae5d360d10] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.Maths.hash64 [0x00007fae5d37b710] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap.insert [0x00007fae5d15bc10] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.isMostRecentlyReadPage [0x00007fae5d1a4590] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2LongOpenHashMap.insert [0x00007fae5d2b6090] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.HashCountEntryNode.<init> [0x00007fae5d6c2510] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.calculateCount [0x00007fae5d17a890] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.ReferenceCountedUtil.throwExceptionIfReleased [0x00007fae5d1ad710] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap.put [0x00007fae5d15d190] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataInput.readUtf8 [0x00007fae5d37ce90] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.acquireStringBuilderScoped [0x00007fae5d4eca90] (c1)
[4,477s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.scoped.ScopedThreadLocal$SimpleStack.isEmpty [0x00007fae5d4f5e90] (c1)
[4,478s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.scoped.AbstractScopedResource.preAcquire [0x00007fae5d152a10] (c1)
[4,478s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.pool.StringBuilderPool$$Lambda/0x00007fadb4234ef8.accept [0x00007fae5d1c1410] (c1)
[4,478s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.pool.StringBuilderPool.lambda$createThreadLocal$2 [0x00007fae5d13f210] (c1)
[4,478s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathNode.setRightSibling [0x00007fae7ca3be10] (c1)
[4,478s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathNode.getLeftSibling [0x00007fae7ca58610] (c1)
[4,478s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathNode.setLeftSibling [0x00007fae7ca68a90] (c1)
[4,478s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.scoped.ScopedThreadLocal.get [0x00007fae5d2b3f90] (c1)
[4,478s][debug][gc,nmethod     ] Register NMethod: io.brackit.query.atomic.QNm.<init> [0x00007fae5d216590] (c1)
[4,478s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathNode.getFirstChild [0x00007fae7ca70f90] (c1)
[4,478s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandle.checkAccessModeThenIsDirect [0x00007fae7c8afe10] (c2)
[4,478s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap.spread [0x00007fae7c8c8890] (c2)
[4,478s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind.deserializeNodeDelegateWithoutIDs [0x00007fae5d452790] (c1)
[4,478s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.readUtf8 [0x00007fae5d534b10] (c1)
[4,479s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$13.deserialize [0x00007fae5d6deb90] (c1)
[4,479s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind.deserializeStructDel [0x00007fae5d4fc410] (c1)
[4,479s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.readStopBit0 [0x00007fae5d4eab90] (c1)
[4,479s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.<init> [0x00007fae5d4f8310] (c1)
[4,479s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.pathsummary.AbstractAxis.next [0x00007fae5d66bd10] (c1)
[4,479s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathNode.getURIKey [0x00007fae5d6e7210] (c1)
[4,479s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind.deserializeNameDelegate [0x00007fae5d0d8510] (c1)
[4,479s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.pathsummary.AbstractAxis.tryToComputeNext [0x00007fae5d4d1810] (c1)
[4,479s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4BlockInputStream.tryReadFully [0x00007fae5d39ca90] (c1)
[4,480s][debug][gc,nmethod     ] Register NMethod: java.nio.Buffer.nextGetIndex [0x00007fae5d0da410] (c1)
[4,480s][debug][gc,nmethod     ] Register NMethod: java.nio.HeapByteBuffer.get [0x00007fae5d43c210] (c1)
[4,480s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.clear [0x00007fae7c871e90] (c2)
[4,480s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.pathsummary.LevelOrderSettingInMemoryInstancesAxis.nextNode [0x00007fae5d6aa410] (c1)
[4,482s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readByte [0x00007fae7c89c590] (c2)
[4,482s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.interrupted [0x00007fae5d187f90] (c1)
[4,482s][debug][gc,nmethod     ] Register NMethod: java.nio.ByteOrder.nativeOrder [0x00007fae7cab5110] (c2)
[4,482s][debug][gc,nmethod     ] Register NMethod: java.util.stream.Collectors$$Lambda/0x00007fadb408a090.accept [0x00007fae5d4ed590] (c1)
[4,482s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.readByte [0x00007fae7c941e90] (c2)
[4,483s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.setDeweyId [0x00007fae7c97b390] (c2)
[4,484s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.setSlot [0x00007fae7cab5890] (c2)
[4,484s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsRightSibling [0x00007fae5d6db610] (c1)
[4,484s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readLong [0x00007fae7c8bbe90] (c2)
[4,485s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageReference.setPageFragments [0x00007fae7c87e010] (c2)
[4,485s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.getBytes [0x00007fae7c868190] (c2)
[4,485s][debug][gc,nmethod     ] Register NMethod: java.util.Arrays$ArrayList.get [0x00007fae7c8c6590] (c2)
[4,489s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.read [0x00007fae7c89f690] (c2)
[4,492s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.VanillaBytes.read [0x00007fae7c978190] (c2)
[4,494s][info ][gc             ] GC(0) Concurrent update references 34,787ms
[4,494s][info ][gc,start       ] GC(0) Concurrent update thread roots
[4,495s][info ][gc             ] GC(0) Concurrent update thread roots 1,355ms
[4,495s][info ][gc,start       ] GC(0) Pause Final Update Refs
[4,495s][info ][gc,task        ] GC(0) Using 10 of 10 workers for final reference update
[4,495s][info ][gc             ] GC(0) Pause Final Update Refs 0,112ms
[4,495s][info ][gc,start       ] GC(0) Concurrent cleanup
[4,496s][info ][gc             ] GC(0) Concurrent cleanup 2362M->1002M(5532M) 0,161ms
[4,496s][debug][gc,ergo        ] GC(0) Available: 10669 MB, z-score=0,000. Average available: 10669,3 MB +/- 0,0 BB.
[4,496s][info ][gc,ergo        ] Free: 10669M, Max: 4096K regular, 7736M humongous, Frag: 28% external, 0% internal; Reserve: 616M, Max: 4096K
[4,496s][info ][gc,stats       ] 
[4,496s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[4,496s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[4,496s][info ][gc,stats       ] 
[4,496s][info ][gc,stats       ] Concurrent Reset                    520 us
[4,496s][info ][gc,stats       ] Pause Init Mark (G)                 162 us
[4,496s][info ][gc,stats       ] Pause Init Mark (N)                  54 us
[4,496s][info ][gc,stats       ]   Update Region States               10 us
[4,496s][info ][gc,stats       ] Concurrent Mark Roots              1432 us, parallelism: 2,15x
[4,496s][info ][gc,stats       ]   CMR: <total>                     3078 us
[4,496s][info ][gc,stats       ]   CMR: Thread Roots                2951 us, workers (us): 518, 555, 1314, 437, 127, ---, ---, ---, ---, ---, 
[4,496s][info ][gc,stats       ]   CMR: VM Strong Roots               17 us, workers (us):   5,   4,   3,   2,   3, ---, ---, ---, ---, ---, 
[4,496s][info ][gc,stats       ]   CMR: CLDG Roots                   109 us, workers (us):  11, ---, ---,  98, ---, ---, ---, ---, ---, ---, 
[4,496s][info ][gc,stats       ] Concurrent Marking               191421 us
[4,496s][info ][gc,stats       ] Pause Final Mark (G)                608 us
[4,496s][info ][gc,stats       ] Pause Final Mark (N)                460 us
[4,496s][info ][gc,stats       ]   Finish Mark                       241 us
[4,496s][info ][gc,stats       ]   Update Region States               90 us
[4,496s][info ][gc,stats       ]   Choose Collection Set              74 us
[4,496s][info ][gc,stats       ]   Rebuild Free Set                   10 us
[4,496s][info ][gc,stats       ] Concurrent Thread Roots            1762 us, parallelism: 3,94x
[4,496s][info ][gc,stats       ]   CTR: <total>                     6936 us
[4,496s][info ][gc,stats       ]   CTR: Thread Roots                6936 us, workers (us): 1539, 1690, 1246, 1253, 1207, ---, ---, ---, ---, ---, 
[4,496s][info ][gc,stats       ] Concurrent Weak References          610 us, parallelism: 2,16x
[4,496s][info ][gc,stats       ]   CWRF: <total>                    1319 us
[4,496s][info ][gc,stats       ]   CWRF: Weak References            1319 us, workers (us): 484, 481, 121,  31, 202, ---, ---, ---, ---, ---, 
[4,496s][info ][gc,stats       ] Concurrent Weak Roots              2202 us
[4,496s][info ][gc,stats       ]   Roots                            1114 us, parallelism: 2,56x
[4,496s][info ][gc,stats       ]     CWR: <total>                   2852 us
[4,496s][info ][gc,stats       ]     CWR: Code Cache Roots           863 us, workers (us): 212, 218, 210,   0, 224, ---, ---, ---, ---, ---, 
[4,496s][info ][gc,stats       ]     CWR: VM Weak Roots             1955 us, workers (us): 284, 280, 282, 933, 175, ---, ---, ---, ---, ---, 
[4,496s][info ][gc,stats       ]     CWR: CLDG Roots                  34 us, workers (us):  17,  17, ---, ---, ---, ---, ---, ---, ---, ---, 
[4,496s][info ][gc,stats       ]   Rendezvous                       1059 us
[4,496s][info ][gc,stats       ] Concurrent Cleanup                  201 us
[4,496s][info ][gc,stats       ] Concurrent Class Unloading        10812 us
[4,496s][info ][gc,stats       ]   Unlink Stale                     2029 us
[4,496s][info ][gc,stats       ]     System Dictionary                50 us
[4,496s][info ][gc,stats       ]     Weak Class Links                  0 us
[4,496s][info ][gc,stats       ]     Code Roots                     1977 us
[4,496s][info ][gc,stats       ]   Rendezvous                         71 us
[4,496s][info ][gc,stats       ]   Purge Unlinked                   8685 us
[4,496s][info ][gc,stats       ]     Code Roots                     8667 us
[4,496s][info ][gc,stats       ]     CLDG                             18 us
[4,496s][info ][gc,stats       ]     Exception Caches                  0 us
[4,496s][info ][gc,stats       ] Concurrent Strong Roots             319 us, parallelism: 1,61x
[4,496s][info ][gc,stats       ]   CSR: <total>                      515 us
[4,496s][info ][gc,stats       ]   CSR: VM Strong Roots               23 us, workers (us):  11,  11,   0,   0,   0, ---, ---, ---, ---, ---, 
[4,496s][info ][gc,stats       ]   CSR: CLDG Roots                   492 us, workers (us): 245, 247, ---, ---, ---, ---, ---, ---, ---, ---, 
[4,496s][info ][gc,stats       ] Concurrent Evacuation             93344 us
[4,496s][info ][gc,stats       ] Pause Init Update Refs (G)          154 us
[4,496s][info ][gc,stats       ] Pause Init Update Refs (N)           52 us
[4,496s][info ][gc,stats       ]   Manage GCLABs                       4 us
[4,496s][info ][gc,stats       ] Concurrent Update Refs            34848 us
[4,496s][info ][gc,stats       ] Concurrent Update Thread Roots     1385 us
[4,496s][info ][gc,stats       ] Pause Final Update Refs (G)         222 us
[4,496s][info ][gc,stats       ] Pause Final Update Refs (N)         127 us
[4,496s][info ][gc,stats       ]   Update Region States               46 us
[4,496s][info ][gc,stats       ]   Trash Collection Set               13 us
[4,496s][info ][gc,stats       ]   Rebuild Free Set                   18 us
[4,496s][info ][gc,stats       ] Concurrent Cleanup                  168 us
[4,496s][info ][gc,stats       ] 
[4,496s][info ][gc,stats       ] Allocation pacing accrued:
[4,496s][info ][gc,stats       ]       0 of  4303 ms (  0,0%): <total>
[4,496s][info ][gc,stats       ]       0 of  4303 ms (  0,0%): <average total>
[4,496s][info ][gc,stats       ] 
[4,496s][info ][gc,metaspace   ] Metaspace: 19650K(20032K)->19686K(20096K) NonClass: 17196K(17344K)->17232K(17408K) Class: 2454K(2688K)->2454K(2688K)
[4,496s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[4,501s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsRightSibling [0x00007fae7c95c810] (c2)
[4,559s][debug][gc,nmethod     ] Register NMethod: java.util.LinkedHashMap.afterNodeInsertion [0x00007fae7c977d10] (c2)
[4,749s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.UberPage.getPageCountExp [0x00007fae7c89f190] (c2)
[4,752s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getPageReference [0x00007fae7caab390] (c2)
[4,752s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getCurrentMaxIndirectPageTreeLevel [0x00007fae7c89dc90] (c2)
[4,826s][debug][gc,nmethod     ] Register NMethod: org.magicwerk.brownies.collections.GapList.doAdd [0x00007fae7ca12c90] (c2)
[4,828s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.PageContainer.getInstance [0x00007fae7ca12910] (c2)
[4,829s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.TransactionIntentLog.put [0x00007fae7c879610] (c2)
[4,833s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getRevisionNumber [0x00007fae7c972e90] (c2)
[4,838s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.<init> [0x00007fae7caa3710] (c2)
[4,848s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.<init> [0x00007fae7c897c10] (c2)
[4,883s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.lambda$prepareRecordPage$3 [0x00007fae7c9b9a90] (c2)
[5,057s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.NativeBuffer.close [0x00007fae5d703a10] (c1)
[5,057s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.getByteArrayForSysCalls [0x00007fae5d562310] (c1)
[5,057s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.NativeBuffers.getNativeBufferFromCache [0x00007fae5d5f7e90] (c1)
[5,057s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer [0x00007fae5d11f610] (c1)
[5,057s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.NativeBuffer.release [0x00007fae5d5a4290] (c1)
[5,058s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.NativeBuffers.releaseNativeBuffer [0x00007fae5d6d5910] (c1)
[5,065s][debug][gc,nmethod     ] Register NMethod: java.util.Spliterator.getExactSizeIfKnown [0x00007fae7c972b10] (c2)
[5,068s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.signalWork [0x00007fae5d523e90] (c1)
[5,084s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.casSlotToNull [0x00007fae5d1c6390] (c1)
[5,085s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CountedCompleter.propagateCompletion [0x00007fae5d563a90] (c1)
[5,094s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.putReferenceOpaque [0x00007fae5d5a5f90] (c1)
[5,095s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae5d50c510] (c1)
[5,114s][debug][gc,nmethod     ] Register NMethod: java.util.Optional.get [0x00007fae5d12db90] (c1)
[5,114s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataOutput.appendUtf8 [0x00007fae5d682890] (c1)
[5,116s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.NativeThreadSet.add [0x00007fae7c877510] (c2)
[5,120s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.BytesStore.wrap [0x00007fae7c9f6d10] (c2)
[5,121s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.NativeThreadSet.remove [0x00007fae7ca2db90] (c2)
[5,121s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType.writeHash [0x00007fae7c8e0090] (c2)
[5,121s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType.writePageFragments [0x00007fae7c94c990] (c2)
[5,121s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.checkResize [0x00007fae7c87dd10] (c2)
[5,122s][debug][gc,nmethod     ] Register NMethod: java.nio.channels.spi.AbstractInterruptibleChannel.end [0x00007fae7c943910] (c2)
[5,123s][debug][gc,nmethod     ] Register NMethod: java.nio.channels.spi.AbstractInterruptibleChannel.begin [0x00007fae7c8a5610] (c2)
[5,128s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.resize [0x00007fae7c9b0510] (c2)
[5,132s][debug][gc,nmethod     ] Register NMethod: java.nio.channels.spi.AbstractInterruptibleChannel.isOpen [0x00007fae7c8c6290] (c2)
[5,133s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer.isReadOnly [0x00007fae7ca2d810] (c1)
[5,133s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadLocal.getMap [0x00007fae7c9b0110] (c2)
[5,134s][debug][gc,nmethod     ] Register NMethod: java.nio.file.Files.provider [0x00007fae5d495790] (c1)
[5,134s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer.base [0x00007fae7c953510] (c1)
[5,135s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.getLongVolatile [0x00007fae7c953110] ()
[5,135s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4BlockInputStream.read [0x00007fae5d5f4690] (c1)
[5,135s][debug][gc,nmethod     ] Register NMethod: java.lang.AbstractStringBuilder.ensureCapacity [0x00007fae5d2c2c10] (c1)
[5,135s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$31.deserialize [0x00007fae5d185390] (c1)
[5,135s][debug][gc,nmethod     ] Register NMethod: java.lang.StringBuilder.ensureCapacity [0x00007fae5d2d1a10] (c1)
[5,135s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.setCount [0x00007fae5d51ea10] (c1)
[5,135s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.Maths.agitate [0x00007fae5d6da690] (c1)
[5,135s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$32.deserialize [0x00007fae5d548390] (c1)
[5,136s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.parseUtf8 [0x00007fae5d53e310] (c1)
[5,136s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader$$Lambda/0x00007fadb429f340.apply [0x00007fae5d6b3210] (c1)
[5,136s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.lambda$new$0 [0x00007fae5d5c9e10] (c1)
[5,136s][debug][gc,nmethod     ] Register NMethod: java.lang.StringBuilder.charAt [0x00007fae7c952c90] (c2)
[5,136s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.moveToRightSibling [0x00007fae5d491e90] (c1)
[5,136s][debug][gc,nmethod     ] Register NMethod: java.lang.AbstractStringBuilder.charAt [0x00007fae7c954510] (c2)
[5,136s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.shorts.AbstractShortList.ensureIndex [0x00007fae7c954210] (c2)
[5,136s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.parseUtf8_SB1 [0x00007fae5d0bf790] (c1)
[5,136s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.getName [0x00007fae5d6ea590] (c1)
[5,136s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathNode.setFirstChild [0x00007fae7c953e10] (c1)
[5,136s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList$1.<init> [0x00007fae7c9b9790] (c2)
[5,136s][debug][gc,nmethod     ] Register NMethod: java.nio.ByteBuffer.wrap [0x00007fae5d728f10] (c1)
[5,137s][debug][gc,nmethod     ] Register NMethod: java.nio.MappedByteBuffer.flip [0x00007fae5d568e90] (c1)
[5,137s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.getLongUnaligned [0x00007fae5d597010] (c1)
[5,137s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.IOUtil.read [0x00007fae5d135910] (c1)
[5,137s][debug][gc,nmethod     ] Register NMethod: java.util.stream.Collectors.castingIdentity [0x00007fae5d163e10] (c1)
[5,137s][debug][gc,nmethod     ] Register NMethod: java.util.stream.Collectors$CollectorImpl.<init> [0x00007fae5d631410] (c1)
[5,137s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.IOUtil.readIntoNativeBuffer [0x00007fae5d528210] (c1)
[5,137s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.IOUtil.read [0x00007fae5d72d010] (c1)
[5,137s][debug][gc,nmethod     ] Register NMethod: java.nio.MappedByteBuffer.flip [0x00007fae5d187590] (c1)
[5,138s][debug][gc,nmethod     ] Register NMethod: java.lang.String.getBytes [0x00007fae7c9b8f10] (c2)
[5,138s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.UnixFileDispatcherImpl.pread0 [0x00007fae7c9ccc90] ()
[5,138s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.UnixFileDispatcherImpl.pread [0x00007fae5d5e7e90] (c1)
[5,138s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4Factory.fastDecompressor [0x00007fae7c9cc990] (c1)
[5,138s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.FileChannelImpl.read [0x00007fae5d217390] (c1)
[5,138s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c945910] ()
[5,138s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite.compareAndSet [0x00007fae5d6aec90] (c1)
[5,138s][debug][gc,nmethod     ] Register NMethod: java.nio.MappedByteBuffer.position [0x00007fae7c9cc510] (c2)
[5,138s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.FileChannelImpl.readInternal [0x00007fae5d229b90] (c1)
[5,138s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.loadPage [0x00007fae7cab6110] (c2)
[5,138s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_LLL_Z [0x00007fae5d194910] (c1)
[5,138s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.getLongUnalignedInternal [0x00007fae5d6e1890] (c1)
[5,138s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.getLongUnaligned [0x00007fae5d6a9590] (c1)
[5,139s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.getIntUnaligned [0x00007fae7c945610] (c2)
[5,139s][debug][gc,nmethod     ] Register NMethod: java.nio.HeapByteBuffer.getLong [0x00007fae5d115b10] (c1)
[5,139s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.<init> [0x00007fae5d58af90] (c1)
[5,139s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixFileSystem.normalizeNativePath [0x00007fae5d19dd90] (c1)
[5,139s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.Util.jnuEncoding [0x00007fae5d22f010] (c1)
[5,139s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixFileSystem.getPath [0x00007fae5d645c90] (c1)
[5,139s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.encode [0x00007fae5d2c7010] (c1)
[5,141s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.ReferencesPage4.getOrCreateReference [0x00007fae7c991710] (c2)
[5,142s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType.readPageFragments [0x00007fae7c95fc90] (c2)
[5,489s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4293260.apply [0x00007fae7c881310] (c2)
[5,713s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.compareAndExchangeLong [0x00007fae7c880f10] ()
[5,714s][debug][gc,nmethod     ] Register NMethod: java.nio.MappedByteBuffer.limit [0x00007fae7c880b10] (c2)
[5,717s][debug][gc,nmethod     ] Register NMethod: java.nio.MappedByteBuffer.<init> [0x00007fae7c963c90] (c2)
[5,718s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.allocateMemory [0x00007fae7c963810] (c2)
[5,719s][debug][gc,nmethod     ] Register NMethod: java.nio.ByteBuffer.<init> [0x00007fae7c94c490] (c2)
[5,720s][debug][gc,nmethod     ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32JNI.update [0x00007fae7c94bf10] (c2)
[5,720s][debug][gc,nmethod     ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32$1.reset [0x00007fae7c8aaa10] (c2)
[5,722s][debug][gc,nmethod     ] Register NMethod: java.nio.ByteBuffer.wrap [0x00007fae7c8aa310] (c2)
[5,723s][debug][gc,nmethod     ] Register NMethod: java.io.DataOutputStream.write [0x00007fae7c8e3190] (c2)
[5,725s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.init [0x00007fae7c8a9d90] (c2)
[5,728s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer.<init> [0x00007fae7c94ec90] (c2)
[5,735s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.tryPoll [0x00007fae5d182690] (c1)
[5,735s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.<init> [0x00007fae7ca28f90] (c2)
[5,736s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.bytepipe.LZ4Compressor.serialize [0x00007fae7c99a910] (c2)
[5,736s][info ][gc             ] Trigger: Learning 2 of 5. Free (8601M) is below initial threshold (8601M)
[5,736s][info ][gc,ergo        ] Free: 8601M, Max: 4096K regular, 7736M humongous, Frag: 11% external, 0% internal; Reserve: 616M, Max: 4096K
[5,736s][info ][gc,start       ] GC(1) Concurrent reset
[5,736s][info ][gc,task        ] GC(1) Using 5 of 10 workers for concurrent reset
[5,736s][info ][gc,ergo        ] GC(1) Pacer for Reset. Non-Taxable: 12288M
[5,736s][debug][gc,nmethod     ] Register NMethod: java.util.stream.Nodes$SpinedNodeBuilder.end [0x00007fae7c963510] (c2)
[5,737s][debug][gc,nmethod     ] Register NMethod: java.util.stream.SortedOps$RefSortingSink.begin [0x00007fae7c94ba90] (c2)
[5,739s][debug][gc,nmethod     ] Register NMethod: java.io.ByteArrayOutputStream.<init> [0x00007fae7c8a9890] (c2)
[5,741s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Finalizer.register [0x00007fae7c8e2990] (c2)
[5,741s][info ][gc             ] GC(1) Concurrent reset 5,145ms
[5,742s][info ][gc,start       ] GC(1) Pause Init Mark (unload classes)
[5,742s][info ][gc,task        ] GC(1) Using 10 of 10 workers for init marking
[5,742s][info ][gc,ergo        ] GC(1) Pacer for Mark. Expected Live: 467M, Free: 8569M, Non-Taxable: 856M, Alloc Tax Rate: 0,1x
[5,742s][info ][gc             ] GC(1) Pause Init Mark (unload classes) 0,067ms
[5,742s][info ][gc,start       ] GC(1) Concurrent marking roots
[5,742s][info ][gc,task        ] GC(1) Using 5 of 10 workers for concurrent marking roots
[5,742s][debug][gc,tlab        ] GC(1) TLAB totals: thrds: 22  refills: 1022 max: 631 slow allocs: 9 max 3 waste:  2,0% gc: 35475752B max: 4194240B slow: 8772632B max: 1258864B
[5,743s][info ][gc             ] GC(1) Concurrent marking roots 1,115ms
[5,743s][info ][gc,start       ] GC(1) Concurrent marking (unload classes)
[5,743s][info ][gc,task        ] GC(1) Using 5 of 10 workers for concurrent marking
[5,745s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Finalizer.<init> [0x00007fae7c99a190] (c2)
[5,746s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readLimit [0x00007fae7c8e2410] (c2)
[5,747s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readPosition [0x00007fae7c945290] (c2)
[5,748s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.elasticByteBuffer [0x00007fae7c999c10] (c2)
[5,749s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4263d30.test [0x00007fae7c95f910] (c2)
[5,749s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4263af8.apply [0x00007fae7c999710] (c2)
[5,754s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.BytesStore.bytesForRead [0x00007fae7ca28610] (c2)
[5,759s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.flushBufferedData [0x00007fae7c948310] (c2)
[5,762s][debug][gc,nmethod     ] Register NMethod: sun.security.provider.DigestBase.engineDigest [0x00007fae7ca6ad10] (c2)
[5,762s][debug][gc,nmethod     ] Register NMethod: java.util.TimSort.sort [0x00007fae7ca27d90] (c2)
[5,762s][debug][gc,nmethod     ] Register NMethod: java.security.MessageDigestSpi.clone [0x00007fae7c947e90] (c2)
[5,766s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.<init> [0x00007fae7ca69d10] (c2)
[5,767s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.finish [0x00007fae7c96c290] (c2)
[5,768s][debug][gc,nmethod     ] Register NMethod: com.google.common.hash.MessageDigestHashFunction.newHasher [0x00007fae7c96ae10] (c2)
[5,769s][debug][gc,nmethod     ] Register NMethod: com.google.common.base.Preconditions.checkArgument [0x00007fae7c947b90] (c2)
[5,769s][debug][gc,nmethod     ] Register NMethod: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher.hash [0x00007fae7ca69410] (c2)
[5,773s][debug][gc,nmethod     ] Register NMethod: java.security.MessageDigest$Delegate.clone [0x00007fae7c969f10] (c2)
[5,774s][debug][gc,nmethod     ] Register NMethod: java.security.MessageDigest.update [0x00007fae7c8b8490] (c2)
[5,774s][debug][gc,nmethod     ] Register NMethod: java.util.stream.Nodes$SpinedNodeBuilder.begin [0x00007fae7c969a10] (c2)
[5,779s][debug][gc,nmethod     ] Register NMethod: java.util.stream.SortedOps$RefSortingSink.end [0x00007fae7c8b7190] (c2)
[5,781s][debug][gc,nmethod     ] Register NMethod: com.google.common.hash.HashCode$BytesHashCode.asBytes [0x00007fae7c8b6d10] (c2)
[5,782s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.AbstractForwardingPageReadOnlyTrx.getReader [0x00007fae7c969610] (c2)
[5,783s][debug][gc,nmethod     ] Register NMethod: com.google.common.hash.AbstractHashFunction.hashBytes [0x00007fae7c90cc90] (c2)
[5,784s][debug][gc,nmethod     ] Register NMethod: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher.<init> [0x00007fae7c8b6710] (c2)
[5,785s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.Bytes.elasticByteBuffer [0x00007fae7c995510] (c2)
[5,790s][debug][gc,nmethod     ] Register NMethod: sun.security.provider.SHA2.implDigest [0x00007fae7c993f10] (c2)
[5,793s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4BlockOutputStream.close [0x00007fae7c909a10] (c2)
[5,794s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap.values [0x00007fae7c909510] (c2)
[5,797s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap$BaseIterator.<init> [0x00007fae7c8b5f10] (c2)
[5,797s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap$ValuesView.iterator [0x00007fae7ca01610] (c2)
[5,797s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap$ValueIterator.<init> [0x00007fae7ca00e10] (c2)
[5,800s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PagePersister.serializePage [0x00007fae7ca00190] (c2)
[5,805s][info ][gc             ] GC(1) Concurrent marking (unload classes) 62,302ms
[5,805s][info ][gc,start       ] GC(1) Pause Final Mark (unload classes)
[5,805s][info ][gc,task        ] GC(1) Using 10 of 10 workers for final marking
[5,805s][info ][gc,ergo        ] GC(1) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 9972M, Max CSet: 512M, Min Garbage: 0B
[5,805s][info ][gc,ergo        ] GC(1) Collectable Garbage: 2591M (99%), Immediate: 1064M (41%), CSet: 1527M (58%)
[5,805s][info ][gc,ergo        ] GC(1) Pacer for Evacuation. Used CSet: 2031M, Free: 9356M, Non-Taxable: 935M, Alloc Tax Rate: 1,1x
[5,805s][info ][gc             ] GC(1) Pause Final Mark (unload classes) 0,241ms
[5,805s][info ][gc,start       ] GC(1) Concurrent thread roots
[5,805s][info ][gc,task        ] GC(1) Using 5 of 10 workers for Concurrent thread roots
[5,807s][info ][gc             ] GC(1) Concurrent thread roots 1,830ms
[5,807s][info ][gc,start       ] GC(1) Concurrent weak references
[5,807s][info ][gc,task        ] GC(1) Using 5 of 10 workers for concurrent weak references
[5,808s][info ][gc,ref         ] GC(1) Encountered references: Soft: 3810, Weak: 1884, Final: 4857, Phantom: 5232
[5,808s][info ][gc,ref         ] GC(1) Discovered  references: Soft: 0, Weak: 625, Final: 4856, Phantom: 5208
[5,808s][info ][gc,ref         ] GC(1) Enqueued    references: Soft: 0, Weak: 3, Final: 4856, Phantom: 4870
[5,808s][info ][gc             ] GC(1) Concurrent weak references 1,159ms
[5,808s][info ][gc,start       ] GC(1) Concurrent weak roots
[5,808s][info ][gc,task        ] GC(1) Using 5 of 10 workers for concurrent weak root
[5,811s][info ][gc             ] GC(1) Concurrent weak roots 2,345ms
[5,811s][info ][gc,start       ] GC(1) Concurrent cleanup
[5,811s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelWriter.getOffset [0x00007fae7c9fd490] (c2)
[5,811s][info ][gc             ] GC(1) Concurrent cleanup 3391M->2327M(5544M) 0,099ms
[5,811s][info ][gc,ergo        ] GC(1) Free: 9352M, Max: 4096K regular, 8096M humongous, Frag: 14% external, 0% internal; Reserve: 606M, Max: 4096K
[5,811s][info ][gc,start       ] GC(1) Concurrent class unloading
[5,811s][info ][gc,task        ] GC(1) Using 5 of 10 workers for concurrent class unloading
[5,811s][debug][gc,phases,start] GC(1) ClassLoaderData
[5,811s][debug][gc,phases      ] GC(1) ClassLoaderData 0,019ms
[5,811s][debug][gc,phases,start] GC(1) Trigger cleanups
[5,811s][debug][gc,phases      ] GC(1) Trigger cleanups 0,008ms
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.delegates.ReferencesPage4.getOrCreateReference [0x00007fae5d6a7a10]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: it.unimi.dsi.fastutil.shorts.AbstractShortList.ensureIndex [0x00007fae5d6a6310]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList$1.<init> [0x00007fae5d6a5f10]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: jdk.internal.misc.Blocker.begin [0x00007fae5d827d10]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: jdk.internal.misc.Blocker.end [0x00007fae5d827210]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.KeyValueLeafPage.<init> [0x00007fae5d69fa10]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertStringValueAsRightSibling [0x00007fae5d6db610]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.lambda$prepareRecordPage$3 [0x00007fae5d69cd10]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.BitSet.set [0x00007fae5d697c90]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getPageReference [0x00007fae5d692d90]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4293260.apply [0x00007fae5d828b10]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getCurrentMaxIndirectPageTreeLevel [0x00007fae5d68ec10]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.UberPage.getPageCountExp [0x00007fae5d68e510]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.KeyValueLeafPage.<init> [0x00007fae5d68d210]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getRevisionNumber [0x00007fae5d68bc90]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.cache.PageContainer.getInstance [0x00007fae5d68b410]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.cache.TransactionIntentLog.put [0x00007fae5d68a990]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: org.magicwerk.brownies.collections.GapList.doAdd [0x00007fae5d687c10]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.readLong [0x00007fae5d811790]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.PageReference.<init> [0x00007fae5d682190]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.Arrays$ArrayList.get [0x00007fae5d818390]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.clear [0x00007fae5d7f1210]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.SerializationType.readPageFragments [0x00007fae5d815810]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.readByte [0x00007fae5d7ef690]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.read [0x00007fae5d7eb390]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.lang.StringBuilder.charAt [0x00007fae5d7e4b10]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.SerializationType.writeHash [0x00007fae5d7dc210]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.getBytes [0x00007fae5d60dd90]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.PageReference.setPageFragments [0x00007fae5d816790]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.KeyValueLeafPage.setSlot [0x00007fae5d7ee790]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processNull [0x00007fae7c99c190]
[5,812s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.SerializationType.writePageFragments [0x00007fae5d7dd110]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.nio.channels.spi.AbstractInterruptibleChannel.end [0x00007fae5d7c3e10]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: sun.nio.ch.NativeThreadSet.remove [0x00007fae5d7c3790]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.KeyValueLeafPage.setDeweyId [0x00007fae5d7ed910]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.io.DataOutputStream.write [0x00007fae5d7b7290]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.clear [0x00007fae5d7bfe90]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.VanillaBytes.read [0x00007fae5d7ec110]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.nio.channels.spi.AbstractInterruptibleChannel.begin [0x00007fae5d7e8510]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.lang.AbstractStringBuilder.charAt [0x00007fae5d7e4e90]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.lang.String.getBytes [0x00007fae5d577e90]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.loadPage [0x00007fae5d575e90]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: jdk.internal.misc.Unsafe.checkPointer [0x00007fae5d437a90]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: sun.nio.ch.NativeThreadSet.add [0x00007fae5d7c2b90]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.KeyValueLeafPage.clearPage [0x00007fae5d7bfb10]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.lang.Thread.blockedOn [0x00007fae5d7bca10]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.nio.channels.spi.AbstractInterruptibleChannel.isOpen [0x00007fae5d7bc110]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.lang.invoke.MethodType.makeImpl [0x00007fae7c92d290]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.readByte [0x00007fae5d4f8a90]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.stream.SortedOps$RefSortingSink.begin [0x00007fae5d79de10]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.stream.Nodes$SpinedNodeBuilder.end [0x00007fae5d79d310]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.resize [0x00007fae5d793310]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.nio.ByteOrder.nativeOrder [0x00007fae5d4ee590]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.<init> [0x00007fae5d789610]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.lang.ref.NativeReferenceQueue.poll [0x00007fae7c8f6510]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.io.bytepipe.LZ4Compressor.serialize [0x00007fae5d787810]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.lang.ref.SoftReference.get [0x00007fae7c8f5410]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.Spliterator.getExactSizeIfKnown [0x00007fae5d38d310]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.stream.ReferencePipeline$2$1.accept [0x00007fae5d37e510]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.init [0x00007fae5d775210]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.LinkedHashMap.afterNodeInsertion [0x00007fae5d363210]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.concurrent.ConcurrentHashMap$BaseIterator.hasNext [0x00007fae5d27ee10]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.KeyValueLeafPage.addReferences [0x00007fae5d757690]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: sun.security.provider.DigestBase.engineUpdate [0x00007fae5d74b910]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.lang.Integer.numberOfLeadingZeros [0x00007fae5d183310]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.nio.DirectByteBuffer.<init> [0x00007fae5d768090]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.lang.ref.Finalizer.<init> [0x00007fae5d761590]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.lang.ref.Finalizer.register [0x00007fae5d731090]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.io.ByteArrayOutputStream.<init> [0x00007fae5d72da90]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.lang.ThreadLocal.getMap [0x00007fae5d2c6790]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.nio.ByteBuffer.wrap [0x00007fae5d729710]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.writeShort [0x00007fae5d717b10]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.stream.ReferencePipeline$3$1.accept [0x00007fae5d237d10]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.wrapWithNativeBytes [0x00007fae5d703310]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.NativeBytes.checkResize [0x00007fae5d74a810]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: io.sirix.page.PageKind$1.serializePage [0x00007fae5d71c010]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.io.DataOutputStream.flush [0x00007fae5d748390]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.nio.ByteBuffer.<init> [0x00007fae5d71a890]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.jpountz.xxhash.StreamingXXHash32$1.reset [0x00007fae5d734790]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.BitSet.<init> [0x00007fae5d716290]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.jpountz.xxhash.StreamingXXHash32JNI.update [0x00007fae5d733110]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: jdk.internal.misc.Unsafe.allocateMemory [0x00007fae5d72ba10]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.concurrent.atomic.AtomicLong.decrementAndGet [0x00007fae5d83f110]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.nio.MappedByteBuffer.<init> [0x00007fae5d728b10]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.<init> [0x00007fae5d704f10]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.nio.MappedByteBuffer.limit [0x00007fae5d71ac90]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.nio.MappedByteBuffer.position [0x00007fae5d71a390]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.VanillaBytes.bytesForRead [0x00007fae5d718e10]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.jpountz.lz4.LZ4BlockOutputStream.flush [0x00007fae5d718810]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.ImmutableCollections$AbstractImmutableList.iterator [0x00007fae5d6f1190]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.concurrent.ConcurrentHashMap$Traverser.<init> [0x00007fae5d6f0410]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: com.google.common.base.Preconditions.checkPositionIndexes [0x00007fae5d714190]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.lang.invoke.VarHandle.checkAccessModeThenIsDirect [0x00007fae5d191610]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: net.openhft.chronicle.bytes.BytesStore.wrap [0x00007fae5d704290]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.spread [0x00007fae5d0d0d90]
[5,813s][debug][gc,nmethod     ] GC(1) Unregister NMethod: java.util.ImmutableCollections$ListItr.hasNext [0x00007fae5d6ebd90]
[5,813s][info ][gc             ] GC(1) Concurrent class unloading 2,322ms
[5,813s][info ][gc,start       ] GC(1) Concurrent strong roots
[5,813s][info ][gc,task        ] GC(1) Using 5 of 10 workers for concurrent strong root
[5,814s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.commit [0x00007fae7c9fc790] (c2)
[5,814s][info ][gc             ] GC(1) Concurrent strong roots 0,333ms
[5,814s][info ][gc,start       ] GC(1) Concurrent evacuation
[5,814s][info ][gc,task        ] GC(1) Using 5 of 10 workers for concurrent evacuation
[5,814s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelWriter.write [0x00007fae7c99c710] (c2)
[5,814s][debug][gc,nmethod     ] Register NMethod: java.nio.Bits.unreserveMemory [0x00007fae7c8f6510] (c2)
[5,817s][debug][gc,nmethod     ] Register NMethod: jdk.internal.ref.Cleaner.clean [0x00007fae7c95b010] (c2)
[5,817s][debug][gc,nmethod     ] Register NMethod: jdk.internal.ref.Cleaner.remove [0x00007fae7c95a790] (c2)
[5,820s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Reference.enqueueFromPending [0x00007fae7c959890] (c2)
[5,821s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.ReferenceQueue.enqueue0 [0x00007fae7c958f90] (c2)
[5,822s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.ReferenceQueue.poll0 [0x00007fae7c99c190] (c2)
[5,822s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.NativeReferenceQueue.signal [0x00007fae7c8f5410] (c2)
[5,823s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.FileChannelImpl.size [0x00007fae7c956610] (c2)
[5,825s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.NativeReferenceQueue.enqueue [0x00007fae7c955b90] (c2)
[5,826s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.NativeReferenceQueue.remove [0x00007fae7c954e10] (c2)
[5,826s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer$Deallocator.run [0x00007fae7ca27a10] (c2)
[5,826s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Finalizer.runFinalizer [0x00007fae7ca7b810] (c2)
[5,839s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.commit [0x00007fae7ca76610] (c2)
[5,854s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.Util.isBufferTooLarge [0x00007fae5d2c6790] (c1)
[5,855s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataInput.readUtf8 [0x00007fae5d761590] (c1)
[5,855s][debug][gc,nmethod     ] Register NMethod: java.nio.ByteBuffer.allocateDirect [0x00007fae7c8b5b90] (c2)
[5,855s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.pool.StringInterner.intern [0x00007fae5d493c90] (c1)
[5,857s][debug][gc,nmethod     ] Register NMethod: net.jpountz.xxhash.XXHashFactory.newStreamingHash32 [0x00007fae7c993810] (c2)
[5,866s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.scoped.ScopedThreadLocal$SimpleStack.push [0x00007fae5d4f2010] (c1)
[5,866s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.scoped.ScopedThreadLocal$SimpleStack.pop [0x00007fae5d363210] (c1)
[5,866s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.checkRead [0x00007fae5d748390] (c1)
[5,866s][debug][gc,nmethod     ] Register NMethod: java.nio.ByteBuffer.base [0x00007fae7c8b5890] (c1)
[5,866s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelWriter.delegate [0x00007fae7ca69110] (c1)
[5,867s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelWriter.writePageReference [0x00007fae7c92ee90] (c2)
[5,874s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.LockSupport.setCurrentBlocker [0x00007fae5d27ee10] (c1)
[5,884s][info ][gc             ] GC(1) Concurrent evacuation 69,925ms
[5,884s][info ][gc,start       ] GC(1) Pause Init Update Refs
[5,884s][info ][gc,ergo        ] GC(1) Pacer for Update Refs. Used: 2862M, Free: 9328M, Non-Taxable: 932M, Alloc Tax Rate: 1,1x
[5,884s][info ][gc             ] GC(1) Pause Init Update Refs 0,042ms
[5,885s][info ][gc,start       ] GC(1) Concurrent update references
[5,885s][info ][gc,task        ] GC(1) Using 5 of 10 workers for concurrent reference update
[5,885s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.getNumberOfNonNullEntries [0x00007fae5d237d10] (c1)
[5,885s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.getNumberOfNonNullEntries [0x00007fae5d6f1190] (c1)
[5,886s][debug][gc,nmethod     ] Register NMethod: java.lang.Long.rotateRight [0x00007fae5d0d0d90] (c1)
[5,887s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.pathsummary.LevelOrderSettingInMemoryInstancesAxis.getRightSibling [0x00007fae5d181210] (c1)
[5,887s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadLocal.getCarrierThreadLocal [0x00007fae5d728b10] (c1)
[5,887s][debug][gc,nmethod     ] Register NMethod: java.util.HashMap.newNode [0x00007fae7c9fc410] (c2)
[5,888s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.Util.followLinks [0x00007fae5d704290] (c1)
[5,889s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.compareAndExchangeCtl [0x00007fae5d731090] (c1)
[5,889s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarForm.getMemberName [0x00007fae7c9fbf90] (c2)
[5,889s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.moveTo [0x00007fae7c92e210] (c2)
[5,889s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processNull [0x00007fae5d789610] (c1)
[5,890s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType.readHash [0x00007fae7c92d610] (c2)
[5,918s][info ][gc             ] GC(1) Concurrent update references 33,785ms
[5,918s][info ][gc,start       ] GC(1) Concurrent update thread roots
[5,919s][info ][gc             ] GC(1) Concurrent update thread roots 0,785ms
[5,919s][info ][gc,start       ] GC(1) Pause Final Update Refs
[5,919s][info ][gc,task        ] GC(1) Using 10 of 10 workers for final reference update
[5,919s][info ][gc             ] GC(1) Pause Final Update Refs 0,067ms
[5,919s][info ][gc,start       ] GC(1) Concurrent cleanup
[5,920s][info ][gc             ] GC(1) Concurrent cleanup 2886M->855M(5696M) 0,111ms
[5,920s][debug][gc,ergo        ] GC(1) Available: 10816 MB, z-score=1,000. Average available: 10743,0 MB +/- 75514,6 KB.
[5,920s][info ][gc,ergo        ] Free: 10816M, Max: 4096K regular, 8616M humongous, Frag: 21% external, 0% internal; Reserve: 616M, Max: 4096K
[5,920s][info ][gc,stats       ] 
[5,920s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[5,920s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[5,920s][info ][gc,stats       ] 
[5,920s][info ][gc,stats       ] Concurrent Reset                   5177 us
[5,920s][info ][gc,stats       ] Pause Init Mark (G)                 458 us
[5,920s][info ][gc,stats       ] Pause Init Mark (N)                  76 us
[5,920s][info ][gc,stats       ]   Update Region States               37 us
[5,920s][info ][gc,stats       ] Concurrent Mark Roots              1141 us, parallelism: 2,51x
[5,920s][info ][gc,stats       ]   CMR: <total>                     2859 us
[5,920s][info ][gc,stats       ]   CMR: Thread Roots                2428 us, workers (us): 153, 568, 878, 470, 359, ---, ---, ---, ---, ---, 
[5,920s][info ][gc,stats       ]   CMR: VM Strong Roots                9 us, workers (us):   6,   3,   0,   0,   0, ---, ---, ---, ---, ---, 
[5,920s][info ][gc,stats       ]   CMR: CLDG Roots                   422 us, workers (us): 412,  10, ---, ---, ---, ---, ---, ---, ---, ---, 
[5,920s][info ][gc,stats       ] Concurrent Marking                62344 us
[5,920s][info ][gc,stats       ] Pause Final Mark (G)                340 us
[5,920s][info ][gc,stats       ] Pause Final Mark (N)                249 us
[5,920s][info ][gc,stats       ]   Finish Mark                       118 us
[5,920s][info ][gc,stats       ]   Update Region States               19 us
[5,920s][info ][gc,stats       ]   Choose Collection Set              55 us
[5,920s][info ][gc,stats       ]   Rebuild Free Set                    9 us
[5,920s][info ][gc,stats       ] Concurrent Thread Roots            1854 us, parallelism: 4,27x
[5,920s][info ][gc,stats       ]   CTR: <total>                     7914 us
[5,920s][info ][gc,stats       ]   CTR: Thread Roots                7914 us, workers (us): 1522, 1378, 1687, 1694, 1632, ---, ---, ---, ---, ---, 
[5,920s][info ][gc,stats       ] Concurrent Weak References         1172 us, parallelism: 1,99x
[5,920s][info ][gc,stats       ]   CWRF: <total>                    2330 us
[5,920s][info ][gc,stats       ]   CWRF: Weak References            2330 us, workers (us): 990,  43, 238, 1052,   6, ---, ---, ---, ---, ---, 
[5,920s][info ][gc,stats       ] Concurrent Weak Roots              2385 us
[5,920s][info ][gc,stats       ]   Roots                            2249 us, parallelism: 4,63x
[5,920s][info ][gc,stats       ]     CWR: <total>                  10405 us
[5,920s][info ][gc,stats       ]     CWR: Code Cache Roots          1062 us, workers (us): 209, 261, 205, 198, 189, ---, ---, ---, ---, ---, 
[5,920s][info ][gc,stats       ]     CWR: VM Weak Roots             9309 us, workers (us): 1904, 1903, 1859, 1848, 1794, ---, ---, ---, ---, ---, 
[5,920s][info ][gc,stats       ]     CWR: CLDG Roots                  35 us, workers (us):  18, ---, ---, ---,  17, ---, ---, ---, ---, ---, 
[5,920s][info ][gc,stats       ]   Rendezvous                         76 us
[5,920s][info ][gc,stats       ] Concurrent Cleanup                  116 us
[5,920s][info ][gc,stats       ] Concurrent Class Unloading         2338 us
[5,920s][info ][gc,stats       ]   Unlink Stale                      851 us
[5,920s][info ][gc,stats       ]     System Dictionary                44 us
[5,920s][info ][gc,stats       ]     Weak Class Links                  0 us
[5,920s][info ][gc,stats       ]     Code Roots                      806 us
[5,920s][info ][gc,stats       ]   Rendezvous                         27 us
[5,920s][info ][gc,stats       ]   Purge Unlinked                   1422 us
[5,920s][info ][gc,stats       ]     Code Roots                     1418 us
[5,920s][info ][gc,stats       ]     CLDG                              4 us
[5,920s][info ][gc,stats       ]     Exception Caches                  0 us
[5,920s][info ][gc,stats       ] Concurrent Strong Roots             359 us, parallelism: 0,93x
[5,920s][info ][gc,stats       ]   CSR: <total>                      335 us
[5,920s][info ][gc,stats       ]   CSR: VM Strong Roots               16 us, workers (us):  10,   5,   0,   0,   0, ---, ---, ---, ---, ---, 
[5,920s][info ][gc,stats       ]   CSR: CLDG Roots                   319 us, workers (us): 229,  90, ---, ---, ---, ---, ---, ---, ---, ---, 
[5,920s][info ][gc,stats       ] Concurrent Evacuation             69975 us
[5,920s][info ][gc,stats       ] Pause Init Update Refs (G)          887 us
[5,920s][info ][gc,stats       ] Pause Init Update Refs (N)           50 us
[5,920s][info ][gc,stats       ]   Manage GCLABs                       4 us
[5,920s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processNull [0x00007fae7ca75d10] (c2)
[5,920s][info ][gc,stats       ] Concurrent Update Refs            33829 us
[5,920s][info ][gc,stats       ] Concurrent Update Thread Roots      806 us
[5,920s][info ][gc,stats       ] Pause Final Update Refs (G)         271 us
[5,920s][info ][gc,stats       ] Pause Final Update Refs (N)          78 us
[5,920s][info ][gc,stats       ]   Update Region States               27 us
[5,920s][info ][gc,stats       ]   Trash Collection Set                4 us
[5,920s][info ][gc,stats       ]   Rebuild Free Set                   12 us
[5,920s][info ][gc,stats       ] Concurrent Cleanup                  125 us
[5,920s][info ][gc,stats       ] 
[5,920s][info ][gc,stats       ] Allocation pacing accrued:
[5,920s][info ][gc,stats       ]       0 of  1424 ms (  0,0%): <total>
[5,920s][info ][gc,stats       ]       0 of  1424 ms (  0,0%): <average total>
[5,920s][info ][gc,stats       ] 
[5,920s][info ][gc,metaspace   ] Metaspace: 19721K(20096K)->19723K(20096K) NonClass: 17267K(17408K)->17268K(17408K) Class: 2454K(2688K)->2454K(2688K)
[5,920s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[6,480s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.bytepipe.ByteHandlerPipeline.serialize [0x00007fae7ca75410] (c2)
[6,482s][debug][gc,nmethod     ] Register NMethod: java.util.stream.ForEachOps$ForEachOp$OfRef.accept [0x00007fae7ca74e10] (c2)
[6,485s][debug][gc,nmethod     ] Register NMethod: java.util.stream.SortedOps$OfRef.opWrapSink [0x00007fae7ca74710] (c2)
[6,492s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.getAndClearSlot [0x00007fae5d183310] (c1)
[6,493s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.getAndSetReference [0x00007fae5d38d310] (c1)
[6,493s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.weakCompareAndSetReference [0x00007fae5d818390] (c1)
[6,494s][debug][gc,nmethod     ] Register NMethod: java.io.DataOutputStream.<init> [0x00007fae7ca74110] (c2)
[6,495s][debug][gc,nmethod     ] Register NMethod: java.io.FilterOutputStream.close [0x00007fae7ca23990] (c2)
[6,495s][debug][gc,nmethod     ] Register NMethod: java.io.ByteArrayOutputStream.toByteArray [0x00007fae7ca22f90] (c2)
[6,496s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.lambda$parallelSerializationOfKeyValuePages$1 [0x00007fae7c92d290] (c2)
[6,496s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4263f78.accept [0x00007fae7ca22a90] (c2)
[6,497s][debug][gc,nmethod     ] Register NMethod: java.io.FilterOutputStream.write [0x00007fae7ca22110] (c2)
[6,497s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap$EntrySpliterator.forEachRemaining [0x00007fae7ca21890] (c2)
[6,505s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.Bytes.wrapForRead [0x00007fae7ca1f110] (c2)
[6,512s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.park [0x00007fae7ca73d90] ()
[6,522s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.writeUtf8 [0x00007fae5d20e990] (c1)
[6,542s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4BlockInputStream.refill [0x00007fae5d6db610] (c1)
[6,542s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.resolve [0x00007fae5d283710] (c1)
[6,543s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayDeque.isEmpty [0x00007fae5d788990] (c1)
[6,543s][debug][gc,nmethod     ] Register NMethod: io.brackit.query.atomic.AbstractAtomic.atomicCmp [0x00007fae5d775210] (c1)
[6,543s][debug][gc,nmethod     ] Register NMethod: io.brackit.query.atomic.QNm.atomicCmpInternal [0x00007fae5d680690] (c1)
[6,543s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.resolve [0x00007fae5d79d310] (c1)
[6,543s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4000400.invoke [0x00007fae7ca1ed90] (c2)
[6,544s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readByte [0x00007fae7ca1e710] (c2)
[6,544s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4Factory.fastestInstance [0x00007fae7ca1e090] (c2)
[6,544s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.unpark [0x00007fae7ca1dd10] ()
[6,544s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.LockSupport.unpark [0x00007fae5d729710] (c1)
[6,544s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.getIntUnaligned [0x00007fae5d0d7710] (c1)
[6,544s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.getIntUnalignedInternal [0x00007fae5d734790] (c1)
[6,545s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.ResourceConfiguration$ResourcePaths.getPath [0x00007fae7ca1da10] (c1)
[6,545s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayList.toArray [0x00007fae7ca1d390] (c2)
[6,548s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.readStopBit [0x00007fae7ca1bf90] (c2)
[7,132s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.resolve [0x00007fae5d0df690] (c1)
[7,133s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec [0x00007fae5d0e0f10] (c1)
[7,147s][debug][gc,nmethod     ] Register NMethod: java.util.stream.Sink.end [0x00007fae7ca1bc90] (c2)
[7,158s][info ][gc             ] Trigger: Learning 3 of 5. Free (8591M) is below initial threshold (8601M)
[7,158s][info ][gc,ergo        ] Free: 8588M, Max: 4096K regular, 8584M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[7,158s][info ][gc,start       ] GC(2) Concurrent reset
[7,158s][info ][gc,task        ] GC(2) Using 5 of 10 workers for concurrent reset
[7,158s][info ][gc,ergo        ] GC(2) Pacer for Reset. Non-Taxable: 12288M
[7,161s][info ][gc             ] GC(2) Concurrent reset 2,957ms
[7,161s][info ][gc,start       ] GC(2) Pause Init Mark (unload classes)
[7,161s][info ][gc,task        ] GC(2) Using 10 of 10 workers for init marking
[7,161s][info ][gc,ergo        ] GC(2) Pacer for Mark. Expected Live: 488M, Free: 8560M, Non-Taxable: 856M, Alloc Tax Rate: 0,1x
[7,161s][info ][gc             ] GC(2) Pause Init Mark (unload classes) 0,052ms
[7,161s][info ][gc,start       ] GC(2) Concurrent marking roots
[7,161s][info ][gc,task        ] GC(2) Using 5 of 10 workers for concurrent marking roots
[7,161s][debug][gc,tlab        ] GC(2) TLAB totals: thrds: 21  refills: 1081 max: 635 slow allocs: 41 max 10 waste:  2,0% gc: 35763176B max: 3833888B slow: 9155880B max: 1135968B
[7,162s][info ][gc             ] GC(2) Concurrent marking roots 0,905ms
[7,162s][info ][gc,start       ] GC(2) Concurrent marking (unload classes)
[7,162s][info ][gc,task        ] GC(2) Using 5 of 10 workers for concurrent marking
[7,169s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer.isDirect [0x00007fae7ca1b990] (c1)
[7,200s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4280400.invoke [0x00007fae7ca1af90] (c2)
[7,217s][debug][gc,nmethod     ] Register NMethod: net.jpountz.util.SafeUtils.readIntLE [0x00007fae7ca1ac10] (c2)
[7,217s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readShort [0x00007fae5d4f8a90] (c1)
[7,218s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.readShort [0x00007fae5d134910] (c1)
[7,218s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.readShort [0x00007fae5d225b10] (c1)
[7,218s][debug][gc,nmethod     ] Register NMethod: sun.misc.Unsafe.getShort [0x00007fae5d7bc110] (c1)
[7,218s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.AbstractForwardingPage.getOrCreateReference [0x00007fae7ca1a710] (c2)
[7,219s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayDeque.removeFirst [0x00007fae5d5eac10] (c1)
[7,219s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.moveToFirstChild [0x00007fae5d5a9190] (c1)
[7,219s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayDeque.pop [0x00007fae5d568310] (c1)
[7,220s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.copyMemory [0x00007fae5d55e690] (c1)
[7,220s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal [0x00007fae5d153910] (c1)
[7,221s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.WeakReference.<init> [0x00007fae5d6ff210] (c1)
[7,221s][debug][gc,nmethod     ] Register NMethod: java.util.Arrays.fill [0x00007fae7cb2e610] (c2)
[7,221s][debug][gc,nmethod     ] Register NMethod: java.io.FilterInputStream.close [0x00007fae5d2c3990] (c1)
[7,222s][info ][gc             ] GC(2) Concurrent marking (unload classes) 59,440ms
[7,222s][info ][gc,start       ] GC(2) Pause Final Mark (unload classes)
[7,222s][info ][gc,task        ] GC(2) Using 10 of 10 workers for final marking
[7,222s][info ][gc,ergo        ] GC(2) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10080M, Max CSet: 512M, Min Garbage: 0B
[7,222s][info ][gc,ergo        ] GC(2) Collectable Garbage: 2560M (99%), Immediate: 1048M (40%), CSet: 1512M (58%)
[7,222s][info ][gc,ergo        ] GC(2) Pacer for Evacuation. Used CSet: 2024M, Free: 9468M, Non-Taxable: 946M, Alloc Tax Rate: 1,1x
[7,222s][info ][gc             ] GC(2) Pause Final Mark (unload classes) 0,385ms
[7,222s][info ][gc,start       ] GC(2) Concurrent thread roots
[7,222s][info ][gc,task        ] GC(2) Using 5 of 10 workers for Concurrent thread roots
[7,222s][debug][gc,nmethod     ] Register NMethod: java.util.Arrays.hashCode [0x00007fae7cb2eb10] (c2)
[7,223s][info ][gc             ] GC(2) Concurrent thread roots 0,496ms
[7,223s][info ][gc,start       ] GC(2) Concurrent weak references
[7,223s][info ][gc,task        ] GC(2) Using 5 of 10 workers for concurrent weak references
[7,224s][info ][gc,ref         ] GC(2) Encountered references: Soft: 3810, Weak: 1885, Final: 4811, Phantom: 5162
[7,224s][info ][gc,ref         ] GC(2) Discovered  references: Soft: 0, Weak: 471, Final: 4808, Phantom: 5166
[7,224s][info ][gc,ref         ] GC(2) Enqueued    references: Soft: 0, Weak: 0, Final: 4808, Phantom: 4822
[7,224s][info ][gc             ] GC(2) Concurrent weak references 1,122ms
[7,224s][info ][gc,start       ] GC(2) Concurrent weak roots
[7,224s][info ][gc,task        ] GC(2) Using 5 of 10 workers for concurrent weak root
[7,224s][info ][gc             ] GC(2) Concurrent weak roots 0,631ms
[7,224s][info ][gc,start       ] GC(2) Concurrent cleanup
[7,225s][info ][gc             ] GC(2) Concurrent cleanup 3257M->2209M(5696M) 0,082ms
[7,225s][info ][gc,ergo        ] GC(2) Free: 9464M, Max: 4096K regular, 8856M humongous, Frag: 7% external, 0% internal; Reserve: 613M, Max: 4096K
[7,225s][info ][gc,start       ] GC(2) Concurrent class unloading
[7,225s][info ][gc,task        ] GC(2) Using 5 of 10 workers for concurrent class unloading
[7,225s][debug][gc,phases,start] GC(2) ClassLoaderData
[7,225s][debug][gc,phases      ] GC(2) ClassLoaderData 0,014ms
[7,225s][debug][gc,phases,start] GC(2) Trigger cleanups
[7,225s][debug][gc,phases      ] GC(2) Trigger cleanups 0,007ms
[7,225s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.getNumberOfNonNullEntries [0x00007fae7cb2f010] (c2)
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processNull [0x00007fae5d789610]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.lang.ref.Finalizer.runFinalizer [0x00007fae5d136c10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.lang.ref.ReferenceQueue.poll0 [0x00007fae5d1bd210]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.lang.ref.NativeReferenceQueue.enqueue [0x00007fae5d0bee10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.lang.ref.ReferenceQueue.enqueue0 [0x00007fae5d0f1f10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.index.path.summary.PathSummaryReader.moveTo [0x00007fae5d62ca10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.readStopBit [0x00007fae5d7fa810]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: sun.nio.ch.FileChannelImpl.size [0x00007fae5d7c6a90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.readByte [0x00007fae5d7f2610]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: com.google.common.hash.AbstractHashFunction.hashBytes [0x00007fae5d7b9410]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.io.filechannel.FileChannelWriter.getOffset [0x00007fae5d7cab10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.commit [0x00007fae5d7c5a90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.util.concurrent.ConcurrentHashMap$ValuesView.iterator [0x00007fae5d7bf590]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.util.concurrent.ConcurrentHashMap$BaseIterator.<init> [0x00007fae5d7be710]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.page.KeyValueLeafPage.commit [0x00007fae5d7d6490]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.io.filechannel.FileChannelWriter.write [0x00007fae5d7ca090]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.io.filechannel.FileChannelWriter.writePageReference [0x00007fae5d7cce90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: com.google.common.hash.HashCode$BytesHashCode.asBytes [0x00007fae5d7b8e90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.page.PagePersister.serializePage [0x00007fae5d7c4f10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.values [0x00007fae5d7bef10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.util.concurrent.ConcurrentHashMap$ValueIterator.<init> [0x00007fae5d7beb90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.io.DataOutputStream.<init> [0x00007fae5d7b8710]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.io.ByteArrayOutputStream.toByteArray [0x00007fae5d7ae590]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.io.FilterOutputStream.write [0x00007fae5d7b8290]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.security.MessageDigestSpi.clone [0x00007fae5d79a510]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.util.ArrayList.toArray [0x00007fae5d4f3b10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.util.concurrent.ConcurrentHashMap$EntrySpliterator.forEachRemaining [0x00007fae5d787e90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.util.stream.SortedOps$RefSortingSink.end [0x00007fae5d7a1e90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: sun.security.provider.SHA2.implDigest [0x00007fae5d785c90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.access.trx.page.AbstractForwardingPageReadOnlyTrx.getReader [0x00007fae5d7a1190]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.util.stream.Nodes$SpinedNodeBuilder.begin [0x00007fae5d7a0290]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.jpountz.lz4.LZ4BlockOutputStream.finish [0x00007fae5d773490]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.page.SerializationType.readHash [0x00007fae5d811e90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.jpountz.lz4.LZ4BlockOutputStream.close [0x00007fae5d772e90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: sun.security.provider.DigestBase.engineDigest [0x00007fae5d799110]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.readLimit [0x00007fae5d767210]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4263f78.accept [0x00007fae5d766c90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4000400.invoke [0x00007fae5d329310]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: com.google.common.hash.MessageDigestHashFunction.newHasher [0x00007fae5d759e90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.security.MessageDigest.update [0x00007fae5d759590]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.io.bytepipe.ByteHandlerPipeline.serialize [0x00007fae5d751610]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.util.stream.Sink.end [0x00007fae5d38f790]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher.hash [0x00007fae5d75d810]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.openhft.chronicle.bytes.Bytes.wrapForRead [0x00007fae5d752010]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.util.TimSort.sort [0x00007fae5d74ef10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx.lambda$parallelSerializationOfKeyValuePages$1 [0x00007fae5d767c10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.io.FilterOutputStream.close [0x00007fae5d75b390]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.util.stream.ForEachOps$ForEachOp$OfRef.accept [0x00007fae5d729290]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.jpountz.lz4.LZ4BlockOutputStream.flushBufferedData [0x00007fae5d74ca10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: com.google.common.base.Preconditions.checkArgument [0x00007fae5d750b10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.elasticByteBuffer [0x00007fae5d73de10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.security.MessageDigest$Delegate.clone [0x00007fae5d747010]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.readPosition [0x00007fae5d742590]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.openhft.chronicle.bytes.BytesStore.bytesForRead [0x00007fae5d741490]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.lang.invoke.VarForm.getMemberName [0x00007fae5d190f90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.openhft.chronicle.bytes.Bytes.elasticByteBuffer [0x00007fae5d740190]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.<init> [0x00007fae5d73c090]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4263d30.test [0x00007fae5d73ad90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4263af8.apply [0x00007fae5d73a890]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.jpountz.lz4.LZ4Factory.fastestInstance [0x00007fae5d735090]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: net.jpountz.xxhash.XXHashFactory.newStreamingHash32 [0x00007fae5d731890]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.util.stream.SortedOps$OfRef.opWrapSink [0x00007fae5d72fa10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.nio.Bits.unreserveMemory [0x00007fae5d840d90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.nio.DirectByteBuffer$Deallocator.run [0x00007fae5d841290]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: jdk.internal.ref.Cleaner.remove [0x00007fae5d83ff90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: jdk.internal.ref.Cleaner.clean [0x00007fae5d83f490]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.lang.ref.NativeReferenceQueue.signal [0x00007fae5d26cf10]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.util.HashMap.newNode [0x00007fae5d0d3a90]
[7,226s][debug][gc,nmethod     ] GC(2) Unregister NMethod: java.lang.ref.Reference.enqueueFromPending [0x00007fae5d6f1790]
[7,226s][info ][gc             ] GC(2) Concurrent class unloading 1,898ms
[7,227s][info ][gc,start       ] GC(2) Concurrent strong roots
[7,227s][info ][gc,task        ] GC(2) Using 5 of 10 workers for concurrent strong root
[7,227s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getPathNode [0x00007fae7cb2f690] (c2)
[7,227s][info ][gc             ] GC(2) Concurrent strong roots 0,287ms
[7,227s][info ][gc,start       ] GC(2) Concurrent evacuation
[7,227s][info ][gc,task        ] GC(2) Using 5 of 10 workers for concurrent evacuation
[7,227s][debug][gc,nmethod     ] Register NMethod: java.lang.AbstractStringBuilder.setCharAt [0x00007fae7cb2fa90] (c2)
[7,283s][info ][gc             ] GC(2) Concurrent evacuation 55,879ms
[7,283s][info ][gc,start       ] GC(2) Pause Init Update Refs
[7,283s][info ][gc,ergo        ] GC(2) Pacer for Update Refs. Used: 2778M, Free: 9425M, Non-Taxable: 942M, Alloc Tax Rate: 1,1x
[7,283s][info ][gc             ] GC(2) Pause Init Update Refs 0,050ms
[7,283s][info ][gc,start       ] GC(2) Concurrent update references
[7,283s][info ][gc,task        ] GC(2) Using 5 of 10 workers for concurrent reference update
[7,316s][info ][gc             ] GC(2) Concurrent update references 32,825ms
[7,316s][info ][gc,start       ] GC(2) Concurrent update thread roots
[7,317s][info ][gc             ] GC(2) Concurrent update thread roots 0,880ms
[7,317s][info ][gc,start       ] GC(2) Pause Final Update Refs
[7,317s][info ][gc,task        ] GC(2) Using 10 of 10 workers for final reference update
[7,317s][info ][gc             ] GC(2) Pause Final Update Refs 0,211ms
[7,317s][info ][gc,start       ] GC(2) Concurrent cleanup
[7,317s][info ][gc             ] GC(2) Concurrent cleanup 2802M->778M(5736M) 0,104ms
[7,317s][debug][gc,ergo        ] GC(2) Available: 10893 MB, z-score=1,078. Average available: 10793,2 MB +/- 95273,2 KB.
[7,317s][info ][gc,ergo        ] Free: 10893M, Max: 4096K regular, 8404M humongous, Frag: 23% external, 0% internal; Reserve: 616M, Max: 4096K
[7,317s][info ][gc,stats       ] 
[7,317s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[7,317s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[7,317s][info ][gc,stats       ] 
[7,317s][info ][gc,stats       ] Concurrent Reset                   3005 us
[7,317s][info ][gc,stats       ] Pause Init Mark (G)                 174 us
[7,317s][info ][gc,stats       ] Pause Init Mark (N)                  59 us
[7,318s][info ][gc,stats       ]   Update Region States               23 us
[7,318s][info ][gc,stats       ] Concurrent Mark Roots               947 us, parallelism: 2,13x
[7,318s][info ][gc,stats       ]   CMR: <total>                     2021 us
[7,318s][info ][gc,stats       ]   CMR: Thread Roots                1928 us, workers (us): 299, 340, 787, 224, 279, ---, ---, ---, ---, ---, 
[7,318s][info ][gc,stats       ]   CMR: VM Strong Roots               10 us, workers (us):   3,   3,   3,   0,   0, ---, ---, ---, ---, ---, 
[7,318s][info ][gc,stats       ]   CMR: CLDG Roots                    82 us, workers (us): ---,  10, ---,  72, ---, ---, ---, ---, ---, ---, 
[7,318s][info ][gc,stats       ] Concurrent Marking                59480 us
[7,318s][info ][gc,stats       ] Pause Final Mark (G)                455 us
[7,318s][info ][gc,stats       ] Pause Final Mark (N)                394 us
[7,318s][info ][gc,stats       ]   Finish Mark                       257 us
[7,318s][info ][gc,stats       ]   Update Region States               18 us
[7,318s][info ][gc,stats       ]   Choose Collection Set              65 us
[7,318s][info ][gc,stats       ]   Rebuild Free Set                    9 us
[7,318s][info ][gc,stats       ] Concurrent Thread Roots             515 us, parallelism: 2,40x
[7,318s][info ][gc,stats       ]   CTR: <total>                     1233 us
[7,318s][info ][gc,stats       ]   CTR: Thread Roots                1233 us, workers (us): 425, 251, 225, 164, 168, ---, ---, ---, ---, ---, 
[7,318s][info ][gc,stats       ] Concurrent Weak References         1133 us, parallelism: 1,86x
[7,318s][info ][gc,stats       ]   CWRF: <total>                    2109 us
[7,318s][info ][gc,stats       ]   CWRF: Weak References            2109 us, workers (us): 969, 691,  32, 415,   2, ---, ---, ---, ---, ---, 
[7,318s][info ][gc,stats       ] Concurrent Weak Roots               658 us
[7,318s][info ][gc,stats       ]   Roots                             546 us, parallelism: 3,80x
[7,318s][info ][gc,stats       ]     CWR: <total>                   2076 us
[7,318s][info ][gc,stats       ]     CWR: Code Cache Roots           778 us, workers (us): 157, 146, 156, 155, 164, ---, ---, ---, ---, ---, 
[7,318s][info ][gc,stats       ]     CWR: VM Weak Roots             1282 us, workers (us): 285, 281, 276, 241, 198, ---, ---, ---, ---, ---, 
[7,318s][info ][gc,stats       ]     CWR: CLDG Roots                  16 us, workers (us):   6, ---,   9, ---, ---, ---, ---, ---, ---, ---, 
[7,318s][info ][gc,stats       ]   Rendezvous                         67 us
[7,318s][info ][gc,stats       ] Concurrent Cleanup                   93 us
[7,318s][info ][gc,stats       ] Concurrent Class Unloading         1910 us
[7,318s][info ][gc,stats       ]   Unlink Stale                      962 us
[7,318s][info ][gc,stats       ]     System Dictionary                36 us
[7,318s][info ][gc,stats       ]     Weak Class Links                  0 us
[7,318s][info ][gc,stats       ]     Code Roots                      925 us
[7,318s][info ][gc,stats       ]   Rendezvous                         80 us
[7,318s][info ][gc,stats       ]   Purge Unlinked                    840 us
[7,318s][info ][gc,stats       ]     Code Roots                      836 us
[7,318s][info ][gc,stats       ]     CLDG                              3 us
[7,318s][info ][gc,stats       ]     Exception Caches                  0 us
[7,318s][info ][gc,stats       ] Concurrent Strong Roots             309 us, parallelism: 0,91x
[7,318s][info ][gc,stats       ]   CSR: <total>                      280 us
[7,318s][info ][gc,stats       ]   CSR: VM Strong Roots               53 us, workers (us):  47,   5,   0,   0,   0, ---, ---, ---, ---, ---, 
[7,318s][info ][gc,stats       ]   CSR: CLDG Roots                   227 us, workers (us):  86, 142, ---, ---, ---, ---, ---, ---, ---, ---, 
[7,318s][info ][gc,stats       ] Concurrent Evacuation             55929 us
[7,318s][info ][gc,stats       ] Pause Init Update Refs (G)          323 us
[7,318s][info ][gc,stats       ] Pause Init Update Refs (N)           61 us
[7,318s][info ][gc,stats       ]   Manage GCLABs                       3 us
[7,318s][info ][gc,stats       ] Concurrent Update Refs            32877 us
[7,318s][info ][gc,stats       ] Concurrent Update Thread Roots      916 us
[7,318s][info ][gc,stats       ] Pause Final Update Refs (G)         428 us
[7,318s][info ][gc,stats       ] Pause Final Update Refs (N)         230 us
[7,318s][info ][gc,stats       ]   Update Region States              159 us
[7,318s][info ][gc,stats       ]   Trash Collection Set                5 us
[7,318s][info ][gc,stats       ]   Rebuild Free Set                   15 us
[7,318s][info ][gc,stats       ] Concurrent Cleanup                  117 us
[7,318s][info ][gc,stats       ] 
[7,318s][info ][gc,stats       ] Allocation pacing accrued:
[7,318s][info ][gc,stats       ]       0 of  1398 ms (  0,0%): <total>
[7,318s][info ][gc,stats       ]       0 of  1398 ms (  0,0%): <average total>
[7,318s][info ][gc,stats       ] 
[7,318s][info ][gc,metaspace   ] Metaspace: 19727K(20160K)->19731K(20160K) NonClass: 17273K(17472K)->17276K(17472K) Class: 2454K(2688K)->2454K(2688K)
[7,318s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[7,819s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.FullReferencesPage.getOrCreateReference [0x00007fae5d7fa810] (c1)
[7,872s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4284c00.linkToTargetMethod [0x00007fae7cb2ff90] (c2)
[7,872s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.ReferencesPage4.getReferences [0x00007fae7cb30310] (c1)
[7,872s][debug][gc,nmethod     ] Register NMethod: org.magicwerk.brownies.collections.IList$Iter.hasNext [0x00007fae5d0bee10] (c1)
[7,874s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4284800.invoke [0x00007fae7cb30610] (c2)
[7,891s][debug][gc,nmethod     ] Register NMethod: java.io.ByteArrayInputStream.<init> [0x00007fae5d329310] (c1)
[7,891s][debug][gc,nmethod     ] Register NMethod: java.nio.HeapByteBuffer.ix [0x00007fae7cb31190] (c2)
[7,891s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.bytepipe.ByteHandlerPipeline.deserialize [0x00007fae5d0f1f10] (c1)
[7,892s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getPathSummaryPageReference [0x00007fae5d7ca090] (c1)
[7,892s][debug][gc,nmethod     ] Register NMethod: io.sirix.BinaryEncodingVersion.values [0x00007fae5d331310] (c1)
[7,892s][debug][gc,nmethod     ] Register NMethod: java.io.ByteArrayInputStream.close [0x00007fae5d2c8b10] (c1)
[7,892s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer.getInt [0x00007fae5d789610] (c1)
[7,892s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer.getInt [0x00007fae5d69fa10] (c1)
[7,893s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.AbstractReader.deserialize [0x00007fae5d0dd110] (c1)
[7,893s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayList.spliterator [0x00007fae5d45a590] (c1)
[7,893s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.threadId [0x00007fae7cb31490] (c1)
[7,894s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.Util$BufferCache.next [0x00007fae5d26cf10] (c1)
[7,895s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.Util$BufferCache.get [0x00007fae5d54d610] (c1)
[7,895s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.Util.isBufferTooLarge [0x00007fae5d729290] (c1)
[7,895s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.Util$BufferCache.offerFirst [0x00007fae5d6a2c90] (c1)
[7,896s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.getNumberOfNonNullEntries [0x00007fae7cb31790] (c2)
[7,897s][debug][gc,nmethod     ] Register NMethod: java.util.Arrays.asList [0x00007fae7cb31c90] (c2)
[7,902s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getRecord [0x00007fae7cb32010] (c2)
[8,476s][debug][gc,nmethod     ] Register NMethod: java.util.stream.AbstractPipeline.copyInto [0x00007fae7cb33810] (c2)
[8,489s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.getAndSetAccess [0x00007fae7cb33d10] (c2)
[8,499s][info ][gc             ] Trigger: Learning 4 of 5. Free (8601M) is below initial threshold (8601M)
[8,499s][info ][gc,ergo        ] Free: 8601M, Max: 4096K regular, 8404M humongous, Frag: 3% external, 0% internal; Reserve: 616M, Max: 4096K
[8,499s][info ][gc,start       ] GC(3) Concurrent reset
[8,499s][info ][gc,task        ] GC(3) Using 5 of 10 workers for concurrent reset
[8,499s][info ][gc,ergo        ] GC(3) Pacer for Reset. Non-Taxable: 12288M
[8,501s][info ][gc             ] GC(3) Concurrent reset 1,811ms
[8,501s][info ][gc,start       ] GC(3) Pause Init Mark (unload classes)
[8,501s][info ][gc,task        ] GC(3) Using 10 of 10 workers for init marking
[8,501s][info ][gc,ergo        ] GC(3) Pacer for Mark. Expected Live: 506M, Free: 8601M, Non-Taxable: 860M, Alloc Tax Rate: 0,1x
[8,501s][info ][gc             ] GC(3) Pause Init Mark (unload classes) 0,094ms
[8,501s][info ][gc,start       ] GC(3) Concurrent marking roots
[8,501s][info ][gc,task        ] GC(3) Using 5 of 10 workers for concurrent marking roots
[8,502s][debug][gc,tlab        ] GC(3) TLAB totals: thrds: 26  refills: 69 max: 12 slow allocs: 0 max 0 waste: 35,5% gc: 51806352B max: 4163552B slow: 553192B max: 121184B
[8,502s][info ][gc             ] GC(3) Concurrent marking roots 0,723ms
[8,502s][info ][gc,start       ] GC(3) Concurrent marking (unload classes)
[8,502s][info ][gc,task        ] GC(3) Using 5 of 10 workers for concurrent marking
[8,523s][debug][gc,nmethod     ] Register NMethod: org.magicwerk.brownies.collections.IList$Iter.next [0x00007fae5d6b2090] (c1)
[8,523s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4284000.invoke [0x00007fae7cb34010] (c2)
[8,524s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.invokeStatic [0x00007fae7cb34490] (c2)
[8,524s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.invokeStatic [0x00007fae7cb34890] (c2)
[8,541s][debug][gc,nmethod     ] Register NMethod: java.nio.HeapByteBuffer.put [0x00007fae5d79de10] (c1)
[8,542s][debug][gc,nmethod     ] Register NMethod: java.nio.Buffer.checkSession [0x00007fae5d731890] (c1)
[8,542s][debug][gc,nmethod     ] Register NMethod: java.nio.ByteBuffer.put [0x00007fae5d0dbf90] (c1)
[8,542s][debug][gc,nmethod     ] Register NMethod: net.jpountz.xxhash.XXHashFactory.fastestInstance [0x00007fae7cb34c90] (c2)
[8,542s][debug][gc,nmethod     ] Register NMethod: java.nio.ByteBuffer.putBuffer [0x00007fae5d5ab790] (c1)
[8,543s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelReader.read [0x00007fae5d72fa10] (c1)
[8,543s][debug][gc,nmethod     ] Register NMethod: java.util.UUID.parse4Nibbles [0x00007fae5d60c010] (c1)
[8,544s][debug][gc,nmethod     ] Register NMethod: java.util.BitSet.valueOf [0x00007fae5d0bd010] (c1)
[8,544s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType.deserializeBitSet [0x00007fae5d7e4b10] (c1)
[8,544s][debug][gc,nmethod     ] Register NMethod: java.util.BitSet.valueOf [0x00007fae5d7a0290] (c1)
[8,544s][debug][gc,nmethod     ] Register NMethod: java.nio.HeapByteBuffer.slice [0x00007fae5d714190] (c1)
[8,544s][debug][gc,nmethod     ] Register NMethod: java.nio.HeapByteBuffer.<init> [0x00007fae5d48df10] (c1)
[8,544s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AbstractLinkedDeque.peekFirst [0x00007fae7cb35310] (c1)
[8,545s][debug][gc,nmethod     ] Register NMethod: java.lang.Byte.hashCode [0x00007fae7cb35610] (c2)
[8,545s][debug][gc,nmethod     ] Register NMethod: java.lang.Integer.hashCode [0x00007fae7cb35910] (c2)
[8,546s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.pathsummary.LevelOrderSettingInMemoryInstancesAxis.getFirstChild [0x00007fae5d740190] (c1)
[8,547s][info ][gc             ] GC(3) Concurrent marking (unload classes) 44,322ms
[8,547s][info ][gc,start       ] GC(3) Pause Final Mark (unload classes)
[8,547s][info ][gc,task        ] GC(3) Using 10 of 10 workers for final marking
[8,547s][info ][gc,ergo        ] GC(3) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10327M, Max CSet: 512M, Min Garbage: 0B
[8,547s][info ][gc,ergo        ] GC(3) Collectable Garbage: 2694M (99%), Immediate: 1135M (42%), CSet: 1559M (57%)
[8,547s][info ][gc,ergo        ] GC(3) Pacer for Evacuation. Used CSet: 1928M, Free: 9712M, Non-Taxable: 971M, Alloc Tax Rate: 1,1x
[8,547s][info ][gc             ] GC(3) Pause Final Mark (unload classes) 0,354ms
[8,547s][info ][gc,start       ] GC(3) Concurrent thread roots
[8,547s][info ][gc,task        ] GC(3) Using 5 of 10 workers for Concurrent thread roots
[8,547s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind$1.deserializePage [0x00007fae5d277790] (c1)
[8,548s][info ][gc             ] GC(3) Concurrent thread roots 0,519ms
[8,548s][info ][gc,start       ] GC(3) Concurrent weak references
[8,548s][info ][gc,task        ] GC(3) Using 5 of 10 workers for concurrent weak references
[8,548s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayList.addAll [0x00007fae5d1bd210] (c1)
[8,549s][info ][gc,ref         ] GC(3) Encountered references: Soft: 3810, Weak: 1877, Final: 4466, Phantom: 4822
[8,549s][info ][gc,ref         ] GC(3) Discovered  references: Soft: 0, Weak: 1253, Final: 4466, Phantom: 4770
[8,549s][info ][gc,ref         ] GC(3) Enqueued    references: Soft: 0, Weak: 0, Final: 4466, Phantom: 4472
[8,549s][info ][gc             ] GC(3) Concurrent weak references 1,777ms
[8,549s][info ][gc,start       ] GC(3) Concurrent weak roots
[8,549s][info ][gc,task        ] GC(3) Using 5 of 10 workers for concurrent weak root
[8,550s][info ][gc             ] GC(3) Concurrent weak roots 0,653ms
[8,550s][info ][gc,start       ] GC(3) Concurrent cleanup
[8,550s][info ][gc             ] GC(3) Concurrent cleanup 3112M->1977M(5736M) 0,107ms
[8,550s][info ][gc,ergo        ] GC(3) Free: 9696M, Max: 4096K regular, 8896M humongous, Frag: 9% external, 0% internal; Reserve: 613M, Max: 4096K
[8,550s][info ][gc,start       ] GC(3) Concurrent class unloading
[8,550s][info ][gc,task        ] GC(3) Using 5 of 10 workers for concurrent class unloading
[8,550s][debug][gc,phases,start] GC(3) ClassLoaderData
[8,550s][debug][gc,phases      ] GC(3) ClassLoaderData 0,014ms
[8,550s][debug][gc,phases,start] GC(3) Trigger cleanups
[8,550s][debug][gc,phases      ] GC(3) Trigger cleanups 0,007ms
[8,550s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertNullValue [0x00007fae5d43ce10] (c1)
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.getAndSetAccess [0x00007fae5d831910]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: io.sirix.page.AbstractForwardingPage.getOrCreateReference [0x00007fae5d52cb90]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: java.util.Arrays.asList [0x00007fae5d816b10]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: java.lang.ref.NativeReferenceQueue.remove [0x00007fae5d491190]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertNullValue [0x00007fae7c9c0a10]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: java.lang.AbstractStringBuilder.setCharAt [0x00007fae5d7f2c10]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4280400.invoke [0x00007fae5d630510]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4284800.invoke [0x00007fae5d62e090]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4284c00.linkToTargetMethod [0x00007fae5d62bd10]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: java.nio.HeapByteBuffer.ix [0x00007fae5d4f8010]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: net.jpountz.util.SafeUtils.readIntLE [0x00007fae5d7e5a10]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: io.sirix.index.path.summary.PathSummaryReader.getPathNode [0x00007fae5d56d190]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: java.util.Arrays.fill [0x00007fae5d44f690]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: java.util.Arrays.hashCode [0x00007fae5d32f390]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: java.util.stream.AbstractPipeline.copyInto [0x00007fae5d38fa90]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: io.sirix.page.KeyValueLeafPage.getNumberOfNonNullEntries [0x00007fae5d6f1190]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: io.sirix.page.KeyValueLeafPage.getNumberOfNonNullEntries [0x00007fae5d237d10]
[8,551s][debug][gc,nmethod     ] GC(3) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getRecord [0x00007fae5d7f9590]
[8,551s][info ][gc             ] GC(3) Concurrent class unloading 1,092ms
[8,551s][info ][gc,start       ] GC(3) Concurrent strong roots
[8,551s][info ][gc,task        ] GC(3) Using 5 of 10 workers for concurrent strong root
[8,552s][info ][gc             ] GC(3) Concurrent strong roots 0,273ms
[8,552s][info ][gc,start       ] GC(3) Concurrent evacuation
[8,552s][info ][gc,task        ] GC(3) Using 5 of 10 workers for concurrent evacuation
[8,558s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getReferenceToLeafOfSubtree [0x00007fae7c9c1410] (c2)
[8,558s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae7cb35c10] (c2)
[8,558s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractResourceSession.assertNotClosed [0x00007fae7c9c1110] (c2)
[8,559s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.weakCompareAndSetLong [0x00007fae7c9c0e10] (c2)
[8,559s][debug][gc,nmethod     ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32.asChecksum [0x00007fae7c9c0a10] (c2)
[8,585s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertNullValue [0x00007fae7cb37090] (c2)
[8,586s][info ][gc             ] GC(3) Concurrent evacuation 34,435ms
[8,586s][info ][gc,start       ] GC(3) Pause Init Update Refs
[8,586s][info ][gc,ergo        ] GC(3) Pacer for Update Refs. Used: 2378M, Free: 9673M, Non-Taxable: 967M, Alloc Tax Rate: 1,1x
[8,586s][info ][gc             ] GC(3) Pause Init Update Refs 0,030ms
[8,586s][info ][gc,start       ] GC(3) Concurrent update references
[8,586s][info ][gc,task        ] GC(3) Using 5 of 10 workers for concurrent reference update
[8,608s][info ][gc             ] GC(3) Concurrent update references 21,986ms
[8,608s][info ][gc,start       ] GC(3) Concurrent update thread roots
[8,609s][info ][gc             ] GC(3) Concurrent update thread roots 0,850ms
[8,609s][info ][gc,start       ] GC(3) Pause Final Update Refs
[8,609s][info ][gc,task        ] GC(3) Using 10 of 10 workers for final reference update
[8,609s][info ][gc             ] GC(3) Pause Final Update Refs 0,120ms
[8,610s][info ][gc,start       ] GC(3) Concurrent cleanup
[8,610s][info ][gc             ] GC(3) Concurrent cleanup 2394M->466M(5736M) 0,158ms
[8,610s][debug][gc,ergo        ] GC(3) Available: 11205 MB, z-score=1,579. Average available: 10896,2 MB +/- 195,8 MB.
[8,610s][info ][gc,ergo        ] Free: 11205M, Max: 4096K regular, 8856M humongous, Frag: 21% external, 0% internal; Reserve: 616M, Max: 4096K
[8,610s][info ][gc,stats       ] 
[8,610s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[8,610s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[8,610s][info ][gc,stats       ] 
[8,610s][info ][gc,stats       ] Concurrent Reset                   1845 us
[8,610s][info ][gc,stats       ] Pause Init Mark (G)                 207 us
[8,610s][info ][gc,stats       ] Pause Init Mark (N)                 102 us
[8,610s][info ][gc,stats       ]   Update Region States               15 us
[8,610s][info ][gc,stats       ] Concurrent Mark Roots               745 us, parallelism: 1,84x
[8,610s][info ][gc,stats       ]   CMR: <total>                     1371 us
[8,610s][info ][gc,stats       ]   CMR: Thread Roots                1300 us, workers (us): 196, 491, 223, 192, 198, ---, ---, ---, ---, ---, 
[8,610s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   6,   2,   0,   0,   0, ---, ---, ---, ---, ---, 
[8,610s][info ][gc,stats       ]   CMR: CLDG Roots                    63 us, workers (us):  44,  19, ---, ---, ---, ---, ---, ---, ---, ---, 
[8,610s][info ][gc,stats       ] Concurrent Marking                44344 us
[8,610s][info ][gc,stats       ] Pause Final Mark (G)                439 us
[8,610s][info ][gc,stats       ] Pause Final Mark (N)                362 us
[8,610s][info ][gc,stats       ]   Finish Mark                       225 us
[8,610s][info ][gc,stats       ]   Update Region States               24 us
[8,610s][info ][gc,stats       ]   Choose Collection Set              62 us
[8,610s][info ][gc,stats       ]   Rebuild Free Set                   10 us
[8,610s][info ][gc,stats       ] Concurrent Thread Roots             549 us, parallelism: 2,54x
[8,610s][info ][gc,stats       ]   CTR: <total>                     1395 us
[8,610s][info ][gc,stats       ]   CTR: Thread Roots                1395 us, workers (us): 478, 312, 223, 191, 191, ---, ---, ---, ---, ---, 
[8,610s][info ][gc,stats       ] Concurrent Weak References         1785 us, parallelism: 1,01x
[8,610s][info ][gc,stats       ]   CWRF: <total>                    1810 us
[8,610s][info ][gc,stats       ]   CWRF: Weak References            1810 us, workers (us): 142, 1656,   3,   8,   0, ---, ---, ---, ---, ---, 
[8,610s][info ][gc,stats       ] Concurrent Weak Roots               662 us
[8,610s][info ][gc,stats       ]   Roots                             514 us, parallelism: 3,41x
[8,610s][info ][gc,stats       ]     CWR: <total>                   1752 us
[8,610s][info ][gc,stats       ]     CWR: Code Cache Roots           751 us, workers (us): 173, 147, 142, 136, 154, ---, ---, ---, ---, ---, 
[8,610s][info ][gc,stats       ]     CWR: VM Weak Roots              984 us, workers (us): 233, 231, 184, 177, 158, ---, ---, ---, ---, ---, 
[8,610s][info ][gc,stats       ]     CWR: CLDG Roots                  17 us, workers (us): ---,   8, ---, ---,   8, ---, ---, ---, ---, ---, 
[8,610s][info ][gc,stats       ]   Rendezvous                        127 us
[8,610s][info ][gc,stats       ] Concurrent Cleanup                  128 us
[8,610s][info ][gc,stats       ] Concurrent Class Unloading         1104 us
[8,610s][info ][gc,stats       ]   Unlink Stale                      766 us
[8,610s][info ][gc,stats       ]     System Dictionary                52 us
[8,610s][info ][gc,stats       ]     Weak Class Links                  0 us
[8,610s][info ][gc,stats       ]     Code Roots                      713 us
[8,610s][info ][gc,stats       ]   Rendezvous                         72 us
[8,610s][info ][gc,stats       ]   Purge Unlinked                    237 us
[8,610s][info ][gc,stats       ]     Code Roots                      233 us
[8,610s][info ][gc,stats       ]     CLDG                              3 us
[8,610s][info ][gc,stats       ]     Exception Caches                  0 us
[8,610s][info ][gc,stats       ] Concurrent Strong Roots             295 us, parallelism: 0,89x
[8,610s][info ][gc,stats       ]   CSR: <total>                      262 us
[8,610s][info ][gc,stats       ]   CSR: VM Strong Roots               15 us, workers (us):   7,   4,   4,   0,   0, ---, ---, ---, ---, ---, 
[8,610s][info ][gc,stats       ]   CSR: CLDG Roots                   247 us, workers (us): ---, 104, 143, ---, ---, ---, ---, ---, ---, ---, 
[8,610s][info ][gc,stats       ] Concurrent Evacuation             34464 us
[8,610s][info ][gc,stats       ] Pause Init Update Refs (G)          258 us
[8,610s][info ][gc,stats       ] Pause Init Update Refs (N)           37 us
[8,610s][info ][gc,stats       ]   Manage GCLABs                       4 us
[8,610s][info ][gc,stats       ] Concurrent Update Refs            22039 us
[8,610s][info ][gc,stats       ] Concurrent Update Thread Roots      882 us
[8,610s][info ][gc,stats       ] Pause Final Update Refs (G)         355 us
[8,610s][info ][gc,stats       ] Pause Final Update Refs (N)         132 us
[8,610s][info ][gc,stats       ]   Update Region States               65 us
[8,610s][info ][gc,stats       ]   Trash Collection Set                5 us
[8,610s][info ][gc,stats       ]   Rebuild Free Set                   12 us
[8,610s][info ][gc,stats       ] Concurrent Cleanup                  171 us
[8,610s][info ][gc,stats       ] 
[8,610s][info ][gc,stats       ] Allocation pacing accrued:
[8,610s][info ][gc,stats       ]       0 of  1292 ms (  0,0%): <total>
[8,610s][info ][gc,stats       ]       0 of  1292 ms (  0,0%): <average total>
[8,610s][info ][gc,stats       ] 
[8,610s][info ][gc,metaspace   ] Metaspace: 19735K(20160K)->19742K(20160K) NonClass: 17281K(17472K)->17288K(17472K) Class: 2454K(2688K)->2454K(2688K)
[8,610s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[9,135s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.NativeBuffers.copyCStringToNativeBuffer [0x00007fae5d717b10] (c1)
[9,135s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.Invokers$Holder.linkToTargetMethod [0x00007fae7cb38310] (c2)
[9,144s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayList$ArrayListSpliterator.forEachRemaining [0x00007fae7cb38690] (c2)
[9,159s][debug][gc,nmethod     ] Register NMethod: java.util.stream.Sink.begin [0x00007fae7cb39310] (c2)
[9,180s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4282400.invoke [0x00007fae7cb39610] (c2)
[9,189s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4280000.invoke [0x00007fae7cb39a90] (c1)
[9,215s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedLocalAsyncCache.cache [0x00007fae7cb39d90] (c1)
[9,216s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.HashCommon.arraySize [0x00007fae5d4f7090] (c1)
[9,216s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.setNextInAccessOrder [0x00007fae7cb3a090] (c1)
[9,216s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.setPreviousInAccessOrder [0x00007fae7cb3a390] (c1)
[9,217s][debug][gc,nmethod     ] Register NMethod: io.sirix.settings.VersioningType$4.combineRecordPages [0x00007fae5d507990] (c1)
[9,217s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.Util.getTemporaryDirectBuffer [0x00007fae5d136c10] (c1)
[9,218s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.Util.offerFirstTemporaryDirectBuffer [0x00007fae5d5e8690] (c1)
[9,218s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataInput.rawReadByte [0x00007fae7cb3a690] (c2)
[9,219s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_LL_V [0x00007fae5d735090] (c1)
[9,219s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite.set [0x00007fae5d704f10] (c1)
[9,219s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.bool2byte [0x00007fae5d7e5a10] (c1)
[9,219s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalManualCache.cache [0x00007fae7cb3b310] (c1)
[9,219s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.setContinuation [0x00007fae7cb3b610] (c1)
[9,219s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.setCarrierThread [0x00007fae7cb3b910] (c1)
[9,225s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4254ae8.apply [0x00007fae7cb3bc10] (c2)
[9,846s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae7cb3d990] (c2)
[9,861s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.interfaces.Page.clearPage [0x00007fae5d30d190] (c1)
[9,863s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType.serializeBitSet [0x00007fae7cb3ea10] (c2)
[9,864s][debug][gc,nmethod     ] Register NMethod: java.util.Objects.isNull [0x00007fae7cb40310] (c2)
[9,880s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4JNI.LZ4_decompress_fast [0x00007fae7cb40610] ()
[9,880s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.AbstractForwardingPage.<init> [0x00007fae5d44f690] (c1)
[9,881s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4JNIFastDecompressor.decompress [0x00007fae5d83f110] (c1)
[9,881s][debug][gc,nmethod     ] Register NMethod: java.lang.Long.numberOfLeadingZeros [0x00007fae5d54c310] (c1)
[9,882s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.bytepipe.LZ4Compressor.deserialize [0x00007fae5d741490] (c1)
[9,882s][debug][gc,nmethod     ] Register NMethod: java.io.InputStream.readNBytes [0x00007fae5d7a5d10] (c1)
[9,883s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4BlockInputStream.<init> [0x00007fae5d123010] (c1)
[9,883s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4BlockInputStream.<init> [0x00007fae5d7cab10] (c1)
[9,883s][debug][gc,nmethod     ] Register NMethod: java.io.InputStream.readAllBytes [0x00007fae5d74a810] (c1)
[9,883s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4BlockInputStream.<init> [0x00007fae5d542090] (c1)
[9,883s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.DeserializedReferencesPage4Tuple.offsets [0x00007fae7cb40a10] (c1)
[9,883s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.DeserializedReferencesPage4Tuple.references [0x00007fae7cb40d10] (c1)
[9,883s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.getPreviousInAccessOrder [0x00007fae7cb41010] (c1)
[9,883s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.tryPushStack [0x00007fae5d154810] (c1)
[10,153s][info ][gc             ] Trigger: Learning 5 of 5. Free (8600M) is below initial threshold (8601M)
[10,154s][info ][gc,ergo        ] Free: 8600M, Max: 4096K regular, 8600M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[10,154s][info ][gc,start       ] GC(4) Concurrent reset
[10,154s][info ][gc,task        ] GC(4) Using 5 of 10 workers for concurrent reset
[10,154s][info ][gc,ergo        ] GC(4) Pacer for Reset. Non-Taxable: 12288M
[10,155s][info ][gc             ] GC(4) Concurrent reset 1,852ms
[10,156s][info ][gc,start       ] GC(4) Pause Init Mark (unload classes)
[10,156s][info ][gc,task        ] GC(4) Using 10 of 10 workers for init marking
[10,156s][info ][gc,ergo        ] GC(4) Pacer for Mark. Expected Live: 473M, Free: 8600M, Non-Taxable: 860M, Alloc Tax Rate: 0,1x
[10,156s][info ][gc             ] GC(4) Pause Init Mark (unload classes) 0,093ms
[10,156s][info ][gc,start       ] GC(4) Concurrent marking roots
[10,156s][info ][gc,task        ] GC(4) Using 5 of 10 workers for concurrent marking roots
[10,156s][debug][gc,tlab        ] GC(4) TLAB totals: thrds: 6  refills: 12 max: 7 slow allocs: 0 max 0 waste: 41,0% gc: 10573120B max: 4072208B slow: 55848B max: 55848B
[10,156s][info ][gc             ] GC(4) Concurrent marking roots 0,580ms
[10,156s][info ][gc,start       ] GC(4) Concurrent marking (unload classes)
[10,156s][info ][gc,task        ] GC(4) Using 5 of 10 workers for concurrent marking
[10,176s][info ][gc             ] GC(4) Concurrent marking (unload classes) 20,091ms
[10,176s][info ][gc,start       ] GC(4) Pause Final Mark (unload classes)
[10,176s][info ][gc,task        ] GC(4) Using 10 of 10 workers for final marking
[10,177s][info ][gc,ergo        ] GC(4) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10744M, Max CSet: 512M, Min Garbage: 0B
[10,177s][info ][gc,ergo        ] GC(4) Collectable Garbage: 2857M (99%), Immediate: 1548M (54%), CSet: 1309M (45%)
[10,177s][info ][gc,ergo        ] GC(4) Pacer for Evacuation. Used CSet: 1516M, Free: 10128M, Non-Taxable: 1012M, Alloc Tax Rate: 1,1x
[10,177s][info ][gc             ] GC(4) Pause Final Mark (unload classes) 0,655ms
[10,177s][info ][gc,start       ] GC(4) Concurrent thread roots
[10,177s][info ][gc,task        ] GC(4) Using 5 of 10 workers for Concurrent thread roots
[10,178s][info ][gc             ] GC(4) Concurrent thread roots 0,745ms
[10,178s][info ][gc,start       ] GC(4) Concurrent weak references
[10,178s][info ][gc,task        ] GC(4) Using 5 of 10 workers for concurrent weak references
[10,179s][info ][gc,ref         ] GC(4) Encountered references: Soft: 3808, Weak: 1887, Final: 4256, Phantom: 4617
[10,179s][info ][gc,ref         ] GC(4) Discovered  references: Soft: 0, Weak: 358, Final: 4256, Phantom: 4568
[10,179s][info ][gc,ref         ] GC(4) Enqueued    references: Soft: 0, Weak: 0, Final: 4256, Phantom: 4271
[10,179s][info ][gc             ] GC(4) Concurrent weak references 1,047ms
[10,179s][info ][gc,start       ] GC(4) Concurrent weak roots
[10,179s][info ][gc,task        ] GC(4) Using 5 of 10 workers for concurrent weak root
[10,180s][info ][gc             ] GC(4) Concurrent weak roots 0,833ms
[10,180s][info ][gc,start       ] GC(4) Concurrent cleanup
[10,180s][info ][gc             ] GC(4) Concurrent cleanup 3097M->1549M(5736M) 0,171ms
[10,180s][info ][gc,ergo        ] GC(4) Free: 10124M, Max: 4096K regular, 8928M humongous, Frag: 12% external, 0% internal; Reserve: 613M, Max: 4096K
[10,180s][info ][gc,start       ] GC(4) Concurrent class unloading
[10,180s][info ][gc,task        ] GC(4) Using 5 of 10 workers for concurrent class unloading
[10,180s][debug][gc,phases,start] GC(4) ClassLoaderData
[10,180s][debug][gc,phases      ] GC(4) ClassLoaderData 0,015ms
[10,180s][debug][gc,phases,start] GC(4) Trigger cleanups
[10,180s][debug][gc,phases      ] GC(4) Trigger cleanups 0,007ms
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertNullValue [0x00007fae5d43ce10]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: net.openhft.chronicle.bytes.StreamingDataInput.rawReadByte [0x00007fae5d7e5590]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: io.sirix.access.trx.page.NodePageTrx$$Lambda/0x00007fadb4254ae8.apply [0x00007fae5d807210]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getReferenceToLeafOfSubtree [0x00007fae5d804090]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: java.util.ArrayList$ArrayListSpliterator.forEachRemaining [0x00007fae5d7ada10]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: java.util.Objects.isNull [0x00007fae5d630190]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: java.lang.invoke.DirectMethodHandle$Holder.invokeStatic [0x00007fae5d62f990]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4282400.invoke [0x00007fae5d62f210]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: java.lang.invoke.DirectMethodHandle$Holder.invokeStatic [0x00007fae5d62d990]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4284000.invoke [0x00007fae5d62c310]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: java.util.stream.Sink.begin [0x00007fae5d7abc90]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae5d7e9b90]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: io.sirix.access.trx.node.AbstractResourceSession.assertNotClosed [0x00007fae5d53d610]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: java.lang.Integer.hashCode [0x00007fae5d538310]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: java.lang.invoke.Invokers$Holder.linkToTargetMethod [0x00007fae5d331d90]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: net.jpountz.xxhash.StreamingXXHash32.asChecksum [0x00007fae5d765a10]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: net.jpountz.xxhash.XXHashFactory.fastestInstance [0x00007fae5d761f10]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: java.lang.Byte.hashCode [0x00007fae5d356a90]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: io.sirix.page.SerializationType.serializeBitSet [0x00007fae5d716f90]
[10,181s][debug][gc,nmethod     ] GC(4) Unregister NMethod: jdk.internal.misc.Unsafe.weakCompareAndSetLong [0x00007fae5d714e10]
[10,181s][info ][gc             ] GC(4) Concurrent class unloading 1,234ms
[10,181s][info ][gc,start       ] GC(4) Concurrent strong roots
[10,181s][info ][gc,task        ] GC(4) Using 5 of 10 workers for concurrent strong root
[10,181s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Finalizer.runFinalizer [0x00007fae5d772e90] (c1)
[10,181s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Reference.getFromInactiveFinalReference [0x00007fae7cb41310] (c2)
[10,182s][info ][gc             ] GC(4) Concurrent strong roots 0,261ms
[10,182s][info ][gc,start       ] GC(4) Concurrent evacuation
[10,182s][info ][gc,task        ] GC(4) Using 5 of 10 workers for concurrent evacuation
[10,182s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Reference.clearInactiveFinalReference [0x00007fae7cb41610] (c2)
[10,182s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.FinalReference.clear [0x00007fae7cb41910] (c2)
[10,183s][debug][gc,nmethod     ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32JNI.finalize [0x00007fae7cb41c10] (c2)
[10,183s][debug][gc,nmethod     ] Register NMethod: java.lang.System$2.invokeFinalize [0x00007fae7cb42190] (c2)
[10,183s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList.grow [0x00007fae5d5a2d90] (c1)
[10,202s][info ][gc             ] GC(4) Concurrent evacuation 20,491ms
[10,202s][info ][gc,start       ] GC(4) Pause Init Update Refs
[10,202s][info ][gc,ergo        ] GC(4) Pacer for Update Refs. Used: 1786M, Free: 10105M, Non-Taxable: 1010M, Alloc Tax Rate: 1,1x
[10,202s][info ][gc             ] GC(4) Pause Init Update Refs 0,046ms
[10,203s][info ][gc,start       ] GC(4) Concurrent update references
[10,203s][info ][gc,task        ] GC(4) Using 5 of 10 workers for concurrent reference update
[10,222s][info ][gc             ] GC(4) Concurrent update references 19,338ms
[10,222s][info ][gc,start       ] GC(4) Concurrent update thread roots
[10,223s][info ][gc             ] GC(4) Concurrent update thread roots 0,882ms
[10,223s][info ][gc,start       ] GC(4) Pause Final Update Refs
[10,223s][info ][gc,task        ] GC(4) Using 10 of 10 workers for final reference update
[10,223s][info ][gc             ] GC(4) Pause Final Update Refs 0,206ms
[10,223s][info ][gc,start       ] GC(4) Concurrent cleanup
[10,223s][info ][gc             ] GC(4) Concurrent cleanup 1802M->286M(5736M) 0,116ms
[10,223s][debug][gc,ergo        ] GC(4) Available: 11385 MB, z-score=1,490. Average available: 10994,0 MB +/- 262,5 MB.
[10,224s][info ][gc,ergo        ] Free: 11385M, Max: 4096K regular, 8736M humongous, Frag: 24% external, 0% internal; Reserve: 616M, Max: 4096K
[10,224s][info ][gc,stats       ] 
[10,224s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[10,224s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[10,224s][info ][gc,stats       ] 
[10,224s][info ][gc,stats       ] Concurrent Reset                   1878 us
[10,224s][info ][gc,stats       ] Pause Init Mark (G)                 254 us
[10,224s][info ][gc,stats       ] Pause Init Mark (N)                 101 us
[10,224s][info ][gc,stats       ]   Update Region States               45 us
[10,224s][info ][gc,stats       ] Concurrent Mark Roots               603 us, parallelism: 2,37x
[10,224s][info ][gc,stats       ]   CMR: <total>                     1427 us
[10,224s][info ][gc,stats       ]   CMR: Thread Roots                1365 us, workers (us): 226, 458, 219, 227, 234, ---, ---, ---, ---, ---, 
[10,224s][info ][gc,stats       ]   CMR: VM Strong Roots               10 us, workers (us):   5,   2,   2,   0,   0, ---, ---, ---, ---, ---, 
[10,224s][info ][gc,stats       ]   CMR: CLDG Roots                    53 us, workers (us):  43,   9, ---, ---, ---, ---, ---, ---, ---, ---, 
[10,224s][info ][gc,stats       ] Concurrent Marking                20138 us
[10,224s][info ][gc,stats       ] Pause Final Mark (G)                738 us
[10,224s][info ][gc,stats       ] Pause Final Mark (N)                665 us
[10,224s][info ][gc,stats       ]   Finish Mark                       379 us
[10,224s][info ][gc,stats       ]   Update Region States              153 us
[10,224s][info ][gc,stats       ]   Choose Collection Set              71 us
[10,224s][info ][gc,stats       ]   Rebuild Free Set                   12 us
[10,224s][info ][gc,stats       ] Concurrent Thread Roots             764 us, parallelism: 2,20x
[10,224s][info ][gc,stats       ]   CTR: <total>                     1681 us
[10,224s][info ][gc,stats       ]   CTR: Thread Roots                1681 us, workers (us): 523, 290, 316, 280, 272, ---, ---, ---, ---, ---, 
[10,224s][info ][gc,stats       ] Concurrent Weak References         1056 us, parallelism: 1,64x
[10,224s][info ][gc,stats       ]   CWRF: <total>                    1727 us
[10,224s][info ][gc,stats       ]   CWRF: Weak References            1727 us, workers (us): 824, 282, 616,   5,   1, ---, ---, ---, ---, ---, 
[10,224s][info ][gc,stats       ] Concurrent Weak Roots               859 us
[10,224s][info ][gc,stats       ]   Roots                             674 us, parallelism: 2,90x
[10,224s][info ][gc,stats       ]     CWR: <total>                   1952 us
[10,224s][info ][gc,stats       ]     CWR: Code Cache Roots           943 us, workers (us): 221, 174, 156, 226, 166, ---, ---, ---, ---, ---, 
[10,224s][info ][gc,stats       ]     CWR: VM Weak Roots              990 us, workers (us): 225, 225, 191, 175, 174, ---, ---, ---, ---, ---, 
[10,224s][info ][gc,stats       ]     CWR: CLDG Roots                  19 us, workers (us): ---, ---,   9, ---,  11, ---, ---, ---, ---, ---, 
[10,224s][info ][gc,stats       ]   Rendezvous                        124 us
[10,224s][info ][gc,stats       ] Concurrent Cleanup                  181 us
[10,224s][info ][gc,stats       ] Concurrent Class Unloading         1247 us
[10,224s][info ][gc,stats       ]   Unlink Stale                      754 us
[10,224s][info ][gc,stats       ]     System Dictionary                38 us
[10,224s][info ][gc,stats       ]     Weak Class Links                  0 us
[10,224s][info ][gc,stats       ]     Code Roots                      715 us
[10,224s][info ][gc,stats       ]   Rendezvous                         75 us
[10,224s][info ][gc,stats       ]   Purge Unlinked                    297 us
[10,224s][info ][gc,stats       ]     Code Roots                      294 us
[10,224s][info ][gc,stats       ]     CLDG                              3 us
[10,224s][info ][gc,stats       ]     Exception Caches                  0 us
[10,224s][info ][gc,stats       ] Concurrent Strong Roots             280 us, parallelism: 0,88x
[10,224s][info ][gc,stats       ]   CSR: <total>                      247 us
[10,224s][info ][gc,stats       ]   CSR: VM Strong Roots               11 us, workers (us):  10,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[10,224s][info ][gc,stats       ]   CSR: CLDG Roots                   236 us, workers (us): 149,  88, ---, ---, ---, ---, ---, ---, ---, ---, 
[10,224s][info ][gc,stats       ] Concurrent Evacuation             20547 us
[10,224s][info ][gc,stats       ] Pause Init Update Refs (G)          429 us
[10,224s][info ][gc,stats       ] Pause Init Update Refs (N)           55 us
[10,224s][info ][gc,stats       ]   Manage GCLABs                       3 us
[10,224s][info ][gc,stats       ] Concurrent Update Refs            19391 us
[10,224s][info ][gc,stats       ] Concurrent Update Thread Roots      916 us
[10,224s][info ][gc,stats       ] Pause Final Update Refs (G)         452 us
[10,224s][info ][gc,stats       ] Pause Final Update Refs (N)         225 us
[10,224s][info ][gc,stats       ]   Update Region States              148 us
[10,224s][info ][gc,stats       ]   Trash Collection Set                4 us
[10,224s][info ][gc,stats       ]   Rebuild Free Set                   11 us
[10,224s][info ][gc,stats       ] Concurrent Cleanup                  130 us
[10,224s][info ][gc,stats       ] Pacing                             3665 us
[10,224s][info ][gc,stats       ] 
[10,224s][info ][gc,stats       ] Allocation pacing accrued:
[10,224s][info ][gc,stats       ]       2 of  1614 ms (  0,1%): ForkJoinPool.commonPool-worker-10
[10,224s][info ][gc,stats       ]       2 of  1614 ms (  0,1%): ForkJoinPool.commonPool-worker-19
[10,224s][info ][gc,stats       ]       4 of  1614 ms (  0,2%): <total>
[10,224s][info ][gc,stats       ]       0 of  1614 ms (  0,0%): <average total>
[10,224s][info ][gc,stats       ]       2 of  1614 ms (  0,1%): <average non-zero>
[10,224s][info ][gc,stats       ] 
[10,224s][info ][gc,metaspace   ] Metaspace: 19749K(20160K)->19749K(20160K) NonClass: 17295K(17472K)->17295K(17472K) Class: 2454K(2688K)->2454K(2688K)
[10,224s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[10,488s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CountedCompleter.addToPendingCount [0x00007fae7cb42a90] (c2)
[10,490s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Finalizer.register [0x00007fae5d7e5590] (c1)
[10,498s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ThreadLocalRandom.getProbe [0x00007fae5d356a90] (c1)
[10,524s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType$1.serializeFullReferencesPage [0x00007fae5d531410] (c1)
[10,532s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType$1.serializeFullReferencesPage [0x00007fae5d716290] (c1)
[10,541s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4282000.tableSwitch [0x00007fae5d7ada10] (c1)
[10,560s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixNativeDispatcher.exists0 [0x00007fae7cb42d90] ()
[10,560s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.AbstractForwardingReader.read [0x00007fae5d53d610] (c1)
[10,560s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixFileSystemProvider.exists [0x00007fae5d7a3f90] (c1)
[10,560s][debug][gc,nmethod     ] Register NMethod: java.nio.file.Files.exists [0x00007fae5d298f10] (c1)
[10,560s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.<init> [0x00007fae5d541d10] (c1)
[10,560s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixNativeDispatcher.exists [0x00007fae5d2a0f90] (c1)
[10,560s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.evicts [0x00007fae7cb43190] (c1)
[10,561s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.slots [0x00007fae7cb43490] (c1)
[10,561s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.deweyIds [0x00007fae7cb43790] (c1)
[10,561s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expiresAfterWrite [0x00007fae7cb43a90] (c1)
[10,561s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$Completion.<init> [0x00007fae5d7bb790] (c1)
[10,561s][debug][gc,nmethod     ] Register NMethod: io.sirix.settings.VersioningType$4.combineRecordPages [0x00007fae5d650210] (c1)
[10,565s][debug][gc,nmethod     ] Register NMethod: io.sirix.settings.VersioningType$4.combineRecordPagesForModification [0x00007fae5d148910] (c1)
[10,567s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae7cb43d90] (c2)
[11,228s][debug][gc,nmethod     ] Register NMethod: io.sirix.BinaryEncodingVersion.fromByte [0x00007fae5d522890] (c1)
[11,228s][debug][gc,nmethod     ] Register NMethod: java.nio.file.Path.resolve [0x00007fae5d56d190] (c1)
[11,228s][debug][gc,nmethod     ] Register NMethod: java.lang.Long.rotateRight [0x00007fae7cb45010] (c2)
[11,228s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList.add [0x00007fae5d237d10] (c1)
[11,228s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.HashCommon.maxFill [0x00007fae5d64fc90] (c1)
[11,228s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.getIntOpaque [0x00007fae5d32c690] (c1)
[11,229s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef.drainStatusOpaque [0x00007fae5d0ccb90] (c1)
[11,229s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMSA.expiresVariable [0x00007fae5d7bca10] (c1)
[11,229s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleInts$FieldInstanceReadOnly.getOpaque [0x00007fae5d526210] (c1)
[11,229s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_L_I [0x00007fae5d2a9c90] (c1)
[11,230s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.UberPage.getRevisionNumber [0x00007fae5d350090] (c1)
[11,230s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7cb45310] ()
[11,230s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_L_J [0x00007fae5d0cdc90] (c1)
[11,230s][debug][gc,nmethod     ] Register NMethod: java.nio.HeapByteBuffer.get [0x00007fae5d331d90] (c1)
[11,231s][debug][gc,nmethod     ] Register NMethod: io.sirix.settings.VersioningType$4.combineRecordPagesForModification [0x00007fae5d662b90] (c1)
[11,834s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Finalizer.register [0x00007fae7cb45890] (c2)
[11,882s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMSA.expiresAfterAccessNanos [0x00007fae7cb46010] (c1)
[11,882s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.accessOrderWindowDeque [0x00007fae7cb46310] (c1)
[11,882s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayList$ArrayListSpliterator.estimateSize [0x00007fae7cb46610] (c2)
[11,892s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getDataRecord [0x00007fae7cb46910] (c2)
[12,496s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.submissionQueue [0x00007fae5d7eb390] (c1)
[12,527s][debug][gc,nmethod     ] Register NMethod: java.nio.MappedByteBuffer.position [0x00007fae7cb48c90] (c2)
[12,531s][debug][gc,nmethod     ] Register NMethod: java.util.HashMap.clear [0x00007fae5d491190] (c1)
[12,534s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadLocal.get [0x00007fae7cb49010] (c2)
[12,534s][debug][gc,nmethod     ] Register NMethod: java.util.BitSet.clone [0x00007fae5d101110] (c1)
[12,534s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractResourceSession.getMostRecentRevisionNumber [0x00007fae5d6d8d10] (c1)
[12,535s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.getAndBitwiseOrInt [0x00007fae5d807210] (c1)
[12,535s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.setThreadContainer [0x00007fae7cb49690] (c1)
[12,536s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.Maths.hash64 [0x00007fae7cb49990] (c2)
[12,537s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadLocal$ThreadLocalMap.getEntry [0x00007fae7cb49f10] (c2)
[13,280s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.LockSupport.park [0x00007fae5d73c090] (c1)
[13,280s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.ReentrantLock$NonfairSync.tryAcquire [0x00007fae5d7b7290] (c1)
[13,280s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer.attachment [0x00007fae7cb4a410] (c1)
[13,280s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer.cleaner [0x00007fae7cb4a710] (c1)
[13,288s][debug][gc,nmethod     ] Register NMethod: java.nio.MappedByteBuffer.position [0x00007fae7cb4aa10] (c2)
[13,301s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.hasTasks [0x00007fae5d6f1190] (c1)
[13,318s][debug][gc,nmethod     ] Register NMethod: java.util.HashSet.size [0x00007fae5d148210] (c1)
[13,320s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadLocal$ThreadLocalMap.<init> [0x00007fae5d0e2090] (c1)
[13,320s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AccessOrderDeque.setNext [0x00007fae5d73ac10] (c1)
[13,320s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AccessOrderDeque.setNext [0x00007fae5d32f390] (c1)
[13,320s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinTask.getAndBitwiseOrStatus [0x00007fae5d37e510] (c1)
[13,320s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleReferences$FieldInstanceReadOnly.get [0x00007fae5d7c9110] (c1)
[13,321s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_L_L [0x00007fae5d785c90] (c1)
[13,321s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadLocal$ThreadLocalMap.size [0x00007fae7cb4ae10] (c1)
[13,321s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleLongs$FieldInstanceReadOnly.getOpaque [0x00007fae5d840d90] (c1)
[13,321s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.getLongOpaque [0x00007fae5d714e10] (c1)
[13,322s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.getRevision [0x00007fae7cb4b110] (c1)
[13,323s][debug][gc,nmethod     ] Register NMethod: java.util.stream.Collectors.toList [0x00007fae5d577810] (c1)
[13,323s][debug][gc,nmethod     ] Register NMethod: java.util.stream.Collectors$$Lambda/0x00007fadb4089e78.get [0x00007fae5d437a90] (c1)
[13,323s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.postFire [0x00007fae5d72de10] (c1)
[13,328s][debug][gc,nmethod     ] Register NMethod: io.sirix.settings.VersioningType$4.combineRecordPages [0x00007fae7cb4b410] (c2)
[13,337s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.calculateCount [0x00007fae7cb4d210] (c2)
[14,195s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.isReleasable [0x00007fae5d486710] (c1)
[14,218s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.ReferencesPage4.getOffsets [0x00007fae7cb4ea10] (c1)
[14,218s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$UniCompletion.<init> [0x00007fae5d54ed90] (c1)
[14,241s][debug][gc,nmethod     ] Register NMethod: java.util.HashMap.clear [0x00007fae5d5adc10] (c1)
[14,247s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.parseUtf81 [0x00007fae5d5b0a90] (c1)
[14,247s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.putReferenceOpaque [0x00007fae7cb4ed10] (c2)
[14,247s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageUtils.createDelegate [0x00007fae5d5fd090] (c1)
[14,248s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7cb4f010] ()
[14,249s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_LIL_V [0x00007fae5d65d510] (c1)
[14,249s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.unipush [0x00007fae5d76a310] (c1)
[14,249s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.getNextInAccessOrder [0x00007fae7cb4f590] (c1)
[14,250s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.frequencySketch [0x00007fae7cb4f890] (c1)
[14,250s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.putIntoPageCacheIfItIsNotAWriteTrx [0x00007fae5d7e8510] (c1)
[14,250s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.collectValues [0x00007fae7cb4fb90] (c1)
[14,250s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMSA.expirationTicker [0x00007fae7cb4fe90] (c1)
[14,264s][debug][gc,nmethod     ] Register NMethod: io.sirix.settings.VersioningType$4.combineRecordPages [0x00007fae7cb50190] (c2)
[14,275s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.calculateCount [0x00007fae7cb53310] (c2)
[14,275s][debug][gc,nmethod     ] Register NMethod: java.lang.StringBuilder.setCharAt [0x00007fae7cb54a90] (c2)
[15,117s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal [0x00007fae5d682190] (c1)
[15,119s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.IOUtil.acquireScope [0x00007fae7cb54f90] (c2)
[15,143s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType$1.serializeFullReferencesPage [0x00007fae7cb55310] (c2)
[15,164s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.HashCommon.nextPowerOfTwo [0x00007fae5d6a4410] (c1)
[15,164s][debug][gc,nmethod     ] Register NMethod: java.util.BitSet.size [0x00007fae5d72da90] (c1)
[15,164s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.join [0x00007fae5d6c0610] (c1)
[15,164s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.reportJoin [0x00007fae5d179810] (c1)
[15,165s][debug][gc,nmethod     ] Register NMethod: java.util.AbstractCollection.addAll [0x00007fae5d747510] (c1)
[15,166s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.StackableScope.owner [0x00007fae7cb56790] (c1)
[15,167s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$DMH/0x00007fadb40c4800.newInvokeSpecial [0x00007fae5d12f210] (c1)
[15,167s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.tryCompensate [0x00007fae5d10ec90] (c1)
[15,167s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.<init> [0x00007fae5d6d1b10] (c1)
[15,168s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.Invokers$Holder.linkToTargetMethod [0x00007fae5d6e0810] (c1)
[15,168s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.compareAndSetCtl [0x00007fae5d73a890] (c1)
[15,169s][debug][gc,nmethod     ] Register NMethod: java.lang.AbstractStringBuilder.setLength [0x00007fae7cb56a90] (c2)
[15,170s][debug][gc,nmethod     ] Register NMethod: java.lang.Long.valueOf [0x00007fae7cb57910] (c2)
[15,185s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.getName [0x00007fae7cb57d10] (c2)
[15,961s][debug][gc,nmethod     ] Register NMethod: java.util.stream.Sink$ChainedReference.end [0x00007fae7cb5ad90] (c2)
[16,090s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalManualCache.cache [0x00007fae5d769f90] (c1)
[16,091s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.NodeFactory.newLookupKey [0x00007fae5d4cc990] (c1)
[16,091s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.setHitsInSample [0x00007fae7cb5b090] (c1)
[16,091s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageFragmentKeyImpl.key [0x00007fae7cb5b390] (c1)
[16,091s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageFragmentKeyImpl.revision [0x00007fae7cb5b690] (c1)
[16,091s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.BufferManagerImpl.getRevisionRootPageCache [0x00007fae7cb5b990] (c1)
[16,092s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.isComputingAsync [0x00007fae5d120f90] (c1)
[16,092s][debug][gc,nmethod     ] Register NMethod: java.lang.Long.hashCode [0x00007fae7cb5bc90] (c2)
[16,092s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMSA.fastpath [0x00007fae7cb5bf90] (c1)
[16,092s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMSA.expiry [0x00007fae7cb5c290] (c1)
[16,092s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadBuilders$BaseThreadFactory.characteristics [0x00007fae7cb5c590] (c1)
[16,092s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadBuilders$BaseThreadFactory.uncaughtExceptionHandler [0x00007fae7cb5c890] (c1)
[16,092s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.state [0x00007fae7cb5cb90] (c1)
[16,092s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.getContinuation [0x00007fae7cb5ce90] (c1)
[16,092s][debug][gc,nmethod     ] Register NMethod: jdk.internal.event.VirtualThreadEndEvent.isEnabled [0x00007fae7cb5d190] (c1)
[16,092s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMSA.expiresAfterAccess [0x00007fae5d747010] (c1)
[16,092s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.headStackableScopes [0x00007fae7cb5d490] (c1)
[16,093s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.isDone [0x00007fae7cb5d790] (c1)
[16,093s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.threadContainer [0x00007fae7cb5da90] (c1)
[16,093s][debug][gc,nmethod     ] Register NMethod: jdk.internal.event.VirtualThreadStartEvent.isEnabled [0x00007fae7cb5dd90] (c1)
[16,093s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.setState [0x00007fae7cb5e090] (c1)
[16,093s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.setMounted [0x00007fae7cb5e390] (c1)
[16,094s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.beginCompensatedBlock [0x00007fae5d703310] (c1)
[16,094s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Blocker$ForkJoinPools.beginCompensatedBlock [0x00007fae5d733110] (c1)
[16,094s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Blocker$ForkJoinPools.endCompensatedBlock [0x00007fae5d7a1190] (c1)
[16,094s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$2.beginCompensatedBlock [0x00007fae5d7e7210] (c1)
[16,094s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$2.endCompensatedBlock [0x00007fae5d2b8510] (c1)
[16,094s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.getAndAddCtl [0x00007fae5d4cf910] (c1)
[16,120s][debug][gc,nmethod     ] Register NMethod: io.sirix.settings.VersioningType$4.combineRecordPagesForModification [0x00007fae7cb5e690] (c2)
[16,891s][info ][gc             ] Trigger: Explicit GC request (System.gc())
[16,892s][info ][gc,ergo        ] Free: 1332M, Max: 4096K regular, 1332M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[16,892s][info ][gc,start       ] GC(5) Concurrent reset
[16,892s][info ][gc,task        ] GC(5) Using 5 of 10 workers for concurrent reset
[16,892s][info ][gc,ergo        ] GC(5) Pacer for Reset. Non-Taxable: 12288M
[16,893s][info ][gc             ] GC(5) Concurrent reset 1,325ms
[16,902s][info ][gc,start       ] GC(5) Pause Init Mark (unload classes)
[16,902s][info ][gc,task        ] GC(5) Using 10 of 10 workers for init marking
[16,902s][info ][gc,ref         ] GC(5) Clearing All SoftReferences
[16,902s][info ][gc,ergo        ] GC(5) Pacer for Mark. Expected Live: 421M, Free: 1304M, Non-Taxable: 130M, Alloc Tax Rate: 0,4x
[16,902s][info ][gc             ] GC(5) Pause Init Mark (unload classes) 0,130ms
[16,902s][info ][gc,start       ] GC(5) Concurrent marking roots
[16,902s][info ][gc,task        ] GC(5) Using 5 of 10 workers for concurrent marking roots
[16,902s][debug][gc,tlab        ] GC(5) TLAB totals: thrds: 7  refills: 817 max: 155 slow allocs: 19 max 6 waste:  1,9% gc: 15482560B max: 3639528B slow: 16728504B max: 3227536B
[16,902s][info ][gc             ] GC(5) Concurrent marking roots 0,768ms
[16,903s][info ][gc,start       ] GC(5) Concurrent marking (unload classes)
[16,903s][info ][gc,task        ] GC(5) Using 5 of 10 workers for concurrent marking
[16,957s][info ][gc             ] GC(5) Concurrent marking (unload classes) 54,901ms
[16,957s][info ][gc,start       ] GC(5) Pause Final Mark (unload classes)
[16,957s][info ][gc,task        ] GC(5) Using 10 of 10 workers for final marking
[16,958s][info ][gc,ergo        ] GC(5) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 6564M, Max CSet: 512M, Min Garbage: 0B
[16,958s][info ][gc,ergo        ] GC(5) Collectable Garbage: 9838M (99%), Immediate: 4700M (47%), CSet: 5138M (52%)
[16,958s][info ][gc,ergo        ] GC(5) Pacer for Evacuation. Used CSet: 5648M, Free: 5948M, Non-Taxable: 594M, Alloc Tax Rate: 2,3x
[16,958s][info ][gc             ] GC(5) Pause Final Mark (unload classes) 0,411ms
[16,958s][info ][gc,start       ] GC(5) Concurrent thread roots
[16,958s][info ][gc,task        ] GC(5) Using 5 of 10 workers for Concurrent thread roots
[16,959s][info ][gc             ] GC(5) Concurrent thread roots 0,612ms
[16,959s][info ][gc,start       ] GC(5) Concurrent weak references
[16,959s][info ][gc,task        ] GC(5) Using 5 of 10 workers for concurrent weak references
[16,961s][info ][gc,ref         ] GC(5) Encountered references: Soft: 3747, Weak: 1873, Final: 18256, Phantom: 18400
[16,961s][info ][gc,ref         ] GC(5) Discovered  references: Soft: 1600, Weak: 464, Final: 18249, Phantom: 18683
[16,961s][info ][gc,ref         ] GC(5) Enqueued    references: Soft: 1427, Weak: 34, Final: 18247, Phantom: 18305
[16,961s][info ][gc             ] GC(5) Concurrent weak references 2,772ms
[16,961s][info ][gc,start       ] GC(5) Concurrent weak roots
[16,961s][info ][gc,task        ] GC(5) Using 5 of 10 workers for concurrent weak root
[16,962s][info ][gc             ] GC(5) Concurrent weak roots 0,672ms
[16,962s][info ][gc,start       ] GC(5) Concurrent cleanup
[16,962s][info ][gc             ] GC(5) Concurrent cleanup 10427M->5727M(10816M) 0,122ms
[16,962s][info ][gc,ergo        ] GC(5) Free: 5948M, Max: 4096K regular, 1440M humongous, Frag: 76% external, 0% internal; Reserve: 612M, Max: 4096K
[16,962s][info ][gc,start       ] GC(5) Concurrent class unloading
[16,962s][info ][gc,task        ] GC(5) Using 5 of 10 workers for concurrent class unloading
[16,962s][debug][gc,phases,start] GC(5) ClassLoaderData
[16,962s][debug][gc,phases      ] GC(5) ClassLoaderData 0,096ms
[16,962s][debug][gc,phases,start] GC(5) Trigger cleanups
[16,962s][debug][gc,phases      ] GC(5) Trigger cleanups 0,009ms
[16,964s][debug][gc,nmethod     ] Register NMethod: jdk.internal.ref.Cleaner.clean [0x00007fae5d613210] (c1)
[16,965s][debug][gc,nmethod     ] Register NMethod: jdk.internal.ref.Cleaner.remove [0x00007fae5d2b7b90] (c1)
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.ref.Finalizer.runFinalizer [0x00007fae7ca7b810]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: jdk.internal.ref.Cleaner.remove [0x00007fae7c95a790]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: jdk.internal.ref.Cleaner.clean [0x00007fae7c95b010]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.calculateCount [0x00007fae7cb4d210]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae5d50c510]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: jdk.internal.misc.Unsafe.putReferenceOpaque [0x00007fae5d5a5f90]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: io.sirix.settings.VersioningType$4.combineRecordPagesForModification [0x00007fae5d148910]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: net.openhft.chronicle.bytes.Bytes.elasticByteBuffer [0x00007fae7c995510]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: io.sirix.settings.VersioningType$4.combineRecordPages [0x00007fae5d650210]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.ref.Finalizer.register [0x00007fae5d7e5590]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.calculateCount [0x00007fae5d17a890]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: net.openhft.chronicle.core.Maths.hash64 [0x00007fae5d37b710]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: io.sirix.settings.VersioningType$4.combineRecordPages [0x00007fae5d507990]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.ref.Reference.clearInactiveFinalReference [0x00007fae5d17e890]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.ref.FinalReference.clear [0x00007fae5d2e6310]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.ref.Reference.getFromInactiveFinalReference [0x00007fae5d0e0490]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: net.jpountz.xxhash.StreamingXXHash32JNI.finalize [0x00007fae5d328d90]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.System$2.invokeFinalize [0x00007fae5d100810]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.StringBuilder.setCharAt [0x00007fae5d7f2290]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: io.sirix.index.path.summary.PathSummaryReader.getName [0x00007fae5d808590]
[16,965s][debug][gc,nmethod     ] GC(5) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getDataRecord [0x00007fae5d7fcb90]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.nio.MappedByteBuffer.position [0x00007fae5d7db990]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.Long.hashCode [0x00007fae5d608b10]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.nio.MappedByteBuffer.position [0x00007fae5d7de210]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.ref.Finalizer.register [0x00007fae7c8e2990]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.util.concurrent.CountedCompleter.addToPendingCount [0x00007fae5d835a90]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.nio.DirectByteBuffer.<init> [0x00007fae7c94ec90]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.util.ArrayList$ArrayListSpliterator.estimateSize [0x00007fae5d4ccc90]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.ThreadLocal.get [0x00007fae5d4f9110]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.invoke.MethodType.methodType [0x00007fae7c924490]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.Long.valueOf [0x00007fae5d55f290]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.util.stream.Sink$ChainedReference.end [0x00007fae5d388610]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.ThreadLocal$ThreadLocalMap.getEntry [0x00007fae5d493490]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: sun.nio.ch.IOUtil.acquireScope [0x00007fae5d7e2c10]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.AbstractStringBuilder.setLength [0x00007fae5d7f4010]
[16,966s][debug][gc,nmethod     ] GC(5) Unregister NMethod: java.lang.Long.rotateRight [0x00007fae5d0d0d90]
[16,966s][info ][gc             ] GC(5) Concurrent class unloading 3,592ms
[16,966s][info ][gc,start       ] GC(5) Concurrent strong roots
[16,966s][info ][gc,task        ] GC(5) Using 5 of 10 workers for concurrent strong root
[16,966s][info ][gc             ] GC(5) Concurrent strong roots 0,294ms
[16,966s][info ][gc,start       ] GC(5) Concurrent evacuation
[16,966s][info ][gc,task        ] GC(5) Using 5 of 10 workers for concurrent evacuation
[16,968s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Finalizer.runFinalizer [0x00007fae7c95a790] (c2)
[16,969s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Reference.processPendingReferences [0x00007fae5d804090] (c1)
[16,970s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Reference.processPendingReferences [0x00007fae5d7e2c10] (c1)
[16,972s][debug][gc,nmethod     ] Register NMethod: jdk.internal.ref.Cleaner.clean [0x00007fae7ca7bd90] (c2)
[16,974s][debug][gc,nmethod     ] Register NMethod: jdk.internal.ref.Cleaner.remove [0x00007fae7cb4e090] (c2)
[17,015s][info ][gc             ] GC(5) Concurrent evacuation 48,644ms
[17,015s][info ][gc,start       ] GC(5) Pause Init Update Refs
[17,015s][info ][gc,ergo        ] GC(5) Pacer for Update Refs. Used: 6244M, Free: 5948M, Non-Taxable: 594M, Alloc Tax Rate: 1,3x
[17,015s][info ][gc             ] GC(5) Pause Init Update Refs 0,036ms
[17,015s][info ][gc,start       ] GC(5) Concurrent update references
[17,015s][info ][gc,task        ] GC(5) Using 5 of 10 workers for concurrent reference update
[17,053s][info ][gc             ] GC(5) Concurrent update references 37,695ms
[17,053s][info ][gc,start       ] GC(5) Concurrent update thread roots
[17,054s][info ][gc             ] GC(5) Concurrent update thread roots 1,400ms
[17,054s][info ][gc,start       ] GC(5) Pause Final Update Refs
[17,054s][info ][gc,task        ] GC(5) Using 10 of 10 workers for final reference update
[17,054s][info ][gc             ] GC(5) Pause Final Update Refs 0,084ms
[17,055s][info ][gc,start       ] GC(5) Concurrent cleanup
[17,055s][info ][gc             ] GC(5) Concurrent cleanup 6244M->596M(10816M) 0,173ms
[17,055s][debug][gc,ergo        ] GC(5) Available: 11076 MB, z-score=0,283. Average available: 11007,7 MB +/- 241,6 MB.
[17,055s][info ][gc,ergo        ] Free: 11076M, Max: 4096K regular, 9244M humongous, Frag: 17% external, 0% internal; Reserve: 616M, Max: 4096K
[17,055s][info ][gc,stats       ] 
[17,055s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[17,055s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[17,055s][info ][gc,stats       ] 
[17,055s][info ][gc,stats       ] Concurrent Reset                   1357 us
[17,055s][info ][gc,stats       ] Pause Init Mark (G)                8801 us
[17,055s][info ][gc,stats       ] Pause Init Mark (N)                 140 us
[17,055s][info ][gc,stats       ]   Update Region States               63 us
[17,055s][info ][gc,stats       ] Concurrent Mark Roots               794 us, parallelism: 2,20x
[17,055s][info ][gc,stats       ]   CMR: <total>                     1750 us
[17,055s][info ][gc,stats       ]   CMR: Thread Roots                1669 us, workers (us): 227, 249, 674, 260, 259, ---, ---, ---, ---, ---, 
[17,055s][info ][gc,stats       ]   CMR: VM Strong Roots                9 us, workers (us):   5,   3,   0,   0,   0, ---, ---, ---, ---, ---, 
[17,055s][info ][gc,stats       ]   CMR: CLDG Roots                    72 us, workers (us):  60,  12, ---, ---, ---, ---, ---, ---, ---, ---, 
[17,055s][info ][gc,stats       ] Concurrent Marking                54946 us
[17,055s][info ][gc,stats       ] Pause Final Mark (G)                488 us
[17,055s][info ][gc,stats       ] Pause Final Mark (N)                420 us
[17,055s][info ][gc,stats       ]   Finish Mark                       244 us
[17,055s][info ][gc,stats       ]   Update Region States               16 us
[17,055s][info ][gc,stats       ]   Choose Collection Set             106 us
[17,055s][info ][gc,stats       ]   Rebuild Free Set                    8 us
[17,055s][info ][gc,stats       ] Concurrent Thread Roots             631 us, parallelism: 2,66x
[17,055s][info ][gc,stats       ]   CTR: <total>                     1677 us
[17,055s][info ][gc,stats       ]   CTR: Thread Roots                1677 us, workers (us): 542, 311, 303, 265, 255, ---, ---, ---, ---, ---, 
[17,055s][info ][gc,stats       ] Concurrent Weak References         2785 us, parallelism: 2,51x
[17,055s][info ][gc,stats       ]   CWRF: <total>                    6998 us
[17,055s][info ][gc,stats       ]   CWRF: Weak References            6998 us, workers (us): 628, 1606, 1816, 527, 2421, ---, ---, ---, ---, ---, 
[17,055s][info ][gc,stats       ] Concurrent Weak Roots               697 us
[17,055s][info ][gc,stats       ]   Roots                             555 us, parallelism: 3,33x
[17,055s][info ][gc,stats       ]     CWR: <total>                   1849 us
[17,055s][info ][gc,stats       ]     CWR: Code Cache Roots           913 us, workers (us): 199, 217, 167, 162, 169, ---, ---, ---, ---, ---, 
[17,055s][info ][gc,stats       ]     CWR: VM Weak Roots              920 us, workers (us): 228, 228, 199, 133, 132, ---, ---, ---, ---, ---, 
[17,055s][info ][gc,stats       ]     CWR: CLDG Roots                  15 us, workers (us): ---, ---,   8, ---,   7, ---, ---, ---, ---, ---, 
[17,055s][info ][gc,stats       ]   Rendezvous                         89 us
[17,055s][info ][gc,stats       ] Concurrent Cleanup                  132 us
[17,055s][info ][gc,stats       ] Concurrent Class Unloading         3615 us
[17,055s][info ][gc,stats       ]   Unlink Stale                     2905 us
[17,055s][info ][gc,stats       ]     System Dictionary               125 us
[17,055s][info ][gc,stats       ]     Weak Class Links               1908 us
[17,055s][info ][gc,stats       ]     Code Roots                      871 us
[17,055s][info ][gc,stats       ]   Rendezvous                         67 us
[17,055s][info ][gc,stats       ]   Purge Unlinked                    601 us
[17,055s][info ][gc,stats       ]     Code Roots                      461 us
[17,055s][info ][gc,stats       ]     CLDG                            140 us
[17,055s][info ][gc,stats       ]     Exception Caches                  0 us
[17,055s][info ][gc,stats       ] Concurrent Strong Roots             316 us, parallelism: 0,78x
[17,055s][info ][gc,stats       ]   CSR: <total>                      247 us
[17,055s][info ][gc,stats       ]   CSR: VM Strong Roots               15 us, workers (us):   5,   5,   4,   0,   0, ---, ---, ---, ---, ---, 
[17,055s][info ][gc,stats       ]   CSR: CLDG Roots                   232 us, workers (us): 135, ---,  98, ---, ---, ---, ---, ---, ---, ---, 
[17,055s][info ][gc,stats       ] Concurrent Evacuation             48696 us
[17,055s][info ][gc,stats       ] Pause Init Update Refs (G)          227 us
[17,055s][info ][gc,stats       ] Pause Init Update Refs (N)           44 us
[17,055s][info ][gc,stats       ]   Manage GCLABs                       3 us
[17,055s][info ][gc,stats       ] Concurrent Update Refs            37760 us
[17,055s][info ][gc,stats       ] Concurrent Update Thread Roots     1430 us
[17,055s][info ][gc,stats       ] Pause Final Update Refs (G)         244 us
[17,055s][info ][gc,stats       ] Pause Final Update Refs (N)          94 us
[17,055s][info ][gc,stats       ]   Update Region States               35 us
[17,055s][info ][gc,stats       ]   Trash Collection Set                6 us
[17,055s][info ][gc,stats       ]   Rebuild Free Set                   11 us
[17,055s][info ][gc,stats       ] Concurrent Cleanup                  189 us
[17,055s][info ][gc,stats       ] 
[17,055s][info ][gc,stats       ] Allocation pacing accrued:
[17,055s][info ][gc,stats       ]       0 of  6831 ms (  0,0%): <total>
[17,055s][info ][gc,stats       ]       0 of  6831 ms (  0,0%): <average total>
[17,055s][info ][gc,stats       ] 
[17,055s][info ][gc,metaspace   ] Metaspace: 19784K(20224K)->19662K(20224K) NonClass: 17329K(17536K)->17236K(17536K) Class: 2455K(2688K)->2426K(2688K)
[17,055s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[17,055s][info ][gc,start       ] Concurrent uncommit
[17,058s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.Bytes.elasticByteBuffer [0x00007fae5d7e9b90] (c1)
[17,060s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer.<init> [0x00007fae5d7a2190] (c1)
[17,077s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.setMemory [0x00007fae7ca7b810] (c2)
[17,078s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.setMemory [0x00007fae7c8e2990] (c2)
[17,079s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer$Deallocator.<init> [0x00007fae7cb4dd90] (c2)
[17,179s][info ][gc             ] Concurrent uncommit 604M->734M(5120M) 123,659ms
[17,180s][info ][gc             ] Trigger: Explicit GC request (System.gc())
[17,180s][info ][gc,ergo        ] Free: 10937M, Max: 4096K regular, 9128M humongous, Frag: 17% external, 0% internal; Reserve: 616M, Max: 4096K
[17,180s][info ][gc,start       ] GC(6) Concurrent reset
[17,180s][info ][gc,task        ] GC(6) Using 5 of 10 workers for concurrent reset
[17,180s][info ][gc,ergo        ] GC(6) Pacer for Reset. Non-Taxable: 12288M
[17,182s][info ][gc             ] GC(6) Concurrent reset 2,294ms
[17,182s][info ][gc,start       ] GC(6) Pause Init Mark (unload classes)
[17,182s][info ][gc,task        ] GC(6) Using 10 of 10 workers for init marking
[17,183s][info ][gc,ref         ] GC(6) Clearing All SoftReferences
[17,183s][info ][gc,ergo        ] GC(6) Pacer for Mark. Expected Live: 433M, Free: 10937M, Non-Taxable: 1093M, Alloc Tax Rate: 0,0x
[17,183s][info ][gc             ] GC(6) Pause Init Mark (unload classes) 0,168ms
[17,183s][info ][gc,start       ] GC(6) Concurrent marking roots
[17,183s][info ][gc,task        ] GC(6) Using 5 of 10 workers for concurrent marking roots
[17,183s][debug][gc,tlab        ] GC(6) TLAB totals: thrds: 14  refills: 14 max: 1 slow allocs: 0 max 0 waste: 98,1% gc: 57596904B max: 4193744B slow: 0B max: 0B
[17,184s][info ][gc             ] GC(6) Concurrent marking roots 0,909ms
[17,184s][info ][gc,start       ] GC(6) Concurrent marking (unload classes)
[17,184s][info ][gc,task        ] GC(6) Using 5 of 10 workers for concurrent marking
[17,225s][info ][gc             ] GC(6) Concurrent marking (unload classes) 41,829ms
[17,225s][info ][gc,start       ] GC(6) Pause Final Mark (unload classes)
[17,225s][info ][gc,task        ] GC(6) Using 10 of 10 workers for final marking
[17,226s][info ][gc,ergo        ] GC(6) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 11552M, Max CSet: 512M, Min Garbage: 0B
[17,226s][info ][gc,ergo        ] GC(6) Collectable Garbage: 184M (98%), Immediate: 0B (0%), CSet: 184M (98%)
[17,226s][info ][gc,ergo        ] GC(6) Pacer for Evacuation. Used CSet: 230M, Free: 10936M, Non-Taxable: 1093M, Alloc Tax Rate: 1,1x
[17,226s][info ][gc             ] GC(6) Pause Final Mark (unload classes) 0,362ms
[17,226s][info ][gc,start       ] GC(6) Concurrent thread roots
[17,226s][info ][gc,task        ] GC(6) Using 5 of 10 workers for Concurrent thread roots
[17,228s][info ][gc             ] GC(6) Concurrent thread roots 1,908ms
[17,228s][info ][gc,start       ] GC(6) Concurrent weak references
[17,228s][info ][gc,task        ] GC(6) Using 5 of 10 workers for concurrent weak references
[17,228s][info ][gc,ref         ] GC(6) Encountered references: Soft: 2320, Weak: 1839, Final: 502, Phantom: 861
[17,228s][info ][gc,ref         ] GC(6) Discovered  references: Soft: 171, Weak: 710, Final: 502, Phantom: 765
[17,228s][info ][gc,ref         ] GC(6) Enqueued    references: Soft: 0, Weak: 0, Final: 502, Phantom: 495
[17,228s][info ][gc             ] GC(6) Concurrent weak references 0,359ms
[17,228s][info ][gc,start       ] GC(6) Concurrent weak roots
[17,228s][info ][gc,task        ] GC(6) Using 5 of 10 workers for concurrent weak root
[17,229s][info ][gc             ] GC(6) Concurrent weak roots 1,318ms
[17,229s][info ][gc,start       ] GC(6) Concurrent cleanup
[17,230s][info ][gc             ] GC(6) Concurrent cleanup 736M->736M(5124M) 0,140ms
[17,230s][info ][gc,ergo        ] GC(6) Free: 10936M, Max: 4096K regular, 9128M humongous, Frag: 17% external, 0% internal; Reserve: 614M, Max: 4096K
[17,230s][info ][gc,start       ] GC(6) Concurrent class unloading
[17,230s][info ][gc,task        ] GC(6) Using 5 of 10 workers for concurrent class unloading
[17,230s][debug][gc,phases,start] GC(6) ClassLoaderData
[17,230s][debug][gc,phases      ] GC(6) ClassLoaderData 0,008ms
[17,230s][debug][gc,phases,start] GC(6) Trigger cleanups
[17,230s][debug][gc,phases      ] GC(6) Trigger cleanups 0,004ms
[17,231s][debug][gc,nmethod     ] GC(6) Unregister NMethod: jdk.internal.ref.Cleaner.remove [0x00007fae5d2b7b90]
[17,231s][debug][gc,nmethod     ] GC(6) Unregister NMethod: java.lang.ref.Reference.enqueueFromPending [0x00007fae7c959890]
[17,231s][debug][gc,nmethod     ] GC(6) Unregister NMethod: jdk.internal.ref.Cleaner.clean [0x00007fae5d613210]
[17,231s][debug][gc,nmethod     ] GC(6) Unregister NMethod: java.lang.ref.Finalizer.runFinalizer [0x00007fae5d772e90]
[17,231s][debug][gc,nmethod     ] GC(6) Unregister NMethod: java.nio.DirectByteBuffer$Deallocator.<init> [0x00007fae5d760410]
[17,231s][debug][gc,nmethod     ] GC(6) Unregister NMethod: jdk.internal.misc.Unsafe.setMemory [0x00007fae5d753f90]
[17,231s][debug][gc,nmethod     ] GC(6) Unregister NMethod: jdk.internal.misc.Unsafe.setMemory [0x00007fae5d752e10]
[17,231s][info ][gc             ] GC(6) Concurrent class unloading 1,087ms
[17,231s][info ][gc,start       ] GC(6) Concurrent strong roots
[17,231s][info ][gc,task        ] GC(6) Using 5 of 10 workers for concurrent strong root
[17,231s][info ][gc             ] GC(6) Concurrent strong roots 0,278ms
[17,231s][info ][gc,start       ] GC(6) Concurrent evacuation
[17,231s][info ][gc,task        ] GC(6) Using 5 of 10 workers for concurrent evacuation
[17,251s][info ][gc             ] GC(6) Concurrent evacuation 20,253ms
[17,251s][info ][gc,start       ] GC(6) Pause Init Update Refs
[17,251s][info ][gc,ergo        ] GC(6) Pacer for Update Refs. Used: 794M, Free: 10936M, Non-Taxable: 1093M, Alloc Tax Rate: 1,1x
[17,251s][info ][gc             ] GC(6) Pause Init Update Refs 0,026ms
[17,251s][info ][gc,start       ] GC(6) Concurrent update references
[17,251s][info ][gc,task        ] GC(6) Using 5 of 10 workers for concurrent reference update
[17,283s][info ][gc             ] GC(6) Concurrent update references 31,140ms
[17,283s][info ][gc,start       ] GC(6) Concurrent update thread roots
[17,284s][info ][gc             ] GC(6) Concurrent update thread roots 1,245ms
[17,284s][info ][gc,start       ] GC(6) Pause Final Update Refs
[17,284s][info ][gc,task        ] GC(6) Using 10 of 10 workers for final reference update
[17,284s][info ][gc             ] GC(6) Pause Final Update Refs 0,062ms
[17,284s][info ][gc,start       ] GC(6) Concurrent cleanup
[17,284s][info ][gc             ] GC(6) Concurrent cleanup 794M->564M(5180M) 0,157ms
[17,284s][debug][gc,ergo        ] GC(6) Available: 11108 MB, z-score=0,380. Average available: 11022,0 MB +/- 226,4 MB.
[17,284s][info ][gc,ergo        ] Free: 11108M, Max: 4096K regular, 11084M humongous, Frag: 1% external, 0% internal; Reserve: 616M, Max: 4096K
[17,284s][info ][gc,stats       ] 
[17,284s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[17,284s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[17,284s][info ][gc,stats       ] 
[17,284s][info ][gc,stats       ] Concurrent Reset                   2315 us
[17,284s][info ][gc,stats       ] Pause Init Mark (G)                 206 us
[17,284s][info ][gc,stats       ] Pause Init Mark (N)                 175 us
[17,284s][info ][gc,stats       ]   Update Region States              121 us
[17,284s][info ][gc,stats       ] Concurrent Mark Roots               925 us, parallelism: 1,81x
[17,284s][info ][gc,stats       ]   CMR: <total>                     1675 us
[17,284s][info ][gc,stats       ]   CMR: Thread Roots                1621 us, workers (us): 232, 235, 665, 241, 249, ---, ---, ---, ---, ---, 
[17,284s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   3,   3,   0,   0,   0, ---, ---, ---, ---, ---, 
[17,284s][info ][gc,stats       ]   CMR: CLDG Roots                    47 us, workers (us):  40,   7, ---, ---, ---, ---, ---, ---, ---, ---, 
[17,284s][info ][gc,stats       ] Concurrent Marking                41871 us
[17,284s][info ][gc,stats       ] Pause Final Mark (G)                391 us
[17,284s][info ][gc,stats       ] Pause Final Mark (N)                371 us
[17,284s][info ][gc,stats       ]   Finish Mark                       243 us
[17,284s][info ][gc,stats       ]   Update Region States               30 us
[17,284s][info ][gc,stats       ]   Choose Collection Set              48 us
[17,284s][info ][gc,stats       ]   Rebuild Free Set                   11 us
[17,284s][info ][gc,stats       ] Concurrent Thread Roots            1930 us, parallelism: 3,67x
[17,284s][info ][gc,stats       ]   CTR: <total>                     7085 us
[17,284s][info ][gc,stats       ]   CTR: Thread Roots                7085 us, workers (us): 1579, 1291, 1268, 1708, 1240, ---, ---, ---, ---, ---, 
[17,284s][info ][gc,stats       ] Concurrent Weak References          366 us, parallelism: 0,81x
[17,284s][info ][gc,stats       ]   CWRF: <total>                     298 us
[17,284s][info ][gc,stats       ]   CWRF: Weak References             298 us, workers (us): 244,   9,  14,  31,   0, ---, ---, ---, ---, ---, 
[17,284s][info ][gc,stats       ] Concurrent Weak Roots              1326 us
[17,284s][info ][gc,stats       ]   Roots                             471 us, parallelism: 3,62x
[17,284s][info ][gc,stats       ]     CWR: <total>                   1703 us
[17,284s][info ][gc,stats       ]     CWR: Code Cache Roots           844 us, workers (us): 159, 163, 167, 192, 162, ---, ---, ---, ---, ---, 
[17,284s][info ][gc,stats       ]     CWR: VM Weak Roots              846 us, workers (us): 191, 189, 160, 154, 152, ---, ---, ---, ---, ---, 
[17,284s][info ][gc,stats       ]     CWR: CLDG Roots                  13 us, workers (us): ---,   7,   7, ---, ---, ---, ---, ---, ---, ---, 
[17,284s][info ][gc,stats       ]   Rendezvous                        838 us
[17,284s][info ][gc,stats       ] Concurrent Cleanup                  146 us
[17,284s][info ][gc,stats       ] Concurrent Class Unloading         1093 us
[17,284s][info ][gc,stats       ]   Unlink Stale                      807 us
[17,284s][info ][gc,stats       ]     System Dictionary                21 us
[17,284s][info ][gc,stats       ]     Weak Class Links                  0 us
[17,284s][info ][gc,stats       ]     Code Roots                      785 us
[17,284s][info ][gc,stats       ]   Rendezvous                        206 us
[17,284s][info ][gc,stats       ]   Purge Unlinked                     65 us
[17,284s][info ][gc,stats       ]     Code Roots                       63 us
[17,284s][info ][gc,stats       ]     CLDG                              2 us
[17,284s][info ][gc,stats       ]     Exception Caches                  0 us
[17,284s][info ][gc,stats       ] Concurrent Strong Roots             284 us, parallelism: 0,82x
[17,284s][info ][gc,stats       ]   CSR: <total>                      233 us
[17,284s][info ][gc,stats       ]   CSR: VM Strong Roots               11 us, workers (us):   5,   6,   0,   0,   0, ---, ---, ---, ---, ---, 
[17,284s][info ][gc,stats       ]   CSR: CLDG Roots                   221 us, workers (us):  92, 130, ---, ---, ---, ---, ---, ---, ---, ---, 
[17,284s][info ][gc,stats       ] Concurrent Evacuation             20296 us
[17,284s][info ][gc,stats       ] Pause Init Update Refs (G)           63 us
[17,284s][info ][gc,stats       ] Pause Init Update Refs (N)           33 us
[17,284s][info ][gc,stats       ]   Manage GCLABs                       3 us
[17,284s][info ][gc,stats       ] Concurrent Update Refs            31181 us
[17,284s][info ][gc,stats       ] Concurrent Update Thread Roots     1257 us
[17,285s][info ][gc,stats       ] Pause Final Update Refs (G)          87 us
[17,285s][info ][gc,stats       ] Pause Final Update Refs (N)          70 us
[17,285s][info ][gc,stats       ]   Update Region States               29 us
[17,285s][info ][gc,stats       ]   Trash Collection Set                2 us
[17,285s][info ][gc,stats       ]   Rebuild Free Set                   11 us
[17,285s][info ][gc,stats       ] Concurrent Cleanup                  166 us
[17,285s][info ][gc,stats       ] 
[17,285s][info ][gc,stats       ] Allocation pacing accrued:
[17,285s][info ][gc,stats       ]       0 of   229 ms (  0,0%): <total>
[17,285s][info ][gc,stats       ]       0 of   229 ms (  0,0%): <average total>
[17,285s][info ][gc,stats       ] 
[17,285s][info ][gc,metaspace   ] Metaspace: 19662K(20224K)->19662K(20224K) NonClass: 17236K(17536K)->17236K(17536K) Class: 2426K(2688K)->2426K(2688K)
[17,285s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[17,285s][info ][gc,start       ] Concurrent uncommit
[17,287s][info ][gc             ] Concurrent uncommit 628M->628M(5120M) 2,777ms
[17,296s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType$1.serializeFullReferencesPage [0x00007fae7c94ec90] (c2)
[17,302s][debug][gc,nmethod     ] Register NMethod: java.nio.MappedByteBuffer.limit [0x00007fae7cb4d990] (c2)
[17,302s][debug][gc,nmethod     ] Register NMethod: java.nio.MappedByteBuffer.rewind [0x00007fae7cb4d690] (c2)
[17,312s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedLocalAsyncCache.cache [0x00007fae5d0e0490] (c1)
[17,312s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.Invokers$Holder.linkToTargetMethod [0x00007fae5d4f9110] (c1)
[17,312s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$DMH/0x00007fadb4120c00.newInvokeSpecial [0x00007fae5d612f10] (c1)
[17,312s][debug][gc,nmethod     ] Register NMethod: org.magicwerk.brownies.collections.IList.<init> [0x00007fae5d328d90] (c1)
[17,312s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.getPreviousInAccessOrder [0x00007fae5d17e890] (c1)
[17,312s][debug][gc,nmethod     ] Register NMethod: org.magicwerk.brownies.collections.GapList.init [0x00007fae5d5a5f90] (c1)
[17,313s][debug][gc,nmethod     ] Register NMethod: org.magicwerk.brownies.collections.GapList.<init> [0x00007fae5d493490] (c1)
[17,938s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.FullReferencesPage.commit [0x00007fae5d2b7b90] (c1)
[17,946s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayList.clear [0x00007fae5d7f4310] (c1)
[17,947s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.putIntVolatile [0x00007fae7cb4d210] ()
[17,947s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.evicts [0x00007fae7c95a490] (c1)
[17,949s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap.size [0x00007fae5d100810] (c1)
[17,949s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.newInstance [0x00007fae5d388610] (c1)
[17,950s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.refreshAfterWrite [0x00007fae7c95a190] (c1)
[17,953s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.FileChannelImpl.write [0x00007fae7c996290] (c2)
[18,462s][debug][gc,nmethod     ] Register NMethod: io.sirix.settings.VersioningType$4.combineRecordPagesForModification [0x00007fae7cb62e90] (c2)
[18,550s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.VM.isModuleSystemInited [0x00007fae5d608b10] (c1)
[18,586s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.FullReferencesPage.commit [0x00007fae5d17ab90] (c1)
[18,594s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelWriter.flushBuffer [0x00007fae7c995510] (c2)
[18,595s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.AbstractForwardingPage.commit [0x00007fae5d37ba10] (c1)
[18,605s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind.serializeDelegate [0x00007fae5d0e3f90] (c1)
[18,605s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.newIncompleteFuture [0x00007fae5d0e3a90] (c1)
[18,612s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.UnboundedLocalCache.statsTicker [0x00007fae7c959e90] (c1)
[18,612s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.DeserializedReferencesPage4Tuple.<init> [0x00007fae5d71ac90] (c1)
[18,612s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList.<init> [0x00007fae5d71a690] (c1)
[18,612s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.shorts.AbstractShortList.<init> [0x00007fae5d74f810] (c1)
[18,612s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.shorts.AbstractShortCollection.<init> [0x00007fae5d4ccc90] (c1)
[18,612s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList.initArrayFromCapacity [0x00007fae5d38f790] (c1)
[18,612s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AccessOrderDeque.setPrevious [0x00007fae5d74ef10] (c1)
[18,612s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AccessOrderDeque.setPrevious [0x00007fae5d760410] (c1)
[18,612s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.setPreviousInAccessOrder [0x00007fae5d7db990] (c1)
[18,612s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.stats.StatsCounter.disabledStatsCounter [0x00007fae5d0d0d90] (c1)
[18,612s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.setNextInAccessOrder [0x00007fae5d7e5590] (c1)
[18,612s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.LocalManualCache.getIfPresent [0x00007fae5d773a90] (c1)
[18,613s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.DisabledTicker.read [0x00007fae7c959b90] (c1)
[18,613s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSAMS.getQueueType [0x00007fae7c959890] (c1)
[18,613s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.hitsInSample [0x00007fae7c92cf90] (c1)
[18,613s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$Signaller.isReleasable [0x00007fae5d773310] (c1)
[18,614s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.pathsummary.AbstractAxis.hasNext [0x00007fae7c92c810] (c2)
[18,615s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNullValueAsRightSibling [0x00007fae5d305e10] (c1)
[18,624s][debug][gc,nmethod     ] Register NMethod: java.util.HashSet.add [0x00007fae7c92ab90] (c2)
[18,624s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getStructuralNode [0x00007fae7c92a790] (c2)
[18,642s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNullValueAsRightSibling [0x00007fae7c928690] (c2)
[18,687s][info ][gc             ] Trigger: Learning 2 of 5. Free (8600M) is below initial threshold (8601M)
[18,687s][info ][gc,ergo        ] Free: 8600M, Max: 4096K regular, 8600M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[18,688s][info ][gc,start       ] GC(7) Concurrent reset
[18,688s][info ][gc,task        ] GC(7) Using 5 of 10 workers for concurrent reset
[18,688s][info ][gc,ergo        ] GC(7) Pacer for Reset. Non-Taxable: 12288M
[18,689s][info ][gc             ] GC(7) Concurrent reset 1,233ms
[18,689s][info ][gc,start       ] GC(7) Pause Init Mark (unload classes)
[18,689s][info ][gc,task        ] GC(7) Using 10 of 10 workers for init marking
[18,689s][info ][gc,ergo        ] GC(7) Pacer for Mark. Expected Live: 440M, Free: 8600M, Non-Taxable: 860M, Alloc Tax Rate: 0,1x
[18,689s][info ][gc             ] GC(7) Pause Init Mark (unload classes) 0,069ms
[18,689s][info ][gc,start       ] GC(7) Concurrent marking roots
[18,689s][info ][gc,task        ] GC(7) Using 5 of 10 workers for concurrent marking roots
[18,689s][debug][gc,tlab        ] GC(7) TLAB totals: thrds: 1  refills: 348 max: 348 slow allocs: 0 max 0 waste:  0,2% gc: 2011320B max: 2011320B slow: 640112B max: 640112B
[18,690s][info ][gc             ] GC(7) Concurrent marking roots 0,741ms
[18,690s][info ][gc,start       ] GC(7) Concurrent marking (unload classes)
[18,690s][info ][gc,task        ] GC(7) Using 5 of 10 workers for concurrent marking
[18,697s][info ][gc             ] GC(7) Concurrent marking (unload classes) 6,885ms
[18,697s][info ][gc,start       ] GC(7) Pause Final Mark (unload classes)
[18,697s][info ][gc,task        ] GC(7) Using 10 of 10 workers for final marking
[18,697s][info ][gc,ergo        ] GC(7) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10920M, Max CSet: 512M, Min Garbage: 0B
[18,697s][info ][gc,ergo        ] GC(7) Collectable Garbage: 3003M (99%), Immediate: 1712M (56%), CSet: 1291M (42%)
[18,697s][info ][gc,ergo        ] GC(7) Pacer for Evacuation. Used CSet: 1352M, Free: 10304M, Non-Taxable: 1030M, Alloc Tax Rate: 1,1x
[18,697s][info ][gc             ] GC(7) Pause Final Mark (unload classes) 0,458ms
[18,697s][info ][gc,start       ] GC(7) Concurrent thread roots
[18,697s][info ][gc,task        ] GC(7) Using 5 of 10 workers for Concurrent thread roots
[18,699s][info ][gc             ] GC(7) Concurrent thread roots 1,823ms
[18,699s][info ][gc,start       ] GC(7) Concurrent weak references
[18,699s][info ][gc,task        ] GC(7) Using 5 of 10 workers for concurrent weak references
[18,700s][info ][gc,ref         ] GC(7) Encountered references: Soft: 2318, Weak: 1809, Final: 4383, Phantom: 4535
[18,700s][info ][gc,ref         ] GC(7) Discovered  references: Soft: 0, Weak: 143, Final: 4383, Phantom: 4773
[18,700s][info ][gc,ref         ] GC(7) Enqueued    references: Soft: 0, Weak: 0, Final: 4383, Phantom: 4397
[18,700s][info ][gc             ] GC(7) Concurrent weak references 0,869ms
[18,700s][info ][gc,start       ] GC(7) Concurrent weak roots
[18,700s][info ][gc,task        ] GC(7) Using 5 of 10 workers for concurrent weak root
[18,701s][info ][gc             ] GC(7) Concurrent weak roots 0,746ms
[18,701s][info ][gc,start       ] GC(7) Concurrent cleanup
[18,701s][info ][gc             ] GC(7) Concurrent cleanup 3086M->1374M(5124M) 0,091ms
[18,701s][info ][gc,ergo        ] GC(7) Free: 10300M, Max: 4096K regular, 9108M humongous, Frag: 12% external, 0% internal; Reserve: 613M, Max: 4096K
[18,701s][info ][gc,start       ] GC(7) Concurrent class unloading
[18,701s][info ][gc,task        ] GC(7) Using 5 of 10 workers for concurrent class unloading
[18,701s][debug][gc,phases,start] GC(7) ClassLoaderData
[18,701s][debug][gc,phases      ] GC(7) ClassLoaderData 0,013ms
[18,701s][debug][gc,phases,start] GC(7) Trigger cleanups
[18,701s][debug][gc,phases      ] GC(7) Trigger cleanups 0,007ms
[18,703s][debug][gc,nmethod     ] GC(7) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNullValueAsRightSibling [0x00007fae5d305e10]
[18,703s][debug][gc,nmethod     ] GC(7) Unregister NMethod: java.nio.MappedByteBuffer.rewind [0x00007fae5d839890]
[18,703s][debug][gc,nmethod     ] GC(7) Unregister NMethod: io.sirix.settings.VersioningType$4.combineRecordPagesForModification [0x00007fae5d662b90]
[18,703s][debug][gc,nmethod     ] GC(7) Unregister NMethod: io.sirix.page.SerializationType$1.serializeFullReferencesPage [0x00007fae5d716290]
[18,703s][debug][gc,nmethod     ] GC(7) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNullValueAsRightSibling [0x00007fae7c9ad890]
[18,703s][debug][gc,nmethod     ] GC(7) Unregister NMethod: java.nio.MappedByteBuffer.limit [0x00007fae5d839390]
[18,703s][debug][gc,nmethod     ] GC(7) Unregister NMethod: io.sirix.axis.pathsummary.AbstractAxis.hasNext [0x00007fae5d80eb10]
[18,703s][debug][gc,nmethod     ] GC(7) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getStructuralNode [0x00007fae5d53db10]
[18,703s][debug][gc,nmethod     ] GC(7) Unregister NMethod: java.util.HashSet.add [0x00007fae5d186290]
[18,703s][debug][gc,nmethod     ] GC(7) Unregister NMethod: io.sirix.io.filechannel.FileChannelWriter.flushBuffer [0x00007fae5d842590]
[18,703s][debug][gc,nmethod     ] GC(7) Unregister NMethod: sun.nio.ch.FileChannelImpl.write [0x00007fae5d841990]
[18,703s][info ][gc             ] GC(7) Concurrent class unloading 2,030ms
[18,703s][info ][gc,start       ] GC(7) Concurrent strong roots
[18,703s][info ][gc,task        ] GC(7) Using 5 of 10 workers for concurrent strong root
[18,703s][info ][gc             ] GC(7) Concurrent strong roots 0,239ms
[18,703s][info ][gc,start       ] GC(7) Concurrent evacuation
[18,703s][info ][gc,task        ] GC(7) Using 5 of 10 workers for concurrent evacuation
[18,714s][info ][gc             ] GC(7) Concurrent evacuation 10,845ms
[18,714s][info ][gc,start       ] GC(7) Pause Init Update Refs
[18,714s][info ][gc,ergo        ] GC(7) Pacer for Update Refs. Used: 1452M, Free: 10288M, Non-Taxable: 1028M, Alloc Tax Rate: 1,1x
[18,714s][info ][gc             ] GC(7) Pause Init Update Refs 0,040ms
[18,714s][info ][gc,start       ] GC(7) Concurrent update references
[18,714s][info ][gc,task        ] GC(7) Using 5 of 10 workers for concurrent reference update
[18,720s][info ][gc             ] GC(7) Concurrent update references 6,143ms
[18,720s][info ][gc,start       ] GC(7) Concurrent update thread roots
[18,721s][info ][gc             ] GC(7) Concurrent update thread roots 0,891ms
[18,721s][info ][gc,start       ] GC(7) Pause Final Update Refs
[18,721s][info ][gc,task        ] GC(7) Using 10 of 10 workers for final reference update
[18,722s][info ][gc             ] GC(7) Pause Final Update Refs 0,237ms
[18,722s][info ][gc,start       ] GC(7) Concurrent cleanup
[18,722s][info ][gc             ] GC(7) Concurrent cleanup 1456M->104M(5128M) 0,096ms
[18,722s][debug][gc,ergo        ] GC(7) Available: 11568 MB, z-score=1,717. Average available: 11090,3 MB +/- 278,3 MB.
[18,722s][info ][gc,ergo        ] Free: 11568M, Max: 4096K regular, 9076M humongous, Frag: 22% external, 0% internal; Reserve: 616M, Max: 4096K
[18,722s][info ][gc,stats       ] 
[18,722s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[18,722s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[18,722s][info ][gc,stats       ] 
[18,722s][info ][gc,stats       ] Concurrent Reset                   1261 us
[18,722s][info ][gc,stats       ] Pause Init Mark (G)                 169 us
[18,722s][info ][gc,stats       ] Pause Init Mark (N)                  77 us
[18,722s][info ][gc,stats       ]   Update Region States               24 us
[18,722s][info ][gc,stats       ] Concurrent Mark Roots               760 us, parallelism: 1,95x
[18,722s][info ][gc,stats       ]   CMR: <total>                     1485 us
[18,722s][info ][gc,stats       ]   CMR: Thread Roots                1408 us, workers (us): 246, 228, 510, 209, 215, ---, ---, ---, ---, ---, 
[18,722s][info ][gc,stats       ]   CMR: VM Strong Roots                7 us, workers (us):   6,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[18,722s][info ][gc,stats       ]   CMR: CLDG Roots                    69 us, workers (us):  66,   4, ---, ---, ---, ---, ---, ---, ---, ---, 
[18,722s][info ][gc,stats       ] Concurrent Marking                 6931 us
[18,722s][info ][gc,stats       ] Pause Final Mark (G)                582 us
[18,722s][info ][gc,stats       ] Pause Final Mark (N)                465 us
[18,722s][info ][gc,stats       ]   Finish Mark                       325 us
[18,722s][info ][gc,stats       ]   Update Region States               28 us
[18,722s][info ][gc,stats       ]   Choose Collection Set              53 us
[18,722s][info ][gc,stats       ]   Rebuild Free Set                   10 us
[18,722s][info ][gc,stats       ] Concurrent Thread Roots            1841 us, parallelism: 3,28x
[18,722s][info ][gc,stats       ]   CTR: <total>                     6035 us
[18,722s][info ][gc,stats       ]   CTR: Thread Roots                6035 us, workers (us): 1309, 1037, 1007, 1712, 971, ---, ---, ---, ---, ---, 
[18,722s][info ][gc,stats       ] Concurrent Weak References          880 us, parallelism: 2,04x
[18,722s][info ][gc,stats       ]   CWRF: <total>                    1797 us
[18,722s][info ][gc,stats       ]   CWRF: Weak References            1797 us, workers (us): 732, 495, 362, 207,   0, ---, ---, ---, ---, ---, 
[18,722s][info ][gc,stats       ] Concurrent Weak Roots               772 us
[18,722s][info ][gc,stats       ]   Roots                             613 us, parallelism: 3,10x
[18,722s][info ][gc,stats       ]     CWR: <total>                   1897 us
[18,722s][info ][gc,stats       ]     CWR: Code Cache Roots           939 us, workers (us): 227, 201, 172, 164, 175, ---, ---, ---, ---, ---, 
[18,722s][info ][gc,stats       ]     CWR: VM Weak Roots              947 us, workers (us): 257, 173, 172, 173, 171, ---, ---, ---, ---, ---, 
[18,722s][info ][gc,stats       ]     CWR: CLDG Roots                  11 us, workers (us): ---, ---,   5, ---,   6, ---, ---, ---, ---, ---, 
[18,722s][info ][gc,stats       ]   Rendezvous                        116 us
[18,722s][info ][gc,stats       ] Concurrent Cleanup                  102 us
[18,722s][info ][gc,stats       ] Concurrent Class Unloading         2043 us
[18,722s][info ][gc,stats       ]   Unlink Stale                      786 us
[18,722s][info ][gc,stats       ]     System Dictionary                35 us
[18,722s][info ][gc,stats       ]     Weak Class Links                  0 us
[18,722s][info ][gc,stats       ]     Code Roots                      750 us
[18,722s][info ][gc,stats       ]   Rendezvous                       1042 us
[18,722s][info ][gc,stats       ]   Purge Unlinked                    185 us
[18,722s][info ][gc,stats       ]     Code Roots                      182 us
[18,722s][info ][gc,stats       ]     CLDG                              3 us
[18,722s][info ][gc,stats       ]     Exception Caches                  0 us
[18,722s][info ][gc,stats       ] Concurrent Strong Roots             260 us, parallelism: 1,04x
[18,722s][info ][gc,stats       ]   CSR: <total>                      270 us
[18,722s][info ][gc,stats       ]   CSR: VM Strong Roots               56 us, workers (us):  35,  14,   7,   0,   0, ---, ---, ---, ---, ---, 
[18,722s][info ][gc,stats       ]   CSR: CLDG Roots                   214 us, workers (us): 108, ---, 106, ---, ---, ---, ---, ---, ---, ---, 
[18,722s][info ][gc,stats       ] Concurrent Evacuation             10899 us
[18,722s][info ][gc,stats       ] Pause Init Update Refs (G)          223 us
[18,722s][info ][gc,stats       ] Pause Init Update Refs (N)           48 us
[18,722s][info ][gc,stats       ]   Manage GCLABs                       3 us
[18,722s][info ][gc,stats       ] Concurrent Update Refs             6196 us
[18,722s][info ][gc,stats       ] Concurrent Update Thread Roots      924 us
[18,722s][info ][gc,stats       ] Pause Final Update Refs (G)         376 us
[18,722s][info ][gc,stats       ] Pause Final Update Refs (N)         256 us
[18,722s][info ][gc,stats       ]   Update Region States              164 us
[18,722s][info ][gc,stats       ]   Trash Collection Set                9 us
[18,722s][info ][gc,stats       ]   Rebuild Free Set                   16 us
[18,722s][info ][gc,stats       ] Concurrent Cleanup                  110 us
[18,722s][info ][gc,stats       ] 
[18,722s][info ][gc,stats       ] Allocation pacing accrued:
[18,722s][info ][gc,stats       ]       0 of  1438 ms (  0,0%): <total>
[18,722s][info ][gc,stats       ]       0 of  1438 ms (  0,0%): <average total>
[18,722s][info ][gc,stats       ] 
[18,722s][info ][gc,metaspace   ] Metaspace: 19666K(20224K)->19666K(20224K) NonClass: 17239K(17536K)->17239K(17536K) Class: 2426K(2688K)->2426K(2688K)
[18,722s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[19,253s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.Bytes.elasticByteBuffer [0x00007fae7c924490] (c2)
[19,266s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer.<init> [0x00007fae7cb7ce90] (c2)
[19,266s][debug][gc,nmethod     ] Register NMethod: java.nio.Bits.tryReserveMemory [0x00007fae7c9af610] (c2)
[19,271s][debug][gc,nmethod     ] Register NMethod: java.nio.Bits.reserveMemory [0x00007fae7c9ae210] (c2)
[19,272s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.DeserializedBitmapReferencesPageTuple.getReferences [0x00007fae7c9adf10] (c1)
[19,272s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.DeserializedBitmapReferencesPageTuple.getBitmap [0x00007fae7c9adc10] (c1)
[19,272s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getIndirectDocumentIndexPageReference [0x00007fae5d53db10] (c1)
[19,286s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind$1.deserializePage [0x00007fae7cb7f710] (c2)
[19,286s][debug][gc,nmethod     ] Register NMethod: java.util.function.UnaryOperator$$Lambda/0x00007fadb41cfc98.apply [0x00007fae7c9ad890] (c2)
[19,565s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList.getShort [0x00007fae5d7f9990] (c1)
[19,926s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_LJ_V [0x00007fae5d538310] (c1)
[19,927s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.isMostRecentlyReadPage [0x00007fae7cb82390] (c2)
[20,505s][info ][gc             ] Trigger: Learning 3 of 5. Free (8592M) is below initial threshold (8601M)
[20,505s][info ][gc,ergo        ] Free: 8592M, Max: 4096K regular, 8592M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[20,506s][info ][gc,start       ] GC(8) Concurrent reset
[20,506s][info ][gc,task        ] GC(8) Using 5 of 10 workers for concurrent reset
[20,506s][info ][gc,ergo        ] GC(8) Pacer for Reset. Non-Taxable: 12288M
[20,511s][info ][gc             ] GC(8) Concurrent reset 5,413ms
[20,511s][info ][gc,start       ] GC(8) Pause Init Mark (unload classes)
[20,511s][info ][gc,task        ] GC(8) Using 10 of 10 workers for init marking
[20,511s][info ][gc,ergo        ] GC(8) Pacer for Mark. Expected Live: 345M, Free: 8512M, Non-Taxable: 851M, Alloc Tax Rate: 0,0x
[20,511s][info ][gc             ] GC(8) Pause Init Mark (unload classes) 0,197ms
[20,511s][info ][gc,start       ] GC(8) Concurrent marking roots
[20,511s][info ][gc,task        ] GC(8) Using 5 of 10 workers for concurrent marking roots
[20,512s][debug][gc,tlab        ] GC(8) TLAB totals: thrds: 18  refills: 742 max: 453 slow allocs: 0 max 0 waste:  1,1% gc: 28894896B max: 3141928B slow: 6012456B max: 728816B
[20,512s][info ][gc             ] GC(8) Concurrent marking roots 0,860ms
[20,512s][info ][gc,start       ] GC(8) Concurrent marking (unload classes)
[20,512s][info ][gc,task        ] GC(8) Using 5 of 10 workers for concurrent marking
[20,572s][info ][gc             ] GC(8) Concurrent marking (unload classes) 59,733ms
[20,572s][info ][gc,start       ] GC(8) Pause Final Mark (unload classes)
[20,572s][info ][gc,task        ] GC(8) Using 10 of 10 workers for final marking
[20,572s][info ][gc,ergo        ] GC(8) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 9852M, Max CSet: 512M, Min Garbage: 0B
[20,573s][info ][gc,ergo        ] GC(8) Collectable Garbage: 2673M (99%), Immediate: 1156M (43%), CSet: 1517M (56%)
[20,573s][info ][gc,ergo        ] GC(8) Pacer for Evacuation. Used CSet: 1995M, Free: 9236M, Non-Taxable: 923M, Alloc Tax Rate: 1,1x
[20,573s][info ][gc             ] GC(8) Pause Final Mark (unload classes) 0,396ms
[20,573s][info ][gc,start       ] GC(8) Concurrent thread roots
[20,573s][info ][gc,task        ] GC(8) Using 5 of 10 workers for Concurrent thread roots
[20,573s][info ][gc             ] GC(8) Concurrent thread roots 0,539ms
[20,573s][info ][gc,start       ] GC(8) Concurrent weak references
[20,573s][info ][gc,task        ] GC(8) Using 5 of 10 workers for concurrent weak references
[20,574s][info ][gc,ref         ] GC(8) Encountered references: Soft: 2320, Weak: 1839, Final: 4925, Phantom: 5191
[20,574s][info ][gc,ref         ] GC(8) Discovered  references: Soft: 0, Weak: 385, Final: 4924, Phantom: 5233
[20,574s][info ][gc,ref         ] GC(8) Enqueued    references: Soft: 0, Weak: 0, Final: 4923, Phantom: 4935
[20,574s][info ][gc             ] GC(8) Concurrent weak references 0,885ms
[20,574s][info ][gc,start       ] GC(8) Concurrent weak roots
[20,574s][info ][gc,task        ] GC(8) Using 5 of 10 workers for concurrent weak root
[20,575s][info ][gc             ] GC(8) Concurrent weak roots 0,515ms
[20,575s][info ][gc,start       ] GC(8) Concurrent cleanup
[20,575s][info ][gc             ] GC(8) Concurrent cleanup 3593M->2437M(5128M) 0,153ms
[20,575s][info ][gc,ergo        ] GC(8) Free: 9236M, Max: 4096K regular, 8124M humongous, Frag: 13% external, 0% internal; Reserve: 613M, Max: 4096K
[20,575s][info ][gc,start       ] GC(8) Concurrent class unloading
[20,575s][info ][gc,task        ] GC(8) Using 5 of 10 workers for concurrent class unloading
[20,575s][debug][gc,phases,start] GC(8) ClassLoaderData
[20,575s][debug][gc,phases      ] GC(8) ClassLoaderData 0,009ms
[20,575s][debug][gc,phases,start] GC(8) Trigger cleanups
[20,575s][debug][gc,phases      ] GC(8) Trigger cleanups 0,004ms
[20,576s][debug][gc,nmethod     ] GC(8) Unregister NMethod: java.nio.Bits.reserveMemory [0x00007fae5d82c110]
[20,576s][debug][gc,nmethod     ] GC(8) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.isMostRecentlyReadPage [0x00007fae5d1a4590]
[20,576s][debug][gc,nmethod     ] GC(8) Unregister NMethod: java.nio.DirectByteBuffer.<init> [0x00007fae5d7a2190]
[20,576s][debug][gc,nmethod     ] GC(8) Unregister NMethod: java.nio.Bits.tryReserveMemory [0x00007fae5d750490]
[20,576s][debug][gc,nmethod     ] GC(8) Unregister NMethod: net.openhft.chronicle.bytes.Bytes.elasticByteBuffer [0x00007fae5d7e9b90]
[20,576s][debug][gc,nmethod     ] GC(8) Unregister NMethod: java.util.function.UnaryOperator$$Lambda/0x00007fadb41cfc98.apply [0x00007fae5d7f5d10]
[20,576s][info ][gc             ] GC(8) Concurrent class unloading 1,027ms
[20,576s][info ][gc,start       ] GC(8) Concurrent strong roots
[20,576s][info ][gc,task        ] GC(8) Using 5 of 10 workers for concurrent strong root
[20,576s][info ][gc             ] GC(8) Concurrent strong roots 0,125ms
[20,576s][info ][gc,start       ] GC(8) Concurrent evacuation
[20,576s][info ][gc,task        ] GC(8) Using 5 of 10 workers for concurrent evacuation
[20,590s][debug][gc,nmethod     ] Register NMethod: java.util.HashMap.clear [0x00007fae7cb82810] (c2)
[20,592s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleReferences$Array.runtimeTypeCheck [0x00007fae5d7e9b90] (c1)
[20,593s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleReferences$Array.setRelease [0x00007fae5d546890] (c1)
[20,596s][debug][gc,nmethod     ] Register NMethod: org.magicwerk.brownies.collections.GapList.add [0x00007fae7cb82c10] (c2)
[20,596s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.loadRevRoot [0x00007fae5d305e10] (c1)
[20,597s][debug][gc,nmethod     ] Register NMethod: java.lang.Long.longValue [0x00007fae7cb83010] (c1)
[20,620s][info ][gc             ] GC(8) Concurrent evacuation 44,522ms
[20,621s][info ][gc,start       ] GC(8) Pause Init Update Refs
[20,621s][info ][gc,ergo        ] GC(8) Pacer for Update Refs. Used: 2939M, Free: 9216M, Non-Taxable: 921M, Alloc Tax Rate: 1,1x
[20,621s][info ][gc             ] GC(8) Pause Init Update Refs 0,036ms
[20,621s][info ][gc,start       ] GC(8) Concurrent update references
[20,621s][info ][gc,task        ] GC(8) Using 5 of 10 workers for concurrent reference update
[20,644s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind$1.deserializePage [0x00007fae7cb83310] (c2)
[20,654s][info ][gc             ] GC(8) Concurrent update references 33,283ms
[20,654s][info ][gc,start       ] GC(8) Concurrent update thread roots
[20,655s][info ][gc             ] GC(8) Concurrent update thread roots 0,796ms
[20,655s][info ][gc,start       ] GC(8) Pause Final Update Refs
[20,655s][info ][gc,task        ] GC(8) Using 10 of 10 workers for final reference update
[20,655s][info ][gc             ] GC(8) Pause Final Update Refs 0,102ms
[20,655s][info ][gc,start       ] GC(8) Concurrent cleanup
[20,655s][info ][gc             ] GC(8) Concurrent cleanup 2963M->968M(5128M) 0,188ms
[20,655s][debug][gc,ergo        ] GC(8) Available: 10704 MB, z-score=-1,188. Average available: 11047,3 MB +/- 289,1 MB.
[20,655s][info ][gc,ergo        ] Free: 10704M, Max: 4096K regular, 7664M humongous, Frag: 29% external, 0% internal; Reserve: 616M, Max: 4096K
[20,655s][info ][gc,stats       ] 
[20,655s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[20,655s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[20,655s][info ][gc,stats       ] 
[20,655s][info ][gc,stats       ] Concurrent Reset                   5494 us
[20,655s][info ][gc,stats       ] Pause Init Mark (G)                 424 us
[20,655s][info ][gc,stats       ] Pause Init Mark (N)                 205 us
[20,655s][info ][gc,stats       ]   Update Region States              141 us
[20,655s][info ][gc,stats       ] Concurrent Mark Roots               884 us, parallelism: 2,00x
[20,655s][info ][gc,stats       ]   CMR: <total>                     1768 us
[20,655s][info ][gc,stats       ]   CMR: Thread Roots                1696 us, workers (us): 768, 440, 487,   0,   0, ---, ---, ---, ---, ---, 
[20,655s][info ][gc,stats       ]   CMR: VM Strong Roots               10 us, workers (us):   4,   3,   2,   0,   0, ---, ---, ---, ---, ---, 
[20,655s][info ][gc,stats       ]   CMR: CLDG Roots                    63 us, workers (us): ---,  54,   9, ---, ---, ---, ---, ---, ---, ---, 
[20,655s][info ][gc,stats       ] Concurrent Marking                59777 us
[20,655s][info ][gc,stats       ] Pause Final Mark (G)                480 us
[20,655s][info ][gc,stats       ] Pause Final Mark (N)                406 us
[20,655s][info ][gc,stats       ]   Finish Mark                       252 us
[20,655s][info ][gc,stats       ]   Update Region States               19 us
[20,655s][info ][gc,stats       ]   Choose Collection Set              74 us
[20,655s][info ][gc,stats       ]   Rebuild Free Set                    9 us
[20,655s][info ][gc,stats       ] Concurrent Thread Roots             547 us, parallelism: 2,34x
[20,655s][info ][gc,stats       ]   CTR: <total>                     1279 us
[20,655s][info ][gc,stats       ]   CTR: Thread Roots                1279 us, workers (us): 521, 244, 171, 206, 138, ---, ---, ---, ---, ---, 
[20,655s][info ][gc,stats       ] Concurrent Weak References          900 us, parallelism: 1,88x
[20,655s][info ][gc,stats       ]   CWRF: <total>                    1688 us
[20,655s][info ][gc,stats       ]   CWRF: Weak References            1688 us, workers (us):  13, 613,   8, 496, 558, ---, ---, ---, ---, ---, 
[20,655s][info ][gc,stats       ] Concurrent Weak Roots               526 us
[20,656s][info ][gc,stats       ]   Roots                             478 us, parallelism: 3,60x
[20,656s][info ][gc,stats       ]     CWR: <total>                   1722 us
[20,656s][info ][gc,stats       ]     CWR: Code Cache Roots           811 us, workers (us): 161, 161, 168, 152, 169, ---, ---, ---, ---, ---, 
[20,656s][info ][gc,stats       ]     CWR: VM Weak Roots              890 us, workers (us): 274, 163, 156, 148, 149, ---, ---, ---, ---, ---, 
[20,656s][info ][gc,stats       ]     CWR: CLDG Roots                  21 us, workers (us):  10, ---, ---,  10, ---, ---, ---, ---, ---, ---, 
[20,656s][info ][gc,stats       ]   Rendezvous                         26 us
[20,656s][info ][gc,stats       ] Concurrent Cleanup                  159 us
[20,656s][info ][gc,stats       ] Concurrent Class Unloading         1033 us
[20,656s][info ][gc,stats       ]   Unlink Stale                      811 us
[20,656s][info ][gc,stats       ]     System Dictionary                22 us
[20,656s][info ][gc,stats       ]     Weak Class Links                  0 us
[20,656s][info ][gc,stats       ]     Code Roots                      787 us
[20,656s][info ][gc,stats       ]   Rendezvous                        149 us
[20,656s][info ][gc,stats       ]   Purge Unlinked                     58 us
[20,656s][info ][gc,stats       ]     Code Roots                       55 us
[20,656s][info ][gc,stats       ]     CLDG                              2 us
[20,656s][info ][gc,stats       ]     Exception Caches                  0 us
[20,656s][info ][gc,stats       ] Concurrent Strong Roots             135 us, parallelism: 1,32x
[20,656s][info ][gc,stats       ]   CSR: <total>                      178 us
[20,656s][info ][gc,stats       ]   CSR: VM Strong Roots                9 us, workers (us):   5,   4,   0,   0,   0, ---, ---, ---, ---, ---, 
[20,656s][info ][gc,stats       ]   CSR: CLDG Roots                   169 us, workers (us):  99,  70, ---, ---, ---, ---, ---, ---, ---, ---, 
[20,656s][info ][gc,stats       ] Concurrent Evacuation             44580 us
[20,656s][info ][gc,stats       ] Pause Init Update Refs (G)          278 us
[20,656s][info ][gc,stats       ] Pause Init Update Refs (N)           44 us
[20,656s][info ][gc,stats       ]   Manage GCLABs                       4 us
[20,656s][info ][gc,stats       ] Concurrent Update Refs            33327 us
[20,656s][info ][gc,stats       ] Concurrent Update Thread Roots      812 us
[20,656s][info ][gc,stats       ] Pause Final Update Refs (G)         186 us
[20,656s][info ][gc,stats       ] Pause Final Update Refs (N)         112 us
[20,656s][info ][gc,stats       ]   Update Region States               34 us
[20,656s][info ][gc,stats       ]   Trash Collection Set                4 us
[20,656s][info ][gc,stats       ]   Rebuild Free Set                   12 us
[20,656s][info ][gc,stats       ] Concurrent Cleanup                  201 us
[20,656s][info ][gc,stats       ] 
[20,656s][info ][gc,stats       ] Allocation pacing accrued:
[20,656s][info ][gc,stats       ]       0 of  1933 ms (  0,0%): <total>
[20,656s][info ][gc,stats       ]       0 of  1933 ms (  0,0%): <average total>
[20,656s][info ][gc,stats       ] 
[20,656s][info ][gc,metaspace   ] Metaspace: 19667K(20224K)->19669K(20224K) NonClass: 17241K(17536K)->17243K(17536K) Class: 2426K(2688K)->2426K(2688K)
[20,656s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[21,269s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus [0x00007fae5d1a4590] (c1)
[21,269s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.getAndBitwiseAndInt [0x00007fae5d186290] (c1)
[21,269s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.canReacquire [0x00007fae5d80eb10] (c1)
[21,279s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind.writeDelegateType [0x00007fae5d507990] (c1)
[21,296s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.stats.DisabledStatsCounter.recordHits [0x00007fae5d17a890] (c1)
[21,297s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageReference.addPageFragment [0x00007fae5d839890] (c1)
[21,297s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.execute [0x00007fae5d0c6390] (c1)
[21,297s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.poolSubmit [0x00007fae5d13b690] (c1)
[21,297s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinTask.markPoolSubmission [0x00007fae5d7f5d10] (c1)
[21,297s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SystemTicker.read [0x00007fae5d2e6310] (c1)
[21,297s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.isNotInitialized [0x00007fae5d7f9590] (c1)
[21,297s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.getAccessTime [0x00007fae5d145e90] (c1)
[21,298s][debug][gc,nmethod     ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32$1.getValue [0x00007fae7cb89c10] (c2)
[21,298s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_LI_L [0x00007fae5d0ee010] (c1)
[21,298s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared [0x00007fae5d4f4310] (c1)
[21,299s][debug][gc,nmethod     ] Register NMethod: net.jpountz.xxhash.StreamingXXHash32$1.update [0x00007fae7cb8a210] (c2)
[21,299s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType$1.deserializeBitmapReferencesPage [0x00007fae5d335410] (c1)
[21,926s][info ][gc             ] Trigger: Learning 4 of 5. Free (8596M) is below initial threshold (8601M)
[21,926s][info ][gc,ergo        ] Free: 8596M, Max: 4096K regular, 7664M humongous, Frag: 11% external, 0% internal; Reserve: 616M, Max: 4096K
[21,926s][info ][gc,start       ] GC(9) Concurrent reset
[21,926s][info ][gc,task        ] GC(9) Using 5 of 10 workers for concurrent reset
[21,926s][info ][gc,ergo        ] GC(9) Pacer for Reset. Non-Taxable: 12288M
[21,928s][info ][gc             ] GC(9) Concurrent reset 2,316ms
[21,929s][info ][gc,start       ] GC(9) Pause Init Mark (unload classes)
[21,929s][info ][gc,task        ] GC(9) Using 10 of 10 workers for init marking
[21,929s][info ][gc,ergo        ] GC(9) Pacer for Mark. Expected Live: 367M, Free: 8572M, Non-Taxable: 857M, Alloc Tax Rate: 0,1x
[21,929s][info ][gc             ] GC(9) Pause Init Mark (unload classes) 0,061ms
[21,929s][info ][gc,start       ] GC(9) Concurrent marking roots
[21,929s][info ][gc,task        ] GC(9) Using 5 of 10 workers for concurrent marking roots
[21,929s][debug][gc,tlab        ] GC(9) TLAB totals: thrds: 21  refills: 598 max: 319 slow allocs: 6 max 4 waste:  2,2% gc: 41158944B max: 4010592B slow: 5778952B max: 607096B
[21,929s][info ][gc             ] GC(9) Concurrent marking roots 0,731ms
[21,929s][info ][gc,start       ] GC(9) Concurrent marking (unload classes)
[21,929s][info ][gc,task        ] GC(9) Using 5 of 10 workers for concurrent marking
[21,947s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.interfaces.Page.commit [0x00007fae5d590f10] (c1)
[21,980s][info ][gc             ] GC(9) Concurrent marking (unload classes) 50,798ms
[21,980s][info ][gc,start       ] GC(9) Pause Final Mark (unload classes)
[21,980s][info ][gc,task        ] GC(9) Using 10 of 10 workers for final marking
[21,981s][info ][gc,ergo        ] GC(9) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 9972M, Max CSet: 512M, Min Garbage: 0B
[21,981s][info ][gc,ergo        ] GC(9) Collectable Garbage: 2578M (99%), Immediate: 1020M (39%), CSet: 1558M (60%)
[21,981s][info ][gc,ergo        ] GC(9) Pacer for Evacuation. Used CSet: 2067M, Free: 9356M, Non-Taxable: 935M, Alloc Tax Rate: 1,1x
[21,981s][info ][gc             ] GC(9) Pause Final Mark (unload classes) 0,363ms
[21,981s][info ][gc,start       ] GC(9) Concurrent thread roots
[21,981s][info ][gc,task        ] GC(9) Using 5 of 10 workers for Concurrent thread roots
[21,981s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortListIterator.next [0x00007fae7cb8a890] (c2)
[21,981s][info ][gc             ] GC(9) Concurrent thread roots 0,623ms
[21,981s][info ][gc,start       ] GC(9) Concurrent weak references
[21,981s][info ][gc,task        ] GC(9) Using 5 of 10 workers for concurrent weak references
[21,982s][info ][gc,ref         ] GC(9) Encountered references: Soft: 2320, Weak: 1839, Final: 4854, Phantom: 5224
[21,982s][info ][gc,ref         ] GC(9) Discovered  references: Soft: 0, Weak: 1157, Final: 4853, Phantom: 5257
[21,982s][info ][gc,ref         ] GC(9) Enqueued    references: Soft: 0, Weak: 0, Final: 4852, Phantom: 4862
[21,982s][info ][gc             ] GC(9) Concurrent weak references 1,182ms
[21,982s][info ][gc,start       ] GC(9) Concurrent weak roots
[21,982s][info ][gc,task        ] GC(9) Using 5 of 10 workers for concurrent weak root
[21,983s][info ][gc             ] GC(9) Concurrent weak roots 0,701ms
[21,983s][info ][gc,start       ] GC(9) Concurrent cleanup
[21,983s][info ][gc             ] GC(9) Concurrent cleanup 3337M->2317M(5128M) 0,152ms
[21,983s][info ][gc,ergo        ] GC(9) Free: 9356M, Max: 4096K regular, 8076M humongous, Frag: 14% external, 0% internal; Reserve: 613M, Max: 4096K
[21,983s][info ][gc,start       ] GC(9) Concurrent class unloading
[21,983s][info ][gc,task        ] GC(9) Using 5 of 10 workers for concurrent class unloading
[21,983s][debug][gc,phases,start] GC(9) ClassLoaderData
[21,983s][debug][gc,phases      ] GC(9) ClassLoaderData 0,010ms
[21,983s][debug][gc,phases,start] GC(9) Trigger cleanups
[21,983s][debug][gc,phases      ] GC(9) Trigger cleanups 0,004ms
[21,984s][debug][gc,nmethod     ] GC(9) Unregister NMethod: java.util.HashMap.clear [0x00007fae5d491190]
[21,984s][debug][gc,nmethod     ] GC(9) Unregister NMethod: io.sirix.page.PageKind$1.deserializePage [0x00007fae5d277790]
[21,984s][debug][gc,nmethod     ] GC(9) Unregister NMethod: org.magicwerk.brownies.collections.GapList.add [0x00007fae5d683210]
[21,984s][debug][gc,nmethod     ] GC(9) Unregister NMethod: net.jpountz.xxhash.StreamingXXHash32$1.getValue [0x00007fae5d765f10]
[21,984s][debug][gc,nmethod     ] GC(9) Unregister NMethod: net.jpountz.xxhash.StreamingXXHash32$1.update [0x00007fae5d766810]
[21,984s][info ][gc             ] GC(9) Concurrent class unloading 0,968ms
[21,984s][info ][gc,start       ] GC(9) Concurrent strong roots
[21,984s][info ][gc,task        ] GC(9) Using 5 of 10 workers for concurrent strong root
[21,985s][info ][gc             ] GC(9) Concurrent strong roots 0,207ms
[21,985s][info ][gc,start       ] GC(9) Concurrent evacuation
[21,985s][info ][gc,task        ] GC(9) Using 5 of 10 workers for concurrent evacuation
[21,988s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.postComplete [0x00007fae5d4f9c90] (c1)
[21,990s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.setCurrentThread [0x00007fae7cb8ae10] ()
[21,990s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.setScopedValueCache [0x00007fae7cb8b190] ()
[21,990s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.compareAndSetState [0x00007fae5d772e90] (c1)
[21,990s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.hashCode [0x00007fae5d839390] (c1)
[21,990s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.currentCarrierThread [0x00007fae5d683210] (c1)
[21,990s][debug][gc,nmethod     ] Register NMethod: java.lang.System$2.setContinuation [0x00007fae5d145a90] (c1)
[21,990s][debug][gc,nmethod     ] Register NMethod: java.lang.System$2.setScopedValueCache [0x00007fae5d145710] (c1)
[22,007s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Reference.processPendingReferences [0x00007fae7cb8b510] (c2)
[22,011s][debug][gc,nmethod     ] Register NMethod: java.util.HashMap.clear [0x00007fae7cb8e190] (c2)
[22,038s][info ][gc             ] GC(9) Concurrent evacuation 52,966ms
[22,038s][info ][gc,start       ] GC(9) Pause Init Update Refs
[22,038s][info ][gc,ergo        ] GC(9) Pacer for Update Refs. Used: 2879M, Free: 9320M, Non-Taxable: 932M, Alloc Tax Rate: 1,1x
[22,038s][info ][gc             ] GC(9) Pause Init Update Refs 0,030ms
[22,038s][info ][gc,start       ] GC(9) Concurrent update references
[22,038s][info ][gc,task        ] GC(9) Using 5 of 10 workers for concurrent reference update
[22,071s][info ][gc             ] GC(9) Concurrent update references 32,776ms
[22,071s][info ][gc,start       ] GC(9) Concurrent update thread roots
[22,071s][info ][gc             ] GC(9) Concurrent update thread roots 0,748ms
[22,072s][info ][gc,start       ] GC(9) Pause Final Update Refs
[22,072s][info ][gc,task        ] GC(9) Using 10 of 10 workers for final reference update
[22,072s][info ][gc             ] GC(9) Pause Final Update Refs 0,069ms
[22,072s][info ][gc,start       ] GC(9) Concurrent cleanup
[22,072s][info ][gc             ] GC(9) Concurrent cleanup 2903M->836M(5164M) 0,207ms
[22,072s][debug][gc,ergo        ] GC(9) Available: 10836 MB, z-score=-0,676. Average available: 11026,2 MB +/- 281,5 MB.
[22,072s][info ][gc,ergo        ] Free: 10836M, Max: 4096K regular, 8724M humongous, Frag: 20% external, 0% internal; Reserve: 616M, Max: 4096K
[22,072s][info ][gc,stats       ] 
[22,072s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[22,072s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[22,072s][info ][gc,stats       ] 
[22,072s][info ][gc,stats       ] Concurrent Reset                   2375 us
[22,072s][info ][gc,stats       ] Pause Init Mark (G)                 202 us
[22,072s][info ][gc,stats       ] Pause Init Mark (N)                  69 us
[22,072s][info ][gc,stats       ]   Update Region States               21 us
[22,072s][info ][gc,stats       ] Concurrent Mark Roots               752 us, parallelism: 2,28x
[22,072s][info ][gc,stats       ]   CMR: <total>                     1714 us
[22,072s][info ][gc,stats       ]   CMR: Thread Roots                1642 us, workers (us): 238, 646, 268, 290, 200, ---, ---, ---, ---, ---, 
[22,072s][info ][gc,stats       ]   CMR: VM Strong Roots                7 us, workers (us):   4,   3,   0,   0,   0, ---, ---, ---, ---, ---, 
[22,072s][info ][gc,stats       ]   CMR: CLDG Roots                    65 us, workers (us):  58,   7, ---, ---, ---, ---, ---, ---, ---, ---, 
[22,072s][info ][gc,stats       ] Concurrent Marking                50829 us
[22,072s][info ][gc,stats       ] Pause Final Mark (G)                388 us
[22,072s][info ][gc,stats       ] Pause Final Mark (N)                371 us
[22,072s][info ][gc,stats       ]   Finish Mark                       229 us
[22,072s][info ][gc,stats       ]   Update Region States               22 us
[22,072s][info ][gc,stats       ]   Choose Collection Set              73 us
[22,072s][info ][gc,stats       ]   Rebuild Free Set                   10 us
[22,072s][info ][gc,stats       ] Concurrent Thread Roots             641 us, parallelism: 1,99x
[22,072s][info ][gc,stats       ]   CTR: <total>                     1275 us
[22,072s][info ][gc,stats       ]   CTR: Thread Roots                1275 us, workers (us): 494, 222, 192, 183, 185, ---, ---, ---, ---, ---, 
[22,072s][info ][gc,stats       ] Concurrent Weak References         1190 us, parallelism: 1,80x
[22,072s][info ][gc,stats       ]   CWRF: <total>                    2147 us
[22,072s][info ][gc,stats       ]   CWRF: Weak References            2147 us, workers (us): 985,  16,  59, 316, 770, ---, ---, ---, ---, ---, 
[22,072s][info ][gc,stats       ] Concurrent Weak Roots               719 us
[22,072s][info ][gc,stats       ]   Roots                             665 us, parallelism: 2,84x
[22,072s][info ][gc,stats       ]     CWR: <total>                   1889 us
[22,072s][info ][gc,stats       ]     CWR: Code Cache Roots           954 us, workers (us): 173, 172, 231, 208, 170, ---, ---, ---, ---, ---, 
[22,072s][info ][gc,stats       ]     CWR: VM Weak Roots              924 us, workers (us): 242, 175, 176, 168, 163, ---, ---, ---, ---, ---, 
[22,072s][info ][gc,stats       ]     CWR: CLDG Roots                  11 us, workers (us): ---,   8, ---, ---,   4, ---, ---, ---, ---, ---, 
[22,072s][info ][gc,stats       ]   Rendezvous                         25 us
[22,072s][info ][gc,stats       ] Concurrent Cleanup                  159 us
[22,072s][info ][gc,stats       ] Concurrent Class Unloading          977 us
[22,072s][info ][gc,stats       ]   Unlink Stale                      853 us
[22,072s][info ][gc,stats       ]     System Dictionary                24 us
[22,072s][info ][gc,stats       ]     Weak Class Links                  0 us
[22,072s][info ][gc,stats       ]     Code Roots                      828 us
[22,072s][info ][gc,stats       ]   Rendezvous                         25 us
[22,072s][info ][gc,stats       ]   Purge Unlinked                     70 us
[22,072s][info ][gc,stats       ]     Code Roots                       68 us
[22,072s][info ][gc,stats       ]     CLDG                              2 us
[22,072s][info ][gc,stats       ]     Exception Caches                  0 us
[22,072s][info ][gc,stats       ] Concurrent Strong Roots             227 us, parallelism: 1,05x
[22,072s][info ][gc,stats       ]   CSR: <total>                      239 us
[22,072s][info ][gc,stats       ]   CSR: VM Strong Roots               12 us, workers (us):  11,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[22,072s][info ][gc,stats       ]   CSR: CLDG Roots                   227 us, workers (us): 109, 118, ---, ---, ---, ---, ---, ---, ---, ---, 
[22,072s][info ][gc,stats       ] Concurrent Evacuation             53007 us
[22,072s][info ][gc,stats       ] Pause Init Update Refs (G)          237 us
[22,072s][info ][gc,stats       ] Pause Init Update Refs (N)           37 us
[22,072s][info ][gc,stats       ]   Manage GCLABs                       3 us
[22,072s][info ][gc,stats       ] Concurrent Update Refs            32846 us
[22,072s][info ][gc,stats       ] Concurrent Update Thread Roots      777 us
[22,072s][info ][gc,stats       ] Pause Final Update Refs (G)         291 us
[22,072s][info ][gc,stats       ] Pause Final Update Refs (N)          77 us
[22,072s][info ][gc,stats       ]   Update Region States               26 us
[22,072s][info ][gc,stats       ]   Trash Collection Set                7 us
[22,072s][info ][gc,stats       ]   Rebuild Free Set                   10 us
[22,072s][info ][gc,stats       ] Concurrent Cleanup                  218 us
[22,072s][info ][gc,stats       ] 
[22,072s][info ][gc,stats       ] Allocation pacing accrued:
[22,072s][info ][gc,stats       ]       0 of  1417 ms (  0,0%): <total>
[22,072s][info ][gc,stats       ]       0 of  1417 ms (  0,0%): <average total>
[22,072s][info ][gc,stats       ] 
[22,072s][info ][gc,metaspace   ] Metaspace: 19675K(20224K)->19678K(20224K) NonClass: 17248K(17536K)->17251K(17536K) Class: 2426K(2688K)->2426K(2688K)
[22,072s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[22,629s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.casSlotToNull [0x00007fae7cb8e710] (c2)
[22,667s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.shorts.AbstractShortList.iterator [0x00007fae7cb8ea10] (c2)
[22,672s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.putLongVolatile [0x00007fae7cb8ee10] ()
[22,672s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType$1.deserializeReferencesPage4 [0x00007fae5d520010] (c1)
[22,673s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7cb8f190] ()
[22,673s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_LJJ_Z [0x00007fae5d569610] (c1)
[23,316s][info ][gc             ] Trigger: Learning 5 of 5. Free (8580M) is below initial threshold (8601M)
[23,316s][info ][gc,ergo        ] Free: 8580M, Max: 4096K regular, 8580M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[23,316s][info ][gc,start       ] GC(10) Concurrent reset
[23,316s][info ][gc,task        ] GC(10) Using 5 of 10 workers for concurrent reset
[23,316s][info ][gc,ergo        ] GC(10) Pacer for Reset. Non-Taxable: 12288M
[23,319s][info ][gc             ] GC(10) Concurrent reset 2,506ms
[23,319s][info ][gc,start       ] GC(10) Pause Init Mark (unload classes)
[23,319s][info ][gc,task        ] GC(10) Using 10 of 10 workers for init marking
[23,319s][info ][gc,ergo        ] GC(10) Pacer for Mark. Expected Live: 428M, Free: 8564M, Non-Taxable: 856M, Alloc Tax Rate: 0,1x
[23,319s][info ][gc             ] GC(10) Pause Init Mark (unload classes) 0,172ms
[23,319s][info ][gc,start       ] GC(10) Concurrent marking roots
[23,319s][info ][gc,task        ] GC(10) Using 5 of 10 workers for concurrent marking roots
[23,319s][debug][gc,tlab        ] GC(10) TLAB totals: thrds: 21  refills: 608 max: 328 slow allocs: 1 max 1 waste:  2,0% gc: 38739496B max: 4051552B slow: 5038344B max: 644304B
[23,320s][info ][gc             ] GC(10) Concurrent marking roots 0,802ms
[23,320s][info ][gc,start       ] GC(10) Concurrent marking (unload classes)
[23,320s][info ][gc,task        ] GC(10) Using 5 of 10 workers for concurrent marking
[23,339s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.managedBlock [0x00007fae5d5c0710] (c1)
[23,340s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.unmanagedBlock [0x00007fae5d13ae90] (c1)
[23,360s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.TimeUnit.toNanos [0x00007fae5d5c0010] (c1)
[23,361s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread$ThreadIdentifiers.next [0x00007fae5d37b710] (c1)
[23,361s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.getContextClassLoader [0x00007fae5d4f3b10] (c1)
[23,361s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinTask.signalWaiters [0x00007fae5d65ac10] (c1)
[23,363s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processNumber [0x00007fae5d0c5a90] (c1)
[23,380s][info ][gc             ] GC(10) Concurrent marking (unload classes) 59,959ms
[23,380s][info ][gc,start       ] GC(10) Pause Final Mark (unload classes)
[23,380s][info ][gc,task        ] GC(10) Using 10 of 10 workers for final marking
[23,380s][info ][gc,ergo        ] GC(10) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10136M, Max CSet: 512M, Min Garbage: 0B
[23,380s][info ][gc,ergo        ] GC(10) Collectable Garbage: 2545M (99%), Immediate: 1060M (41%), CSet: 1485M (58%)
[23,380s][info ][gc,ergo        ] GC(10) Pacer for Evacuation. Used CSet: 1995M, Free: 9520M, Non-Taxable: 952M, Alloc Tax Rate: 1,1x
[23,380s][info ][gc             ] GC(10) Pause Final Mark (unload classes) 0,302ms
[23,381s][info ][gc,start       ] GC(10) Concurrent thread roots
[23,381s][info ][gc,task        ] GC(10) Using 5 of 10 workers for Concurrent thread roots
[23,381s][info ][gc             ] GC(10) Concurrent thread roots 0,506ms
[23,381s][info ][gc,start       ] GC(10) Concurrent weak references
[23,381s][info ][gc,task        ] GC(10) Using 5 of 10 workers for concurrent weak references
[23,382s][info ][gc,ref         ] GC(10) Encountered references: Soft: 2320, Weak: 1837, Final: 4784, Phantom: 5154
[23,382s][info ][gc,ref         ] GC(10) Discovered  references: Soft: 0, Weak: 968, Final: 4784, Phantom: 5061
[23,382s][info ][gc,ref         ] GC(10) Enqueued    references: Soft: 0, Weak: 0, Final: 4783, Phantom: 4799
[23,382s][info ][gc             ] GC(10) Concurrent weak references 1,243ms
[23,382s][info ][gc,start       ] GC(10) Concurrent weak roots
[23,382s][info ][gc,task        ] GC(10) Using 5 of 10 workers for concurrent weak root
[23,383s][info ][gc             ] GC(10) Concurrent weak roots 0,581ms
[23,383s][info ][gc,start       ] GC(10) Concurrent cleanup
[23,383s][info ][gc             ] GC(10) Concurrent cleanup 3217M->2157M(5164M) 0,171ms
[23,383s][info ][gc,ergo        ] GC(10) Free: 9516M, Max: 4096K regular, 8900M humongous, Frag: 7% external, 0% internal; Reserve: 613M, Max: 4096K
[23,383s][info ][gc,start       ] GC(10) Concurrent class unloading
[23,383s][info ][gc,task        ] GC(10) Using 5 of 10 workers for concurrent class unloading
[23,383s][debug][gc,phases,start] GC(10) ClassLoaderData
[23,383s][debug][gc,phases      ] GC(10) ClassLoaderData 0,010ms
[23,383s][debug][gc,phases,start] GC(10) Trigger cleanups
[23,383s][debug][gc,phases      ] GC(10) Trigger cleanups 0,006ms
[23,384s][debug][gc,nmethod     ] GC(10) Unregister NMethod: it.unimi.dsi.fastutil.shorts.AbstractShortList.iterator [0x00007fae5d6a4b10]
[23,384s][debug][gc,nmethod     ] GC(10) Unregister NMethod: it.unimi.dsi.fastutil.shorts.ShortListIterator.next [0x00007fae5d6a3310]
[23,384s][debug][gc,nmethod     ] GC(10) Unregister NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.casSlotToNull [0x00007fae5d1c6390]
[23,384s][debug][gc,nmethod     ] GC(10) Unregister NMethod: java.lang.ref.Reference.processPendingReferences [0x00007fae5d804090]
[23,384s][debug][gc,nmethod     ] GC(10) Unregister NMethod: java.util.HashMap.clear [0x00007fae5d5adc10]
[23,384s][debug][gc,nmethod     ] GC(10) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processNumber [0x00007fae7c9d5290]
[23,384s][info ][gc             ] GC(10) Concurrent class unloading 1,135ms
[23,384s][info ][gc,start       ] GC(10) Concurrent strong roots
[23,384s][info ][gc,task        ] GC(10) Using 5 of 10 workers for concurrent strong root
[23,384s][info ][gc             ] GC(10) Concurrent strong roots 0,158ms
[23,384s][info ][gc,start       ] GC(10) Concurrent evacuation
[23,384s][info ][gc,task        ] GC(10) Using 5 of 10 workers for concurrent evacuation
[23,413s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Reference.processPendingReferences [0x00007fae7c9d6510] (c2)
[23,425s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processNumber [0x00007fae7cb8f710] (c2)
[23,436s][info ][gc             ] GC(10) Concurrent evacuation 51,746ms
[23,436s][info ][gc,start       ] GC(10) Pause Init Update Refs
[23,436s][info ][gc,ergo        ] GC(10) Pacer for Update Refs. Used: 2719M, Free: 9480M, Non-Taxable: 948M, Alloc Tax Rate: 1,1x
[23,436s][info ][gc             ] GC(10) Pause Init Update Refs 0,028ms
[23,436s][info ][gc,start       ] GC(10) Concurrent update references
[23,436s][info ][gc,task        ] GC(10) Using 5 of 10 workers for concurrent reference update
[23,471s][info ][gc             ] GC(10) Concurrent update references 34,626ms
[23,471s][info ][gc,start       ] GC(10) Concurrent update thread roots
[23,472s][info ][gc             ] GC(10) Concurrent update thread roots 0,897ms
[23,472s][info ][gc,start       ] GC(10) Pause Final Update Refs
[23,472s][info ][gc,task        ] GC(10) Using 10 of 10 workers for final reference update
[23,472s][info ][gc             ] GC(10) Pause Final Update Refs 0,073ms
[23,472s][info ][gc,start       ] GC(10) Concurrent cleanup
[23,472s][info ][gc             ] GC(10) Concurrent cleanup 2743M->747M(5176M) 0,167ms
[23,472s][debug][gc,ergo        ] GC(10) Available: 10924 MB, z-score=-0,494. Average available: 11051,7 MB +/- 258,6 MB.
[23,472s][info ][gc,ergo        ] Free: 10924M, Max: 4096K regular, 8456M humongous, Frag: 23% external, 0% internal; Reserve: 616M, Max: 4096K
[23,472s][info ][gc,stats       ] 
[23,472s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[23,472s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[23,472s][info ][gc,stats       ] 
[23,472s][info ][gc,stats       ] Concurrent Reset                   2578 us
[23,472s][info ][gc,stats       ] Pause Init Mark (G)                 373 us
[23,472s][info ][gc,stats       ] Pause Init Mark (N)                 182 us
[23,472s][info ][gc,stats       ]   Update Region States              121 us
[23,472s][info ][gc,stats       ] Concurrent Mark Roots               818 us, parallelism: 1,99x
[23,472s][info ][gc,stats       ]   CMR: <total>                     1630 us
[23,472s][info ][gc,stats       ]   CMR: Thread Roots                1556 us, workers (us): 316, 693, 412, 135,   0, ---, ---, ---, ---, ---, 
[23,472s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   4,   4,   0,   0,   0, ---, ---, ---, ---, ---, 
[23,472s][info ][gc,stats       ]   CMR: CLDG Roots                    66 us, workers (us):  60, ---,   6, ---, ---, ---, ---, ---, ---, ---, 
[23,473s][info ][gc,stats       ] Concurrent Marking                59998 us
[23,473s][info ][gc,stats       ] Pause Final Mark (G)                471 us
[23,473s][info ][gc,stats       ] Pause Final Mark (N)                311 us
[23,473s][info ][gc,stats       ]   Finish Mark                       187 us
[23,473s][info ][gc,stats       ]   Update Region States               15 us
[23,473s][info ][gc,stats       ]   Choose Collection Set              52 us
[23,473s][info ][gc,stats       ]   Rebuild Free Set                    9 us
[23,473s][info ][gc,stats       ] Concurrent Thread Roots             525 us, parallelism: 2,31x
[23,473s][info ][gc,stats       ]   CTR: <total>                     1209 us
[23,473s][info ][gc,stats       ]   CTR: Thread Roots                1209 us, workers (us): 434, 242, 208, 205, 119, ---, ---, ---, ---, ---, 
[23,473s][info ][gc,stats       ] Concurrent Weak References         1255 us, parallelism: 1,61x
[23,473s][info ][gc,stats       ]   CWRF: <total>                    2021 us
[23,473s][info ][gc,stats       ]   CWRF: Weak References            2021 us, workers (us):  58, 609, 943, 410,   1, ---, ---, ---, ---, ---, 
[23,473s][info ][gc,stats       ] Concurrent Weak Roots               591 us
[23,473s][info ][gc,stats       ]   Roots                             544 us, parallelism: 3,40x
[23,473s][info ][gc,stats       ]     CWR: <total>                   1850 us
[23,473s][info ][gc,stats       ]     CWR: Code Cache Roots           915 us, workers (us): 202, 165, 159, 164, 225, ---, ---, ---, ---, ---, 
[23,473s][info ][gc,stats       ]     CWR: VM Weak Roots              920 us, workers (us): 284, 262, 125, 124, 125, ---, ---, ---, ---, ---, 
[23,473s][info ][gc,stats       ]     CWR: CLDG Roots                  15 us, workers (us): ---,   7, ---,   8, ---, ---, ---, ---, ---, ---, 
[23,473s][info ][gc,stats       ]   Rendezvous                         23 us
[23,473s][info ][gc,stats       ] Concurrent Cleanup                  179 us
[23,473s][info ][gc,stats       ] Concurrent Class Unloading         1143 us
[23,473s][info ][gc,stats       ]   Unlink Stale                      951 us
[23,473s][info ][gc,stats       ]     System Dictionary                28 us
[23,473s][info ][gc,stats       ]     Weak Class Links                  0 us
[23,473s][info ][gc,stats       ]     Code Roots                      922 us
[23,473s][info ][gc,stats       ]   Rendezvous                         88 us
[23,473s][info ][gc,stats       ]   Purge Unlinked                     83 us
[23,473s][info ][gc,stats       ]     Code Roots                       81 us
[23,473s][info ][gc,stats       ]     CLDG                              2 us
[23,473s][info ][gc,stats       ]     Exception Caches                  0 us
[23,473s][info ][gc,stats       ] Concurrent Strong Roots             186 us, parallelism: 0,98x
[23,473s][info ][gc,stats       ]   CSR: <total>                      182 us
[23,473s][info ][gc,stats       ]   CSR: VM Strong Roots               10 us, workers (us):   6,   3,   0,   0,   0, ---, ---, ---, ---, ---, 
[23,473s][info ][gc,stats       ]   CSR: CLDG Roots                   173 us, workers (us):  71, 101, ---, ---, ---, ---, ---, ---, ---, ---, 
[23,473s][info ][gc,stats       ] Concurrent Evacuation             51799 us
[23,473s][info ][gc,stats       ] Pause Init Update Refs (G)          262 us
[23,473s][info ][gc,stats       ] Pause Init Update Refs (N)           37 us
[23,473s][info ][gc,stats       ]   Manage GCLABs                       3 us
[23,473s][info ][gc,stats       ] Concurrent Update Refs            34672 us
[23,473s][info ][gc,stats       ] Concurrent Update Thread Roots      919 us
[23,473s][info ][gc,stats       ] Pause Final Update Refs (G)         174 us
[23,473s][info ][gc,stats       ] Pause Final Update Refs (N)          82 us
[23,473s][info ][gc,stats       ]   Update Region States               29 us
[23,473s][info ][gc,stats       ]   Trash Collection Set                4 us
[23,473s][info ][gc,stats       ]   Rebuild Free Set                   13 us
[23,473s][info ][gc,stats       ] Concurrent Cleanup                  175 us
[23,473s][info ][gc,stats       ] 
[23,473s][info ][gc,stats       ] Allocation pacing accrued:
[23,473s][info ][gc,stats       ]       0 of  1400 ms (  0,0%): <total>
[23,473s][info ][gc,stats       ]       0 of  1400 ms (  0,0%): <average total>
[23,473s][info ][gc,stats       ] 
[23,473s][info ][gc,metaspace   ] Metaspace: 19679K(20224K)->19683K(20224K) NonClass: 17252K(17536K)->17256K(17536K) Class: 2426K(2688K)->2426K(2688K)
[23,473s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[24,057s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.LockSupport.setBlocker [0x00007fae5d1c6390] (c1)
[24,709s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.bytepipe.LZ4Compressor.<init> [0x00007fae5d5adf90] (c1)
[24,710s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.UberPage.isBootstrap [0x00007fae7c9d6210] (c1)
[24,710s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2LongOpenHashMap.<init> [0x00007fae5d804490] (c1)
[24,711s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.AbstractInt2LongMap.<init> [0x00007fae5d65a510] (c1)
[24,711s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.TransactionIntentLog.get [0x00007fae7c9d5b90] (c2)
[24,711s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.AbstractInt2LongFunction.<init> [0x00007fae5d804090] (c1)
[24,711s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap.<init> [0x00007fae5d6a1510] (c1)
[24,711s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelStorage.getDataFilePath [0x00007fae5d6e3090] (c1)
[24,712s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.Semaphore.tryAcquire [0x00007fae5d6a0f10] (c1)
[24,712s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos [0x00007fae5d702210] (c1)
[24,712s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.Semaphore$NonfairSync.tryAcquireShared [0x00007fae5d5adc10] (c1)
[24,713s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelStorage.createDirectoriesAndFile [0x00007fae5d50c510] (c1)
[24,713s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.RevisionRootPageReader.getNamePage [0x00007fae5d6a3310] (c1)
[24,713s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$AsyncSupply.<init> [0x00007fae5d6a4b10] (c1)
[24,713s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelStorage.getRevisionFilePath [0x00007fae5d72bf90] (c1)
[24,713s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.whenComplete [0x00007fae5d590b90] (c1)
[24,713s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinTask.compareAndSetForkJoinTaskTag [0x00007fae5d6e2b90] (c1)
[24,713s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinTask.casStatus [0x00007fae5d6e2810] (c1)
[24,713s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.AbstractInt2IntMap.<init> [0x00007fae5d590710] (c1)
[24,713s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.completeValue [0x00007fae5d128090] (c1)
[24,713s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.AbstractInt2IntFunction.<init> [0x00007fae5d127c90] (c1)
[24,722s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4BlockInputStream.refill [0x00007fae7cb90e90] (c2)
[24,722s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.Bytes.elasticByteBuffer [0x00007fae7c9d5890] (c2)
[25,365s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap.size [0x00007fae7c9d5590] (c1)
[25,365s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2LongOpenHashMap.size [0x00007fae7c9d5290] (c1)
[25,365s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$UniCompletion.claim [0x00007fae5d72b710] (c1)
[25,365s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire [0x00007fae5d491190] (c1)
[25,365s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.internalComplete [0x00007fae5d58c410] (c1)
[25,370s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.close [0x00007fae5d716290] (c1)
[25,371s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.statsCounter [0x00007fae5d58bf90] (c1)
[25,371s][debug][gc,nmethod     ] Register NMethod: java.lang.System$2.start [0x00007fae5d701d90] (c1)
[25,371s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.inheritScopedValueBindings [0x00007fae5d6b1690] (c1)
[25,371s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.getNextInAccessOrder [0x00007fae5d701890] (c1)
[25,371s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PS.getKey [0x00007fae5d576410] (c1)
[25,372s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.increment [0x00007fae5d6b0810] (c1)
[25,372s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$AsyncSupply.run [0x00007fae5d75d810] (c1)
[25,372s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AccessOrderDeque.contains [0x00007fae5d7ee410] (c1)
[25,372s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AccessOrderDeque.contains [0x00007fae5d7edd90] (c1)
[25,372s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType$1.deserializeFullReferencesPage [0x00007fae5d0d1f10] (c1)
[25,372s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadLocal.createInheritedMap [0x00007fae5d7ed910] (c1)
[25,373s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.getIfPresent [0x00007fae5d754390] (c1)
[25,374s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.isEqualJava9 [0x00007fae7cb93b10] (c2)
[25,381s][debug][gc,nmethod     ] Register NMethod: java.util.HashMap.resize [0x00007fae7cb94210] (c2)
[25,386s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.readStopBit0 [0x00007fae7cb95410] (c2)
[25,990s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind$1.serializePage [0x00007fae5d71c010] (c1)
[26,060s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.ReentrantLock.lockInterruptibly [0x00007fae5d7f2f10] (c1)
[26,061s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.ReentrantLock$Sync.lockInterruptibly [0x00007fae5d7f2690] (c1)
[26,089s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind$1.serializePage [0x00007fae7cb96a10] (c2)
[26,091s][debug][gc,nmethod     ] Register NMethod: java.util.stream.AbstractPipeline.<init> [0x00007fae7cba5a10] (c2)
[26,091s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.LocalAsyncCache$CacheView.asyncCache [0x00007fae7cba6090] (c1)
[26,091s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.RevisionFileData.offset [0x00007fae7cba6390] (c1)
[26,091s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.BitmapReferencesPage.getBitmap [0x00007fae5d575e90] (c1)
[26,092s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.StreamingDataInput.readBoolean [0x00007fae5d0ffd90] (c1)
[26,092s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.BytesUtil.byteToBoolean [0x00007fae5d753f90] (c1)
[26,092s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.RandomDataInput.readUnsignedByte [0x00007fae5d7f2290] (c1)
[26,092s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2LongOpenHashMap.<init> [0x00007fae5d0ff990] (c1)
[26,092s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap.<init> [0x00007fae5d0ff590] (c1)
[26,092s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind$4.deserializePage [0x00007fae5d280e90] (c1)
[26,092s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.BitmapReferencesPage.getOrCreateReference [0x00007fae5d0fec90] (c1)
[26,093s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.BitmapReferencesPage.index [0x00007fae5d280290] (c1)
[26,093s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AbstractLinkedDeque.linkLast [0x00007fae5d719110] (c1)
[26,093s][debug][gc,nmethod     ] Register NMethod: java.lang.InheritableThreadLocal.childValue [0x00007fae5d4e9490] (c1)
[26,093s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMSA.expiresAfterAccessNanos [0x00007fae7cba6690] (c1)
[26,093s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.accessOrderWindowDeque [0x00007fae7cba6990] (c1)
[26,093s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap.find [0x00007fae7cba6c90] (c2)
[26,095s][debug][gc,nmethod     ] Register NMethod: java.util.BitSet.clear [0x00007fae7cba7190] (c2)
[26,095s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType$1.deserializeFullReferencesPage [0x00007fae5d597890] (c1)
[26,095s][debug][gc,nmethod     ] Register NMethod: org.magicwerk.brownies.collections.IList.checkIndexAdd [0x00007fae7cba7590] (c2)
[26,095s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap$KeySetView.add [0x00007fae5d718810] (c1)
[26,096s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertNewContent [0x00007fae5d0f3510] (c1)
[26,097s][debug][gc,nmethod     ] Register NMethod: io.sirix.utils.IntToObjectMap.prvtPut [0x00007fae7cba7910] (c2)
[26,108s][debug][gc,nmethod     ] Register NMethod: com.google.gson.stream.JsonReader.push [0x00007fae7cba8090] (c2)
[26,112s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processTrxMovement [0x00007fae7cba8490] (c2)
[26,128s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertNewContent [0x00007fae7cba9710] (c2)
[26,129s][debug][gc,nmethod     ] Register NMethod: com.google.gson.stream.JsonReader.beginArray [0x00007fae7cbacd90] (c2)
[26,130s][debug][gc,nmethod     ] Register NMethod: com.google.gson.stream.JsonReader.endArray [0x00007fae7cbad310] (c2)
[26,131s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processBeginArray [0x00007fae7cbad710] (c2)
[26,521s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.BitmapReferencesPage.index [0x00007fae7cbade90] (c2)
[26,601s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.BitmapReferencesPage.getOrCreateReference [0x00007fae7cbaf990] (c2)
[26,951s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ArrayBlockingQueue.enqueue [0x00007fae5d69a490] (c1)
[26,952s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ArrayBlockingQueue.take [0x00007fae5d53fd90] (c1)
[26,952s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ArrayBlockingQueue.dequeue [0x00007fae5d842810] (c1)
[26,961s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.OS.pageSize [0x00007fae5d699e90] (c1)
[26,961s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.copyToDirect [0x00007fae5d842090] (c1)
[26,962s][debug][gc,nmethod     ] Register NMethod: sun.misc.Unsafe.copyMemory [0x00007fae5d699890] (c1)
[26,962s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.copyMemory [0x00007fae5d841c90] (c1)
[26,962s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.NativeBytes.alignToPageSize [0x00007fae5d7a3410] (c1)
[26,962s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.copyMemory [0x00007fae5d7a2e10] (c1)
[26,962s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.io.BackgroundResourceReleaser.performRelease [0x00007fae5d73de10] (c1)
[26,994s][debug][gc,nmethod     ] Register NMethod: java.lang.StringBuilder.append [0x00007fae7cbb0e90] (c2)
[26,995s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap.sumCount [0x00007fae7cbb1b90] (c2)
[27,848s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.addressForWrite [0x00007fae5d7a2590] (c1)
[27,848s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.memoryCopyMemory [0x00007fae5d7c3910] (c1)
[27,849s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.FullReferencesPage.commit [0x00007fae7cbb1e90] (c2)
[27,887s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.ensureMaterializedForStackWalk [0x00007fae7cbb2410] ()
[27,887s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.runWith [0x00007fae5d7a1e90] (c1)
[27,888s][debug][gc,nmethod     ] Register NMethod: java.io.ByteArrayInputStream.close [0x00007fae7cbb2790] (c2)
[27,889s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractResourceSession.assertAccess [0x00007fae5d0ea390] (c1)
[27,889s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.scopedValueBindings [0x00007fae5d0e9f90] (c1)
[27,889s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.screenExecutor [0x00007fae5d0e9a90] (c1)
[27,889s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathNode.hashCode [0x00007fae7cbb2a90] (c2)
[27,890s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap$KeySetView.remove [0x00007fae5d7c3410] (c1)
[27,890s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.readLong [0x00007fae5d7c2f90] (c1)
[27,890s][debug][gc,nmethod     ] Register NMethod: sun.misc.Unsafe.getLong [0x00007fae5d7c2b90] (c1)
[27,890s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.getLong [0x00007fae5d4f0610] (c1)
[27,892s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.normalizeAndCheck [0x00007fae7cbb3090] (c2)
[27,951s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$13.deserialize [0x00007fae7cbb3710] (c2)
[28,744s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.shorts.AbstractShortList.iterator [0x00007fae5d4efe10] (c1)
[28,763s][debug][gc,nmethod     ] Register NMethod: java.util.stream.StreamOpFlag.fromCharacteristics [0x00007fae7cbc0a10] (c2)
[28,763s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.BitmapReferencesPage.<init> [0x00007fae5d808590] (c1)
[28,764s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.<init> [0x00007fae5d4ef190] (c1)
[28,765s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelStorage.createReader [0x00007fae5d60e910] (c1)
[28,765s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.ContinuationSupport.isSupported [0x00007fae5d4e9b10] (c1)
[28,765s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx$$Lambda/0x00007fadb429aae8.apply [0x00007fae5d4eec10] (c1)
[28,766s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.readPage [0x00007fae5d55f290] (c1)
[28,766s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite.setOpaque [0x00007fae5d58ea90] (c1)
[28,766s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.run [0x00007fae5d6cd610] (c1)
[28,766s][debug][gc,nmethod     ] Register NMethod: java.util.LinkedHashMap.<init> [0x00007fae5d58e610] (c1)
[28,787s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.pathsummary.LevelOrderSettingInMemoryInstancesAxis.nextNode [0x00007fae7cbc0d10] (c2)
[28,789s][debug][gc,nmethod     ] Register NMethod: java.util.stream.StreamSupport.stream [0x00007fae7cbc6090] (c2)
[29,650s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.FullReferencesPage.commit [0x00007fae7cbc6690] (c2)
[29,670s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.size [0x00007fae5d58e010] (c1)
[29,671s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.peekUnsignedByte [0x00007fae7cbc6c10] (c2)
[29,673s][debug][gc,nmethod     ] Register NMethod: java.util.stream.Sink$ChainedReference.begin [0x00007fae7cbc7210] (c2)
[30,265s][info ][gc             ] Trigger: Free (1228M) is below minimum threshold (1228M)
[30,265s][info ][gc,ergo        ] Free: 1228M, Max: 4096K regular, 1228M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[30,265s][info ][gc,start       ] GC(11) Concurrent reset
[30,265s][info ][gc,task        ] GC(11) Using 5 of 10 workers for concurrent reset
[30,265s][info ][gc,ergo        ] GC(11) Pacer for Reset. Non-Taxable: 12288M
[30,269s][info ][gc             ] GC(11) Concurrent reset 3,920ms
[30,270s][info ][gc,start       ] GC(11) Pause Init Mark (unload classes)
[30,270s][info ][gc,task        ] GC(11) Using 10 of 10 workers for init marking
[30,270s][info ][gc,ergo        ] GC(11) Pacer for Mark. Expected Live: 433M, Free: 1228M, Non-Taxable: 122M, Alloc Tax Rate: 0,4x
[30,270s][info ][gc             ] GC(11) Pause Init Mark (unload classes) 0,098ms
[30,270s][info ][gc,start       ] GC(11) Concurrent marking roots
[30,270s][info ][gc,task        ] GC(11) Using 5 of 10 workers for concurrent marking roots
[30,270s][debug][gc,tlab        ] GC(11) TLAB totals: thrds: 20  refills: 1405 max: 1386 slow allocs: 0 max 0 waste:  0,7% gc: 38559760B max: 3932872B slow: 2332728B max: 2332728B
[30,270s][info ][gc             ] GC(11) Concurrent marking roots 0,700ms
[30,270s][info ][gc,start       ] GC(11) Concurrent marking (unload classes)
[30,270s][info ][gc,task        ] GC(11) Using 5 of 10 workers for concurrent marking
[30,303s][info ][gc             ] GC(11) Concurrent marking (unload classes) 32,579ms
[30,303s][info ][gc,start       ] GC(11) Pause Final Mark (unload classes)
[30,303s][info ][gc,task        ] GC(11) Using 10 of 10 workers for final marking
[30,303s][info ][gc,ergo        ] GC(11) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 7020M, Max CSet: 512M, Min Garbage: 0B
[30,303s][info ][gc,ergo        ] GC(11) Collectable Garbage: 10071M (99%), Immediate: 5200M (51%), CSet: 4871M (48%)
[30,304s][info ][gc,ergo        ] GC(11) Pacer for Evacuation. Used CSet: 5234M, Free: 6404M, Non-Taxable: 640M, Alloc Tax Rate: 2,0x
[30,304s][info ][gc             ] GC(11) Pause Final Mark (unload classes) 0,404ms
[30,304s][info ][gc,start       ] GC(11) Concurrent thread roots
[30,304s][info ][gc,task        ] GC(11) Using 5 of 10 workers for Concurrent thread roots
[30,305s][info ][gc             ] GC(11) Concurrent thread roots 1,510ms
[30,305s][info ][gc,start       ] GC(11) Concurrent weak references
[30,305s][info ][gc,task        ] GC(11) Using 5 of 10 workers for concurrent weak references
[30,308s][info ][gc,ref         ] GC(11) Encountered references: Soft: 2320, Weak: 1839, Final: 16987, Phantom: 16700
[30,308s][info ][gc,ref         ] GC(11) Discovered  references: Soft: 0, Weak: 386, Final: 16987, Phantom: 17407
[30,308s][info ][gc,ref         ] GC(11) Enqueued    references: Soft: 0, Weak: 0, Final: 16987, Phantom: 17033
[30,308s][info ][gc             ] GC(11) Concurrent weak references 3,224ms
[30,308s][info ][gc,start       ] GC(11) Concurrent weak roots
[30,308s][info ][gc,task        ] GC(11) Using 5 of 10 workers for concurrent weak root
[30,309s][info ][gc             ] GC(11) Concurrent weak roots 0,678ms
[30,309s][info ][gc,start       ] GC(11) Concurrent cleanup
[30,309s][info ][gc             ] GC(11) Concurrent cleanup 10474M->5274M(10576M) 0,132ms
[30,309s][info ][gc,ergo        ] GC(11) Free: 6400M, Max: 4096K regular, 1672M humongous, Frag: 74% external, 0% internal; Reserve: 612M, Max: 4096K
[30,309s][info ][gc,start       ] GC(11) Concurrent class unloading
[30,309s][info ][gc,task        ] GC(11) Using 5 of 10 workers for concurrent class unloading
[30,309s][debug][gc,phases,start] GC(11) ClassLoaderData
[30,309s][debug][gc,phases      ] GC(11) ClassLoaderData 0,014ms
[30,309s][debug][gc,phases,start] GC(11) Trigger cleanups
[30,309s][debug][gc,phases      ] GC(11) Trigger cleanups 0,007ms
[30,310s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Finalizer$FinalizerThread.run [0x00007fae5d6e9610] (c1)
[30,310s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Finalizer$FinalizerThread.run [0x00007fae5d6e8c90] (c1)
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.page.delegates.BitmapReferencesPage.index [0x00007fae7ca2ef10]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processNumber [0x00007fae5d0c5a90]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: java.io.ByteArrayInputStream.close [0x00007fae5d2c8b10]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.page.delegates.FullReferencesPage.commit [0x00007fae5d17ab90]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.page.delegates.FullReferencesPage.commit [0x00007fae5d2b7b90]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.page.delegates.BitmapReferencesPage.getOrCreateReference [0x00007fae7caca010]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.page.PageKind$1.serializePage [0x00007fae7cb1b690]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertNewContent [0x00007fae5d0f3510]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.axis.pathsummary.LevelOrderSettingInMemoryInstancesAxis.nextNode [0x00007fae5d6aa410]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.page.delegates.BitmapReferencesPage.index [0x00007fae5d280290]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.page.delegates.BitmapReferencesPage.getOrCreateReference [0x00007fae5d0fec90]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: org.magicwerk.brownies.collections.IList.checkIndexAdd [0x00007fae5d683790]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.readStopBit0 [0x00007fae5d4eab90]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.node.NodeKind$13.deserialize [0x00007fae5d6deb90]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.page.PageKind$1.serializePage [0x00007fae5d71c010]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.index.path.summary.PathNode.hashCode [0x00007fae5d80a590]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.cache.TransactionIntentLog.get [0x00007fae5d680010]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertNewContent [0x00007fae7c9eb010]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.peekUnsignedByte [0x00007fae5d129d10]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: java.lang.StringBuilder.append [0x00007fae5d7e7610]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.sumCount [0x00007fae5d6d2210]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: java.util.BitSet.clear [0x00007fae5d530f10]
[30,310s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processBeginArray [0x00007fae5d662310]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: com.google.gson.stream.JsonReader.beginArray [0x00007fae5d661210]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: com.google.gson.stream.JsonReader.endArray [0x00007fae5d65c490]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap.find [0x00007fae5d58f510]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.utils.IntToObjectMap.prvtPut [0x00007fae5d60ab90]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processTrxMovement [0x00007fae5d5ee410]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: com.google.gson.stream.JsonReader.push [0x00007fae5d5eb590]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: java.util.stream.Sink$ChainedReference.begin [0x00007fae5d394990]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: java.util.stream.StreamSupport.stream [0x00007fae5d38cb10]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: java.util.stream.StreamOpFlag.fromCharacteristics [0x00007fae5d38b890]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: net.jpountz.lz4.LZ4BlockInputStream.refill [0x00007fae5d6db610]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: java.util.stream.AbstractPipeline.<init> [0x00007fae5d385490]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: sun.nio.fs.UnixPath.normalizeAndCheck [0x00007fae5d16e610]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: net.openhft.chronicle.bytes.Bytes.elasticByteBuffer [0x00007fae5d73fe10]
[30,311s][debug][gc,nmethod     ] GC(11) Unregister NMethod: java.util.HashMap.resize [0x00007fae5d137e10]
[30,311s][info ][gc             ] GC(11) Concurrent class unloading 1,447ms
[30,311s][info ][gc,start       ] GC(11) Concurrent strong roots
[30,311s][info ][gc,task        ] GC(11) Using 5 of 10 workers for concurrent strong root
[30,311s][info ][gc             ] GC(11) Concurrent strong roots 0,220ms
[30,311s][info ][gc,start       ] GC(11) Concurrent evacuation
[30,311s][info ][gc,task        ] GC(11) Using 5 of 10 workers for concurrent evacuation
[30,319s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Reference.enqueueFromPending [0x00007fae7c9eed90] (c2)
[30,350s][info ][gc             ] GC(11) Concurrent evacuation 38,856ms
[30,350s][info ][gc,start       ] GC(11) Pause Init Update Refs
[30,350s][info ][gc,ergo        ] GC(11) Pacer for Update Refs. Used: 5670M, Free: 6372M, Non-Taxable: 637M, Alloc Tax Rate: 1,1x
[30,350s][info ][gc             ] GC(11) Pause Init Update Refs 0,041ms
[30,350s][info ][gc,start       ] GC(11) Concurrent update references
[30,350s][info ][gc,task        ] GC(11) Using 5 of 10 workers for concurrent reference update
[30,379s][info ][gc             ] GC(11) Concurrent update references 29,293ms
[30,379s][info ][gc,start       ] GC(11) Concurrent update thread roots
[30,380s][info ][gc             ] GC(11) Concurrent update thread roots 0,828ms
[30,380s][info ][gc,start       ] GC(11) Pause Final Update Refs
[30,380s][info ][gc,task        ] GC(11) Using 10 of 10 workers for final reference update
[30,381s][info ][gc             ] GC(11) Pause Final Update Refs 0,232ms
[30,381s][info ][gc,start       ] GC(11) Concurrent cleanup
[30,381s][info ][gc             ] GC(11) Concurrent cleanup 5690M->456M(10576M) 0,157ms
[30,381s][debug][gc,ergo        ] GC(11) Available: 11216 MB, z-score=0,498. Average available: 11091,6 MB +/- 250,0 MB.
[30,381s][info ][gc,ergo        ] Free: 11216M, Max: 4096K regular, 9860M humongous, Frag: 13% external, 0% internal; Reserve: 616M, Max: 4096K
[30,381s][info ][gc,stats       ] 
[30,381s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[30,381s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[30,381s][info ][gc,stats       ] 
[30,381s][info ][gc,stats       ] Concurrent Reset                   3964 us
[30,381s][info ][gc,stats       ] Pause Init Mark (G)                 271 us
[30,381s][info ][gc,stats       ] Pause Init Mark (N)                 115 us
[30,381s][info ][gc,stats       ]   Update Region States               21 us
[30,381s][info ][gc,stats       ] Concurrent Mark Roots               719 us, parallelism: 1,88x
[30,381s][info ][gc,stats       ]   CMR: <total>                     1352 us
[30,381s][info ][gc,stats       ]   CMR: Thread Roots                1284 us, workers (us): 184, 238, 492, 191, 179, ---, ---, ---, ---, ---, 
[30,381s][info ][gc,stats       ]   CMR: VM Strong Roots                7 us, workers (us):   6,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[30,381s][info ][gc,stats       ]   CMR: CLDG Roots                    60 us, workers (us):  56,   4, ---, ---, ---, ---, ---, ---, ---, ---, 
[30,381s][info ][gc,stats       ] Concurrent Marking                32625 us
[30,381s][info ][gc,stats       ] Pause Final Mark (G)                522 us
[30,381s][info ][gc,stats       ] Pause Final Mark (N)                413 us
[30,381s][info ][gc,stats       ]   Finish Mark                       205 us
[30,381s][info ][gc,stats       ]   Update Region States               22 us
[30,381s][info ][gc,stats       ]   Choose Collection Set             121 us
[30,381s][info ][gc,stats       ]   Rebuild Free Set                    9 us
[30,381s][info ][gc,stats       ] Concurrent Thread Roots            1537 us, parallelism: 3,56x
[30,381s][info ][gc,stats       ]   CTR: <total>                     5476 us
[30,381s][info ][gc,stats       ]   CTR: Thread Roots                5476 us, workers (us): 1434, 1045, 1013, 1011, 974, ---, ---, ---, ---, ---, 
[30,381s][info ][gc,stats       ] Concurrent Weak References         3236 us, parallelism: 2,03x
[30,381s][info ][gc,stats       ]   CWRF: <total>                    6567 us
[30,381s][info ][gc,stats       ]   CWRF: Weak References            6567 us, workers (us): 3097, 1662, 640, 1164,   4, ---, ---, ---, ---, ---, 
[30,381s][info ][gc,stats       ] Concurrent Weak Roots               702 us
[30,381s][info ][gc,stats       ]   Roots                             567 us, parallelism: 3,31x
[30,381s][info ][gc,stats       ]     CWR: <total>                   1876 us
[30,381s][info ][gc,stats       ]     CWR: Code Cache Roots           935 us, workers (us): 162, 170, 187, 242, 173, ---, ---, ---, ---, ---, 
[30,381s][info ][gc,stats       ]     CWR: VM Weak Roots              930 us, workers (us): 240, 237, 174, 168, 111, ---, ---, ---, ---, ---, 
[30,381s][info ][gc,stats       ]     CWR: CLDG Roots                  11 us, workers (us):   6, ---, ---, ---,   4, ---, ---, ---, ---, ---, 
[30,381s][info ][gc,stats       ]   Rendezvous                         92 us
[30,381s][info ][gc,stats       ] Concurrent Cleanup                  144 us
[30,381s][info ][gc,stats       ] Concurrent Class Unloading         1459 us
[30,381s][info ][gc,stats       ]   Unlink Stale                      922 us
[30,381s][info ][gc,stats       ]     System Dictionary                37 us
[30,381s][info ][gc,stats       ]     Weak Class Links                  0 us
[30,381s][info ][gc,stats       ]     Code Roots                      885 us
[30,381s][info ][gc,stats       ]   Rendezvous                         17 us
[30,381s][info ][gc,stats       ]   Purge Unlinked                    491 us
[30,381s][info ][gc,stats       ]     Code Roots                      486 us
[30,381s][info ][gc,stats       ]     CLDG                              4 us
[30,381s][info ][gc,stats       ]     Exception Caches                  0 us
[30,381s][info ][gc,stats       ] Concurrent Strong Roots             234 us, parallelism: 1,29x
[30,381s][info ][gc,stats       ]   CSR: <total>                      301 us
[30,381s][info ][gc,stats       ]   CSR: VM Strong Roots               11 us, workers (us):  10,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[30,381s][info ][gc,stats       ]   CSR: CLDG Roots                   290 us, workers (us): 159, 131, ---, ---, ---, ---, ---, ---, ---, ---, 
[30,381s][info ][gc,stats       ] Concurrent Evacuation             38905 us
[30,381s][info ][gc,stats       ] Pause Init Update Refs (G)          320 us
[30,381s][info ][gc,stats       ] Pause Init Update Refs (N)           50 us
[30,381s][info ][gc,stats       ]   Manage GCLABs                       3 us
[30,381s][info ][gc,stats       ] Concurrent Update Refs            29344 us
[30,381s][info ][gc,stats       ] Concurrent Update Thread Roots      853 us
[30,381s][info ][gc,stats       ] Pause Final Update Refs (G)         432 us
[30,381s][info ][gc,stats       ] Pause Final Update Refs (N)         251 us
[30,381s][info ][gc,stats       ]   Update Region States              158 us
[30,381s][info ][gc,stats       ]   Trash Collection Set               26 us
[30,381s][info ][gc,stats       ]   Rebuild Free Set                   15 us
[30,381s][info ][gc,stats       ] Concurrent Cleanup                  174 us
[30,381s][info ][gc,stats       ] 
[30,381s][info ][gc,stats       ] Allocation pacing accrued:
[30,381s][info ][gc,stats       ]       0 of  6909 ms (  0,0%): <total>
[30,381s][info ][gc,stats       ]       0 of  6909 ms (  0,0%): <average total>
[30,381s][info ][gc,stats       ] 
[30,381s][info ][gc,metaspace   ] Metaspace: 19723K(20224K)->19723K(20224K) NonClass: 17296K(17536K)->17297K(17536K) Class: 2426K(2688K)->2426K(2688K)
[30,382s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[30,462s][debug][gc,nmethod     ] Register NMethod: java.lang.Long.formatUnsignedLong0 [0x00007fae5d38b890] (c1)
[30,468s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.isEqual [0x00007fae5d38cb10] (c1)
[30,470s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.isEqualJava9 [0x00007fae7cacad90] (c2)
[30,471s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.charAt [0x00007fae7caca910] (c2)
[31,153s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.BitmapReferencesPage.<init> [0x00007fae5d58d790] (c1)
[31,155s][debug][gc,nmethod     ] Register NMethod: java.util.stream.AbstractPipeline.sourceSpliterator [0x00007fae7caca410] (c2)
[31,156s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readSkip [0x00007fae7ca2fc10] (c2)
[31,810s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinTask.doExec [0x00007fae7c9ebb90] (c2)
[31,818s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PathSummaryPage.delegate [0x00007fae7caca010] (c1)
[31,821s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.setAccessTime [0x00007fae5d280290] (c1)
[31,821s][debug][gc,nmethod     ] Register NMethod: io.brackit.query.atomic.QNm.hashCode [0x00007fae7c9eb010] (c2)
[31,821s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processBoolean [0x00007fae5d58f510] (c1)
[31,821s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.StripedBuffer.offer [0x00007fae5d385490] (c1)
[31,822s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.getId [0x00007fae5d73fe10] (c1)
[31,822s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.StripedBuffer.mix64 [0x00007fae5d7e7610] (c1)
[31,822s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef.shouldDrainBuffers [0x00007fae5d65c490] (c1)
[31,822s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.refreshIfNeeded [0x00007fae5d394990] (c1)
[31,835s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType$1.deserializeFullReferencesPage [0x00007fae7cb29690] (c2)
[31,858s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.processBoolean [0x00007fae7cb25c90] (c2)
[31,869s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertBooleanValue [0x00007fae7cb22790] (c2)
[31,876s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertBooleanValueAsRightSibling [0x00007fae7cb20490] (c2)
[32,486s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType$1.serializeReferencesPage4 [0x00007fae5d138310] (c1)
[32,491s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayList.clear [0x00007fae7ca2f810] (c2)
[32,492s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedBuffer$RingBuffer.offer [0x00007fae5d67b110] (c1)
[32,493s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BBHeader$ReadAndWriteCounterRef.casWriteCounter [0x00007fae5d683b10] (c1)
[32,493s][debug][gc,nmethod     ] Register NMethod: java.util.TimSort.binarySort [0x00007fae5d6df090] (c1)
[32,493s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite.weakCompareAndSet [0x00007fae5d6e8210] (c1)
[32,493s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleReferences$Array.getAcquire [0x00007fae5d4eab90] (c1)
[32,493s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$$Lambda/0x00007fadb41bd3c8.accept [0x00007fae5d129d10] (c1)
[32,494s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.onAccess [0x00007fae5d0f5710] (c1)
[32,494s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.Node.inWindow [0x00007fae5d137e10] (c1)
[32,494s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap.put [0x00007fae7cb1fa90] (c2)
[32,494s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx$$Lambda/0x00007fadb429b810.apply [0x00007fae5d0c5a90] (c1)
[32,495s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.delegates.NameNodeDelegate.<init> [0x00007fae7ca2f490] (c2)
[32,495s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind.getKind [0x00007fae7cb1f190] (c2)
[32,496s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathNode.<init> [0x00007fae7cb1ea90] (c2)
[32,499s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.delegates.NodeDelegate.hashCode [0x00007fae7cb1de90] (c2)
[32,499s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.delegates.NameNodeDelegate.hashCode [0x00007fae7cb1d490] (c2)
[32,501s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2LongOpenHashMap.put [0x00007fae7cb1ca90] (c2)
[33,131s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.nextLocalTask [0x00007fae7ca2ef10] (c2)
[33,161s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AccessOrderDeque.getPrevious [0x00007fae5d680010] (c1)
[33,161s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AccessOrderDeque.getPrevious [0x00007fae5d6deb90] (c1)
[33,161s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AccessOrderDeque.getNext [0x00007fae5d17ab90] (c1)
[33,161s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AccessOrderDeque.getNext [0x00007fae5d80a990] (c1)
[33,162s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.RevisionRootPageCache.get [0x00007fae5d0fec90] (c1)
[33,162s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.BufferManagerImpl.getRecordPageCache [0x00007fae7cb1c790] (c1)
[33,163s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.compareAndSetBoolean [0x00007fae5d60af10] (c1)
[33,163s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.compareAndSetByte [0x00007fae5d80a590] (c1)
[33,163s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.compareAndExchangeByte [0x00007fae5d2b7f10] (c1)
[33,163s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.pathsummary.AbstractAxis.next [0x00007fae7cb1bf10] (c2)
[33,166s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.push [0x00007fae7cbc7690] (c2)
[33,837s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind$4.serializePage [0x00007fae5d0f4410] (c1)
[33,856s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageTrx$IndexLogKeyToPageContainer.<init> [0x00007fae5d0f3f10] (c1)
[33,856s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.maximum [0x00007fae7cb1bc10] (c1)
[33,856s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.maximum [0x00007fae7cb1b690] (c1)
[33,857s][debug][gc,nmethod     ] Register NMethod: io.sirix.settings.VersioningType$4.getRevisionRoots [0x00007fae5d6ef690] (c1)
[33,857s][debug][gc,nmethod     ] Register NMethod: io.sirix.settings.VersioningType$4.convertIntegers [0x00007fae5d0f3510] (c1)
[33,858s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getPageFragments [0x00007fae5d54f910] (c1)
[33,858s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageReference.hashCode [0x00007fae5d5da990] (c1)
[33,858s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadLocal.getCarrierThreadLocal [0x00007fae7cbc8190] (c2)
[33,858s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.NamePage.delegate [0x00007fae7cbc8890] (c1)
[33,859s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertNumberValue [0x00007fae5d592410] (c1)
[33,861s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.util.StringUtils.isEqual [0x00007fae7cbc8b90] (c2)
[33,887s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredder.insertNumberValue [0x00007fae7cbc9390] (c2)
[34,524s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue.modifiedCalcElementOffset [0x00007fae5d2c8b10] (c1)
[34,524s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expireAfterAccessEntries [0x00007fae5d6eea90] (c1)
[34,524s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.weightedSize [0x00007fae7cbca710] (c1)
[34,524s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.accessOrderProbationDeque [0x00007fae7cbcaa10] (c1)
[34,524s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.weightedSize [0x00007fae7cbcad10] (c1)
[34,524s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.accessOrderProbationDeque [0x00007fae7cbcb010] (c1)
[34,577s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.readUtf8 [0x00007fae7cbcb310] (c2)
[34,593s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType$1.deserializeFullReferencesPage [0x00007fae7cbd2c10] (c2)
[34,600s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.scoped.ScopedThreadLocal.get [0x00007fae7cbd6110] (c2)
[35,196s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayList.clear [0x00007fae7cbd7a10] (c2)
[35,199s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap.put [0x00007fae7cbd7f90] (c2)
[35,835s][info ][gc             ] Trigger: Explicit GC request (System.gc())
[35,835s][info ][gc,ergo        ] Free: 1484M, Max: 4096K regular, 1356M humongous, Frag: 9% external, 0% internal; Reserve: 616M, Max: 4096K
[35,835s][info ][gc,start       ] GC(12) Concurrent reset
[35,835s][info ][gc,task        ] GC(12) Using 5 of 10 workers for concurrent reset
[35,835s][info ][gc,ergo        ] GC(12) Pacer for Reset. Non-Taxable: 12288M
[35,839s][info ][gc             ] GC(12) Concurrent reset 4,066ms
[35,840s][info ][gc,start       ] GC(12) Pause Init Mark (unload classes)
[35,840s][info ][gc,task        ] GC(12) Using 10 of 10 workers for init marking
[35,840s][info ][gc,ref         ] GC(12) Clearing All SoftReferences
[35,840s][info ][gc,ergo        ] GC(12) Pacer for Mark. Expected Live: 398M, Free: 1484M, Non-Taxable: 148M, Alloc Tax Rate: 0,3x
[35,840s][info ][gc             ] GC(12) Pause Init Mark (unload classes) 0,081ms
[35,840s][info ][gc,start       ] GC(12) Concurrent marking roots
[35,840s][info ][gc,task        ] GC(12) Using 5 of 10 workers for concurrent marking roots
[35,840s][debug][gc,tlab        ] GC(12) TLAB totals: thrds: 1  refills: 6 max: 6 slow allocs: 0 max 0 waste:  4,5% gc: 1135680B max: 1135680B slow: 3000B max: 3000B
[35,840s][info ][gc             ] GC(12) Concurrent marking roots 0,686ms
[35,840s][info ][gc,start       ] GC(12) Concurrent marking (unload classes)
[35,840s][info ][gc,task        ] GC(12) Using 5 of 10 workers for concurrent marking
[35,888s][info ][gc             ] GC(12) Concurrent marking (unload classes) 47,169ms
[35,888s][info ][gc,start       ] GC(12) Pause Final Mark (unload classes)
[35,888s][info ][gc,task        ] GC(12) Using 10 of 10 workers for final marking
[35,888s][info ][gc,ergo        ] GC(12) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 6676M, Max CSet: 512M, Min Garbage: 0B
[35,888s][info ][gc,ergo        ] GC(12) Collectable Garbage: 9661M (99%), Immediate: 4576M (47%), CSet: 5085M (52%)
[35,888s][info ][gc,ergo        ] GC(12) Pacer for Evacuation. Used CSet: 5596M, Free: 6060M, Non-Taxable: 606M, Alloc Tax Rate: 2,3x
[35,888s][info ][gc             ] GC(12) Pause Final Mark (unload classes) 0,541ms
[35,888s][info ][gc,start       ] GC(12) Concurrent thread roots
[35,888s][info ][gc,task        ] GC(12) Using 5 of 10 workers for Concurrent thread roots
[35,889s][info ][gc             ] GC(12) Concurrent thread roots 0,667ms
[35,889s][info ][gc,start       ] GC(12) Concurrent weak references
[35,889s][info ][gc,task        ] GC(12) Using 5 of 10 workers for concurrent weak references
[35,893s][info ][gc,ref         ] GC(12) Encountered references: Soft: 2320, Weak: 1839, Final: 18252, Phantom: 17826
[35,893s][info ][gc,ref         ] GC(12) Discovered  references: Soft: 1040, Weak: 297, Final: 18252, Phantom: 18565
[35,893s][info ][gc,ref         ] GC(12) Enqueued    references: Soft: 0, Weak: 0, Final: 18252, Phantom: 18299
[35,893s][info ][gc             ] GC(12) Concurrent weak references 3,954ms
[35,893s][info ][gc,start       ] GC(12) Concurrent weak roots
[35,893s][info ][gc,task        ] GC(12) Using 5 of 10 workers for concurrent weak root
[35,894s][info ][gc             ] GC(12) Concurrent weak roots 0,807ms
[35,894s][info ][gc,start       ] GC(12) Concurrent cleanup
[35,894s][info ][gc             ] GC(12) Concurrent cleanup 10191M->5615M(10576M) 0,120ms
[35,894s][info ][gc,ergo        ] GC(12) Free: 6060M, Max: 4096K regular, 1860M humongous, Frag: 70% external, 0% internal; Reserve: 612M, Max: 4096K
[35,894s][info ][gc,start       ] GC(12) Concurrent class unloading
[35,894s][info ][gc,task        ] GC(12) Using 5 of 10 workers for concurrent class unloading
[35,894s][debug][gc,phases,start] GC(12) ClassLoaderData
[35,894s][debug][gc,phases      ] GC(12) ClassLoaderData 0,012ms
[35,894s][debug][gc,phases,start] GC(12) Trigger cleanups
[35,894s][debug][gc,phases      ] GC(12) Trigger cleanups 0,007ms
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.push [0x00007fae5d832c10]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertNumberValue [0x00007fae5d592410]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertBooleanValueAsRightSibling [0x00007fae5d657e10]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertBooleanValue [0x00007fae5d654b10]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: java.util.ArrayList.clear [0x00007fae5d7f4310]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: java.lang.ref.Reference.processPendingReferences [0x00007fae5d7e2c10]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processBoolean [0x00007fae5d58f510]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.nextLocalTask [0x00007fae5d838590]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.axis.pathsummary.AbstractAxis.next [0x00007fae5d66bd10]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.readUtf8 [0x00007fae5d534b10]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: net.openhft.chronicle.core.scoped.ScopedThreadLocal.get [0x00007fae5d2b3f90]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.node.delegates.NodeDelegate.hashCode [0x00007fae5d80b510]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.index.path.summary.PathNode.<init> [0x00007fae5d80d810]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap.put [0x00007fae5d15d190]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.node.delegates.NameNodeDelegate.hashCode [0x00007fae5d80c390]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processBoolean [0x00007fae7c9e7690]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.page.SerializationType$1.deserializeFullReferencesPage [0x00007fae5d597890]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: net.openhft.chronicle.core.util.StringUtils.isEqual [0x00007fae5d109e10]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: net.openhft.chronicle.core.util.StringUtils.isEqual [0x00007fae5d71b190]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: net.openhft.chronicle.core.util.StringUtils.charAt [0x00007fae5d525490]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertNumberValue [0x00007fae7c9db810]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.brackit.query.atomic.QNm.hashCode [0x00007fae5d60b490]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.page.SerializationType$1.deserializeFullReferencesPage [0x00007fae5d0d1f10]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.readSkip [0x00007fae5d811110]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: java.util.concurrent.ForkJoinTask.doExec [0x00007fae5d835d90]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.node.delegates.NameNodeDelegate.<init> [0x00007fae5d80ae10]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: io.sirix.node.NodeKind.getKind [0x00007fae5d7f8a10]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap.put [0x00007fae5d595a10]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: java.util.stream.AbstractPipeline.sourceSpliterator [0x00007fae5d392f90]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: it.unimi.dsi.fastutil.ints.Int2LongOpenHashMap.put [0x00007fae5d55e090]
[35,895s][debug][gc,nmethod     ] GC(12) Unregister NMethod: java.lang.ThreadLocal.getCarrierThreadLocal [0x00007fae5d728b10]
[35,895s][info ][gc             ] GC(12) Concurrent class unloading 1,325ms
[35,895s][info ][gc,start       ] GC(12) Concurrent strong roots
[35,895s][info ][gc,task        ] GC(12) Using 5 of 10 workers for concurrent strong root
[35,895s][info ][gc             ] GC(12) Concurrent strong roots 0,172ms
[35,895s][info ][gc,start       ] GC(12) Concurrent evacuation
[35,895s][info ][gc,task        ] GC(12) Using 5 of 10 workers for concurrent evacuation
[35,944s][info ][gc             ] GC(12) Concurrent evacuation 48,398ms
[35,944s][info ][gc,start       ] GC(12) Pause Init Update Refs
[35,944s][info ][gc,ergo        ] GC(12) Pacer for Update Refs. Used: 6136M, Free: 6060M, Non-Taxable: 606M, Alloc Tax Rate: 1,2x
[35,944s][info ][gc             ] GC(12) Pause Init Update Refs 0,050ms
[35,944s][info ][gc,start       ] GC(12) Concurrent update references
[35,944s][info ][gc,task        ] GC(12) Using 5 of 10 workers for concurrent reference update
[35,980s][info ][gc             ] GC(12) Concurrent update references 36,185ms
[35,980s][info ][gc,start       ] GC(12) Concurrent update thread roots
[35,982s][info ][gc             ] GC(12) Concurrent update thread roots 1,874ms
[35,982s][info ][gc,start       ] GC(12) Pause Final Update Refs
[35,982s][info ][gc,task        ] GC(12) Using 10 of 10 workers for final reference update
[35,983s][info ][gc             ] GC(12) Pause Final Update Refs 0,290ms
[35,983s][info ][gc,start       ] GC(12) Concurrent cleanup
[35,983s][info ][gc             ] GC(12) Concurrent cleanup 6136M->540M(10576M) 0,170ms
[35,983s][debug][gc,ergo        ] GC(12) Available: 11132 MB, z-score=0,069. Average available: 11115,4 MB +/- 241,2 MB.
[35,983s][info ][gc,ergo        ] Free: 11132M, Max: 4096K regular, 9060M humongous, Frag: 19% external, 0% internal; Reserve: 616M, Max: 4096K
[35,983s][info ][gc,stats       ] 
[35,983s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[35,983s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[35,983s][info ][gc,stats       ] 
[35,983s][info ][gc,stats       ] Concurrent Reset                   4106 us
[35,983s][info ][gc,stats       ] Pause Init Mark (G)                 137 us
[35,983s][info ][gc,stats       ] Pause Init Mark (N)                  93 us
[35,983s][info ][gc,stats       ]   Update Region States               14 us
[35,983s][info ][gc,stats       ] Concurrent Mark Roots               714 us, parallelism: 1,92x
[35,983s][info ][gc,stats       ]   CMR: <total>                     1368 us
[35,983s][info ][gc,stats       ]   CMR: Thread Roots                1301 us, workers (us): 264, 225, 553, 259,   0, ---, ---, ---, ---, ---, 
[35,983s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   3,   3,   2,   0,   0, ---, ---, ---, ---, ---, 
[35,983s][info ][gc,stats       ]   CMR: CLDG Roots                    58 us, workers (us):   8,  49, ---, ---, ---, ---, ---, ---, ---, ---, 
[35,983s][info ][gc,stats       ] Concurrent Marking                47222 us
[35,983s][info ][gc,stats       ] Pause Final Mark (G)                665 us
[35,983s][info ][gc,stats       ] Pause Final Mark (N)                555 us
[35,983s][info ][gc,stats       ]   Finish Mark                       212 us
[35,983s][info ][gc,stats       ]   Update Region States               19 us
[35,983s][info ][gc,stats       ]   Choose Collection Set             232 us
[35,983s][info ][gc,stats       ]   Rebuild Free Set                   12 us
[35,983s][info ][gc,stats       ] Concurrent Thread Roots             692 us, parallelism: 2,10x
[35,983s][info ][gc,stats       ]   CTR: <total>                     1452 us
[35,983s][info ][gc,stats       ]   CTR: Thread Roots                1452 us, workers (us): 562, 247, 200, 201, 242, ---, ---, ---, ---, ---, 
[35,983s][info ][gc,stats       ] Concurrent Weak References         3966 us, parallelism: 1,85x
[35,983s][info ][gc,stats       ]   CWRF: <total>                    7343 us
[35,983s][info ][gc,stats       ]   CWRF: Weak References            7343 us, workers (us): 1832, 3664, 1480, 335,  32, ---, ---, ---, ---, ---, 
[35,983s][info ][gc,stats       ] Concurrent Weak Roots               831 us
[35,983s][info ][gc,stats       ]   Roots                             582 us, parallelism: 3,12x
[35,983s][info ][gc,stats       ]     CWR: <total>                   1816 us
[35,983s][info ][gc,stats       ]     CWR: Code Cache Roots           945 us, workers (us): 166, 207, 231, 167, 173, ---, ---, ---, ---, ---, 
[35,983s][info ][gc,stats       ]     CWR: VM Weak Roots              861 us, workers (us): 213, 186, 185, 152, 125, ---, ---, ---, ---, ---, 
[35,983s][info ][gc,stats       ]     CWR: CLDG Roots                  11 us, workers (us): ---, ---, ---,   5,   5, ---, ---, ---, ---, ---, 
[35,983s][info ][gc,stats       ]   Rendezvous                        207 us
[35,983s][info ][gc,stats       ] Concurrent Cleanup                  133 us
[35,983s][info ][gc,stats       ] Concurrent Class Unloading         1337 us
[35,983s][info ][gc,stats       ]   Unlink Stale                      731 us
[35,983s][info ][gc,stats       ]     System Dictionary                34 us
[35,983s][info ][gc,stats       ]     Weak Class Links                  0 us
[35,983s][info ][gc,stats       ]     Code Roots                      695 us
[35,983s][info ][gc,stats       ]   Rendezvous                        152 us
[35,983s][info ][gc,stats       ]   Purge Unlinked                    427 us
[35,983s][info ][gc,stats       ]     Code Roots                      423 us
[35,983s][info ][gc,stats       ]     CLDG                              4 us
[35,983s][info ][gc,stats       ]     Exception Caches                  0 us
[35,983s][info ][gc,stats       ] Concurrent Strong Roots             185 us, parallelism: 1,26x
[35,983s][info ][gc,stats       ]   CSR: <total>                      232 us
[35,983s][info ][gc,stats       ]   CSR: VM Strong Roots               11 us, workers (us):   9,   2,   0,   0,   0, ---, ---, ---, ---, ---, 
[35,983s][info ][gc,stats       ]   CSR: CLDG Roots                   221 us, workers (us): 103, 117, ---, ---, ---, ---, ---, ---, ---, ---, 
[35,983s][info ][gc,stats       ] Concurrent Evacuation             48452 us
[35,983s][info ][gc,stats       ] Pause Init Update Refs (G)          184 us
[35,983s][info ][gc,stats       ] Pause Init Update Refs (N)           62 us
[35,983s][info ][gc,stats       ]   Manage GCLABs                       4 us
[35,983s][info ][gc,stats       ] Concurrent Update Refs            36242 us
[35,983s][info ][gc,stats       ] Concurrent Update Thread Roots     1913 us
[35,983s][info ][gc,stats       ] Pause Final Update Refs (G)         469 us
[35,983s][info ][gc,stats       ] Pause Final Update Refs (N)         333 us
[35,983s][info ][gc,stats       ]   Update Region States              171 us
[35,983s][info ][gc,stats       ]   Trash Collection Set               41 us
[35,983s][info ][gc,stats       ]   Rebuild Free Set                   17 us
[35,983s][info ][gc,stats       ] Concurrent Cleanup                  186 us
[35,983s][info ][gc,stats       ] 
[35,983s][info ][gc,stats       ] Allocation pacing accrued:
[35,983s][info ][gc,stats       ]       0 of  5602 ms (  0,0%): <total>
[35,983s][info ][gc,stats       ]       0 of  5602 ms (  0,0%): <average total>
[35,983s][info ][gc,stats       ] 
[35,984s][info ][gc,metaspace   ] Metaspace: 19727K(20224K)->19727K(20224K) NonClass: 17301K(17536K)->17301K(17536K) Class: 2426K(2688K)->2426K(2688K)
[35,984s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[35,984s][info ][gc,start       ] Concurrent uncommit
[36,047s][debug][gc,nmethod     ] Register NMethod: net.jpountz.util.SafeUtils.checkRange [0x00007fae7c9de910] (c2)
[36,048s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayList.toArray [0x00007fae5d7f4010] (c1)
[36,049s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.HashEntryNode.getKind [0x00007fae7c9de610] (c2)
[36,049s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.bytepipe.LZ4Compressor.getInstance [0x00007fae5d60b490] (c1)
[36,049s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.Semaphore$Sync.nonfairTryAcquireShared [0x00007fae5d66bd10] (c1)
[36,049s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.RevisionRootPageReader.<init> [0x00007fae5d2b7b90] (c1)
[36,050s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.<init> [0x00007fae5d7ef690] (c1)
[36,050s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.RevisionRootPageReader.loadRevisionRootPage [0x00007fae5d7f8d90] (c1)
[36,055s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.asyncSupplyStage [0x00007fae5d835a90] (c1)
[36,055s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.uniWhenCompleteStage [0x00007fae5d393610] (c1)
[36,055s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.skipReadBuffer [0x00007fae5d15d190] (c1)
[36,055s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$UniWhenComplete.<init> [0x00007fae5d392f90] (c1)
[36,056s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelReader.close [0x00007fae5d4ee590] (c1)
[36,057s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.uniWhenComplete [0x00007fae5d597890] (c1)
[36,059s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$BiRelay.tryFire [0x00007fae5d799110] (c1)
[36,107s][info ][gc             ] Concurrent uncommit 580M->804M(5120M) 123,496ms
[36,702s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.<init> [0x00007fae5d60ab90] (c1)
[36,740s][debug][gc,nmethod     ] Register NMethod: java.util.HashMap.newHashMap [0x00007fae5d2b3f90] (c1)
[36,740s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.Invokers.checkCustomized [0x00007fae7c9de290] (c2)
[36,741s][debug][gc,nmethod     ] Register NMethod: java.util.HashSet.<init> [0x00007fae7c9ddf10] (c2)
[36,745s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$31.deserialize [0x00007fae7c9dd310] (c2)
[37,368s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.helpComplete [0x00007fae5d832c10] (c1)
[37,369s][info ][gc             ] Trigger: Learning 2 of 5. Free (8600M) is below initial threshold (8601M)
[37,369s][info ][gc,ergo        ] Free: 8600M, Max: 4096K regular, 6552M humongous, Frag: 24% external, 0% internal; Reserve: 616M, Max: 4096K
[37,369s][info ][gc,start       ] GC(13) Concurrent reset
[37,369s][info ][gc,task        ] GC(13) Using 5 of 10 workers for concurrent reset
[37,369s][info ][gc,ergo        ] GC(13) Pacer for Reset. Non-Taxable: 12288M
[37,371s][info ][gc             ] GC(13) Concurrent reset 2,251ms
[37,371s][info ][gc,start       ] GC(13) Pause Init Mark (unload classes)
[37,371s][info ][gc,task        ] GC(13) Using 10 of 10 workers for init marking
[37,371s][info ][gc,ergo        ] GC(13) Pacer for Mark. Expected Live: 489M, Free: 8596M, Non-Taxable: 859M, Alloc Tax Rate: 0,1x
[37,371s][info ][gc             ] GC(13) Pause Init Mark (unload classes) 0,092ms
[37,371s][info ][gc,start       ] GC(13) Concurrent marking roots
[37,371s][info ][gc,task        ] GC(13) Using 5 of 10 workers for concurrent marking roots
[37,371s][debug][gc,tlab        ] GC(13) TLAB totals: thrds: 1  refills: 339 max: 339 slow allocs: 0 max 0 waste:  0,2% gc: 2436360B max: 2436360B slow: 906360B max: 906360B
[37,372s][info ][gc             ] GC(13) Concurrent marking roots 0,628ms
[37,372s][info ][gc,start       ] GC(13) Concurrent marking (unload classes)
[37,372s][info ][gc,task        ] GC(13) Using 5 of 10 workers for concurrent marking
[37,403s][debug][gc,nmethod     ] Register NMethod: org.magicwerk.brownies.collections.IList$Iter.hasNext [0x00007fae7c9dcf10] (c2)
[37,412s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.contextClassLoader [0x00007fae5d58f810] (c1)
[37,413s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$32.deserialize [0x00007fae7c9dc490] (c2)
[37,423s][info ][gc             ] GC(13) Concurrent marking (unload classes) 51,524ms
[37,424s][info ][gc,start       ] GC(13) Pause Final Mark (unload classes)
[37,424s][info ][gc,task        ] GC(13) Using 10 of 10 workers for final marking
[37,424s][info ][gc,ergo        ] GC(13) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10280M, Max CSet: 512M, Min Garbage: 0B
[37,424s][info ][gc,ergo        ] GC(13) Collectable Garbage: 2516M (99%), Immediate: 1104M (43%), CSet: 1412M (55%)
[37,424s][info ][gc,ergo        ] GC(13) Pacer for Evacuation. Used CSet: 1924M, Free: 9664M, Non-Taxable: 966M, Alloc Tax Rate: 1,1x
[37,424s][info ][gc             ] GC(13) Pause Final Mark (unload classes) 0,324ms
[37,424s][info ][gc,start       ] GC(13) Concurrent thread roots
[37,424s][info ][gc,task        ] GC(13) Using 5 of 10 workers for Concurrent thread roots
[37,426s][info ][gc             ] GC(13) Concurrent thread roots 1,849ms
[37,426s][info ][gc,start       ] GC(13) Concurrent weak references
[37,426s][info ][gc,task        ] GC(13) Using 5 of 10 workers for concurrent weak references
[37,427s][info ][gc,ref         ] GC(13) Encountered references: Soft: 2320, Weak: 1839, Final: 4824, Phantom: 5190
[37,427s][info ][gc,ref         ] GC(13) Discovered  references: Soft: 0, Weak: 395, Final: 4824, Phantom: 5065
[37,427s][info ][gc,ref         ] GC(13) Enqueued    references: Soft: 0, Weak: 0, Final: 4824, Phantom: 4833
[37,427s][info ][gc             ] GC(13) Concurrent weak references 1,092ms
[37,427s][info ][gc,start       ] GC(13) Concurrent weak roots
[37,427s][info ][gc,task        ] GC(13) Using 5 of 10 workers for concurrent weak root
[37,428s][info ][gc             ] GC(13) Concurrent weak roots 0,721ms
[37,428s][info ][gc,start       ] GC(13) Concurrent cleanup
[37,428s][info ][gc             ] GC(13) Concurrent cleanup 3118M->2014M(5124M) 0,082ms
[37,428s][info ][gc,ergo        ] GC(13) Free: 9660M, Max: 4096K regular, 9052M humongous, Frag: 7% external, 0% internal; Reserve: 613M, Max: 4096K
[37,428s][info ][gc,start       ] GC(13) Concurrent class unloading
[37,428s][info ][gc,task        ] GC(13) Using 5 of 10 workers for concurrent class unloading
[37,428s][debug][gc,phases,start] GC(13) ClassLoaderData
[37,428s][debug][gc,phases      ] GC(13) ClassLoaderData 0,013ms
[37,428s][debug][gc,phases,start] GC(13) Trigger cleanups
[37,428s][debug][gc,phases      ] GC(13) Trigger cleanups 0,007ms
[37,429s][debug][gc,nmethod     ] GC(13) Unregister NMethod: io.sirix.node.NodeKind$31.deserialize [0x00007fae5d185390]
[37,429s][debug][gc,nmethod     ] GC(13) Unregister NMethod: io.sirix.node.HashEntryNode.getKind [0x00007fae5d67f810]
[37,429s][debug][gc,nmethod     ] GC(13) Unregister NMethod: net.jpountz.util.SafeUtils.checkRange [0x00007fae5d4f9790]
[37,429s][debug][gc,nmethod     ] GC(13) Unregister NMethod: java.lang.invoke.Invokers.checkCustomized [0x00007fae5d312c10]
[37,429s][debug][gc,nmethod     ] GC(13) Unregister NMethod: java.util.HashSet.<init> [0x00007fae5d1f6d90]
[37,429s][info ][gc             ] GC(13) Concurrent class unloading 1,096ms
[37,429s][info ][gc,start       ] GC(13) Concurrent strong roots
[37,429s][info ][gc,task        ] GC(13) Using 5 of 10 workers for concurrent strong root
[37,429s][info ][gc             ] GC(13) Concurrent strong roots 0,231ms
[37,429s][info ][gc,start       ] GC(13) Concurrent evacuation
[37,429s][info ][gc,task        ] GC(13) Using 5 of 10 workers for concurrent evacuation
[37,483s][info ][gc             ] GC(13) Concurrent evacuation 54,043ms
[37,484s][info ][gc,start       ] GC(13) Pause Init Update Refs
[37,484s][info ][gc,ergo        ] GC(13) Pacer for Update Refs. Used: 2576M, Free: 9624M, Non-Taxable: 962M, Alloc Tax Rate: 1,1x
[37,484s][info ][gc             ] GC(13) Pause Init Update Refs 0,047ms
[37,484s][info ][gc,start       ] GC(13) Concurrent update references
[37,484s][info ][gc,task        ] GC(13) Using 5 of 10 workers for concurrent reference update
[37,517s][info ][gc             ] GC(13) Concurrent update references 33,175ms
[37,517s][info ][gc,start       ] GC(13) Concurrent update thread roots
[37,518s][info ][gc             ] GC(13) Concurrent update thread roots 0,881ms
[37,518s][info ][gc,start       ] GC(13) Pause Final Update Refs
[37,518s][info ][gc,task        ] GC(13) Using 10 of 10 workers for final reference update
[37,519s][info ][gc             ] GC(13) Pause Final Update Refs 0,199ms
[37,519s][info ][gc,start       ] GC(13) Concurrent cleanup
[37,519s][info ][gc             ] GC(13) Concurrent cleanup 2600M->676M(5160M) 0,106ms
[37,519s][debug][gc,ergo        ] GC(13) Available: 10996 MB, z-score=-0,408. Average available: 11094,5 MB +/- 241,5 MB.
[37,519s][info ][gc,ergo        ] Free: 10996M, Max: 4096K regular, 8560M humongous, Frag: 23% external, 0% internal; Reserve: 616M, Max: 4096K
[37,519s][info ][gc,stats       ] 
[37,519s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[37,519s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[37,519s][info ][gc,stats       ] 
[37,519s][info ][gc,stats       ] Concurrent Reset                   2292 us
[37,519s][info ][gc,stats       ] Pause Init Mark (G)                 263 us
[37,519s][info ][gc,stats       ] Pause Init Mark (N)                 101 us
[37,519s][info ][gc,stats       ]   Update Region States               16 us
[37,519s][info ][gc,stats       ] Concurrent Mark Roots               656 us, parallelism: 2,02x
[37,519s][info ][gc,stats       ]   CMR: <total>                     1328 us
[37,519s][info ][gc,stats       ]   CMR: Thread Roots                1266 us, workers (us): 251, 494, 274, 247,   0, ---, ---, ---, ---, ---, 
[37,519s][info ][gc,stats       ]   CMR: VM Strong Roots                7 us, workers (us):   6,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[37,519s][info ][gc,stats       ]   CMR: CLDG Roots                    55 us, workers (us):  51,   4, ---, ---, ---, ---, ---, ---, ---, ---, 
[37,519s][info ][gc,stats       ] Concurrent Marking                51570 us
[37,519s][info ][gc,stats       ] Pause Final Mark (G)                440 us
[37,519s][info ][gc,stats       ] Pause Final Mark (N)                333 us
[37,519s][info ][gc,stats       ]   Finish Mark                       185 us
[37,519s][info ][gc,stats       ]   Update Region States               14 us
[37,519s][info ][gc,stats       ]   Choose Collection Set              64 us
[37,519s][info ][gc,stats       ]   Rebuild Free Set                    9 us
[37,519s][info ][gc,stats       ] Concurrent Thread Roots            1876 us, parallelism: 3,79x
[37,519s][info ][gc,stats       ]   CTR: <total>                     7102 us
[37,519s][info ][gc,stats       ]   CTR: Thread Roots                7102 us, workers (us): 1550, 1318, 1290, 1283, 1661, ---, ---, ---, ---, ---, 
[37,519s][info ][gc,stats       ] Concurrent Weak References         1103 us, parallelism: 1,61x
[37,519s][info ][gc,stats       ]   CWRF: <total>                    1777 us
[37,519s][info ][gc,stats       ]   CWRF: Weak References            1777 us, workers (us): 898, 878,   0,   0,   0, ---, ---, ---, ---, ---, 
[37,519s][info ][gc,stats       ] Concurrent Weak Roots               745 us
[37,519s][info ][gc,stats       ]   Roots                             632 us, parallelism: 2,51x
[37,519s][info ][gc,stats       ]     CWR: <total>                   1587 us
[37,519s][info ][gc,stats       ]     CWR: Code Cache Roots           758 us, workers (us): 206, 179, 214, 158,   0, ---, ---, ---, ---, ---, 
[37,519s][info ][gc,stats       ]     CWR: VM Weak Roots              794 us, workers (us): 261, 261, 148, 123,   0, ---, ---, ---, ---, ---, 
[37,519s][info ][gc,stats       ]     CWR: CLDG Roots                  35 us, workers (us): ---,  17, ---,  18, ---, ---, ---, ---, ---, ---, 
[37,519s][info ][gc,stats       ]   Rendezvous                         71 us
[37,519s][info ][gc,stats       ] Concurrent Cleanup                   92 us
[37,519s][info ][gc,stats       ] Concurrent Class Unloading         1108 us
[37,519s][info ][gc,stats       ]   Unlink Stale                      791 us
[37,519s][info ][gc,stats       ]     System Dictionary                35 us
[37,519s][info ][gc,stats       ]     Weak Class Links                  0 us
[37,519s][info ][gc,stats       ]     Code Roots                      756 us
[37,519s][info ][gc,stats       ]   Rendezvous                        160 us
[37,519s][info ][gc,stats       ]   Purge Unlinked                    128 us
[37,519s][info ][gc,stats       ]     Code Roots                      125 us
[37,519s][info ][gc,stats       ]     CLDG                              3 us
[37,519s][info ][gc,stats       ]     Exception Caches                  0 us
[37,519s][info ][gc,stats       ] Concurrent Strong Roots             250 us, parallelism: 1,07x
[37,519s][info ][gc,stats       ]   CSR: <total>                      266 us
[37,519s][info ][gc,stats       ]   CSR: VM Strong Roots               55 us, workers (us):  27,  23,   4,   0,   0, ---, ---, ---, ---, ---, 
[37,519s][info ][gc,stats       ]   CSR: CLDG Roots                   212 us, workers (us): ---, 118,  94, ---, ---, ---, ---, ---, ---, ---, 
[37,519s][info ][gc,stats       ] Concurrent Evacuation             54101 us
[37,519s][info ][gc,stats       ] Pause Init Update Refs (G)          986 us
[37,519s][info ][gc,stats       ] Pause Init Update Refs (N)           59 us
[37,519s][info ][gc,stats       ]   Manage GCLABs                       3 us
[37,519s][info ][gc,stats       ] Concurrent Update Refs            33230 us
[37,519s][info ][gc,stats       ] Concurrent Update Thread Roots      929 us
[37,519s][info ][gc,stats       ] Pause Final Update Refs (G)         351 us
[37,519s][info ][gc,stats       ] Pause Final Update Refs (N)         219 us
[37,519s][info ][gc,stats       ]   Update Region States              139 us
[37,519s][info ][gc,stats       ]   Trash Collection Set               10 us
[37,519s][info ][gc,stats       ]   Rebuild Free Set                   15 us
[37,519s][info ][gc,stats       ] Concurrent Cleanup                  120 us
[37,519s][info ][gc,stats       ] 
[37,519s][info ][gc,stats       ] Allocation pacing accrued:
[37,519s][info ][gc,stats       ]       0 of  1536 ms (  0,0%): <total>
[37,519s][info ][gc,stats       ]       0 of  1536 ms (  0,0%): <average total>
[37,519s][info ][gc,stats       ] 
[37,519s][info ][gc,metaspace   ] Metaspace: 19733K(20224K)->19734K(20224K) NonClass: 17306K(17536K)->17307K(17536K) Class: 2426K(2688K)->2426K(2688K)
[37,519s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[38,081s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.Invokers.checkExactType [0x00007fae7c9dc110] (c2)
[38,098s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PathSummaryPage.getMaxNodeKey [0x00007fae5d312c10] (c1)
[38,099s][debug][gc,nmethod     ] Register NMethod: org.magicwerk.brownies.collections.IList$Iter.next [0x00007fae7c9db810] (c2)
[38,780s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.delegates.NodeDelegate.<init> [0x00007fae5d1f6d90] (c1)
[38,782s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNumberValueAsRightSibling [0x00007fae5d1f1990] (c1)
[38,813s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNumberValueAsRightSibling [0x00007fae7c9e8d10] (c2)
[38,847s][info ][gc             ] Trigger: Learning 3 of 5. Free (8600M) is below initial threshold (8601M)
[38,848s][info ][gc,ergo        ] Free: 8600M, Max: 4096K regular, 8560M humongous, Frag: 1% external, 0% internal; Reserve: 616M, Max: 4096K
[38,848s][info ][gc,start       ] GC(14) Concurrent reset
[38,848s][info ][gc,task        ] GC(14) Using 5 of 10 workers for concurrent reset
[38,848s][info ][gc,ergo        ] GC(14) Pacer for Reset. Non-Taxable: 12288M
[38,850s][info ][gc             ] GC(14) Concurrent reset 2,564ms
[38,850s][info ][gc,start       ] GC(14) Pause Init Mark (unload classes)
[38,850s][info ][gc,task        ] GC(14) Using 10 of 10 workers for init marking
[38,850s][info ][gc,ergo        ] GC(14) Pacer for Mark. Expected Live: 501M, Free: 8600M, Non-Taxable: 860M, Alloc Tax Rate: 0,1x
[38,850s][info ][gc             ] GC(14) Pause Init Mark (unload classes) 0,061ms
[38,851s][info ][gc,start       ] GC(14) Concurrent marking roots
[38,851s][info ][gc,task        ] GC(14) Using 5 of 10 workers for concurrent marking roots
[38,851s][debug][gc,tlab        ] GC(14) TLAB totals: thrds: 8  refills: 356 max: 337 slow allocs: 33 max 21 waste:  0,4% gc: 4900696B max: 4194256B slow: 655296B max: 647608B
[38,851s][info ][gc             ] GC(14) Concurrent marking roots 0,630ms
[38,851s][info ][gc,start       ] GC(14) Concurrent marking (unload classes)
[38,851s][info ][gc,task        ] GC(14) Using 5 of 10 workers for concurrent marking
[38,858s][info ][gc             ] GC(14) Concurrent marking (unload classes) 6,960ms
[38,858s][info ][gc,start       ] GC(14) Pause Final Mark (unload classes)
[38,858s][info ][gc,task        ] GC(14) Using 10 of 10 workers for final marking
[38,859s][info ][gc,ergo        ] GC(14) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10940M, Max CSet: 512M, Min Garbage: 0B
[38,859s][info ][gc,ergo        ] GC(14) Collectable Garbage: 3010M (99%), Immediate: 1732M (57%), CSet: 1278M (42%)
[38,859s][info ][gc,ergo        ] GC(14) Pacer for Evacuation. Used CSet: 1332M, Free: 10324M, Non-Taxable: 1032M, Alloc Tax Rate: 1,1x
[38,859s][info ][gc             ] GC(14) Pause Final Mark (unload classes) 0,597ms
[38,859s][info ][gc,start       ] GC(14) Concurrent thread roots
[38,859s][info ][gc,task        ] GC(14) Using 5 of 10 workers for Concurrent thread roots
[38,860s][info ][gc             ] GC(14) Concurrent thread roots 0,610ms
[38,860s][info ][gc,start       ] GC(14) Concurrent weak references
[38,860s][info ][gc,task        ] GC(14) Using 5 of 10 workers for concurrent weak references
[38,861s][info ][gc,ref         ] GC(14) Encountered references: Soft: 2319, Weak: 1838, Final: 4256, Phantom: 4511
[38,861s][info ][gc,ref         ] GC(14) Discovered  references: Soft: 0, Weak: 203, Final: 4256, Phantom: 4648
[38,861s][info ][gc,ref         ] GC(14) Enqueued    references: Soft: 0, Weak: 0, Final: 4256, Phantom: 4271
[38,861s][info ][gc             ] GC(14) Concurrent weak references 1,420ms
[38,861s][info ][gc,start       ] GC(14) Concurrent weak roots
[38,861s][info ][gc,task        ] GC(14) Using 5 of 10 workers for concurrent weak root
[38,862s][info ][gc             ] GC(14) Concurrent weak roots 0,723ms
[38,862s][info ][gc,start       ] GC(14) Concurrent cleanup
[38,862s][info ][gc             ] GC(14) Concurrent cleanup 3086M->1354M(5160M) 0,166ms
[38,862s][info ][gc,ergo        ] GC(14) Free: 10320M, Max: 4096K regular, 9056M humongous, Frag: 13% external, 0% internal; Reserve: 613M, Max: 4096K
[38,862s][info ][gc,start       ] GC(14) Concurrent class unloading
[38,862s][info ][gc,task        ] GC(14) Using 5 of 10 workers for concurrent class unloading
[38,862s][debug][gc,phases,start] GC(14) ClassLoaderData
[38,862s][debug][gc,phases      ] GC(14) ClassLoaderData 0,009ms
[38,862s][debug][gc,phases,start] GC(14) Trigger cleanups
[38,862s][debug][gc,phases      ] GC(14) Trigger cleanups 0,004ms
[38,863s][debug][gc,nmethod     ] GC(14) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNumberValueAsRightSibling [0x00007fae5d1f1990]
[38,863s][debug][gc,nmethod     ] GC(14) Unregister NMethod: org.magicwerk.brownies.collections.IList$Iter.next [0x00007fae5d6b2090]
[38,863s][debug][gc,nmethod     ] GC(14) Unregister NMethod: org.magicwerk.brownies.collections.IList$Iter.hasNext [0x00007fae5d0bee10]
[38,863s][debug][gc,nmethod     ] GC(14) Unregister NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.insertNumberValueAsRightSibling [0x00007fae7c9d9590]
[38,863s][debug][gc,nmethod     ] GC(14) Unregister NMethod: java.lang.invoke.Invokers.checkExactType [0x00007fae5d312710]
[38,863s][debug][gc,nmethod     ] GC(14) Unregister NMethod: io.sirix.node.NodeKind$32.deserialize [0x00007fae5d548390]
[38,863s][info ][gc             ] GC(14) Concurrent class unloading 0,979ms
[38,863s][info ][gc,start       ] GC(14) Concurrent strong roots
[38,863s][info ][gc,task        ] GC(14) Using 5 of 10 workers for concurrent strong root
[38,863s][info ][gc             ] GC(14) Concurrent strong roots 0,250ms
[38,863s][info ][gc,start       ] GC(14) Concurrent evacuation
[38,863s][info ][gc,task        ] GC(14) Using 5 of 10 workers for concurrent evacuation
[38,868s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.Finalizer$FinalizerThread.run [0x00007fae7c9e7f10] (c2)
[38,869s][info ][gc             ] GC(14) Concurrent evacuation 6,037ms
[38,869s][info ][gc,start       ] GC(14) Pause Init Update Refs
[38,869s][info ][gc,ergo        ] GC(14) Pacer for Update Refs. Used: 1420M, Free: 10316M, Non-Taxable: 1031M, Alloc Tax Rate: 1,1x
[38,869s][info ][gc             ] GC(14) Pause Init Update Refs 0,032ms
[38,870s][info ][gc,start       ] GC(14) Concurrent update references
[38,870s][info ][gc,task        ] GC(14) Using 5 of 10 workers for concurrent reference update
[38,875s][info ][gc             ] GC(14) Concurrent update references 5,731ms
[38,875s][info ][gc,start       ] GC(14) Concurrent update thread roots
[38,876s][info ][gc             ] GC(14) Concurrent update thread roots 0,804ms
[38,876s][info ][gc,start       ] GC(14) Pause Final Update Refs
[38,876s][info ][gc,task        ] GC(14) Using 10 of 10 workers for final reference update
[38,876s][info ][gc             ] GC(14) Pause Final Update Refs 0,154ms
[38,877s][info ][gc,start       ] GC(14) Concurrent cleanup
[38,877s][info ][gc             ] GC(14) Concurrent cleanup 1424M->92M(5160M) 0,175ms
[38,877s][debug][gc,ergo        ] GC(14) Available: 11580 MB, z-score=1,724. Average available: 11114,0 MB +/- 270,3 MB.
[38,877s][info ][gc,ergo        ] Free: 11580M, Max: 4096K regular, 9092M humongous, Frag: 22% external, 0% internal; Reserve: 616M, Max: 4096K
[38,877s][info ][gc,stats       ] 
[38,877s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[38,877s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[38,877s][info ][gc,stats       ] 
[38,877s][info ][gc,stats       ] Concurrent Reset                   2601 us
[38,877s][info ][gc,stats       ] Pause Init Mark (G)                 381 us
[38,877s][info ][gc,stats       ] Pause Init Mark (N)                  69 us
[38,877s][info ][gc,stats       ]   Update Region States               19 us
[38,877s][info ][gc,stats       ] Concurrent Mark Roots               649 us, parallelism: 1,88x
[38,877s][info ][gc,stats       ]   CMR: <total>                     1221 us
[38,877s][info ][gc,stats       ]   CMR: Thread Roots                1165 us, workers (us): 193, 409, 218, 145, 199, ---, ---, ---, ---, ---, 
[38,877s][info ][gc,stats       ]   CMR: VM Strong Roots                7 us, workers (us):   2,   2,   2,   0,   0, ---, ---, ---, ---, ---, 
[38,877s][info ][gc,stats       ]   CMR: CLDG Roots                    49 us, workers (us): ---, ---,   6,  42, ---, ---, ---, ---, ---, ---, 
[38,877s][info ][gc,stats       ] Concurrent Marking                 6997 us
[38,877s][info ][gc,stats       ] Pause Final Mark (G)                823 us
[38,877s][info ][gc,stats       ] Pause Final Mark (N)                606 us
[38,877s][info ][gc,stats       ]   Finish Mark                       303 us
[38,877s][info ][gc,stats       ]   Update Region States              193 us
[38,877s][info ][gc,stats       ]   Choose Collection Set              58 us
[38,877s][info ][gc,stats       ]   Rebuild Free Set                   10 us
[38,877s][info ][gc,stats       ] Concurrent Thread Roots             628 us, parallelism: 2,18x
[38,877s][info ][gc,stats       ]   CTR: <total>                     1372 us
[38,877s][info ][gc,stats       ]   CTR: Thread Roots                1372 us, workers (us): 475, 221, 222, 213, 241, ---, ---, ---, ---, ---, 
[38,877s][info ][gc,stats       ] Concurrent Weak References         1428 us, parallelism: 1,30x
[38,877s][info ][gc,stats       ]   CWRF: <total>                    1855 us
[38,877s][info ][gc,stats       ]   CWRF: Weak References            1855 us, workers (us): 652, 1198,   3,   1,   1, ---, ---, ---, ---, ---, 
[38,877s][info ][gc,stats       ] Concurrent Weak Roots               743 us
[38,877s][info ][gc,stats       ]   Roots                             605 us, parallelism: 3,01x
[38,877s][info ][gc,stats       ]     CWR: <total>                   1819 us
[38,877s][info ][gc,stats       ]     CWR: Code Cache Roots           917 us, workers (us): 165, 164, 163, 238, 188, ---, ---, ---, ---, ---, 
[38,877s][info ][gc,stats       ]     CWR: VM Weak Roots              888 us, workers (us): 229, 212, 170, 169, 108, ---, ---, ---, ---, ---, 
[38,877s][info ][gc,stats       ]     CWR: CLDG Roots                  13 us, workers (us):   6, ---,   7, ---, ---, ---, ---, ---, ---, ---, 
[38,877s][info ][gc,stats       ]   Rendezvous                        107 us
[38,877s][info ][gc,stats       ] Concurrent Cleanup                  184 us
[38,877s][info ][gc,stats       ] Concurrent Class Unloading          988 us
[38,877s][info ][gc,stats       ]   Unlink Stale                      783 us
[38,877s][info ][gc,stats       ]     System Dictionary                23 us
[38,877s][info ][gc,stats       ]     Weak Class Links                  0 us
[38,877s][info ][gc,stats       ]     Code Roots                      760 us
[38,877s][info ][gc,stats       ]   Rendezvous                        111 us
[38,877s][info ][gc,stats       ]   Purge Unlinked                     75 us
[38,877s][info ][gc,stats       ]     Code Roots                       72 us
[38,877s][info ][gc,stats       ]     CLDG                              3 us
[38,877s][info ][gc,stats       ]     Exception Caches                  0 us
[38,877s][info ][gc,stats       ] Concurrent Strong Roots             269 us, parallelism: 0,84x
[38,877s][info ][gc,stats       ]   CSR: <total>                      226 us
[38,877s][info ][gc,stats       ]   CSR: VM Strong Roots               12 us, workers (us):   6,   4,   2,   0,   0, ---, ---, ---, ---, ---, 
[38,877s][info ][gc,stats       ]   CSR: CLDG Roots                   214 us, workers (us): ---,  82, 132, ---, ---, ---, ---, ---, ---, ---, 
[38,877s][info ][gc,stats       ] Concurrent Evacuation              6103 us
[38,877s][info ][gc,stats       ] Pause Init Update Refs (G)          167 us
[38,877s][info ][gc,stats       ] Pause Init Update Refs (N)           39 us
[38,877s][info ][gc,stats       ]   Manage GCLABs                       3 us
[38,877s][info ][gc,stats       ] Concurrent Update Refs             5802 us
[38,877s][info ][gc,stats       ] Concurrent Update Thread Roots      832 us
[38,877s][info ][gc,stats       ] Pause Final Update Refs (G)         384 us
[38,877s][info ][gc,stats       ] Pause Final Update Refs (N)         172 us
[38,877s][info ][gc,stats       ]   Update Region States              104 us
[38,877s][info ][gc,stats       ]   Trash Collection Set                7 us
[38,877s][info ][gc,stats       ]   Rebuild Free Set                   15 us
[38,877s][info ][gc,stats       ] Concurrent Cleanup                  186 us
[38,877s][info ][gc,stats       ] 
[38,877s][info ][gc,stats       ] Allocation pacing accrued:
[38,877s][info ][gc,stats       ]       0 of  1358 ms (  0,0%): <total>
[38,877s][info ][gc,stats       ]       0 of  1358 ms (  0,0%): <average total>
[38,877s][info ][gc,stats       ] 
[38,877s][info ][gc,metaspace   ] Metaspace: 19734K(20224K)->19734K(20224K) NonClass: 17307K(17536K)->17307K(17536K) Class: 2426K(2688K)->2426K(2688K)
[38,877s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[39,422s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.backgroundPerformRelease [0x00007fae5d838590] (c1)
[39,423s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.io.AbstractReferenceCounted.backgroundPerformRelease [0x00007fae5d548390] (c1)
[39,423s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.io.BackgroundResourceReleaser.release [0x00007fae5d6b2510] (c1)
[39,423s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.io.BackgroundResourceReleaser.release0 [0x00007fae5d312710] (c1)
[39,423s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ArrayBlockingQueue.offer [0x00007fae5d69d410] (c1)
[39,423s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.performRelease [0x00007fae5d0ec910] (c1)
[39,424s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb429cc00.invokeExact_MT [0x00007fae5d7e2c10] (c1)
[39,424s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.internal.cleaner.Jdk9ByteBufferCleanerService.clean [0x00007fae5d5d9710] (c1)
[39,424s][debug][gc,nmethod     ] Register NMethod: sun.misc.Unsafe.invokeCleaner [0x00007fae5d69cd10] (c1)
[39,424s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$DMH/0x00007fadb42a0400.invokeSpecial [0x00007fae5d185390] (c1)
[39,424s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.invokeCleaner [0x00007fae5d109e10] (c1)
[39,447s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.bytepipe.ByteHandlerPipeline.<init> [0x00007fae5d6d0890] (c1)
[39,447s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.Semaphore$Sync.tryReleaseShared [0x00007fae5d0ec310] (c1)
[39,447s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelStorage.createRevisionsOffsetFileChannelIfNotInitialized [0x00007fae5d6cf710] (c1)
[39,447s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelStorage.createDataFileChannelIfNotInitialized [0x00007fae5d0d2f90] (c1)
[39,447s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7c9e7990] ()
[39,447s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleInts$FieldInstanceReadWrite.compareAndSet [0x00007fae5d0d2590] (c1)
[39,447s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_LII_Z [0x00007fae5d1f1d90] (c1)
[39,448s][debug][gc,nmethod     ] Register NMethod: java.util.stream.SortedOps$SizedRefSortingSink.end [0x00007fae5d192110] (c1)
[39,448s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.hasExpired [0x00007fae5d52f710] (c1)
[39,448s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.tryExpireAfterRead [0x00007fae5d191490] (c1)
[39,448s][debug][gc,nmethod     ] Register NMethod: java.util.stream.SortedOps$SizedRefSortingSink.begin [0x00007fae5d0bee10] (c1)
[39,449s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.afterRead [0x00007fae5d6ed110] (c1)
[40,068s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathNode.getKind [0x00007fae5d1f1990] (c1)
[40,069s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathNode.getKind [0x00007fae5d683790] (c1)
[40,069s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.getStructNodeDelegate [0x00007fae5d525490] (c1)
[40,069s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$13.serialize [0x00007fae5d7dd090] (c1)
[40,070s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind.serializeNameDelegate [0x00007fae5d7dc210] (c1)
[40,070s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind.serializeStructDelegate [0x00007fae5d74bc90] (c1)
[40,098s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind.deserializeMaxNodeKeys [0x00007fae5d6ec690] (c1)
[40,098s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind.deserializeCurrentMaxLevelsOfIndirectPages [0x00007fae5d54af10] (c1)
[40,099s][debug][gc,nmethod     ] Register NMethod: java.lang.Long.equals [0x00007fae5d0d1f10] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.Reader.readAsync [0x00007fae5d54a310] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ThreadPerTaskExecutor.execute [0x00007fae5d7f8a10] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.Reader$$Lambda/0x00007fadb429af48.<init> [0x00007fae5d6b2090] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.supplyAsync [0x00007fae5d52f110] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ThreadPerTaskExecutor.ensureNotShutdown [0x00007fae5d190f90] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ThreadPerTaskExecutor$TaskRunner.<init> [0x00007fae5d67f810] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ThreadPerTaskExecutor.start [0x00007fae5d549690] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ThreadPerTaskExecutor.newThread [0x00007fae5d0ebc90] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.StackableScope.popAll [0x00007fae5d75b590] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.unmount [0x00007fae5d548d90] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadBuilders.newVirtualThread [0x00007fae5d4f9790] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: java.lang.BaseVirtualThread.<init> [0x00007fae5d728b10] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadBuilders$VirtualThreadFactory.newThread [0x00007fae5d75ab90] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadBuilders$BaseThreadFactory.nextThreadName [0x00007fae5d759f90] (c1)
[40,100s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread$VThreadContinuation.wrap [0x00007fae5d74b590] (c1)
[40,101s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.<init> [0x00007fae5d6dcc90] (c1)
[40,101s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.<init> [0x00007fae5d6dbb90] (c1)
[40,101s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread$VThreadContinuation$1.<init> [0x00007fae5d6db610] (c1)
[40,101s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.<init> [0x00007fae5d6ec290] (c1)
[40,101s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread$$Lambda/0x00007fadb41de240.<init> [0x00007fae5d6ebd90] (c1)
[40,101s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread$VThreadContinuation.<init> [0x00007fae5d759590] (c1)
[40,101s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.Reader$$Lambda/0x00007fadb429af48.get [0x00007fae5d752b10] (c1)
[40,101s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ThreadPerTaskExecutor.start [0x00007fae5d752110] (c1)
[40,101s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.lambda$readPage$0 [0x00007fae5d751210] (c1)
[40,695s][info ][gc             ] Trigger: Learning 4 of 5. Free (8592M) is below initial threshold (8601M)
[40,696s][info ][gc,ergo        ] Free: 8588M, Max: 4096K regular, 8588M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[40,696s][info ][gc,start       ] GC(15) Concurrent reset
[40,696s][info ][gc,task        ] GC(15) Using 5 of 10 workers for concurrent reset
[40,696s][info ][gc,ergo        ] GC(15) Pacer for Reset. Non-Taxable: 12288M
[40,698s][info ][gc             ] GC(15) Concurrent reset 1,871ms
[40,698s][info ][gc,start       ] GC(15) Pause Init Mark (unload classes)
[40,698s][info ][gc,task        ] GC(15) Using 10 of 10 workers for init marking
[40,698s][info ][gc,ergo        ] GC(15) Pacer for Mark. Expected Live: 410M, Free: 8580M, Non-Taxable: 858M, Alloc Tax Rate: 0,1x
[40,698s][info ][gc             ] GC(15) Pause Init Mark (unload classes) 0,154ms
[40,699s][info ][gc,start       ] GC(15) Concurrent marking roots
[40,699s][info ][gc,task        ] GC(15) Using 5 of 10 workers for concurrent marking roots
[40,699s][debug][gc,tlab        ] GC(15) TLAB totals: thrds: 20  refills: 752 max: 454 slow allocs: 0 max 0 waste:  1,3% gc: 33406608B max: 4128456B slow: 6682360B max: 890600B
[40,701s][info ][gc             ] GC(15) Concurrent marking roots 1,883ms
[40,701s][info ][gc,start       ] GC(15) Concurrent marking (unload classes)
[40,701s][info ][gc,task        ] GC(15) Using 5 of 10 workers for concurrent marking
[40,767s][info ][gc             ] GC(15) Concurrent marking (unload classes) 65,570ms
[40,767s][info ][gc,start       ] GC(15) Pause Final Mark (unload classes)
[40,767s][info ][gc,task        ] GC(15) Using 10 of 10 workers for final marking
[40,767s][info ][gc,ergo        ] GC(15) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 9860M, Max CSet: 512M, Min Garbage: 0B
[40,767s][info ][gc,ergo        ] GC(15) Collectable Garbage: 2620M (99%), Immediate: 1164M (44%), CSet: 1456M (55%)
[40,767s][info ][gc,ergo        ] GC(15) Pacer for Evacuation. Used CSet: 1920M, Free: 9244M, Non-Taxable: 924M, Alloc Tax Rate: 1,1x
[40,767s][info ][gc             ] GC(15) Pause Final Mark (unload classes) 0,474ms
[40,767s][info ][gc,start       ] GC(15) Concurrent thread roots
[40,767s][info ][gc,task        ] GC(15) Using 5 of 10 workers for Concurrent thread roots
[40,768s][info ][gc             ] GC(15) Concurrent thread roots 0,504ms
[40,768s][info ][gc,start       ] GC(15) Concurrent weak references
[40,768s][info ][gc,task        ] GC(15) Using 5 of 10 workers for concurrent weak references
[40,769s][info ][gc,ref         ] GC(15) Encountered references: Soft: 2317, Weak: 1839, Final: 4651, Phantom: 5062
[40,769s][info ][gc,ref         ] GC(15) Discovered  references: Soft: 0, Weak: 114, Final: 4647, Phantom: 4913
[40,769s][info ][gc,ref         ] GC(15) Enqueued    references: Soft: 0, Weak: 0, Final: 4645, Phantom: 4665
[40,769s][info ][gc             ] GC(15) Concurrent weak references 1,136ms
[40,769s][info ][gc,start       ] GC(15) Concurrent weak roots
[40,769s][info ][gc,task        ] GC(15) Using 5 of 10 workers for concurrent weak root
[40,770s][info ][gc             ] GC(15) Concurrent weak roots 0,621ms
[40,770s][info ][gc,start       ] GC(15) Concurrent cleanup
[40,770s][info ][gc             ] GC(15) Concurrent cleanup 3594M->2430M(5160M) 0,358ms
[40,770s][info ][gc,ergo        ] GC(15) Free: 9244M, Max: 4096K regular, 8124M humongous, Frag: 13% external, 0% internal; Reserve: 613M, Max: 4096K
[40,770s][info ][gc,start       ] GC(15) Concurrent class unloading
[40,770s][info ][gc,task        ] GC(15) Using 5 of 10 workers for concurrent class unloading
[40,770s][debug][gc,phases,start] GC(15) ClassLoaderData
[40,770s][debug][gc,phases      ] GC(15) ClassLoaderData 0,009ms
[40,770s][debug][gc,phases,start] GC(15) Trigger cleanups
[40,770s][debug][gc,phases      ] GC(15) Trigger cleanups 0,015ms
[40,771s][info ][gc             ] GC(15) Concurrent class unloading 0,931ms
[40,771s][info ][gc,start       ] GC(15) Concurrent strong roots
[40,771s][info ][gc,task        ] GC(15) Using 5 of 10 workers for concurrent strong root
[40,771s][info ][gc             ] GC(15) Concurrent strong roots 0,135ms
[40,771s][info ][gc,start       ] GC(15) Concurrent evacuation
[40,771s][info ][gc,task        ] GC(15) Using 5 of 10 workers for concurrent evacuation
[40,781s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMSA.expiresVariable [0x00007fae5d750e10] (c1)
[40,781s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.mount [0x00007fae5d2d0510] (c1)
[40,814s][info ][gc             ] GC(15) Concurrent evacuation 42,660ms
[40,814s][info ][gc,start       ] GC(15) Pause Init Update Refs
[40,814s][info ][gc,ergo        ] GC(15) Pacer for Update Refs. Used: 2928M, Free: 9220M, Non-Taxable: 922M, Alloc Tax Rate: 1,1x
[40,814s][info ][gc             ] GC(15) Pause Init Update Refs 0,036ms
[40,814s][info ][gc,start       ] GC(15) Concurrent update references
[40,814s][info ][gc,task        ] GC(15) Using 5 of 10 workers for concurrent reference update
[40,848s][info ][gc             ] GC(15) Concurrent update references 34,548ms
[40,849s][info ][gc,start       ] GC(15) Concurrent update thread roots
[40,849s][info ][gc             ] GC(15) Concurrent update thread roots 0,823ms
[40,850s][info ][gc,start       ] GC(15) Pause Final Update Refs
[40,850s][info ][gc,task        ] GC(15) Using 10 of 10 workers for final reference update
[40,850s][info ][gc             ] GC(15) Pause Final Update Refs 0,093ms
[40,850s][info ][gc,start       ] GC(15) Concurrent cleanup
[40,850s][info ][gc             ] GC(15) Concurrent cleanup 2952M->1032M(5160M) 0,112ms
[40,850s][debug][gc,ergo        ] GC(15) Available: 10640 MB, z-score=-1,407. Average available: 11070,4 MB +/- 305,8 MB.
[40,850s][info ][gc,ergo        ] Free: 10640M, Max: 4096K regular, 7668M humongous, Frag: 28% external, 0% internal; Reserve: 616M, Max: 4096K
[40,850s][info ][gc,stats       ] 
[40,850s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[40,850s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[40,850s][info ][gc,stats       ] 
[40,850s][info ][gc,stats       ] Concurrent Reset                   2204 us
[40,850s][info ][gc,stats       ] Pause Init Mark (G)                 446 us
[40,850s][info ][gc,stats       ] Pause Init Mark (N)                 164 us
[40,850s][info ][gc,stats       ]   Update Region States              101 us
[40,850s][info ][gc,stats       ] Concurrent Mark Roots              2411 us, parallelism: 0,73x
[40,850s][info ][gc,stats       ]   CMR: <total>                     1760 us
[40,850s][info ][gc,stats       ]   CMR: Thread Roots                1702 us, workers (us): 1702,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[40,850s][info ][gc,stats       ]   CMR: VM Strong Roots                6 us, workers (us):   5,   0,   0,   0,   1, ---, ---, ---, ---, ---, 
[40,850s][info ][gc,stats       ]   CMR: CLDG Roots                    52 us, workers (us):  52, ---, ---, ---, ---, ---, ---, ---, ---, ---, 
[40,850s][info ][gc,stats       ] Concurrent Marking                65605 us
[40,850s][info ][gc,stats       ] Pause Final Mark (G)                546 us
[40,850s][info ][gc,stats       ] Pause Final Mark (N)                482 us
[40,850s][info ][gc,stats       ]   Finish Mark                       308 us
[40,850s][info ][gc,stats       ]   Update Region States               44 us
[40,850s][info ][gc,stats       ]   Choose Collection Set              74 us
[40,850s][info ][gc,stats       ]   Rebuild Free Set                   10 us
[40,850s][info ][gc,stats       ] Concurrent Thread Roots             512 us, parallelism: 2,46x
[40,850s][info ][gc,stats       ]   CTR: <total>                     1257 us
[40,850s][info ][gc,stats       ]   CTR: Thread Roots                1257 us, workers (us): 485, 227, 201, 168, 176, ---, ---, ---, ---, ---, 
[40,850s][info ][gc,stats       ] Concurrent Weak References         1143 us, parallelism: 1,31x
[40,850s][info ][gc,stats       ]   CWRF: <total>                    1502 us
[40,850s][info ][gc,stats       ]   CWRF: Weak References            1502 us, workers (us): 939,   3, 560,   0,   0, ---, ---, ---, ---, ---, 
[40,850s][info ][gc,stats       ] Concurrent Weak Roots               639 us
[40,850s][info ][gc,stats       ]   Roots                             513 us, parallelism: 3,43x
[40,850s][info ][gc,stats       ]     CWR: <total>                   1757 us
[40,850s][info ][gc,stats       ]     CWR: Code Cache Roots           915 us, workers (us): 209, 158, 216, 166, 166, ---, ---, ---, ---, ---, 
[40,850s][info ][gc,stats       ]     CWR: VM Weak Roots              824 us, workers (us): 221, 218, 176, 106, 104, ---, ---, ---, ---, ---, 
[40,850s][info ][gc,stats       ]     CWR: CLDG Roots                  18 us, workers (us): ---,   9, ---, ---,   9, ---, ---, ---, ---, ---, 
[40,850s][info ][gc,stats       ]   Rendezvous                         97 us
[40,850s][info ][gc,stats       ] Concurrent Cleanup                  366 us
[40,850s][info ][gc,stats       ] Concurrent Class Unloading          950 us
[40,850s][info ][gc,stats       ]   Unlink Stale                      848 us
[40,850s][info ][gc,stats       ]     System Dictionary                34 us
[40,850s][info ][gc,stats       ]     Weak Class Links                  0 us
[40,850s][info ][gc,stats       ]     Code Roots                      812 us
[40,850s][info ][gc,stats       ]   Rendezvous                         69 us
[40,850s][info ][gc,stats       ]   Purge Unlinked                      2 us
[40,850s][info ][gc,stats       ]     Code Roots                        0 us
[40,850s][info ][gc,stats       ]     CLDG                              2 us
[40,850s][info ][gc,stats       ]     Exception Caches                  0 us
[40,850s][info ][gc,stats       ] Concurrent Strong Roots             143 us, parallelism: 1,33x
[40,850s][info ][gc,stats       ]   CSR: <total>                      190 us
[40,850s][info ][gc,stats       ]   CSR: VM Strong Roots               10 us, workers (us):   5,   5,   0,   0,   0, ---, ---, ---, ---, ---, 
[40,850s][info ][gc,stats       ]   CSR: CLDG Roots                   180 us, workers (us):  75, 105, ---, ---, ---, ---, ---, ---, ---, ---, 
[40,850s][info ][gc,stats       ] Concurrent Evacuation             42692 us
[40,850s][info ][gc,stats       ] Pause Init Update Refs (G)          246 us
[40,850s][info ][gc,stats       ] Pause Init Update Refs (N)           44 us
[40,850s][info ][gc,stats       ]   Manage GCLABs                       4 us
[40,850s][info ][gc,stats       ] Concurrent Update Refs            34592 us
[40,850s][info ][gc,stats       ] Concurrent Update Thread Roots      842 us
[40,850s][info ][gc,stats       ] Pause Final Update Refs (G)         330 us
[40,850s][info ][gc,stats       ] Pause Final Update Refs (N)         112 us
[40,850s][info ][gc,stats       ]   Update Region States               44 us
[40,850s][info ][gc,stats       ]   Trash Collection Set                3 us
[40,850s][info ][gc,stats       ]   Rebuild Free Set                   15 us
[40,850s][info ][gc,stats       ] Concurrent Cleanup                  127 us
[40,850s][info ][gc,stats       ] Pacing                             5711 us
[40,850s][info ][gc,stats       ] 
[40,850s][info ][gc,stats       ] Allocation pacing accrued:
[40,850s][info ][gc,stats       ]       1 of  1973 ms (  0,0%): ForkJoinPool.commonPool-worker-1
[40,850s][info ][gc,stats       ]       1 of  1973 ms (  0,0%): ForkJoinPool.commonPool-worker-2
[40,850s][info ][gc,stats       ]       1 of  1973 ms (  0,0%): ForkJoinPool.commonPool-worker-7
[40,850s][info ][gc,stats       ]       1 of  1973 ms (  0,0%): ForkJoinPool.commonPool-worker-8
[40,850s][info ][gc,stats       ]       0 of  1973 ms (  0,0%): ForkJoinPool.commonPool-worker-11
[40,850s][info ][gc,stats       ]       0 of  1973 ms (  0,0%): ForkJoinPool.commonPool-worker-13
[40,850s][info ][gc,stats       ]       1 of  1973 ms (  0,0%): ForkJoinPool.commonPool-worker-12
[40,850s][info ][gc,stats       ]       0 of  1973 ms (  0,0%): ForkJoinPool.commonPool-worker-16
[40,850s][info ][gc,stats       ]       1 of  1973 ms (  0,0%): ForkJoinPool.commonPool-worker-19
[40,850s][info ][gc,stats       ]       6 of  1973 ms (  0,3%): <total>
[40,850s][info ][gc,stats       ]       0 of  1973 ms (  0,0%): <average total>
[40,850s][info ][gc,stats       ]       1 of  1973 ms (  0,0%): <average non-zero>
[40,850s][info ][gc,stats       ] 
[40,850s][info ][gc,metaspace   ] Metaspace: 19769K(20224K)->19771K(20224K) NonClass: 17343K(17536K)->17344K(17536K) Class: 2426K(2688K)->2426K(2688K)
[40,851s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[41,436s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.setPrevRelaxed [0x00007fae5d750a90] (c1)
[41,436s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.casTail [0x00007fae5d750490] (c1)
[41,444s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PathSummaryPage.getCurrentMaxLevelOfIndirectPages [0x00007fae5d2d0090] (c1)
[41,444s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.interfaces.Page.clearPage [0x00007fae7c9e7690] (c2)
[41,472s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getPathSummaryPage [0x00007fae5d2cf510] (c1)
[42,074s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.putIntRelease [0x00007fae5d2cf190] (c1)
[42,077s][info ][gc             ] Trigger: Learning 5 of 5. Free (8584M) is below initial threshold (8601M)
[42,077s][info ][gc,ergo        ] Free: 8580M, Max: 4096K regular, 7668M humongous, Frag: 11% external, 0% internal; Reserve: 616M, Max: 4096K
[42,077s][info ][gc,start       ] GC(16) Concurrent reset
[42,077s][info ][gc,task        ] GC(16) Using 5 of 10 workers for concurrent reset
[42,077s][info ][gc,ergo        ] GC(16) Pacer for Reset. Non-Taxable: 12288M
[42,079s][info ][gc             ] GC(16) Concurrent reset 2,586ms
[42,080s][info ][gc,start       ] GC(16) Pause Init Mark (unload classes)
[42,080s][info ][gc,task        ] GC(16) Using 10 of 10 workers for init marking
[42,080s][info ][gc,ergo        ] GC(16) Pacer for Mark. Expected Live: 394M, Free: 8572M, Non-Taxable: 857M, Alloc Tax Rate: 0,1x
[42,080s][info ][gc             ] GC(16) Pause Init Mark (unload classes) 0,062ms
[42,080s][info ][gc,start       ] GC(16) Concurrent marking roots
[42,080s][info ][gc,task        ] GC(16) Using 5 of 10 workers for concurrent marking roots
[42,080s][debug][gc,tlab        ] GC(16) TLAB totals: thrds: 21  refills: 525 max: 314 slow allocs: 0 max 0 waste:  1,9% gc: 37646600B max: 4193464B slow: 4675384B max: 392384B
[42,081s][info ][gc             ] GC(16) Concurrent marking roots 0,925ms
[42,081s][info ][gc,start       ] GC(16) Concurrent marking (unload classes)
[42,081s][info ][gc,task        ] GC(16) Using 5 of 10 workers for concurrent marking
[42,137s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader$$Lambda/0x00007fadb429f340.apply [0x00007fae7c9db390] (c2)
[42,137s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.getLongUnaligned [0x00007fae7c9db090] (c2)
[42,137s][info ][gc             ] GC(16) Concurrent marking (unload classes) 56,632ms
[42,137s][info ][gc,start       ] GC(16) Pause Final Mark (unload classes)
[42,137s][info ][gc,task        ] GC(16) Using 10 of 10 workers for final marking
[42,138s][info ][gc,ergo        ] GC(16) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 9912M, Max CSet: 512M, Min Garbage: 0B
[42,138s][info ][gc,ergo        ] GC(16) Collectable Garbage: 2589M (99%), Immediate: 1016M (39%), CSet: 1573M (60%)
[42,138s][info ][gc,ergo        ] GC(16) Pacer for Evacuation. Used CSet: 2076M, Free: 9299M, Non-Taxable: 929M, Alloc Tax Rate: 1,1x
[42,138s][info ][gc             ] GC(16) Pause Final Mark (unload classes) 0,511ms
[42,138s][info ][gc,start       ] GC(16) Concurrent thread roots
[42,138s][info ][gc,task        ] GC(16) Using 5 of 10 workers for Concurrent thread roots
[42,139s][info ][gc             ] GC(16) Concurrent thread roots 0,706ms
[42,139s][info ][gc,start       ] GC(16) Concurrent weak references
[42,139s][info ][gc,task        ] GC(16) Using 5 of 10 workers for concurrent weak references
[42,140s][info ][gc,ref         ] GC(16) Encountered references: Soft: 2320, Weak: 1839, Final: 4947, Phantom: 5326
[42,140s][info ][gc,ref         ] GC(16) Discovered  references: Soft: 0, Weak: 910, Final: 4944, Phantom: 5289
[42,140s][info ][gc,ref         ] GC(16) Enqueued    references: Soft: 0, Weak: 0, Final: 4942, Phantom: 4952
[42,140s][info ][gc             ] GC(16) Concurrent weak references 1,049ms
[42,140s][info ][gc,start       ] GC(16) Concurrent weak roots
[42,140s][info ][gc,task        ] GC(16) Using 5 of 10 workers for concurrent weak root
[42,140s][info ][gc             ] GC(16) Concurrent weak roots 0,706ms
[42,140s][info ][gc,start       ] GC(16) Concurrent cleanup
[42,141s][info ][gc             ] GC(16) Concurrent cleanup 3394M->2378M(5160M) 0,084ms
[42,141s][info ][gc,ergo        ] GC(16) Free: 9296M, Max: 4096K regular, 8076M humongous, Frag: 14% external, 0% internal; Reserve: 613M, Max: 4096K
[42,141s][info ][gc,start       ] GC(16) Concurrent class unloading
[42,141s][info ][gc,task        ] GC(16) Using 5 of 10 workers for concurrent class unloading
[42,141s][debug][gc,phases,start] GC(16) ClassLoaderData
[42,141s][debug][gc,phases      ] GC(16) ClassLoaderData 0,013ms
[42,141s][debug][gc,phases,start] GC(16) Trigger cleanups
[42,141s][debug][gc,phases      ] GC(16) Trigger cleanups 0,007ms
[42,142s][debug][gc,nmethod     ] GC(16) Unregister NMethod: io.sirix.page.interfaces.Page.clearPage [0x00007fae5d30d190]
[42,142s][info ][gc             ] GC(16) Concurrent class unloading 1,043ms
[42,142s][info ][gc,start       ] GC(16) Concurrent strong roots
[42,142s][info ][gc,task        ] GC(16) Using 5 of 10 workers for concurrent strong root
[42,142s][info ][gc             ] GC(16) Concurrent strong roots 0,212ms
[42,142s][info ][gc,start       ] GC(16) Concurrent evacuation
[42,142s][info ][gc,task        ] GC(16) Using 5 of 10 workers for concurrent evacuation
[42,194s][info ][gc             ] GC(16) Concurrent evacuation 52,409ms
[42,194s][info ][gc,start       ] GC(16) Pause Init Update Refs
[42,194s][info ][gc,ergo        ] GC(16) Pacer for Update Refs. Used: 2932M, Free: 9260M, Non-Taxable: 926M, Alloc Tax Rate: 1,1x
[42,194s][info ][gc             ] GC(16) Pause Init Update Refs 0,042ms
[42,195s][info ][gc,start       ] GC(16) Concurrent update references
[42,195s][info ][gc,task        ] GC(16) Using 5 of 10 workers for concurrent reference update
[42,227s][info ][gc             ] GC(16) Concurrent update references 32,540ms
[42,227s][info ][gc,start       ] GC(16) Concurrent update thread roots
[42,228s][info ][gc             ] GC(16) Concurrent update thread roots 1,136ms
[42,228s][info ][gc,start       ] GC(16) Pause Final Update Refs
[42,228s][info ][gc,task        ] GC(16) Using 10 of 10 workers for final reference update
[42,229s][info ][gc             ] GC(16) Pause Final Update Refs 0,225ms
[42,229s][info ][gc,start       ] GC(16) Concurrent cleanup
[42,229s][info ][gc             ] GC(16) Concurrent cleanup 2956M->880M(5184M) 0,120ms
[42,229s][debug][gc,ergo        ] GC(16) Available: 10792 MB, z-score=-0,780. Average available: 11038,8 MB +/- 316,4 MB.
[42,229s][info ][gc,ergo        ] Free: 10792M, Max: 4096K regular, 8736M humongous, Frag: 20% external, 0% internal; Reserve: 616M, Max: 4096K
[42,229s][info ][gc,stats       ] 
[42,229s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[42,229s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[42,229s][info ][gc,stats       ] 
[42,229s][info ][gc,stats       ] Concurrent Reset                   2650 us
[42,229s][info ][gc,stats       ] Pause Init Mark (G)                 202 us
[42,229s][info ][gc,stats       ] Pause Init Mark (N)                  70 us
[42,229s][info ][gc,stats       ]   Update Region States               23 us
[42,229s][info ][gc,stats       ] Concurrent Mark Roots               970 us, parallelism: 1,98x
[42,229s][info ][gc,stats       ]   CMR: <total>                     1919 us
[42,229s][info ][gc,stats       ]   CMR: Thread Roots                1838 us, workers (us): 250, 811, 253, 258, 266, ---, ---, ---, ---, ---, 
[42,229s][info ][gc,stats       ]   CMR: VM Strong Roots                9 us, workers (us):   5,   3,   0,   0,   0, ---, ---, ---, ---, ---, 
[42,229s][info ][gc,stats       ]   CMR: CLDG Roots                    72 us, workers (us):  65, ---,   7, ---, ---, ---, ---, ---, ---, ---, 
[42,229s][info ][gc,stats       ] Concurrent Marking                56669 us
[42,229s][info ][gc,stats       ] Pause Final Mark (G)                597 us
[42,229s][info ][gc,stats       ] Pause Final Mark (N)                538 us
[42,229s][info ][gc,stats       ]   Finish Mark                       254 us
[42,229s][info ][gc,stats       ]   Update Region States              108 us
[42,229s][info ][gc,stats       ]   Choose Collection Set              92 us
[42,229s][info ][gc,stats       ]   Rebuild Free Set                   11 us
[42,229s][info ][gc,stats       ] Concurrent Thread Roots             725 us, parallelism: 1,98x
[42,229s][info ][gc,stats       ]   CTR: <total>                     1438 us
[42,229s][info ][gc,stats       ]   CTR: Thread Roots                1438 us, workers (us): 571, 243, 230, 200, 194, ---, ---, ---, ---, ---, 
[42,229s][info ][gc,stats       ] Concurrent Weak References         1061 us, parallelism: 1,91x
[42,229s][info ][gc,stats       ]   CWRF: <total>                    2023 us
[42,229s][info ][gc,stats       ]   CWRF: Weak References            2023 us, workers (us):  60, 224, 884, 855,   0, ---, ---, ---, ---, ---, 
[42,229s][info ][gc,stats       ] Concurrent Weak Roots               733 us
[42,229s][info ][gc,stats       ]   Roots                             568 us, parallelism: 3,31x
[42,229s][info ][gc,stats       ]     CWR: <total>                   1878 us
[42,229s][info ][gc,stats       ]     CWR: Code Cache Roots           936 us, workers (us): 167, 222, 168, 206, 173, ---, ---, ---, ---, ---, 
[42,229s][info ][gc,stats       ]     CWR: VM Weak Roots              932 us, workers (us): 239, 238, 179, 159, 117, ---, ---, ---, ---, ---, 
[42,229s][info ][gc,stats       ]     CWR: CLDG Roots                  10 us, workers (us):   6, ---, ---, ---,   4, ---, ---, ---, ---, ---, 
[42,229s][info ][gc,stats       ]   Rendezvous                        120 us
[42,229s][info ][gc,stats       ] Concurrent Cleanup                   96 us
[42,229s][info ][gc,stats       ] Concurrent Class Unloading         1056 us
[42,229s][info ][gc,stats       ]   Unlink Stale                      876 us
[42,229s][info ][gc,stats       ]     System Dictionary                35 us
[42,229s][info ][gc,stats       ]     Weak Class Links                  0 us
[42,229s][info ][gc,stats       ]     Code Roots                      840 us
[42,229s][info ][gc,stats       ]   Rendezvous                        117 us
[42,229s][info ][gc,stats       ]   Purge Unlinked                     33 us
[42,229s][info ][gc,stats       ]     Code Roots                       30 us
[42,229s][info ][gc,stats       ]     CLDG                              2 us
[42,229s][info ][gc,stats       ]     Exception Caches                  0 us
[42,229s][info ][gc,stats       ] Concurrent Strong Roots             232 us, parallelism: 0,88x
[42,229s][info ][gc,stats       ]   CSR: <total>                      205 us
[42,229s][info ][gc,stats       ]   CSR: VM Strong Roots               12 us, workers (us):  11,   1,   0,   0,   0, ---, ---, ---, ---, ---, 
[42,229s][info ][gc,stats       ]   CSR: CLDG Roots                   192 us, workers (us):  84, 108, ---, ---, ---, ---, ---, ---, ---, ---, 
[42,229s][info ][gc,stats       ] Concurrent Evacuation             52467 us
[42,229s][info ][gc,stats       ] Pause Init Update Refs (G)          218 us
[42,229s][info ][gc,stats       ] Pause Init Update Refs (N)           57 us
[42,229s][info ][gc,stats       ]   Manage GCLABs                       4 us
[42,229s][info ][gc,stats       ] Concurrent Update Refs            32573 us
[42,229s][info ][gc,stats       ] Concurrent Update Thread Roots     1172 us
[42,229s][info ][gc,stats       ] Pause Final Update Refs (G)         435 us
[42,229s][info ][gc,stats       ] Pause Final Update Refs (N)         252 us
[42,229s][info ][gc,stats       ]   Update Region States              150 us
[42,229s][info ][gc,stats       ]   Trash Collection Set                5 us
[42,229s][info ][gc,stats       ]   Rebuild Free Set                   16 us
[42,229s][info ][gc,stats       ] Concurrent Cleanup                  135 us
[42,229s][info ][gc,stats       ] 
[42,229s][info ][gc,stats       ] Allocation pacing accrued:
[42,229s][info ][gc,stats       ]       0 of  1379 ms (  0,0%): <total>
[42,229s][info ][gc,stats       ]       0 of  1379 ms (  0,0%): <average total>
[42,229s][info ][gc,stats       ] 
[42,229s][info ][gc,metaspace   ] Metaspace: 19772K(20224K)->19772K(20224K) NonClass: 17345K(17536K)->17345K(17536K) Class: 2426K(2688K)->2426K(2688K)
[42,229s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[42,825s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleLongs$FieldInstanceReadOnly.getVolatile [0x00007fae5d2ce810] (c1)
[42,826s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.tryInitializeHead [0x00007fae5d6e6490] (c1)
[42,826s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.newConditionNode [0x00007fae5d6e5590] (c1)
[42,826s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.<init> [0x00007fae5d2ce310] (c1)
[42,826s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.setStatusRelaxed [0x00007fae5d30d190] (c1)
[42,826s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.enableWait [0x00007fae5d6e4810] (c1)
[43,458s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.putIntOpaque [0x00007fae5d6e4490] (c1)
[43,458s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.clearStatus [0x00007fae5d6e4090] (c1)
[43,493s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae5d566010] (c1)
[44,117s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.enqueue [0x00007fae5d565410] (c1)
[44,135s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType$1.serializeBitmapReferencesPage [0x00007fae5d270510] (c1)
[44,141s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.Node.getPolicyWeight [0x00007fae7c9dad90] (c1)
[44,141s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.windowWeightedSize [0x00007fae7c9daa90] (c1)
[44,142s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block [0x00007fae5d26fa90] (c1)
[44,143s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae5d506290] (c1)
[44,889s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AbstractLinkedDeque.unlink [0x00007fae5d504610] (c1)
[45,779s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.atomic.AtomicReference.set [0x00007fae7c9da790] (c1)
[45,783s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.LockSupport.park [0x00007fae5d26f290] (c1)
[45,783s][debug][gc,nmethod     ] Register NMethod: java.util.Comparator.comparing [0x00007fae5d6d4590] (c1)
[45,783s][debug][gc,nmethod     ] Register NMethod: java.util.Comparator$$Lambda/0x00007fadb4097518.<init> [0x00007fae5d26ee90] (c1)
[45,783s][debug][gc,nmethod     ] Register NMethod: java.util.Comparator.reversed [0x00007fae5d504210] (c1)
[45,783s][debug][gc,nmethod     ] Register NMethod: java.util.Collections.reverseOrder [0x00007fae5d6d3c10] (c1)
[45,783s][debug][gc,nmethod     ] Register NMethod: java.util.Collections$ReverseComparator2.<init> [0x00007fae5d564f90] (c1)
[46,655s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx$$Lambda/0x00007fadb429aae8.<init> [0x00007fae5d6d3810] (c1)
[46,656s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.sequence [0x00007fae5d6d2990] (c1)
[46,656s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.allOf [0x00007fae5d6d2610] (c1)
[46,656s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.andTree [0x00007fae5d7b9d90] (c1)
[46,656s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.windowMaximum [0x00007fae7c9da490] (c1)
[46,656s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$BiRelay.<init> [0x00007fae5d7b9690] (c1)
[46,657s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$BiCompletion.<init> [0x00007fae5d7b9010] (c1)
[46,657s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.bipush [0x00007fae5d7b8290] (c1)
[46,657s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx$$Lambda/0x00007fadb429b398.apply [0x00007fae5d802a10] (c1)
[46,658s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$Signaller.block [0x00007fae5d802410] (c1)
[46,658s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire [0x00007fae5d5de410] (c1)
[46,659s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.lambda$sequence$1 [0x00007fae5d5dd790] (c1)
[46,659s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$UniApply.<init> [0x00007fae5d801d90] (c1)
[46,659s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$Signaller.<init> [0x00007fae5d801810] (c1)
[46,660s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$UniApply.tryFire [0x00007fae5d43d110] (c1)
[47,537s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.ResourceConfiguration.storeNodeHistory [0x00007fae7c9da190] (c1)
[47,539s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayDeque.<init> [0x00007fae5d801290] (c1)
[47,539s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$CoCompletion.tryFire [0x00007fae5d800d10] (c1)
[48,419s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.invokeStatic [0x00007fae5d800510] (c1)
[48,421s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.doSignal [0x00007fae5d7ff890] (c1)
[48,424s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind.deserializeNodeDelegate [0x00007fae5d7fe810] (c1)
[48,708s][info ][gc             ] Trigger: Free (1228M) is below minimum threshold (1228M)
[48,708s][info ][gc,ergo        ] Free: 1228M, Max: 4096K regular, 1228M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[48,708s][info ][gc,start       ] GC(17) Concurrent reset
[48,708s][info ][gc,task        ] GC(17) Using 5 of 10 workers for concurrent reset
[48,708s][info ][gc,ergo        ] GC(17) Pacer for Reset. Non-Taxable: 12288M
[48,712s][info ][gc             ] GC(17) Concurrent reset 4,126ms
[48,713s][info ][gc,start       ] GC(17) Pause Init Mark (unload classes)
[48,713s][info ][gc,task        ] GC(17) Using 10 of 10 workers for init marking
[48,713s][info ][gc,ergo        ] GC(17) Pacer for Mark. Expected Live: 422M, Free: 1224M, Non-Taxable: 122M, Alloc Tax Rate: 0,4x
[48,713s][info ][gc             ] GC(17) Pause Init Mark (unload classes) 0,092ms
[48,713s][info ][gc,start       ] GC(17) Concurrent marking roots
[48,713s][info ][gc,task        ] GC(17) Using 5 of 10 workers for concurrent marking roots
[48,713s][debug][gc,tlab        ] GC(17) TLAB totals: thrds: 26  refills: 90 max: 9 slow allocs: 35 max 15 waste: 11,2% gc: 32746832B max: 3425616B slow: 1129216B max: 113896B
[48,714s][info ][gc             ] GC(17) Concurrent marking roots 0,515ms
[48,714s][info ][gc,start       ] GC(17) Concurrent marking (unload classes)
[48,714s][info ][gc,task        ] GC(17) Using 5 of 10 workers for concurrent marking
[48,733s][info ][gc             ] GC(17) Concurrent marking (unload classes) 19,885ms
[48,734s][info ][gc,start       ] GC(17) Pause Final Mark (unload classes)
[48,734s][info ][gc,task        ] GC(17) Using 10 of 10 workers for final marking
[48,734s][info ][gc,ergo        ] GC(17) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 7056M, Max CSet: 512M, Min Garbage: 0B
[48,734s][info ][gc,ergo        ] GC(17) Collectable Garbage: 10257M (99%), Immediate: 5232M (50%), CSet: 5025M (48%)
[48,734s][info ][gc,ergo        ] GC(17) Pacer for Evacuation. Used CSet: 5208M, Free: 6440M, Non-Taxable: 644M, Alloc Tax Rate: 2,0x
[48,734s][info ][gc             ] GC(17) Pause Final Mark (unload classes) 0,552ms
[48,734s][info ][gc,start       ] GC(17) Concurrent thread roots
[48,734s][info ][gc,task        ] GC(17) Using 5 of 10 workers for Concurrent thread roots
[48,736s][info ][gc             ] GC(17) Concurrent thread roots 1,891ms
[48,736s][info ][gc,start       ] GC(17) Concurrent weak references
[48,736s][info ][gc,task        ] GC(17) Using 5 of 10 workers for concurrent weak references
[48,739s][info ][gc,ref         ] GC(17) Encountered references: Soft: 2320, Weak: 1836, Final: 17749, Phantom: 18052
[48,739s][info ][gc,ref         ] GC(17) Discovered  references: Soft: 0, Weak: 844, Final: 17749, Phantom: 18084
[48,739s][info ][gc,ref         ] GC(17) Enqueued    references: Soft: 0, Weak: 0, Final: 17749, Phantom: 17794
[48,739s][info ][gc             ] GC(17) Concurrent weak references 3,191ms
[48,739s][info ][gc,start       ] GC(17) Concurrent weak roots
[48,739s][info ][gc,task        ] GC(17) Using 5 of 10 workers for concurrent weak root
[48,740s][info ][gc             ] GC(17) Concurrent weak roots 0,579ms
[48,740s][info ][gc,start       ] GC(17) Concurrent cleanup
[48,740s][info ][gc             ] GC(17) Concurrent cleanup 10471M->5239M(10536M) 0,197ms
[48,740s][info ][gc,ergo        ] GC(17) Free: 6436M, Max: 4096K regular, 1680M humongous, Frag: 74% external, 0% internal; Reserve: 612M, Max: 4096K
[48,740s][info ][gc,start       ] GC(17) Concurrent class unloading
[48,740s][info ][gc,task        ] GC(17) Using 5 of 10 workers for concurrent class unloading
[48,740s][debug][gc,phases,start] GC(17) ClassLoaderData
[48,740s][debug][gc,phases      ] GC(17) ClassLoaderData 0,009ms
[48,740s][debug][gc,phases,start] GC(17) Trigger cleanups
[48,740s][debug][gc,phases      ] GC(17) Trigger cleanups 0,005ms
[48,741s][debug][gc,nmethod     ] GC(17) Unregister NMethod: java.lang.ref.Finalizer$FinalizerThread.run [0x00007fae5d6e9610]
[48,741s][debug][gc,nmethod     ] GC(17) Unregister NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae7cb43d90]
[48,741s][debug][gc,nmethod     ] GC(17) Unregister NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae7cb35c10]
[48,741s][debug][gc,nmethod     ] GC(17) Unregister NMethod: jdk.internal.misc.Unsafe.getLongUnaligned [0x00007fae5d597010]
[48,741s][debug][gc,nmethod     ] GC(17) Unregister NMethod: io.sirix.index.path.summary.PathSummaryReader$$Lambda/0x00007fadb429f340.apply [0x00007fae5d6b3210]
[48,741s][info ][gc             ] GC(17) Concurrent class unloading 0,866ms
[48,741s][info ][gc,start       ] GC(17) Concurrent strong roots
[48,741s][info ][gc,task        ] GC(17) Using 5 of 10 workers for concurrent strong root
[48,741s][info ][gc             ] GC(17) Concurrent strong roots 0,134ms
[48,741s][info ][gc,start       ] GC(17) Concurrent evacuation
[48,741s][info ][gc,task        ] GC(17) Using 5 of 10 workers for concurrent evacuation
[48,763s][info ][gc             ] GC(17) Concurrent evacuation 21,548ms
[48,764s][info ][gc,start       ] GC(17) Pause Init Update Refs
[48,764s][info ][gc,ergo        ] GC(17) Pacer for Update Refs. Used: 5448M, Free: 6420M, Non-Taxable: 642M, Alloc Tax Rate: 1,1x
[48,764s][info ][gc             ] GC(17) Pause Init Update Refs 0,042ms
[48,764s][info ][gc,start       ] GC(17) Concurrent update references
[48,764s][info ][gc,task        ] GC(17) Using 5 of 10 workers for concurrent reference update
[48,780s][info ][gc             ] GC(17) Concurrent update references 15,854ms
[48,780s][info ][gc,start       ] GC(17) Concurrent update thread roots
[48,781s][info ][gc             ] GC(17) Concurrent update thread roots 0,883ms
[48,781s][info ][gc,start       ] GC(17) Pause Final Update Refs
[48,781s][info ][gc,task        ] GC(17) Using 10 of 10 workers for final reference update
[48,781s][info ][gc             ] GC(17) Pause Final Update Refs 0,096ms
[48,781s][info ][gc,start       ] GC(17) Concurrent cleanup
[48,781s][info ][gc             ] GC(17) Concurrent cleanup 5460M->252M(10536M) 0,197ms
[48,781s][debug][gc,ergo        ] GC(17) Available: 11420 MB, z-score=1,347. Average available: 11024,0 MB +/- 294,0 MB.
[48,781s][info ][gc,ergo        ] Free: 11420M, Max: 4096K regular, 9892M humongous, Frag: 14% external, 0% internal; Reserve: 616M, Max: 4096K
[48,781s][info ][gc,stats       ] 
[48,781s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[48,781s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[48,781s][info ][gc,stats       ] 
[48,781s][info ][gc,stats       ] Concurrent Reset                   4153 us
[48,781s][info ][gc,stats       ] Pause Init Mark (G)                 987 us
[48,781s][info ][gc,stats       ] Pause Init Mark (N)                  99 us
[48,781s][info ][gc,stats       ]   Update Region States               49 us
[48,781s][info ][gc,stats       ] Concurrent Mark Roots               562 us, parallelism: 2,26x
[48,781s][info ][gc,stats       ]   CMR: <total>                     1272 us
[48,781s][info ][gc,stats       ]   CMR: Thread Roots                1208 us, workers (us): 446, 167, 205, 173, 217, ---, ---, ---, ---, ---, 
[48,781s][info ][gc,stats       ]   CMR: VM Strong Roots               10 us, workers (us):   2,   4,   2,   2,   0, ---, ---, ---, ---, ---, 
[48,781s][info ][gc,stats       ]   CMR: CLDG Roots                    54 us, workers (us): ---,  46,   7, ---, ---, ---, ---, ---, ---, ---, 
[48,781s][info ][gc,stats       ] Concurrent Marking                19914 us
[48,781s][info ][gc,stats       ] Pause Final Mark (G)                641 us
[48,781s][info ][gc,stats       ] Pause Final Mark (N)                560 us
[48,781s][info ][gc,stats       ]   Finish Mark                       267 us
[48,781s][info ][gc,stats       ]   Update Region States              138 us
[48,781s][info ][gc,stats       ]   Choose Collection Set             114 us
[48,781s][info ][gc,stats       ]   Rebuild Free Set                    9 us
[48,781s][info ][gc,stats       ] Concurrent Thread Roots            1924 us, parallelism: 4,08x
[48,781s][info ][gc,stats       ]   CTR: <total>                     7842 us
[48,781s][info ][gc,stats       ]   CTR: Thread Roots                7842 us, workers (us): 1389, 1315, 1739, 1718, 1680, ---, ---, ---, ---, ---, 
[48,781s][info ][gc,stats       ] Concurrent Weak References         3201 us, parallelism: 2,04x
[48,781s][info ][gc,stats       ]   CWRF: <total>                    6532 us
[48,781s][info ][gc,stats       ]   CWRF: Weak References            6532 us, workers (us): 1897, 1577, 3048,   9,   0, ---, ---, ---, ---, ---, 
[48,781s][info ][gc,stats       ] Concurrent Weak Roots               590 us
[48,781s][info ][gc,stats       ]   Roots                             496 us, parallelism: 3,84x
[48,781s][info ][gc,stats       ]     CWR: <total>                   1905 us
[48,781s][info ][gc,stats       ]     CWR: Code Cache Roots          1014 us, workers (us): 168, 216, 163, 227, 240, ---, ---, ---, ---, ---, 
[48,781s][info ][gc,stats       ]     CWR: VM Weak Roots              876 us, workers (us): 223, 176, 169, 154, 154, ---, ---, ---, ---, ---, 
[48,781s][info ][gc,stats       ]     CWR: CLDG Roots                  15 us, workers (us):   7, ---,   8, ---, ---, ---, ---, ---, ---, ---, 
[48,781s][info ][gc,stats       ]   Rendezvous                         71 us
[48,781s][info ][gc,stats       ] Concurrent Cleanup                  203 us
[48,781s][info ][gc,stats       ] Concurrent Class Unloading          873 us
[48,781s][info ][gc,stats       ]   Unlink Stale                      739 us
[48,781s][info ][gc,stats       ]     System Dictionary                31 us
[48,781s][info ][gc,stats       ]     Weak Class Links                  0 us
[48,781s][info ][gc,stats       ]     Code Roots                      707 us
[48,781s][info ][gc,stats       ]   Rendezvous                         65 us
[48,781s][info ][gc,stats       ]   Purge Unlinked                     53 us
[48,781s][info ][gc,stats       ]     Code Roots                       51 us
[48,781s][info ][gc,stats       ]     CLDG                              2 us
[48,781s][info ][gc,stats       ]     Exception Caches                  0 us
[48,781s][info ][gc,stats       ] Concurrent Strong Roots             142 us, parallelism: 1,28x
[48,781s][info ][gc,stats       ]   CSR: <total>                      182 us
[48,781s][info ][gc,stats       ]   CSR: VM Strong Roots               10 us, workers (us):   9,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[48,781s][info ][gc,stats       ]   CSR: CLDG Roots                   172 us, workers (us): 103,  69, ---, ---, ---, ---, ---, ---, ---, ---, 
[48,781s][info ][gc,stats       ] Concurrent Evacuation             21618 us
[48,781s][info ][gc,stats       ] Pause Init Update Refs (G)         1106 us
[48,781s][info ][gc,stats       ] Pause Init Update Refs (N)           54 us
[48,781s][info ][gc,stats       ]   Manage GCLABs                       4 us
[48,781s][info ][gc,stats       ] Concurrent Update Refs            15901 us
[48,781s][info ][gc,stats       ] Concurrent Update Thread Roots      938 us
[48,781s][info ][gc,stats       ] Pause Final Update Refs (G)         245 us
[48,781s][info ][gc,stats       ] Pause Final Update Refs (N)         109 us
[48,781s][info ][gc,stats       ]   Update Region States               35 us
[48,781s][info ][gc,stats       ]   Trash Collection Set               13 us
[48,781s][info ][gc,stats       ]   Rebuild Free Set                   12 us
[48,781s][info ][gc,stats       ] Concurrent Cleanup                  203 us
[48,781s][info ][gc,stats       ] 
[48,781s][info ][gc,stats       ] Allocation pacing accrued:
[48,781s][info ][gc,stats       ]       0 of  6552 ms (  0,0%): <total>
[48,781s][info ][gc,stats       ]       0 of  6552 ms (  0,0%): <average total>
[48,781s][info ][gc,stats       ] 
[48,781s][info ][gc,metaspace   ] Metaspace: 19799K(20288K)->19799K(20288K) NonClass: 17372K(17600K)->17372K(17600K) Class: 2426K(2688K)->2426K(2688K)
[48,781s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[49,146s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.DeweyIDPage.delegate [0x00007fae7c9d9e90] (c1)
[49,146s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.CASPage.delegate [0x00007fae7c9d9b90] (c1)
[49,146s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PathPage.delegate [0x00007fae7c9d9890] (c1)
[49,146s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getMaxNodeKeyInChangedNodesIndex [0x00007fae7c9d9590] (c1)
[49,146s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.UberPage.getRevisionCount [0x00007fae7cb44d10] (c1)
[49,146s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.UberPage.setBootstrap [0x00007fae7cb44a10] (c1)
[49,147s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.putLongUnaligned [0x00007fae7cb44710] (c2)
[49,151s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind$3.deserializePage [0x00007fae5d7fdd90] (c1)
[49,151s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.UberPage.<init> [0x00007fae5d6d2210] (c1)
[49,152s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.User.<init> [0x00007fae5d6e9610] (c1)
[49,152s][debug][gc,nmethod     ] Register NMethod: java.nio.ByteBuffer.get [0x00007fae5d6b3210] (c1)
[49,152s][debug][gc,nmethod     ] Register NMethod: java.nio.ByteBuffer.getArray [0x00007fae5d536b10] (c1)
[49,152s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.setMissesInSample [0x00007fae7cb44410] (c1)
[49,152s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.frequencySketch [0x00007fae7cb44110] (c1)
[49,152s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.setMissesInSample [0x00007fae7cb43d90] (c1)
[49,152s][debug][gc,nmethod     ] Register NMethod: java.util.UUID.<init> [0x00007fae5d597010] (c1)
[49,153s][debug][gc,nmethod     ] Register NMethod: java.lang.String.compareTo [0x00007fae7cb36b10] (c2)
[49,794s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await [0x00007fae5d6a7390] (c1)
[49,802s][debug][gc,nmethod     ] Register NMethod: org.magicwerk.brownies.collections.IList.iterator [0x00007fae5d7fd990] (c1)
[49,802s][debug][gc,nmethod     ] Register NMethod: org.magicwerk.brownies.collections.IList$Iter.<init> [0x00007fae5d7fd410] (c1)
[49,806s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractIndexController.getIndexes [0x00007fae7cb36810] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelReader.readRevisionRootPage [0x00007fae5d0fba10] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelReader$$Lambda/0x00007fadb42870d8.<init> [0x00007fae5d7fd010] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.LocalAsyncCache$$Lambda/0x00007fadb4287318.<init> [0x00007fae5d7fcb90] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.LocalAsyncCache.get [0x00007fae5d0fb590] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SingletonWeigher.weigh [0x00007fae7cb36510] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.keyReferenceQueue [0x00007fae7cb36210] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.valueReferenceQueue [0x00007fae7cb35f10] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue.lvProducerLimit [0x00007fae7cb35c10] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.LocalAsyncCache$AbstractCacheView.get [0x00007fae5d6a5f10] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.collectKeys [0x00007fae7cbd8a10] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.accessOrderProtectedDeque [0x00007fae7cbd8d10] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.LocalAsyncCache.get [0x00007fae5d535b90] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.accessOrderProtectedDeque [0x00007fae7cbd9010] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.windowWeightedSize [0x00007fae7cbd9310] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.windowMaximum [0x00007fae7cbd9610] (c1)
[49,808s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMSA.expirationTicker [0x00007fae7cbd9910] (c1)
[49,814s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae7cbd9c10] (c2)
[49,823s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae7cbdad90] (c2)
[49,824s][debug][gc,nmethod     ] Register NMethod: java.nio.HeapByteBuffer.getLong [0x00007fae7cbdc310] (c2)
[50,465s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue.poll [0x00007fae5d793690] (c1)
[51,115s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList$1.hasNext [0x00007fae7cbdc810] (c2)
[51,810s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.Utils.getVarLong [0x00007fae7cbdcb10] (c2)
[52,465s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.notifyJvmtiMount [0x00007fae7cbde590] ()
[52,465s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.notifyJvmtiEnd [0x00007fae7cbde910] ()
[52,465s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.scopedValueCache [0x00007fae7cbdec90] ()
[52,465s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.notifyJvmtiUnmount [0x00007fae7cbdf410] ()
[52,465s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.start [0x00007fae5d0fa810] (c1)
[52,465s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.notifyJvmtiStart [0x00007fae7cbdf790] ()
[52,466s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.ThreadContainer.onStart [0x00007fae5d43ce10] (c1)
[52,466s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.submitRunContinuation [0x00007fae5d535590] (c1)
[52,466s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec [0x00007fae5d535110] (c1)
[52,466s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread$$Lambda/0x00007fadb41de240.run [0x00007fae5d534b10] (c1)
[52,466s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.runContinuation [0x00007fae5d517590] (c1)
[52,466s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.mount [0x00007fae5d517010] (c1)
[52,466s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.compareAndSetMounted [0x00007fae5d516990] (c1)
[52,466s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractResourceSession.beginPageReadOnlyTrx [0x00007fae5d112b10] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.continuationScope [0x00007fae5d58f510] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.isStarted [0x00007fae5d112710] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.enter [0x00007fae5d111f90] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.enter0 [0x00007fae5d111b10] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.finish [0x00007fae5d793310] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx$$Lambda/0x00007fadb429b5d8.apply [0x00007fae5d516310] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.fence [0x00007fae5d111510] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.postYieldCleanup [0x00007fae5d515f90] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.unmount [0x00007fae5d515c10] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: java.lang.System$2.scopedValueCache [0x00007fae5d515890] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.afterTerminate [0x00007fae5d515510] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.ThreadContainer.onExit [0x00007fae5d6d8a10] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.clearReferences [0x00007fae5d514f90] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ThreadPerTaskExecutor$TaskRunner.run [0x00007fae5d5e4390] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx$$Lambda/0x00007fadb429b168.accept [0x00007fae5d5e3c10] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: java.lang.System$2.virtualThreadContinuationScope [0x00007fae5d5e3890] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: java.lang.System$2.getContinuation [0x00007fae5d5e3410] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread$VThreadContinuation$1.run [0x00007fae5d5e2f90] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.putLongOpaque [0x00007fae5d5e2c10] (c1)
[52,467s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ThreadPerTaskExecutor.taskComplete [0x00007fae5d5e2690] (c1)
[52,468s][debug][gc,nmethod     ] Register NMethod: jdk.internal.vm.Continuation.run [0x00007fae5d52a790] (c1)
[53,075s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.tryPoll [0x00007fae7cbdfb10] (c2)
[53,141s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.getAndAddCtl [0x00007fae7cbe0090] (c2)
[53,810s][debug][gc,nmethod     ] Register NMethod: net.jpountz.util.SafeUtils.checkRange [0x00007fae7cbe0390] (c2)
[54,466s][info ][gc             ] Trigger: Explicit GC request (System.gc())
[54,466s][info ][gc,ergo        ] Free: 1360M, Max: 4096K regular, 1360M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[54,466s][info ][gc,start       ] GC(18) Concurrent reset
[54,466s][info ][gc,task        ] GC(18) Using 5 of 10 workers for concurrent reset
[54,466s][info ][gc,ergo        ] GC(18) Pacer for Reset. Non-Taxable: 12288M
[54,471s][info ][gc             ] GC(18) Concurrent reset 4,130ms
[54,478s][info ][gc,start       ] GC(18) Pause Init Mark (unload classes)
[54,478s][info ][gc,task        ] GC(18) Using 10 of 10 workers for init marking
[54,478s][info ][gc,ref         ] GC(18) Clearing All SoftReferences
[54,478s][info ][gc,ergo        ] GC(18) Pacer for Mark. Expected Live: 355M, Free: 1332M, Non-Taxable: 133M, Alloc Tax Rate: 0,3x
[54,478s][info ][gc             ] GC(18) Pause Init Mark (unload classes) 0,103ms
[54,478s][info ][gc,start       ] GC(18) Concurrent marking roots
[54,478s][info ][gc,task        ] GC(18) Using 5 of 10 workers for concurrent marking roots
[54,478s][debug][gc,tlab        ] GC(18) TLAB totals: thrds: 10  refills: 1098 max: 144 slow allocs: 176 max 51 waste:  1,6% gc: 21109488B max: 3397456B slow: 15555896B max: 2084688B
[54,479s][info ][gc             ] GC(18) Concurrent marking roots 0,856ms
[54,479s][info ][gc,start       ] GC(18) Concurrent marking (unload classes)
[54,479s][info ][gc,task        ] GC(18) Using 5 of 10 workers for concurrent marking
[54,529s][info ][gc             ] GC(18) Concurrent marking (unload classes) 49,687ms
[54,529s][info ][gc,start       ] GC(18) Pause Final Mark (unload classes)
[54,529s][info ][gc,task        ] GC(18) Using 10 of 10 workers for final marking
[54,529s][info ][gc,ergo        ] GC(18) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 6604M, Max CSet: 512M, Min Garbage: 0B
[54,530s][info ][gc,ergo        ] GC(18) Collectable Garbage: 9810M (99%), Immediate: 4688M (47%), CSet: 5122M (52%)
[54,530s][info ][gc,ergo        ] GC(18) Pacer for Evacuation. Used CSet: 5632M, Free: 5988M, Non-Taxable: 598M, Alloc Tax Rate: 2,3x
[54,530s][info ][gc             ] GC(18) Pause Final Mark (unload classes) 0,694ms
[54,530s][info ][gc,start       ] GC(18) Concurrent thread roots
[54,530s][info ][gc,task        ] GC(18) Using 5 of 10 workers for Concurrent thread roots
[54,531s][info ][gc             ] GC(18) Concurrent thread roots 1,010ms
[54,531s][info ][gc,start       ] GC(18) Concurrent weak references
[54,531s][info ][gc,task        ] GC(18) Using 5 of 10 workers for concurrent weak references
[54,534s][info ][gc,ref         ] GC(18) Encountered references: Soft: 2319, Weak: 1833, Final: 18248, Phantom: 18496
[54,534s][info ][gc,ref         ] GC(18) Discovered  references: Soft: 1198, Weak: 719, Final: 18247, Phantom: 18631
[54,534s][info ][gc,ref         ] GC(18) Enqueued    references: Soft: 0, Weak: 0, Final: 18247, Phantom: 18293
[54,534s][info ][gc             ] GC(18) Concurrent weak references 3,429ms
[54,534s][info ][gc,start       ] GC(18) Concurrent weak roots
[54,534s][info ][gc,task        ] GC(18) Using 5 of 10 workers for concurrent weak root
[54,535s][info ][gc             ] GC(18) Concurrent weak roots 0,571ms
[54,535s][info ][gc,start       ] GC(18) Concurrent cleanup
[54,535s][info ][gc             ] GC(18) Concurrent cleanup 10375M->5687M(10764M) 0,178ms
[54,535s][info ][gc,ergo        ] GC(18) Free: 5988M, Max: 4096K regular, 1472M humongous, Frag: 76% external, 0% internal; Reserve: 612M, Max: 4096K
[54,535s][info ][gc,start       ] GC(18) Concurrent class unloading
[54,535s][info ][gc,task        ] GC(18) Using 5 of 10 workers for concurrent class unloading
[54,535s][debug][gc,phases,start] GC(18) ClassLoaderData
[54,535s][debug][gc,phases      ] GC(18) ClassLoaderData 0,009ms
[54,535s][debug][gc,phases,start] GC(18) Trigger cleanups
[54,535s][debug][gc,phases      ] GC(18) Trigger cleanups 0,006ms
[54,536s][debug][gc,nmethod     ] GC(18) Unregister NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae5d506290]
[54,536s][debug][gc,nmethod     ] GC(18) Unregister NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae5d566010]
[54,536s][debug][gc,nmethod     ] GC(18) Unregister NMethod: it.unimi.dsi.fastutil.shorts.ShortArrayList$1.hasNext [0x00007fae5d6a2890]
[54,536s][debug][gc,nmethod     ] GC(18) Unregister NMethod: java.util.concurrent.ForkJoinPool.getAndAddCtl [0x00007fae5d4cf910]
[54,536s][debug][gc,nmethod     ] GC(18) Unregister NMethod: java.lang.String.compareTo [0x00007fae5d608e90]
[54,536s][debug][gc,nmethod     ] GC(18) Unregister NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.tryPoll [0x00007fae5d182690]
[54,536s][debug][gc,nmethod     ] GC(18) Unregister NMethod: java.nio.HeapByteBuffer.getLong [0x00007fae5d115b10]
[54,536s][debug][gc,nmethod     ] GC(18) Unregister NMethod: net.jpountz.util.SafeUtils.checkRange [0x00007fae5d6ff790]
[54,536s][debug][gc,nmethod     ] GC(18) Unregister NMethod: io.sirix.node.Utils.getVarLong [0x00007fae5d800010]
[54,536s][info ][gc             ] GC(18) Concurrent class unloading 1,016ms
[54,536s][info ][gc,start       ] GC(18) Concurrent strong roots
[54,536s][info ][gc,task        ] GC(18) Using 5 of 10 workers for concurrent strong root
[54,536s][info ][gc             ] GC(18) Concurrent strong roots 0,177ms
[54,536s][info ][gc,start       ] GC(18) Concurrent evacuation
[54,536s][info ][gc,task        ] GC(18) Using 5 of 10 workers for concurrent evacuation
[54,586s][info ][gc             ] GC(18) Concurrent evacuation 49,458ms
[54,586s][info ][gc,start       ] GC(18) Pause Init Update Refs
[54,586s][info ][gc,ergo        ] GC(18) Pacer for Update Refs. Used: 6208M, Free: 5988M, Non-Taxable: 598M, Alloc Tax Rate: 1,3x
[54,586s][info ][gc             ] GC(18) Pause Init Update Refs 0,039ms
[54,586s][info ][gc,start       ] GC(18) Concurrent update references
[54,586s][info ][gc,task        ] GC(18) Using 5 of 10 workers for concurrent reference update
[54,621s][info ][gc             ] GC(18) Concurrent update references 35,520ms
[54,621s][info ][gc,start       ] GC(18) Concurrent update thread roots
[54,623s][info ][gc             ] GC(18) Concurrent update thread roots 1,554ms
[54,623s][info ][gc,start       ] GC(18) Pause Final Update Refs
[54,623s][info ][gc,task        ] GC(18) Using 10 of 10 workers for final reference update
[54,623s][info ][gc             ] GC(18) Pause Final Update Refs 0,140ms
[54,623s][info ][gc,start       ] GC(18) Concurrent cleanup
[54,623s][info ][gc             ] GC(18) Concurrent cleanup 6208M->576M(10764M) 0,194ms
[54,623s][debug][gc,ergo        ] GC(18) Available: 11096 MB, z-score=0,120. Average available: 11063,2 MB +/- 274,2 MB.
[54,623s][info ][gc,ergo        ] Free: 11096M, Max: 4096K regular, 9280M humongous, Frag: 17% external, 0% internal; Reserve: 616M, Max: 4096K
[54,623s][info ][gc,stats       ] 
[54,623s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[54,623s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[54,623s][info ][gc,stats       ] 
[54,623s][info ][gc,stats       ] Concurrent Reset                   4200 us
[54,623s][info ][gc,stats       ] Pause Init Mark (G)                7626 us
[54,623s][info ][gc,stats       ] Pause Init Mark (N)                 116 us
[54,623s][info ][gc,stats       ]   Update Region States               27 us
[54,623s][info ][gc,stats       ] Concurrent Mark Roots               874 us, parallelism: 1,71x
[54,623s][info ][gc,stats       ]   CMR: <total>                     1492 us
[54,623s][info ][gc,stats       ]   CMR: Thread Roots                1434 us, workers (us): 658, 182, 194, 198, 201, ---, ---, ---, ---, ---, 
[54,623s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   5,   2,   0,   0,   0, ---, ---, ---, ---, ---, 
[54,623s][info ][gc,stats       ]   CMR: CLDG Roots                    50 us, workers (us):   8,  41, ---, ---, ---, ---, ---, ---, ---, ---, 
[54,623s][info ][gc,stats       ] Concurrent Marking                49731 us
[54,623s][info ][gc,stats       ] Pause Final Mark (G)                809 us
[54,623s][info ][gc,stats       ] Pause Final Mark (N)                706 us
[54,624s][info ][gc,stats       ]   Finish Mark                       325 us
[54,624s][info ][gc,stats       ]   Update Region States              106 us
[54,624s][info ][gc,stats       ]   Choose Collection Set             204 us
[54,624s][info ][gc,stats       ]   Rebuild Free Set                   11 us
[54,624s][info ][gc,stats       ] Concurrent Thread Roots            1027 us, parallelism: 1,67x
[54,624s][info ][gc,stats       ]   CTR: <total>                     1714 us
[54,624s][info ][gc,stats       ]   CTR: Thread Roots                1714 us, workers (us): 829, 298, 198, 204, 186, ---, ---, ---, ---, ---, 
[54,624s][info ][gc,stats       ] Concurrent Weak References         3437 us, parallelism: 1,99x
[54,624s][info ][gc,stats       ]   CWRF: <total>                    6847 us
[54,624s][info ][gc,stats       ]   CWRF: Weak References            6847 us, workers (us): 3280, 1132, 339, 1994, 102, ---, ---, ---, ---, ---, 
[54,624s][info ][gc,stats       ] Concurrent Weak Roots               582 us
[54,624s][info ][gc,stats       ]   Roots                             528 us, parallelism: 3,35x
[54,624s][info ][gc,stats       ]     CWR: <total>                   1768 us
[54,624s][info ][gc,stats       ]     CWR: Code Cache Roots           908 us, workers (us): 214, 163, 181, 175, 174, ---, ---, ---, ---, ---, 
[54,624s][info ][gc,stats       ]     CWR: VM Weak Roots              836 us, workers (us): 258, 175, 139, 134, 130, ---, ---, ---, ---, ---, 
[54,624s][info ][gc,stats       ]     CWR: CLDG Roots                  24 us, workers (us): ---,  12, ---,  12, ---, ---, ---, ---, ---, ---, 
[54,624s][info ][gc,stats       ]   Rendezvous                         33 us
[54,624s][info ][gc,stats       ] Concurrent Cleanup                  185 us
[54,624s][info ][gc,stats       ] Concurrent Class Unloading         1022 us
[54,624s][info ][gc,stats       ]   Unlink Stale                      891 us
[54,624s][info ][gc,stats       ]     System Dictionary                26 us
[54,624s][info ][gc,stats       ]     Weak Class Links                  0 us
[54,624s][info ][gc,stats       ]     Code Roots                      863 us
[54,624s][info ][gc,stats       ]   Rendezvous                         40 us
[54,624s][info ][gc,stats       ]   Purge Unlinked                     76 us
[54,624s][info ][gc,stats       ]     Code Roots                       74 us
[54,624s][info ][gc,stats       ]     CLDG                              2 us
[54,624s][info ][gc,stats       ]     Exception Caches                  0 us
[54,624s][info ][gc,stats       ] Concurrent Strong Roots             187 us, parallelism: 1,33x
[54,624s][info ][gc,stats       ]   CSR: <total>                      249 us
[54,624s][info ][gc,stats       ]   CSR: VM Strong Roots               16 us, workers (us):   6,   6,   2,   2,   0, ---, ---, ---, ---, ---, 
[54,624s][info ][gc,stats       ]   CSR: CLDG Roots                   233 us, workers (us): 149,  84, ---, ---, ---, ---, ---, ---, ---, ---, 
[54,624s][info ][gc,stats       ] Concurrent Evacuation             49504 us
[54,624s][info ][gc,stats       ] Pause Init Update Refs (G)          119 us
[54,624s][info ][gc,stats       ] Pause Init Update Refs (N)           50 us
[54,624s][info ][gc,stats       ]   Manage GCLABs                       4 us
[54,624s][info ][gc,stats       ] Concurrent Update Refs            35563 us
[54,624s][info ][gc,stats       ] Concurrent Update Thread Roots     1579 us
[54,624s][info ][gc,stats       ] Pause Final Update Refs (G)         174 us
[54,624s][info ][gc,stats       ] Pause Final Update Refs (N)         155 us
[54,624s][info ][gc,stats       ]   Update Region States               30 us
[54,624s][info ][gc,stats       ]   Trash Collection Set               56 us
[54,624s][info ][gc,stats       ]   Rebuild Free Set                   16 us
[54,624s][info ][gc,stats       ] Concurrent Cleanup                  201 us
[54,624s][info ][gc,stats       ] Pacing                            14328 us
[54,624s][info ][gc,stats       ] 
[54,624s][info ][gc,stats       ] Allocation pacing accrued:
[54,624s][info ][gc,stats       ]      14 of  5842 ms (  0,2%): ForkJoinPool.commonPool-worker-4
[54,624s][info ][gc,stats       ]      14 of  5842 ms (  0,2%): <total>
[54,624s][info ][gc,stats       ]       0 of  5842 ms (  0,0%): <average total>
[54,624s][info ][gc,stats       ]      14 of  5842 ms (  0,2%): <average non-zero>
[54,624s][info ][gc,stats       ] 
[54,624s][info ][gc,metaspace   ] Metaspace: 19843K(20288K)->19843K(20288K) NonClass: 17417K(17600K)->17417K(17600K) Class: 2426K(2688K)->2426K(2688K)
[54,624s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[54,624s][info ][gc,start       ] Concurrent uncommit
[54,747s][info ][gc             ] Concurrent uncommit 586M->706M(5120M) 122,851ms
[54,748s][info ][gc             ] Trigger: Explicit GC request (System.gc())
[54,748s][info ][gc,ergo        ] Free: 10965M, Max: 4096K regular, 9172M humongous, Frag: 17% external, 0% internal; Reserve: 616M, Max: 4096K
[54,748s][info ][gc,start       ] GC(19) Concurrent reset
[54,748s][info ][gc,task        ] GC(19) Using 5 of 10 workers for concurrent reset
[54,748s][info ][gc,ergo        ] GC(19) Pacer for Reset. Non-Taxable: 12288M
[54,750s][info ][gc             ] GC(19) Concurrent reset 1,969ms
[54,750s][info ][gc,start       ] GC(19) Pause Init Mark (unload classes)
[54,750s][info ][gc,task        ] GC(19) Using 10 of 10 workers for init marking
[54,750s][info ][gc,ref         ] GC(19) Clearing All SoftReferences
[54,750s][info ][gc,ergo        ] GC(19) Pacer for Mark. Expected Live: 350M, Free: 10965M, Non-Taxable: 1096M, Alloc Tax Rate: 0,0x
[54,750s][info ][gc             ] GC(19) Pause Init Mark (unload classes) 0,077ms
[54,750s][info ][gc,start       ] GC(19) Concurrent marking roots
[54,750s][info ][gc,task        ] GC(19) Using 5 of 10 workers for concurrent marking roots
[54,750s][debug][gc,tlab        ] GC(19) TLAB totals: thrds: 9  refills: 9 max: 1 slow allocs: 0 max 0 waste: 95,1% gc: 32819864B max: 4184784B slow: 0B max: 0B
[54,751s][info ][gc             ] GC(19) Concurrent marking roots 0,709ms
[54,751s][info ][gc,start       ] GC(19) Concurrent marking (unload classes)
[54,751s][info ][gc,task        ] GC(19) Using 5 of 10 workers for concurrent marking
[54,795s][info ][gc             ] GC(19) Concurrent marking (unload classes) 44,589ms
[54,796s][info ][gc,start       ] GC(19) Pause Final Mark (unload classes)
[54,796s][info ][gc,task        ] GC(19) Using 10 of 10 workers for final marking
[54,796s][info ][gc,ergo        ] GC(19) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 11580M, Max CSet: 512M, Min Garbage: 0B
[54,796s][info ][gc,ergo        ] GC(19) Collectable Garbage: 158M (98%), Immediate: 0B (0%), CSet: 158M (98%)
[54,796s][info ][gc,ergo        ] GC(19) Pacer for Evacuation. Used CSet: 198M, Free: 10964M, Non-Taxable: 1096M, Alloc Tax Rate: 1,1x
[54,796s][info ][gc             ] GC(19) Pause Final Mark (unload classes) 0,315ms
[54,796s][info ][gc,start       ] GC(19) Concurrent thread roots
[54,796s][info ][gc,task        ] GC(19) Using 5 of 10 workers for Concurrent thread roots
[54,798s][info ][gc             ] GC(19) Concurrent thread roots 1,838ms
[54,798s][info ][gc,start       ] GC(19) Concurrent weak references
[54,798s][info ][gc,task        ] GC(19) Using 5 of 10 workers for concurrent weak references
[54,798s][info ][gc,ref         ] GC(19) Encountered references: Soft: 2320, Weak: 1839, Final: 470, Phantom: 854
[54,798s][info ][gc,ref         ] GC(19) Discovered  references: Soft: 176, Weak: 398, Final: 470, Phantom: 722
[54,798s][info ][gc,ref         ] GC(19) Enqueued    references: Soft: 0, Weak: 0, Final: 470, Phantom: 471
[54,798s][info ][gc             ] GC(19) Concurrent weak references 0,280ms
[54,798s][info ][gc,start       ] GC(19) Concurrent weak roots
[54,798s][info ][gc,task        ] GC(19) Using 5 of 10 workers for concurrent weak root
[54,801s][info ][gc             ] GC(19) Concurrent weak roots 2,916ms
[54,801s][info ][gc,start       ] GC(19) Concurrent cleanup
[54,801s][info ][gc             ] GC(19) Concurrent cleanup 708M->708M(5124M) 0,152ms
[54,801s][info ][gc,ergo        ] GC(19) Free: 10964M, Max: 4096K regular, 9172M humongous, Frag: 17% external, 0% internal; Reserve: 614M, Max: 4096K
[54,801s][info ][gc,start       ] GC(19) Concurrent class unloading
[54,801s][info ][gc,task        ] GC(19) Using 5 of 10 workers for concurrent class unloading
[54,801s][debug][gc,phases,start] GC(19) ClassLoaderData
[54,801s][debug][gc,phases      ] GC(19) ClassLoaderData 0,009ms
[54,801s][debug][gc,phases,start] GC(19) Trigger cleanups
[54,801s][debug][gc,phases      ] GC(19) Trigger cleanups 0,004ms
[54,803s][info ][gc             ] GC(19) Concurrent class unloading 1,909ms
[54,803s][info ][gc,start       ] GC(19) Concurrent strong roots
[54,803s][info ][gc,task        ] GC(19) Using 5 of 10 workers for concurrent strong root
[54,803s][info ][gc             ] GC(19) Concurrent strong roots 0,230ms
[54,803s][info ][gc,start       ] GC(19) Concurrent evacuation
[54,803s][info ][gc,task        ] GC(19) Using 5 of 10 workers for concurrent evacuation
[54,819s][info ][gc             ] GC(19) Concurrent evacuation 15,624ms
[54,819s][info ][gc,start       ] GC(19) Pause Init Update Refs
[54,819s][info ][gc,ergo        ] GC(19) Pacer for Update Refs. Used: 756M, Free: 10964M, Non-Taxable: 1096M, Alloc Tax Rate: 1,1x
[54,819s][info ][gc             ] GC(19) Pause Init Update Refs 0,041ms
[54,819s][info ][gc,start       ] GC(19) Concurrent update references
[54,819s][info ][gc,task        ] GC(19) Using 5 of 10 workers for concurrent reference update
[54,851s][info ][gc             ] GC(19) Concurrent update references 31,421ms
[54,851s][info ][gc,start       ] GC(19) Concurrent update thread roots
[54,852s][info ][gc             ] GC(19) Concurrent update thread roots 1,560ms
[54,852s][info ][gc,start       ] GC(19) Pause Final Update Refs
[54,852s][info ][gc,task        ] GC(19) Using 10 of 10 workers for final reference update
[54,852s][info ][gc             ] GC(19) Pause Final Update Refs 0,168ms
[54,853s][info ][gc,start       ] GC(19) Concurrent cleanup
[54,853s][info ][gc             ] GC(19) Concurrent cleanup 756M->557M(5172M) 0,155ms
[54,853s][debug][gc,ergo        ] GC(19) Available: 11114 MB, z-score=0,088. Average available: 11091,0 MB +/- 263,6 MB.
[54,853s][info ][gc,ergo        ] Free: 11114M, Max: 4096K regular, 11088M humongous, Frag: 1% external, 0% internal; Reserve: 616M, Max: 4096K
[54,853s][info ][gc,stats       ] 
[54,853s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[54,853s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[54,853s][info ][gc,stats       ] 
[54,853s][info ][gc,stats       ] Concurrent Reset                   2012 us
[54,853s][info ][gc,stats       ] Pause Init Mark (G)                 199 us
[54,853s][info ][gc,stats       ] Pause Init Mark (N)                  88 us
[54,853s][info ][gc,stats       ]   Update Region States               18 us
[54,853s][info ][gc,stats       ] Concurrent Mark Roots               728 us, parallelism: 2,41x
[54,853s][info ][gc,stats       ]   CMR: <total>                     1751 us
[54,853s][info ][gc,stats       ]   CMR: Thread Roots                1691 us, workers (us): 355, 507, 345, 233, 251, ---, ---, ---, ---, ---, 
[54,853s][info ][gc,stats       ]   CMR: VM Strong Roots                6 us, workers (us):   5,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[54,853s][info ][gc,stats       ]   CMR: CLDG Roots                    55 us, workers (us):  49,   6, ---, ---, ---, ---, ---, ---, ---, ---, 
[54,853s][info ][gc,stats       ] Concurrent Marking                44638 us
[54,853s][info ][gc,stats       ] Pause Final Mark (G)                415 us
[54,853s][info ][gc,stats       ] Pause Final Mark (N)                327 us
[54,853s][info ][gc,stats       ]   Finish Mark                       168 us
[54,853s][info ][gc,stats       ]   Update Region States               17 us
[54,853s][info ][gc,stats       ]   Choose Collection Set              68 us
[54,853s][info ][gc,stats       ]   Rebuild Free Set                   13 us
[54,853s][info ][gc,stats       ] Concurrent Thread Roots            1861 us, parallelism: 3,63x
[54,853s][info ][gc,stats       ]   CTR: <total>                     6747 us
[54,853s][info ][gc,stats       ]   CTR: Thread Roots                6747 us, workers (us): 1197, 1481, 1197, 1689, 1183, ---, ---, ---, ---, ---, 
[54,853s][info ][gc,stats       ] Concurrent Weak References          288 us, parallelism: 0,95x
[54,853s][info ][gc,stats       ]   CWRF: <total>                     275 us
[54,853s][info ][gc,stats       ]   CWRF: Weak References             275 us, workers (us): 127,  48,  98,   1,   0, ---, ---, ---, ---, ---, 
[54,853s][info ][gc,stats       ] Concurrent Weak Roots              2939 us
[54,853s][info ][gc,stats       ]   Roots                             517 us, parallelism: 3,32x
[54,853s][info ][gc,stats       ]     CWR: <total>                   1717 us
[54,853s][info ][gc,stats       ]     CWR: Code Cache Roots           877 us, workers (us): 204, 168, 169, 170, 165, ---, ---, ---, ---, ---, 
[54,853s][info ][gc,stats       ]     CWR: VM Weak Roots              831 us, workers (us): 221, 214, 177, 107, 112, ---, ---, ---, ---, ---, 
[54,853s][info ][gc,stats       ]     CWR: CLDG Roots                  10 us, workers (us): ---,   3, ---,   6, ---, ---, ---, ---, ---, ---, 
[54,853s][info ][gc,stats       ]   Rendezvous                       2387 us
[54,853s][info ][gc,stats       ] Concurrent Cleanup                  159 us
[54,853s][info ][gc,stats       ] Concurrent Class Unloading         1926 us
[54,853s][info ][gc,stats       ]   Unlink Stale                      901 us
[54,853s][info ][gc,stats       ]     System Dictionary                24 us
[54,853s][info ][gc,stats       ]     Weak Class Links                  0 us
[54,853s][info ][gc,stats       ]     Code Roots                      876 us
[54,853s][info ][gc,stats       ]   Rendezvous                        994 us
[54,853s][info ][gc,stats       ]   Purge Unlinked                      3 us
[54,853s][info ][gc,stats       ]     Code Roots                        0 us
[54,853s][info ][gc,stats       ]     CLDG                              2 us
[54,853s][info ][gc,stats       ]     Exception Caches                  0 us
[54,853s][info ][gc,stats       ] Concurrent Strong Roots             247 us, parallelism: 1,06x
[54,853s][info ][gc,stats       ]   CSR: <total>                      262 us
[54,853s][info ][gc,stats       ]   CSR: VM Strong Roots               47 us, workers (us):  43,   3,   0,   0,   0, ---, ---, ---, ---, ---, 
[54,853s][info ][gc,stats       ]   CSR: CLDG Roots                   216 us, workers (us): 111, 105, ---, ---, ---, ---, ---, ---, ---, ---, 
[54,853s][info ][gc,stats       ] Concurrent Evacuation             15669 us
[54,853s][info ][gc,stats       ] Pause Init Update Refs (G)          163 us
[54,853s][info ][gc,stats       ] Pause Init Update Refs (N)           53 us
[54,853s][info ][gc,stats       ]   Manage GCLABs                       3 us
[54,853s][info ][gc,stats       ] Concurrent Update Refs            31458 us
[54,853s][info ][gc,stats       ] Concurrent Update Thread Roots     1580 us
[54,853s][info ][gc,stats       ] Pause Final Update Refs (G)         326 us
[54,853s][info ][gc,stats       ] Pause Final Update Refs (N)         185 us
[54,853s][info ][gc,stats       ]   Update Region States              117 us
[54,853s][info ][gc,stats       ]   Trash Collection Set                3 us
[54,853s][info ][gc,stats       ]   Rebuild Free Set                   16 us
[54,853s][info ][gc,stats       ] Concurrent Cleanup                  164 us
[54,853s][info ][gc,stats       ] 
[54,853s][info ][gc,stats       ] Allocation pacing accrued:
[54,853s][info ][gc,stats       ]       0 of   229 ms (  0,0%): <total>
[54,853s][info ][gc,stats       ]       0 of   229 ms (  0,0%): <average total>
[54,853s][info ][gc,stats       ] 
[54,853s][info ][gc,metaspace   ] Metaspace: 19843K(20288K)->19843K(20288K) NonClass: 17417K(17600K)->17417K(17600K) Class: 2426K(2688K)->2426K(2688K)
[54,853s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[54,853s][info ][gc,start       ] Concurrent uncommit
[54,856s][info ][gc             ] Concurrent uncommit 617M->625M(5120M) 3,099ms
[54,895s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.FileChannelImpl.endBlocking [0x00007fae7cbe0790] (c2)
[54,915s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.IOUtil.read [0x00007fae7cbe0f90] (c2)
[54,926s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.FileChannelImpl.read [0x00007fae7cbe4f90] (c2)
[55,610s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getPreviousPageFragments [0x00007fae5d7c5990] (c1)
[55,611s][debug][gc,nmethod     ] Register NMethod: java.util.Arrays.fill [0x00007fae7cbe7610] (c2)
[55,612s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getReader [0x00007fae7cbe7b10] (c2)
[56,338s][info ][gc             ] Trigger: Learning 2 of 5. Free (8598M) is below initial threshold (8601M)
[56,339s][info ][gc,ergo        ] Free: 8598M, Max: 4096K regular, 8596M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[56,339s][info ][gc,start       ] GC(20) Concurrent reset
[56,339s][info ][gc,task        ] GC(20) Using 5 of 10 workers for concurrent reset
[56,339s][info ][gc,ergo        ] GC(20) Pacer for Reset. Non-Taxable: 12288M
[56,339s][info ][gc             ] GC(20) Concurrent reset 0,910ms
[56,340s][info ][gc,start       ] GC(20) Pause Init Mark (unload classes)
[56,340s][info ][gc,task        ] GC(20) Using 10 of 10 workers for init marking
[56,340s][info ][gc,ergo        ] GC(20) Pacer for Mark. Expected Live: 447M, Free: 8598M, Non-Taxable: 859M, Alloc Tax Rate: 0,1x
[56,340s][info ][gc             ] GC(20) Pause Init Mark (unload classes) 0,220ms
[56,340s][info ][gc,start       ] GC(20) Concurrent marking roots
[56,340s][info ][gc,task        ] GC(20) Using 5 of 10 workers for concurrent marking roots
[56,340s][info ][gc             ] GC(20) Concurrent marking roots 0,594ms
[56,340s][info ][gc,start       ] GC(20) Concurrent marking (unload classes)
[56,340s][info ][gc,task        ] GC(20) Using 5 of 10 workers for concurrent marking
[56,347s][info ][gc             ] GC(20) Concurrent marking (unload classes) 6,561ms
[56,347s][info ][gc,start       ] GC(20) Pause Final Mark (unload classes)
[56,347s][info ][gc,task        ] GC(20) Using 10 of 10 workers for final marking
[56,347s][info ][gc,ergo        ] GC(20) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10933M, Max CSet: 512M, Min Garbage: 0B
[56,347s][info ][gc,ergo        ] GC(20) Collectable Garbage: 3010M (99%), Immediate: 1729M (57%), CSet: 1280M (42%)
[56,347s][info ][gc,ergo        ] GC(20) Pacer for Evacuation. Used CSet: 1336M, Free: 10320M, Non-Taxable: 1032M, Alloc Tax Rate: 1,1x
[56,347s][info ][gc             ] GC(20) Pause Final Mark (unload classes) 0,370ms
[56,347s][info ][gc,start       ] GC(20) Concurrent thread roots
[56,347s][info ][gc,task        ] GC(20) Using 5 of 10 workers for Concurrent thread roots
[56,349s][info ][gc             ] GC(20) Concurrent thread roots 1,731ms
[56,349s][info ][gc,start       ] GC(20) Concurrent weak references
[56,349s][info ][gc,task        ] GC(20) Using 5 of 10 workers for concurrent weak references
[56,350s][info ][gc,ref         ] GC(20) Encountered references: Soft: 2320, Weak: 1838, Final: 4413, Phantom: 4627
[56,350s][info ][gc,ref         ] GC(20) Discovered  references: Soft: 0, Weak: 887, Final: 4413, Phantom: 4755
[56,350s][info ][gc,ref         ] GC(20) Enqueued    references: Soft: 0, Weak: 0, Final: 4413, Phantom: 4427
[56,350s][info ][gc             ] GC(20) Concurrent weak references 0,951ms
[56,350s][info ][gc,start       ] GC(20) Concurrent weak roots
[56,350s][info ][gc,task        ] GC(20) Using 5 of 10 workers for concurrent weak root
[56,351s][info ][gc             ] GC(20) Concurrent weak roots 0,577ms
[56,351s][info ][gc,start       ] GC(20) Concurrent cleanup
[56,351s][info ][gc             ] GC(20) Concurrent cleanup 3087M->1357M(5124M) 0,166ms
[56,351s][info ][gc,ergo        ] GC(20) Free: 10316M, Max: 4096K regular, 9112M humongous, Frag: 12% external, 0% internal; Reserve: 614M, Max: 4096K
[56,351s][info ][gc,start       ] GC(20) Concurrent class unloading
[56,351s][info ][gc,task        ] GC(20) Using 5 of 10 workers for concurrent class unloading
[56,351s][debug][gc,phases,start] GC(20) ClassLoaderData
[56,351s][debug][gc,phases      ] GC(20) ClassLoaderData 0,010ms
[56,351s][debug][gc,phases,start] GC(20) Trigger cleanups
[56,351s][debug][gc,phases      ] GC(20) Trigger cleanups 0,005ms
[56,352s][debug][gc,nmethod     ] GC(20) Unregister NMethod: sun.nio.ch.FileChannelImpl.endBlocking [0x00007fae5d7c2790]
[56,352s][debug][gc,nmethod     ] GC(20) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getReader [0x00007fae5d7a1890]
[56,352s][debug][gc,nmethod     ] GC(20) Unregister NMethod: sun.nio.ch.FileChannelImpl.read [0x00007fae5d217390]
[56,352s][debug][gc,nmethod     ] GC(20) Unregister NMethod: sun.nio.ch.IOUtil.read [0x00007fae5d135910]
[56,352s][info ][gc             ] GC(20) Concurrent class unloading 1,367ms
[56,352s][info ][gc,start       ] GC(20) Concurrent strong roots
[56,352s][info ][gc,task        ] GC(20) Using 5 of 10 workers for concurrent strong root
[56,353s][info ][gc             ] GC(20) Concurrent strong roots 0,218ms
[56,353s][info ][gc,start       ] GC(20) Concurrent evacuation
[56,353s][info ][gc,task        ] GC(20) Using 5 of 10 workers for concurrent evacuation
[56,361s][info ][gc             ] GC(20) Concurrent evacuation 8,114ms
[56,361s][info ][gc,start       ] GC(20) Pause Init Update Refs
[56,361s][info ][gc,ergo        ] GC(20) Pacer for Update Refs. Used: 1428M, Free: 10308M, Non-Taxable: 1030M, Alloc Tax Rate: 1,1x
[56,361s][info ][gc             ] GC(20) Pause Init Update Refs 0,045ms
[56,361s][info ][gc,start       ] GC(20) Concurrent update references
[56,361s][info ][gc,task        ] GC(20) Using 5 of 10 workers for concurrent reference update
[56,366s][info ][gc             ] GC(20) Concurrent update references 5,404ms
[56,366s][info ][gc,start       ] GC(20) Concurrent update thread roots
[56,367s][info ][gc             ] GC(20) Concurrent update thread roots 0,776ms
[56,367s][info ][gc,start       ] GC(20) Pause Final Update Refs
[56,367s][info ][gc,task        ] GC(20) Using 10 of 10 workers for final reference update
[56,367s][info ][gc             ] GC(20) Pause Final Update Refs 0,143ms
[56,367s][info ][gc,start       ] GC(20) Concurrent cleanup
[56,367s][info ][gc             ] GC(20) Concurrent cleanup 1432M->96M(5128M) 0,159ms
[56,367s][debug][gc,ergo        ] GC(20) Available: 11576 MB, z-score=1,432. Average available: 11156,2 MB +/- 293,2 MB.
[56,368s][info ][gc,ergo        ] Free: 11576M, Max: 4096K regular, 9072M humongous, Frag: 22% external, 0% internal; Reserve: 616M, Max: 4096K
[56,368s][info ][gc,stats       ] 
[56,368s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[56,368s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[56,368s][info ][gc,stats       ] 
[56,368s][info ][gc,stats       ] Concurrent Reset                    943 us
[56,368s][info ][gc,stats       ] Pause Init Mark (G)                 356 us
[56,368s][info ][gc,stats       ] Pause Init Mark (N)                 229 us
[56,368s][info ][gc,stats       ]   Update Region States               89 us
[56,368s][info ][gc,stats       ] Concurrent Mark Roots               610 us, parallelism: 2,40x
[56,368s][info ][gc,stats       ]   CMR: <total>                     1463 us
[56,368s][info ][gc,stats       ]   CMR: Thread Roots                1391 us, workers (us): 261, 525, 165, 218, 221, ---, ---, ---, ---, ---, 
[56,368s][info ][gc,stats       ]   CMR: VM Strong Roots                9 us, workers (us):   1,   3,   3,   2,   0, ---, ---, ---, ---, ---, 
[56,368s][info ][gc,stats       ]   CMR: CLDG Roots                    63 us, workers (us): ---, ---,  55,   9, ---, ---, ---, ---, ---, ---, 
[56,368s][info ][gc,stats       ] Concurrent Marking                 6586 us
[56,368s][info ][gc,stats       ] Pause Final Mark (G)                393 us
[56,368s][info ][gc,stats       ] Pause Final Mark (N)                377 us
[56,368s][info ][gc,stats       ]   Finish Mark                       206 us
[56,368s][info ][gc,stats       ]   Update Region States               27 us
[56,368s][info ][gc,stats       ]   Choose Collection Set              66 us
[56,368s][info ][gc,stats       ]   Rebuild Free Set                    9 us
[56,368s][info ][gc,stats       ] Concurrent Thread Roots            1779 us, parallelism: 3,57x
[56,368s][info ][gc,stats       ]   CTR: <total>                     6354 us
[56,368s][info ][gc,stats       ]   CTR: Thread Roots                6354 us, workers (us): 1393, 1100, 1100, 1124, 1636, ---, ---, ---, ---, ---, 
[56,368s][info ][gc,stats       ] Concurrent Weak References          956 us, parallelism: 1,99x
[56,368s][info ][gc,stats       ]   CWRF: <total>                    1899 us
[56,368s][info ][gc,stats       ]   CWRF: Weak References            1899 us, workers (us): 656, 869, 373,   1,   0, ---, ---, ---, ---, ---, 
[56,368s][info ][gc,stats       ] Concurrent Weak Roots               590 us
[56,368s][info ][gc,stats       ]   Roots                             536 us, parallelism: 3,53x
[56,368s][info ][gc,stats       ]     CWR: <total>                   1891 us
[56,368s][info ][gc,stats       ]     CWR: Code Cache Roots           960 us, workers (us): 234, 162, 166, 220, 177, ---, ---, ---, ---, ---, 
[56,368s][info ][gc,stats       ]     CWR: VM Weak Roots              914 us, workers (us): 221, 220, 158, 158, 158, ---, ---, ---, ---, ---, 
[56,368s][info ][gc,stats       ]     CWR: CLDG Roots                  16 us, workers (us): ---,   8,   8, ---, ---, ---, ---, ---, ---, ---, 
[56,368s][info ][gc,stats       ]   Rendezvous                         31 us
[56,368s][info ][gc,stats       ] Concurrent Cleanup                  175 us
[56,368s][info ][gc,stats       ] Concurrent Class Unloading         1374 us
[56,368s][info ][gc,stats       ]   Unlink Stale                      809 us
[56,368s][info ][gc,stats       ]     System Dictionary                27 us
[56,368s][info ][gc,stats       ]     Weak Class Links                  0 us
[56,368s][info ][gc,stats       ]     Code Roots                      782 us
[56,368s][info ][gc,stats       ]   Rendezvous                        498 us
[56,368s][info ][gc,stats       ]   Purge Unlinked                     47 us
[56,368s][info ][gc,stats       ]     Code Roots                       46 us
[56,368s][info ][gc,stats       ]     CLDG                              2 us
[56,368s][info ][gc,stats       ]     Exception Caches                  0 us
[56,368s][info ][gc,stats       ] Concurrent Strong Roots             223 us, parallelism: 1,08x
[56,368s][info ][gc,stats       ]   CSR: <total>                      242 us
[56,368s][info ][gc,stats       ]   CSR: VM Strong Roots               11 us, workers (us):   7,   4,   0,   0,   0, ---, ---, ---, ---, ---, 
[56,368s][info ][gc,stats       ]   CSR: CLDG Roots                   230 us, workers (us): ---,  96, 134, ---, ---, ---, ---, ---, ---, ---, 
[56,368s][info ][gc,stats       ] Concurrent Evacuation              8141 us
[56,368s][info ][gc,stats       ] Pause Init Update Refs (G)          121 us
[56,368s][info ][gc,stats       ] Pause Init Update Refs (N)           57 us
[56,368s][info ][gc,stats       ]   Manage GCLABs                       4 us
[56,368s][info ][gc,stats       ] Concurrent Update Refs             5440 us
[56,368s][info ][gc,stats       ] Concurrent Update Thread Roots      801 us
[56,368s][info ][gc,stats       ] Pause Final Update Refs (G)         243 us
[56,368s][info ][gc,stats       ] Pause Final Update Refs (N)         158 us
[56,368s][info ][gc,stats       ]   Update Region States               89 us
[56,368s][info ][gc,stats       ]   Trash Collection Set                5 us
[56,368s][info ][gc,stats       ]   Rebuild Free Set                   13 us
[56,368s][info ][gc,stats       ] Concurrent Cleanup                  165 us
[56,368s][info ][gc,stats       ] 
[56,368s][info ][gc,stats       ] Allocation pacing accrued:
[56,368s][info ][gc,stats       ]       0 of  1515 ms (  0,0%): <total>
[56,368s][info ][gc,stats       ]       0 of  1515 ms (  0,0%): <average total>
[56,368s][info ][gc,stats       ] 
[56,368s][info ][gc,metaspace   ] Metaspace: 19843K(20288K)->19843K(20288K) NonClass: 17417K(17600K)->17417K(17600K) Class: 2426K(2688K)->2426K(2688K)
[56,368s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[57,583s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.postFire [0x00007fae5d182690] (c1)
[57,585s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.waitingGet [0x00007fae5d566690] (c1)
[57,587s][debug][gc,nmethod     ] Register NMethod: java.util.Collection.stream [0x00007fae7cbe7e10] (c2)
[58,198s][info ][gc             ] Trigger: Learning 3 of 5. Free (8592M) is below initial threshold (8601M)
[58,199s][info ][gc,ergo        ] Free: 8592M, Max: 4096K regular, 8592M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[58,199s][info ][gc,start       ] GC(21) Concurrent reset
[58,199s][info ][gc,task        ] GC(21) Using 5 of 10 workers for concurrent reset
[58,199s][info ][gc,ergo        ] GC(21) Pacer for Reset. Non-Taxable: 12288M
[58,201s][info ][gc             ] GC(21) Concurrent reset 2,065ms
[58,201s][info ][gc,start       ] GC(21) Pause Init Mark (unload classes)
[58,201s][info ][gc,task        ] GC(21) Using 10 of 10 workers for init marking
[58,201s][info ][gc,ergo        ] GC(21) Pacer for Mark. Expected Live: 366M, Free: 8560M, Non-Taxable: 856M, Alloc Tax Rate: 0,1x
[58,201s][info ][gc             ] GC(21) Pause Init Mark (unload classes) 0,051ms
[58,204s][info ][gc,start       ] GC(21) Concurrent marking roots
[58,204s][info ][gc,task        ] GC(21) Using 5 of 10 workers for concurrent marking roots
[58,204s][debug][gc,tlab        ] GC(21) TLAB totals: thrds: 19  refills: 741 max: 454 slow allocs: 1 max 1 waste:  1,6% gc: 44623864B max: 4177896B slow: 6317176B max: 634584B
[58,206s][info ][gc             ] GC(21) Concurrent marking roots 2,504ms
[58,207s][info ][gc,start       ] GC(21) Concurrent marking (unload classes)
[58,207s][info ][gc,task        ] GC(21) Using 5 of 10 workers for concurrent marking
[58,263s][info ][gc             ] GC(21) Concurrent marking (unload classes) 56,079ms
[58,263s][info ][gc,start       ] GC(21) Pause Final Mark (unload classes)
[58,263s][info ][gc,task        ] GC(21) Using 10 of 10 workers for final marking
[58,263s][info ][gc,ergo        ] GC(21) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 9888M, Max CSet: 512M, Min Garbage: 0B
[58,263s][info ][gc,ergo        ] GC(21) Collectable Garbage: 2637M (99%), Immediate: 1176M (44%), CSet: 1461M (55%)
[58,263s][info ][gc,ergo        ] GC(21) Pacer for Evacuation. Used CSet: 1928M, Free: 9272M, Non-Taxable: 927M, Alloc Tax Rate: 1,1x
[58,263s][info ][gc             ] GC(21) Pause Final Mark (unload classes) 0,388ms
[58,263s][info ][gc,start       ] GC(21) Concurrent thread roots
[58,263s][info ][gc,task        ] GC(21) Using 5 of 10 workers for Concurrent thread roots
[58,264s][info ][gc             ] GC(21) Concurrent thread roots 0,552ms
[58,264s][info ][gc,start       ] GC(21) Concurrent weak references
[58,264s][info ][gc,task        ] GC(21) Using 5 of 10 workers for concurrent weak references
[58,265s][info ][gc,ref         ] GC(21) Encountered references: Soft: 2310, Weak: 1811, Final: 4698, Phantom: 5079
[58,265s][info ][gc,ref         ] GC(21) Discovered  references: Soft: 0, Weak: 207, Final: 4695, Phantom: 4992
[58,265s][info ][gc,ref         ] GC(21) Enqueued    references: Soft: 0, Weak: 0, Final: 4695, Phantom: 4712
[58,265s][info ][gc             ] GC(21) Concurrent weak references 1,153ms
[58,265s][info ][gc,start       ] GC(21) Concurrent weak roots
[58,265s][info ][gc,task        ] GC(21) Using 5 of 10 workers for concurrent weak root
[58,266s][info ][gc             ] GC(21) Concurrent weak roots 0,686ms
[58,266s][info ][gc,start       ] GC(21) Concurrent cleanup
[58,266s][info ][gc             ] GC(21) Concurrent cleanup 3585M->2413M(5128M) 0,168ms
[58,266s][info ][gc,ergo        ] GC(21) Free: 9263M, Max: 4096K regular, 8136M humongous, Frag: 13% external, 0% internal; Reserve: 610M, Max: 4096K
[58,266s][info ][gc,start       ] GC(21) Concurrent class unloading
[58,266s][info ][gc,task        ] GC(21) Using 5 of 10 workers for concurrent class unloading
[58,266s][debug][gc,phases,start] GC(21) ClassLoaderData
[58,266s][debug][gc,phases      ] GC(21) ClassLoaderData 0,011ms
[58,266s][debug][gc,phases,start] GC(21) Trigger cleanups
[58,266s][debug][gc,phases      ] GC(21) Trigger cleanups 0,006ms
[58,267s][debug][gc,nmethod     ] GC(21) Unregister NMethod: java.util.Collection.stream [0x00007fae5d719f10]
[58,267s][info ][gc             ] GC(21) Concurrent class unloading 0,828ms
[58,267s][info ][gc,start       ] GC(21) Concurrent strong roots
[58,267s][info ][gc,task        ] GC(21) Using 5 of 10 workers for concurrent strong root
[58,267s][info ][gc             ] GC(21) Concurrent strong roots 0,232ms
[58,267s][info ][gc,start       ] GC(21) Concurrent evacuation
[58,267s][info ][gc,task        ] GC(21) Using 5 of 10 workers for concurrent evacuation
[58,296s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.Invokers$Holder.linkToTargetMethod [0x00007fae5d7a1890] (c1)
[58,297s][debug][gc,nmethod     ] Register NMethod: java.io.ByteArrayInputStream.read [0x00007fae7cbe8890] (c2)
[58,297s][debug][gc,nmethod     ] Register NMethod: java.lang.Integer.compareTo [0x00007fae5d566010] (c1)
[58,297s][debug][gc,nmethod     ] Register NMethod: java.lang.Integer.compareTo [0x00007fae5d800010] (c1)
[58,310s][info ][gc             ] GC(21) Concurrent evacuation 42,884ms
[58,310s][info ][gc,start       ] GC(21) Pause Init Update Refs
[58,310s][info ][gc,ergo        ] GC(21) Pacer for Update Refs. Used: 2896M, Free: 9255M, Non-Taxable: 925M, Alloc Tax Rate: 1,1x
[58,310s][info ][gc             ] GC(21) Pause Init Update Refs 0,029ms
[58,310s][info ][gc,start       ] GC(21) Concurrent update references
[58,310s][info ][gc,task        ] GC(21) Using 5 of 10 workers for concurrent reference update
[58,344s][info ][gc             ] GC(21) Concurrent update references 33,585ms
[58,344s][info ][gc,start       ] GC(21) Concurrent update thread roots
[58,345s][info ][gc             ] GC(21) Concurrent update thread roots 0,788ms
[58,345s][info ][gc,start       ] GC(21) Pause Final Update Refs
[58,345s][info ][gc,task        ] GC(21) Using 10 of 10 workers for final reference update
[58,345s][info ][gc             ] GC(21) Pause Final Update Refs 0,182ms
[58,345s][info ][gc,start       ] GC(21) Concurrent cleanup
[58,345s][info ][gc             ] GC(21) Concurrent cleanup 2920M->992M(5128M) 0,176ms
[58,345s][debug][gc,ergo        ] GC(21) Available: 10679 MB, z-score=-1,302. Average available: 11102,6 MB +/- 324,7 MB.
[58,345s][info ][gc,ergo        ] Free: 10679M, Max: 4096K regular, 7672M humongous, Frag: 29% external, 0% internal; Reserve: 616M, Max: 4096K
[58,345s][info ][gc,stats       ] 
[58,345s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[58,345s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[58,345s][info ][gc,stats       ] 
[58,345s][info ][gc,stats       ] Concurrent Reset                   2356 us
[58,345s][info ][gc,stats       ] Pause Init Mark (G)                2849 us
[58,345s][info ][gc,stats       ] Pause Init Mark (N)                  59 us
[58,345s][info ][gc,stats       ]   Update Region States               23 us
[58,345s][info ][gc,stats       ] Concurrent Mark Roots              2794 us, parallelism: 0,81x
[58,345s][info ][gc,stats       ]   CMR: <total>                     2270 us
[58,345s][info ][gc,stats       ]   CMR: Thread Roots                2176 us, workers (us): 2176,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[58,345s][info ][gc,stats       ]   CMR: VM Strong Roots                9 us, workers (us):   8,   0,   1,   0,   0, ---, ---, ---, ---, ---, 
[58,345s][info ][gc,stats       ]   CMR: CLDG Roots                    85 us, workers (us):  85, ---, ---, ---, ---, ---, ---, ---, ---, ---, 
[58,345s][info ][gc,stats       ] Concurrent Marking                56113 us
[58,345s][info ][gc,stats       ] Pause Final Mark (G)                476 us
[58,345s][info ][gc,stats       ] Pause Final Mark (N)                397 us
[58,345s][info ][gc,stats       ]   Finish Mark                       254 us
[58,345s][info ][gc,stats       ]   Update Region States               17 us
[58,345s][info ][gc,stats       ]   Choose Collection Set              59 us
[58,345s][info ][gc,stats       ]   Rebuild Free Set                   10 us
[58,345s][info ][gc,stats       ] Concurrent Thread Roots             582 us, parallelism: 2,36x
[58,345s][info ][gc,stats       ]   CTR: <total>                     1371 us
[58,345s][info ][gc,stats       ]   CTR: Thread Roots                1371 us, workers (us): 513, 200, 206, 201, 251, ---, ---, ---, ---, ---, 
[58,345s][info ][gc,stats       ] Concurrent Weak References         1160 us, parallelism: 1,86x
[58,345s][info ][gc,stats       ]   CWRF: <total>                    2161 us
[58,345s][info ][gc,stats       ]   CWRF: Weak References            2161 us, workers (us): 145, 1001, 236, 313, 465, ---, ---, ---, ---, ---, 
[58,345s][info ][gc,stats       ] Concurrent Weak Roots               700 us
[58,345s][info ][gc,stats       ]   Roots                             588 us, parallelism: 3,42x
[58,345s][info ][gc,stats       ]     CWR: <total>                   2013 us
[58,345s][info ][gc,stats       ]     CWR: Code Cache Roots          1088 us, workers (us): 242, 247, 181, 232, 186, ---, ---, ---, ---, ---, 
[58,345s][info ][gc,stats       ]     CWR: VM Weak Roots              905 us, workers (us): 222, 219, 160, 158, 146, ---, ---, ---, ---, ---, 
[58,345s][info ][gc,stats       ]     CWR: CLDG Roots                  19 us, workers (us): ---,   9, ---, ---,  10, ---, ---, ---, ---, ---, 
[58,345s][info ][gc,stats       ]   Rendezvous                         80 us
[58,345s][info ][gc,stats       ] Concurrent Cleanup                  177 us
[58,345s][info ][gc,stats       ] Concurrent Class Unloading          834 us
[58,345s][info ][gc,stats       ]   Unlink Stale                      779 us
[58,345s][info ][gc,stats       ]     System Dictionary                29 us
[58,345s][info ][gc,stats       ]     Weak Class Links                  0 us
[58,345s][info ][gc,stats       ]     Code Roots                      749 us
[58,345s][info ][gc,stats       ]   Rendezvous                         18 us
[58,345s][info ][gc,stats       ]   Purge Unlinked                     19 us
[58,345s][info ][gc,stats       ]     Code Roots                       17 us
[58,345s][info ][gc,stats       ]     CLDG                              2 us
[58,345s][info ][gc,stats       ]     Exception Caches                  0 us
[58,345s][info ][gc,stats       ] Concurrent Strong Roots             237 us, parallelism: 1,02x
[58,345s][info ][gc,stats       ]   CSR: <total>                      241 us
[58,345s][info ][gc,stats       ]   CSR: VM Strong Roots               12 us, workers (us):   4,   3,   2,   2,   0, ---, ---, ---, ---, ---, 
[58,345s][info ][gc,stats       ]   CSR: CLDG Roots                   229 us, workers (us): 139, ---, ---, ---,  90, ---, ---, ---, ---, ---, 
[58,345s][info ][gc,stats       ] Concurrent Evacuation             42921 us
[58,345s][info ][gc,stats       ] Pause Init Update Refs (G)          247 us
[58,345s][info ][gc,stats       ] Pause Init Update Refs (N)           36 us
[58,345s][info ][gc,stats       ]   Manage GCLABs                       3 us
[58,345s][info ][gc,stats       ] Concurrent Update Refs            33627 us
[58,345s][info ][gc,stats       ] Concurrent Update Thread Roots      800 us
[58,345s][info ][gc,stats       ] Pause Final Update Refs (G)         279 us
[58,345s][info ][gc,stats       ] Pause Final Update Refs (N)         203 us
[58,345s][info ][gc,stats       ]   Update Region States              111 us
[58,345s][info ][gc,stats       ]   Trash Collection Set               11 us
[58,345s][info ][gc,stats       ]   Rebuild Free Set                   16 us
[58,345s][info ][gc,stats       ] Concurrent Cleanup                  183 us
[58,345s][info ][gc,stats       ] 
[58,345s][info ][gc,stats       ] Allocation pacing accrued:
[58,345s][info ][gc,stats       ]       0 of  1978 ms (  0,0%): <total>
[58,345s][info ][gc,stats       ]       0 of  1978 ms (  0,0%): <average total>
[58,345s][info ][gc,stats       ] 
[58,345s][info ][gc,metaspace   ] Metaspace: 19845K(20288K)->19846K(20288K) NonClass: 17418K(17600K)->17419K(17600K) Class: 2426K(2688K)->2426K(2688K)
[58,345s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[58,985s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.KeyValueLeafPage.getPageReference [0x00007fae5d719f10] (c1)
[58,985s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.PageContainer.getCompleteAsUnorderedKeyValuePage [0x00007fae5d609310] (c1)
[58,986s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4BlockInputStream.read [0x00007fae7cbe9090] (c2)
[58,986s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.toUnixPath [0x00007fae7cbe9790] (c2)
[59,598s][info ][gc             ] Trigger: Learning 4 of 5. Free (8587M) is below initial threshold (8601M)
[59,598s][info ][gc,ergo        ] Free: 8587M, Max: 4096K regular, 7672M humongous, Frag: 11% external, 0% internal; Reserve: 616M, Max: 4096K
[59,598s][info ][gc,start       ] GC(22) Concurrent reset
[59,598s][info ][gc,task        ] GC(22) Using 5 of 10 workers for concurrent reset
[59,598s][info ][gc,ergo        ] GC(22) Pacer for Reset. Non-Taxable: 12288M
[59,601s][info ][gc             ] GC(22) Concurrent reset 2,700ms
[59,601s][info ][gc,start       ] GC(22) Pause Init Mark (unload classes)
[59,601s][info ][gc,task        ] GC(22) Using 10 of 10 workers for init marking
[59,602s][info ][gc,ergo        ] GC(22) Pacer for Mark. Expected Live: 358M, Free: 8539M, Non-Taxable: 853M, Alloc Tax Rate: 0,1x
[59,602s][info ][gc             ] GC(22) Pause Init Mark (unload classes) 0,197ms
[59,602s][info ][gc,start       ] GC(22) Concurrent marking roots
[59,602s][info ][gc,task        ] GC(22) Using 5 of 10 workers for concurrent marking roots
[59,602s][debug][gc,tlab        ] GC(22) TLAB totals: thrds: 21  refills: 548 max: 316 slow allocs: 1 max 1 waste:  2,2% gc: 45579904B max: 4044960B slow: 4778248B max: 472032B
[59,603s][info ][gc             ] GC(22) Concurrent marking roots 0,891ms
[59,603s][info ][gc,start       ] GC(22) Concurrent marking (unload classes)
[59,603s][info ][gc,task        ] GC(22) Using 5 of 10 workers for concurrent marking
[59,654s][info ][gc             ] GC(22) Concurrent marking (unload classes) 51,793ms
[59,654s][info ][gc,start       ] GC(22) Pause Final Mark (unload classes)
[59,654s][info ][gc,task        ] GC(22) Using 10 of 10 workers for final marking
[59,655s][info ][gc,ergo        ] GC(22) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 9952M, Max CSet: 512M, Min Garbage: 0B
[59,655s][info ][gc,ergo        ] GC(22) Collectable Garbage: 2610M (99%), Immediate: 1040M (39%), CSet: 1570M (60%)
[59,655s][info ][gc,ergo        ] GC(22) Pacer for Evacuation. Used CSet: 2079M, Free: 9339M, Non-Taxable: 933M, Alloc Tax Rate: 1,1x
[59,655s][info ][gc             ] GC(22) Pause Final Mark (unload classes) 0,501ms
[59,655s][info ][gc,start       ] GC(22) Concurrent thread roots
[59,655s][info ][gc,task        ] GC(22) Using 5 of 10 workers for Concurrent thread roots
[59,656s][info ][gc             ] GC(22) Concurrent thread roots 0,647ms
[59,656s][info ][gc,start       ] GC(22) Concurrent weak references
[59,656s][info ][gc,task        ] GC(22) Using 5 of 10 workers for concurrent weak references
[59,657s][info ][gc,ref         ] GC(22) Encountered references: Soft: 2320, Weak: 1837, Final: 5081, Phantom: 5421
[59,657s][info ][gc,ref         ] GC(22) Discovered  references: Soft: 0, Weak: 322, Final: 5076, Phantom: 5443
[59,657s][info ][gc,ref         ] GC(22) Enqueued    references: Soft: 0, Weak: 0, Final: 5076, Phantom: 5091
[59,657s][info ][gc             ] GC(22) Concurrent weak references 1,026ms
[59,657s][info ][gc,start       ] GC(22) Concurrent weak roots
[59,657s][info ][gc,task        ] GC(22) Using 5 of 10 workers for concurrent weak root
[59,658s][info ][gc             ] GC(22) Concurrent weak roots 0,887ms
[59,658s][info ][gc,start       ] GC(22) Concurrent cleanup
[59,658s][info ][gc             ] GC(22) Concurrent cleanup 3374M->2334M(5128M) 0,173ms
[59,658s][info ][gc,ergo        ] GC(22) Free: 9339M, Max: 4096K regular, 8096M humongous, Frag: 14% external, 0% internal; Reserve: 613M, Max: 4096K
[59,658s][info ][gc,start       ] GC(22) Concurrent class unloading
[59,658s][info ][gc,task        ] GC(22) Using 5 of 10 workers for concurrent class unloading
[59,658s][debug][gc,phases,start] GC(22) ClassLoaderData
[59,658s][debug][gc,phases      ] GC(22) ClassLoaderData 0,009ms
[59,658s][debug][gc,phases,start] GC(22) Trigger cleanups
[59,658s][debug][gc,phases      ] GC(22) Trigger cleanups 0,004ms
[59,659s][debug][gc,nmethod     ] GC(22) Unregister NMethod: net.jpountz.lz4.LZ4BlockInputStream.read [0x00007fae5d5f4690]
[59,659s][debug][gc,nmethod     ] GC(22) Unregister NMethod: sun.nio.fs.UnixPath.toUnixPath [0x00007fae5d4b9910]
[59,659s][debug][gc,nmethod     ] GC(22) Unregister NMethod: java.io.ByteArrayInputStream.read [0x00007fae5d4f6210]
[59,659s][info ][gc             ] GC(22) Concurrent class unloading 1,160ms
[59,659s][info ][gc,start       ] GC(22) Concurrent strong roots
[59,659s][info ][gc,task        ] GC(22) Using 5 of 10 workers for concurrent strong root
[59,659s][info ][gc             ] GC(22) Concurrent strong roots 0,227ms
[59,659s][info ][gc,start       ] GC(22) Concurrent evacuation
[59,659s][info ][gc,task        ] GC(22) Using 5 of 10 workers for concurrent evacuation
[59,674s][debug][gc,nmethod     ] Register NMethod: java.util.TimSort.countRunAndMakeAscending [0x00007fae5d5f4690] (c1)
[59,674s][debug][gc,nmethod     ] Register NMethod: java.util.Collections$ReverseComparator2.compare [0x00007fae5d608e90] (c1)
[59,674s][debug][gc,nmethod     ] Register NMethod: java.util.Comparator$$Lambda/0x00007fadb4097518.compare [0x00007fae5d4f6210] (c1)
[59,674s][debug][gc,nmethod     ] Register NMethod: java.util.Comparator.lambda$comparing$77a9974f$1 [0x00007fae5d4b9910] (c1)
[59,709s][info ][gc             ] GC(22) Concurrent evacuation 50,215ms
[59,710s][info ][gc,start       ] GC(22) Pause Init Update Refs
[59,710s][info ][gc,ergo        ] GC(22) Pacer for Update Refs. Used: 2879M, Free: 9315M, Non-Taxable: 931M, Alloc Tax Rate: 1,1x
[59,710s][info ][gc             ] GC(22) Pause Init Update Refs 0,046ms
[59,710s][info ][gc,start       ] GC(22) Concurrent update references
[59,710s][info ][gc,task        ] GC(22) Using 5 of 10 workers for concurrent reference update
[59,743s][info ][gc             ] GC(22) Concurrent update references 33,075ms
[59,743s][info ][gc,start       ] GC(22) Concurrent update thread roots
[59,744s][info ][gc             ] GC(22) Concurrent update thread roots 0,841ms
[59,744s][info ][gc,start       ] GC(22) Pause Final Update Refs
[59,744s][info ][gc,task        ] GC(22) Using 10 of 10 workers for final reference update
[59,744s][info ][gc             ] GC(22) Pause Final Update Refs 0,111ms
[59,744s][info ][gc,start       ] GC(22) Concurrent cleanup
[59,744s][info ][gc             ] GC(22) Concurrent cleanup 2903M->824M(5148M) 0,205ms
[59,744s][debug][gc,ergo        ] GC(22) Available: 10847 MB, z-score=-0,679. Average available: 11074,2 MB +/- 333,2 MB.
[59,744s][info ][gc,ergo        ] Free: 10847M, Max: 4096K regular, 7628M humongous, Frag: 30% external, 0% internal; Reserve: 616M, Max: 4096K
[59,744s][info ][gc,stats       ] 
[59,744s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[59,744s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[59,744s][info ][gc,stats       ] 
[59,744s][info ][gc,stats       ] Concurrent Reset                   2776 us
[59,744s][info ][gc,stats       ] Pause Init Mark (G)                 491 us
[59,744s][info ][gc,stats       ] Pause Init Mark (N)                 208 us
[59,744s][info ][gc,stats       ]   Update Region States              137 us
[59,744s][info ][gc,stats       ] Concurrent Mark Roots               933 us, parallelism: 2,00x
[59,744s][info ][gc,stats       ]   CMR: <total>                     1868 us
[59,744s][info ][gc,stats       ]   CMR: Thread Roots                1788 us, workers (us): 344, 336, 311, 797,   0, ---, ---, ---, ---, ---, 
[59,744s][info ][gc,stats       ]   CMR: VM Strong Roots                9 us, workers (us):   6,   3,   0,   0,   0, ---, ---, ---, ---, ---, 
[59,744s][info ][gc,stats       ]   CMR: CLDG Roots                    70 us, workers (us): ---,   8,  63, ---, ---, ---, ---, ---, ---, ---, 
[59,744s][info ][gc,stats       ] Concurrent Marking                51837 us
[59,744s][info ][gc,stats       ] Pause Final Mark (G)                568 us
[59,744s][info ][gc,stats       ] Pause Final Mark (N)                510 us
[59,744s][info ][gc,stats       ]   Finish Mark                       271 us
[59,744s][info ][gc,stats       ]   Update Region States              106 us
[59,744s][info ][gc,stats       ]   Choose Collection Set              75 us
[59,744s][info ][gc,stats       ]   Rebuild Free Set                   15 us
[59,744s][info ][gc,stats       ] Concurrent Thread Roots             667 us, parallelism: 2,03x
[59,744s][info ][gc,stats       ]   CTR: <total>                     1352 us
[59,744s][info ][gc,stats       ]   CTR: Thread Roots                1352 us, workers (us): 510, 255, 200, 209, 177, ---, ---, ---, ---, ---, 
[59,744s][info ][gc,stats       ] Concurrent Weak References         1035 us, parallelism: 1,88x
[59,744s][info ][gc,stats       ]   CWRF: <total>                    1947 us
[59,744s][info ][gc,stats       ]   CWRF: Weak References            1947 us, workers (us): 388, 779,  21,  25, 734, ---, ---, ---, ---, ---, 
[59,744s][info ][gc,stats       ] Concurrent Weak Roots               906 us
[59,744s][info ][gc,stats       ]   Roots                             680 us, parallelism: 3,04x
[59,744s][info ][gc,stats       ]     CWR: <total>                   2070 us
[59,744s][info ][gc,stats       ]     CWR: Code Cache Roots          1135 us, workers (us): 233, 272, 249, 201, 180, ---, ---, ---, ---, ---, 
[59,744s][info ][gc,stats       ]     CWR: VM Weak Roots              922 us, workers (us): 254, 184, 183, 180, 121, ---, ---, ---, ---, ---, 
[59,744s][info ][gc,stats       ]     CWR: CLDG Roots                  14 us, workers (us):   7,   7, ---, ---, ---, ---, ---, ---, ---, ---, 
[59,744s][info ][gc,stats       ]   Rendezvous                        194 us
[59,744s][info ][gc,stats       ] Concurrent Cleanup                  181 us
[59,744s][info ][gc,stats       ] Concurrent Class Unloading         1169 us
[59,744s][info ][gc,stats       ]   Unlink Stale                      927 us
[59,744s][info ][gc,stats       ]     System Dictionary                24 us
[59,744s][info ][gc,stats       ]     Weak Class Links                  0 us
[59,744s][info ][gc,stats       ]     Code Roots                      902 us
[59,744s][info ][gc,stats       ]   Rendezvous                        174 us
[59,744s][info ][gc,stats       ]   Purge Unlinked                     49 us
[59,744s][info ][gc,stats       ]     Code Roots                       46 us
[59,744s][info ][gc,stats       ]     CLDG                              3 us
[59,744s][info ][gc,stats       ]     Exception Caches                  0 us
[59,744s][info ][gc,stats       ] Concurrent Strong Roots             246 us, parallelism: 0,89x
[59,744s][info ][gc,stats       ]   CSR: <total>                      219 us
[59,744s][info ][gc,stats       ]   CSR: VM Strong Roots               11 us, workers (us):  11,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[59,744s][info ][gc,stats       ]   CSR: CLDG Roots                   208 us, workers (us): 113,  95, ---, ---, ---, ---, ---, ---, ---, ---, 
[59,744s][info ][gc,stats       ] Concurrent Evacuation             50259 us
[59,744s][info ][gc,stats       ] Pause Init Update Refs (G)          279 us
[59,744s][info ][gc,stats       ] Pause Init Update Refs (N)           54 us
[59,744s][info ][gc,stats       ]   Manage GCLABs                       3 us
[59,744s][info ][gc,stats       ] Concurrent Update Refs            33119 us
[59,745s][info ][gc,stats       ] Concurrent Update Thread Roots      879 us
[59,745s][info ][gc,stats       ] Pause Final Update Refs (G)         227 us
[59,745s][info ][gc,stats       ] Pause Final Update Refs (N)         120 us
[59,745s][info ][gc,stats       ]   Update Region States               33 us
[59,745s][info ][gc,stats       ]   Trash Collection Set               36 us
[59,745s][info ][gc,stats       ]   Rebuild Free Set                   16 us
[59,745s][info ][gc,stats       ] Concurrent Cleanup                  218 us
[59,745s][info ][gc,stats       ] 
[59,745s][info ][gc,stats       ] Allocation pacing accrued:
[59,745s][info ][gc,stats       ]       0 of  1399 ms (  0,0%): <total>
[59,745s][info ][gc,stats       ]       0 of  1399 ms (  0,0%): <average total>
[59,745s][info ][gc,stats       ] 
[59,745s][info ][gc,metaspace   ] Metaspace: 19846K(20288K)->19848K(20288K) NonClass: 17419K(17600K)->17421K(17600K) Class: 2426K(2688K)->2426K(2688K)
[59,745s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[61,004s][info ][gc             ] Trigger: Learning 5 of 5. Free (8579M) is below initial threshold (8601M)
[61,005s][info ][gc,ergo        ] Free: 8579M, Max: 4096K regular, 7628M humongous, Frag: 12% external, 0% internal; Reserve: 616M, Max: 4096K
[61,005s][info ][gc,start       ] GC(23) Concurrent reset
[61,005s][info ][gc,task        ] GC(23) Using 5 of 10 workers for concurrent reset
[61,005s][info ][gc,ergo        ] GC(23) Pacer for Reset. Non-Taxable: 12288M
[61,007s][info ][gc             ] GC(23) Concurrent reset 2,480ms
[61,007s][info ][gc,start       ] GC(23) Pause Init Mark (unload classes)
[61,007s][info ][gc,task        ] GC(23) Using 10 of 10 workers for init marking
[61,007s][info ][gc,ergo        ] GC(23) Pacer for Mark. Expected Live: 425M, Free: 8551M, Non-Taxable: 855M, Alloc Tax Rate: 0,1x
[61,007s][info ][gc             ] GC(23) Pause Init Mark (unload classes) 0,162ms
[61,008s][info ][gc,start       ] GC(23) Concurrent marking roots
[61,008s][info ][gc,task        ] GC(23) Using 5 of 10 workers for concurrent marking roots
[61,008s][debug][gc,tlab        ] GC(23) TLAB totals: thrds: 21  refills: 474 max: 317 slow allocs: 0 max 0 waste:  2,1% gc: 37699240B max: 3709736B slow: 3266632B max: 566256B
[61,008s][info ][gc             ] GC(23) Concurrent marking roots 0,862ms
[61,008s][info ][gc,start       ] GC(23) Concurrent marking (unload classes)
[61,008s][info ][gc,task        ] GC(23) Using 5 of 10 workers for concurrent marking
[61,053s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$20.deserialize [0x00007fae5d594b10] (c1)
[61,053s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind.getHash [0x00007fae5d217390] (c1)
[61,054s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind.deserializeObjectOrArrayStructDelegate [0x00007fae5d593410] (c1)
[61,054s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.json.ArrayNode.<init> [0x00007fae5d6ffa90] (c1)
[61,055s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayList.<init> [0x00007fae7cbe9a90] (c2)
[61,060s][info ][gc             ] GC(23) Concurrent marking (unload classes) 51,222ms
[61,060s][info ][gc,start       ] GC(23) Pause Final Mark (unload classes)
[61,060s][info ][gc,task        ] GC(23) Using 10 of 10 workers for final marking
[61,060s][info ][gc,ergo        ] GC(23) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10160M, Max CSet: 512M, Min Garbage: 0B
[61,060s][info ][gc,ergo        ] GC(23) Collectable Garbage: 2554M (99%), Immediate: 1064M (41%), CSet: 1490M (58%)
[61,060s][info ][gc,ergo        ] GC(23) Pacer for Evacuation. Used CSet: 1999M, Free: 9548M, Non-Taxable: 954M, Alloc Tax Rate: 1,1x
[61,060s][info ][gc             ] GC(23) Pause Final Mark (unload classes) 0,471ms
[61,060s][info ][gc,start       ] GC(23) Concurrent thread roots
[61,060s][info ][gc,task        ] GC(23) Using 5 of 10 workers for Concurrent thread roots
[61,061s][info ][gc             ] GC(23) Concurrent thread roots 0,566ms
[61,061s][info ][gc,start       ] GC(23) Concurrent weak references
[61,061s][info ][gc,task        ] GC(23) Using 5 of 10 workers for concurrent weak references
[61,062s][info ][gc,ref         ] GC(23) Encountered references: Soft: 2320, Weak: 1819, Final: 4817, Phantom: 5208
[61,062s][info ][gc,ref         ] GC(23) Discovered  references: Soft: 0, Weak: 224, Final: 4816, Phantom: 5154
[61,062s][info ][gc,ref         ] GC(23) Enqueued    references: Soft: 0, Weak: 0, Final: 4811, Phantom: 4822
[61,062s][info ][gc             ] GC(23) Concurrent weak references 0,795ms
[61,062s][info ][gc,start       ] GC(23) Concurrent weak roots
[61,062s][info ][gc,task        ] GC(23) Using 5 of 10 workers for concurrent weak root
[61,062s][info ][gc             ] GC(23) Concurrent weak roots 0,623ms
[61,062s][info ][gc,start       ] GC(23) Concurrent cleanup
[61,062s][info ][gc             ] GC(23) Concurrent cleanup 3194M->2130M(5148M) 0,154ms
[61,062s][info ][gc,ergo        ] GC(23) Free: 9544M, Max: 4096K regular, 8936M humongous, Frag: 7% external, 0% internal; Reserve: 613M, Max: 4096K
[61,062s][info ][gc,start       ] GC(23) Concurrent class unloading
[61,062s][info ][gc,task        ] GC(23) Using 5 of 10 workers for concurrent class unloading
[61,062s][debug][gc,phases,start] GC(23) ClassLoaderData
[61,062s][debug][gc,phases      ] GC(23) ClassLoaderData 0,008ms
[61,062s][debug][gc,phases,start] GC(23) Trigger cleanups
[61,062s][debug][gc,phases      ] GC(23) Trigger cleanups 0,004ms
[61,063s][info ][gc             ] GC(23) Concurrent class unloading 0,930ms
[61,063s][info ][gc,start       ] GC(23) Concurrent strong roots
[61,063s][info ][gc,task        ] GC(23) Using 5 of 10 workers for concurrent strong root
[61,063s][info ][gc             ] GC(23) Concurrent strong roots 0,195ms
[61,063s][info ][gc,start       ] GC(23) Concurrent evacuation
[61,063s][info ][gc,task        ] GC(23) Using 5 of 10 workers for concurrent evacuation
[61,113s][info ][gc             ] GC(23) Concurrent evacuation 49,709ms
[61,113s][info ][gc,start       ] GC(23) Pause Init Update Refs
[61,113s][info ][gc,ergo        ] GC(23) Pacer for Update Refs. Used: 2683M, Free: 9508M, Non-Taxable: 950M, Alloc Tax Rate: 1,1x
[61,113s][info ][gc             ] GC(23) Pause Init Update Refs 0,059ms
[61,113s][info ][gc,start       ] GC(23) Concurrent update references
[61,114s][info ][gc,task        ] GC(23) Using 5 of 10 workers for concurrent reference update
[61,147s][info ][gc             ] GC(23) Concurrent update references 33,137ms
[61,147s][info ][gc,start       ] GC(23) Concurrent update thread roots
[61,148s][info ][gc             ] GC(23) Concurrent update thread roots 0,879ms
[61,148s][info ][gc,start       ] GC(23) Pause Final Update Refs
[61,148s][info ][gc,task        ] GC(23) Using 10 of 10 workers for final reference update
[61,148s][info ][gc             ] GC(23) Pause Final Update Refs 0,108ms
[61,148s][info ][gc,start       ] GC(23) Concurrent cleanup
[61,148s][info ][gc             ] GC(23) Concurrent cleanup 2707M->708M(5156M) 0,170ms
[61,148s][debug][gc,ergo        ] GC(23) Available: 10964 MB, z-score=-0,320. Average available: 11071,0 MB +/- 334,1 MB.
[61,148s][info ][gc,ergo        ] Free: 10964M, Max: 4096K regular, 8484M humongous, Frag: 23% external, 0% internal; Reserve: 616M, Max: 4096K
[61,148s][info ][gc,stats       ] 
[61,148s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[61,148s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[61,148s][info ][gc,stats       ] 
[61,148s][info ][gc,stats       ] Concurrent Reset                   2521 us
[61,148s][info ][gc,stats       ] Pause Init Mark (G)                 379 us
[61,148s][info ][gc,stats       ] Pause Init Mark (N)                 176 us
[61,148s][info ][gc,stats       ]   Update Region States               95 us
[61,148s][info ][gc,stats       ] Concurrent Mark Roots               881 us, parallelism: 1,91x
[61,148s][info ][gc,stats       ]   CMR: <total>                     1688 us
[61,148s][info ][gc,stats       ]   CMR: Thread Roots                1622 us, workers (us): 685, 229, 223, 265, 220, ---, ---, ---, ---, ---, 
[61,148s][info ][gc,stats       ]   CMR: VM Strong Roots                7 us, workers (us):   5,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[61,148s][info ][gc,stats       ]   CMR: CLDG Roots                    59 us, workers (us):  59, ---, ---, ---, ---, ---, ---, ---, ---, ---, 
[61,148s][info ][gc,stats       ] Concurrent Marking                51265 us
[61,148s][info ][gc,stats       ] Pause Final Mark (G)                503 us
[61,148s][info ][gc,stats       ] Pause Final Mark (N)                483 us
[61,148s][info ][gc,stats       ]   Finish Mark                       287 us
[61,148s][info ][gc,stats       ]   Update Region States               15 us
[61,148s][info ][gc,stats       ]   Choose Collection Set             107 us
[61,148s][info ][gc,stats       ]   Rebuild Free Set                   12 us
[61,148s][info ][gc,stats       ] Concurrent Thread Roots             574 us, parallelism: 2,43x
[61,148s][info ][gc,stats       ]   CTR: <total>                     1392 us
[61,148s][info ][gc,stats       ]   CTR: Thread Roots                1392 us, workers (us): 541, 197, 252, 202, 200, ---, ---, ---, ---, ---, 
[61,148s][info ][gc,stats       ] Concurrent Weak References          801 us, parallelism: 1,58x
[61,148s][info ][gc,stats       ]   CWRF: <total>                    1265 us
[61,148s][info ][gc,stats       ]   CWRF: Weak References            1265 us, workers (us): 330, 646,  77,  43, 168, ---, ---, ---, ---, ---, 
[61,148s][info ][gc,stats       ] Concurrent Weak Roots               629 us
[61,148s][info ][gc,stats       ]   Roots                             525 us, parallelism: 3,85x
[61,148s][info ][gc,stats       ]     CWR: <total>                   2025 us
[61,148s][info ][gc,stats       ]     CWR: Code Cache Roots          1072 us, workers (us): 227, 219, 234, 182, 210, ---, ---, ---, ---, ---, 
[61,148s][info ][gc,stats       ]     CWR: VM Weak Roots              939 us, workers (us): 237, 201, 185, 184, 132, ---, ---, ---, ---, ---, 
[61,148s][info ][gc,stats       ]     CWR: CLDG Roots                  13 us, workers (us): ---, ---, ---,   7,   7, ---, ---, ---, ---, ---, 
[61,148s][info ][gc,stats       ]   Rendezvous                         87 us
[61,148s][info ][gc,stats       ] Concurrent Cleanup                  160 us
[61,148s][info ][gc,stats       ] Concurrent Class Unloading          942 us
[61,148s][info ][gc,stats       ]   Unlink Stale                      809 us
[61,148s][info ][gc,stats       ]     System Dictionary                22 us
[61,148s][info ][gc,stats       ]     Weak Class Links                  0 us
[61,148s][info ][gc,stats       ]     Code Roots                      787 us
[61,148s][info ][gc,stats       ]   Rendezvous                        110 us
[61,148s][info ][gc,stats       ]   Purge Unlinked                      2 us
[61,148s][info ][gc,stats       ]     Code Roots                        0 us
[61,148s][info ][gc,stats       ]     CLDG                              1 us
[61,148s][info ][gc,stats       ]     Exception Caches                  0 us
[61,148s][info ][gc,stats       ] Concurrent Strong Roots             200 us, parallelism: 1,11x
[61,148s][info ][gc,stats       ]   CSR: <total>                      223 us
[61,148s][info ][gc,stats       ]   CSR: VM Strong Roots               11 us, workers (us):  10,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[61,148s][info ][gc,stats       ]   CSR: CLDG Roots                   213 us, workers (us): 109, ---, 103, ---, ---, ---, ---, ---, ---, ---, 
[61,148s][info ][gc,stats       ] Concurrent Evacuation             49755 us
[61,148s][info ][gc,stats       ] Pause Init Update Refs (G)          233 us
[61,148s][info ][gc,stats       ] Pause Init Update Refs (N)           71 us
[61,148s][info ][gc,stats       ]   Manage GCLABs                       4 us
[61,148s][info ][gc,stats       ] Concurrent Update Refs            33206 us
[61,148s][info ][gc,stats       ] Concurrent Update Thread Roots      915 us
[61,148s][info ][gc,stats       ] Pause Final Update Refs (G)         183 us
[61,148s][info ][gc,stats       ] Pause Final Update Refs (N)         124 us
[61,148s][info ][gc,stats       ]   Update Region States               32 us
[61,148s][info ][gc,stats       ]   Trash Collection Set               20 us
[61,148s][info ][gc,stats       ]   Rebuild Free Set                   18 us
[61,148s][info ][gc,stats       ] Concurrent Cleanup                  176 us
[61,148s][info ][gc,stats       ] 
[61,148s][info ][gc,stats       ] Allocation pacing accrued:
[61,148s][info ][gc,stats       ]       0 of  1404 ms (  0,0%): <total>
[61,148s][info ][gc,stats       ]       0 of  1404 ms (  0,0%): <average total>
[61,148s][info ][gc,stats       ] 
[61,148s][info ][gc,metaspace   ] Metaspace: 19848K(20288K)->19850K(20288K) NonClass: 17421K(17600K)->17424K(17600K) Class: 2426K(2688K)->2426K(2688K)
[61,148s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[61,769s][debug][gc,nmethod     ] Register NMethod: net.jpountz.lz4.LZ4BlockInputStream.tryReadFully [0x00007fae7cbea290] (c2)
[63,082s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getFromTrxIntentLog [0x00007fae5d7c4f10] (c1)
[63,082s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.RecordPageCache.get [0x00007fae5d136110] (c1)
[63,082s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.RecordPageCache.get [0x00007fae5d135910] (c1)
[63,082s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx$RecordPage.<init> [0x00007fae5d506d90] (c1)
[63,771s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.loadFence [0x00007fae7cbeac90] (c2)
[63,824s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.hasTasks [0x00007fae7cbeaf90] (c2)
[63,824s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.afterTerminate [0x00007fae5d506290] (c1)
[63,825s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.compareAndSetCtl [0x00007fae7cbeb710] (c2)
[64,708s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.UnixFileDispatcherImpl.force0 [0x00007fae7cbeba10] ()
[64,709s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.FileChannelImpl.force [0x00007fae5d7bf690] (c1)
[64,709s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.UnixFileDispatcherImpl.force [0x00007fae5d6a2890] (c1)
[64,714s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.AbstractForwardingReader.readRevisionRootPage [0x00007fae5d592f90] (c1)
[64,714s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.isSecondMostRecentlyReadPage [0x00007fae5d592910] (c1)
[64,714s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getLeafPageReference [0x00007fae5d592410] (c1)
[64,714s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getInMemoryPageInstance [0x00007fae5d116790] (c1)
[64,715s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getFromBufferManager [0x00007fae5d115b10] (c1)
[64,715s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind$2.deserializePage [0x00007fae5d5e1890] (c1)
[64,715s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.NamePage.<init> [0x00007fae5d5e1290] (c1)
[64,715s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.json.ForwardingJsonNodeReadOnlyTrx.getId [0x00007fae5d7bef90] (c1)
[64,715s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getId [0x00007fae5d7be990] (c1)
[64,716s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.setMostRecentlyReadRecordPage [0x00007fae5d7bdd90] (c1)
[64,717s][debug][gc,nmethod     ] Register NMethod: java.lang.Thread.getAndClearInterrupt [0x00007fae7cbebe10] (c2)
[65,592s][debug][gc,nmethod     ] Register NMethod: java.lang.Math.floorMod [0x00007fae5d7bd910] (c1)
[65,612s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getDeweyIdPageReference [0x00007fae5d7bd310] (c1)
[65,612s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getCASPageReference [0x00007fae5d80e510] (c1)
[65,612s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getPathPageReference [0x00007fae5d80df10] (c1)
[65,615s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.dereferenceRecordPageForModification [0x00007fae5d80ce10] (c1)
[66,351s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.releaseAccess [0x00007fae5d7c2790] (c1)
[67,388s][debug][gc,nmethod     ] Register NMethod: java.util.Arrays.fill [0x00007fae7cbec110] (c2)
[67,892s][info ][gc             ] Trigger: Free (1228M) is below minimum threshold (1228M)
[67,892s][info ][gc,ergo        ] Free: 1228M, Max: 4096K regular, 1228M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[67,892s][info ][gc,start       ] GC(24) Concurrent reset
[67,892s][info ][gc,task        ] GC(24) Using 5 of 10 workers for concurrent reset
[67,892s][info ][gc,ergo        ] GC(24) Pacer for Reset. Non-Taxable: 12288M
[67,896s][info ][gc             ] GC(24) Concurrent reset 3,912ms
[67,897s][info ][gc,start       ] GC(24) Pause Init Mark (unload classes)
[67,897s][info ][gc,task        ] GC(24) Using 10 of 10 workers for init marking
[67,897s][info ][gc,ergo        ] GC(24) Pacer for Mark. Expected Live: 430M, Free: 1224M, Non-Taxable: 122M, Alloc Tax Rate: 0,4x
[67,897s][info ][gc             ] GC(24) Pause Init Mark (unload classes) 0,094ms
[67,897s][info ][gc,start       ] GC(24) Concurrent marking roots
[67,897s][info ][gc,task        ] GC(24) Using 5 of 10 workers for concurrent marking roots
[67,897s][debug][gc,tlab        ] GC(24) TLAB totals: thrds: 15  refills: 40 max: 14 slow allocs: 33 max 15 waste: 28,4% gc: 20073672B max: 3933152B slow: 53712B max: 42472B
[67,897s][info ][gc             ] GC(24) Concurrent marking roots 0,501ms
[67,897s][info ][gc,start       ] GC(24) Concurrent marking (unload classes)
[67,897s][info ][gc,task        ] GC(24) Using 5 of 10 workers for concurrent marking
[67,926s][info ][gc             ] GC(24) Concurrent marking (unload classes) 28,929ms
[67,926s][info ][gc,start       ] GC(24) Pause Final Mark (unload classes)
[67,926s][info ][gc,task        ] GC(24) Using 10 of 10 workers for final marking
[67,927s][info ][gc,ergo        ] GC(24) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 7128M, Max CSet: 512M, Min Garbage: 0B
[67,927s][info ][gc,ergo        ] GC(24) Collectable Garbage: 10126M (99%), Immediate: 5312M (52%), CSet: 4814M (47%)
[67,927s][info ][gc,ergo        ] GC(24) Pacer for Evacuation. Used CSet: 5128M, Free: 6512M, Non-Taxable: 651M, Alloc Tax Rate: 1,9x
[67,927s][info ][gc             ] GC(24) Pause Final Mark (unload classes) 0,632ms
[67,927s][info ][gc,start       ] GC(24) Concurrent thread roots
[67,927s][info ][gc,task        ] GC(24) Using 5 of 10 workers for Concurrent thread roots
[67,929s][info ][gc             ] GC(24) Concurrent thread roots 1,837ms
[67,929s][info ][gc,start       ] GC(24) Concurrent weak references
[67,929s][info ][gc,task        ] GC(24) Using 5 of 10 workers for concurrent weak references
[67,932s][info ][gc,ref         ] GC(24) Encountered references: Soft: 2319, Weak: 1839, Final: 16960, Phantom: 17216
[67,932s][info ][gc,ref         ] GC(24) Discovered  references: Soft: 0, Weak: 300, Final: 16960, Phantom: 17329
[67,932s][info ][gc,ref         ] GC(24) Enqueued    references: Soft: 0, Weak: 0, Final: 16960, Phantom: 17002
[67,932s][info ][gc             ] GC(24) Concurrent weak references 3,483ms
[67,932s][info ][gc,start       ] GC(24) Concurrent weak roots
[67,932s][info ][gc,task        ] GC(24) Using 5 of 10 workers for concurrent weak root
[67,933s][info ][gc             ] GC(24) Concurrent weak roots 0,764ms
[67,933s][info ][gc,start       ] GC(24) Concurrent cleanup
[67,933s][info ][gc             ] GC(24) Concurrent cleanup 10479M->5167M(10548M) 0,203ms
[67,933s][info ][gc,ergo        ] GC(24) Free: 6508M, Max: 4096K regular, 1680M humongous, Frag: 75% external, 0% internal; Reserve: 612M, Max: 4096K
[67,933s][info ][gc,start       ] GC(24) Concurrent class unloading
[67,933s][info ][gc,task        ] GC(24) Using 5 of 10 workers for concurrent class unloading
[67,933s][debug][gc,phases,start] GC(24) ClassLoaderData
[67,933s][debug][gc,phases      ] GC(24) ClassLoaderData 0,010ms
[67,933s][debug][gc,phases,start] GC(24) Trigger cleanups
[67,933s][debug][gc,phases      ] GC(24) Trigger cleanups 0,005ms
[67,935s][debug][gc,nmethod     ] GC(24) Unregister NMethod: net.jpountz.lz4.LZ4BlockInputStream.tryReadFully [0x00007fae5d39ca90]
[67,935s][debug][gc,nmethod     ] GC(24) Unregister NMethod: java.util.ArrayList.<init> [0x00007fae5d817a10]
[67,935s][debug][gc,nmethod     ] GC(24) Unregister NMethod: jdk.internal.misc.Unsafe.loadFence [0x00007fae5d6d1790]
[67,935s][debug][gc,nmethod     ] GC(24) Unregister NMethod: java.lang.Thread.getAndClearInterrupt [0x00007fae5d2a0710]
[67,935s][debug][gc,nmethod     ] GC(24) Unregister NMethod: java.util.Arrays.fill [0x00007fae5d172610]
[67,935s][debug][gc,nmethod     ] GC(24) Unregister NMethod: java.util.concurrent.ForkJoinPool.compareAndSetCtl [0x00007fae5d73a890]
[67,935s][info ][gc             ] GC(24) Concurrent class unloading 1,238ms
[67,935s][info ][gc,start       ] GC(24) Concurrent strong roots
[67,935s][info ][gc,task        ] GC(24) Using 5 of 10 workers for concurrent strong root
[67,935s][info ][gc             ] GC(24) Concurrent strong roots 0,254ms
[67,935s][info ][gc,start       ] GC(24) Concurrent evacuation
[67,935s][info ][gc,task        ] GC(24) Using 5 of 10 workers for concurrent evacuation
[67,968s][info ][gc             ] GC(24) Concurrent evacuation 33,225ms
[67,968s][info ][gc,start       ] GC(24) Pause Init Update Refs
[67,968s][info ][gc,ergo        ] GC(24) Pacer for Update Refs. Used: 5516M, Free: 6484M, Non-Taxable: 648M, Alloc Tax Rate: 1,1x
[67,968s][info ][gc             ] GC(24) Pause Init Update Refs 0,045ms
[67,968s][info ][gc,start       ] GC(24) Concurrent update references
[67,968s][info ][gc,task        ] GC(24) Using 5 of 10 workers for concurrent reference update
[67,995s][info ][gc             ] GC(24) Concurrent update references 26,679ms
[67,995s][info ][gc,start       ] GC(24) Concurrent update thread roots
[67,996s][info ][gc             ] GC(24) Concurrent update thread roots 1,052ms
[67,996s][info ][gc,start       ] GC(24) Pause Final Update Refs
[67,996s][info ][gc,task        ] GC(24) Using 10 of 10 workers for final reference update
[67,996s][info ][gc             ] GC(24) Pause Final Update Refs 0,142ms
[67,997s][info ][gc,start       ] GC(24) Concurrent cleanup
[67,997s][info ][gc             ] GC(24) Concurrent cleanup 5536M->408M(10548M) 0,229ms
[67,997s][debug][gc,ergo        ] GC(24) Available: 11264 MB, z-score=0,755. Average available: 11039,4 MB +/- 297,4 MB.
[67,997s][info ][gc,ergo        ] Free: 11264M, Max: 4096K regular, 9876M humongous, Frag: 13% external, 0% internal; Reserve: 616M, Max: 4096K
[67,997s][info ][gc,stats       ] 
[67,997s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[67,997s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[67,997s][info ][gc,stats       ] 
[67,997s][info ][gc,stats       ] Concurrent Reset                   3943 us
[67,997s][info ][gc,stats       ] Pause Init Mark (G)                 904 us
[67,997s][info ][gc,stats       ] Pause Init Mark (N)                 108 us
[67,997s][info ][gc,stats       ]   Update Region States               22 us
[67,997s][info ][gc,stats       ] Concurrent Mark Roots               511 us, parallelism: 2,55x
[67,997s][info ][gc,stats       ]   CMR: <total>                     1304 us
[67,997s][info ][gc,stats       ]   CMR: Thread Roots                1238 us, workers (us): 208, 167, 440, 191, 232, ---, ---, ---, ---, ---, 
[67,997s][info ][gc,stats       ]   CMR: VM Strong Roots               14 us, workers (us):   6,   6,   0,   2,   1, ---, ---, ---, ---, ---, 
[67,997s][info ][gc,stats       ]   CMR: CLDG Roots                    52 us, workers (us):   7,  44, ---, ---, ---, ---, ---, ---, ---, ---, 
[67,997s][info ][gc,stats       ] Concurrent Marking                28976 us
[67,997s][info ][gc,stats       ] Pause Final Mark (G)                792 us
[67,997s][info ][gc,stats       ] Pause Final Mark (N)                648 us
[67,997s][info ][gc,stats       ]   Finish Mark                       254 us
[67,997s][info ][gc,stats       ]   Update Region States               96 us
[67,997s][info ][gc,stats       ]   Choose Collection Set             213 us
[67,997s][info ][gc,stats       ]   Rebuild Free Set                   13 us
[67,997s][info ][gc,stats       ] Concurrent Thread Roots            1850 us, parallelism: 3,71x
[67,997s][info ][gc,stats       ]   CTR: <total>                     6860 us
[67,997s][info ][gc,stats       ]   CTR: Thread Roots                6860 us, workers (us): 1667, 1182, 1174, 1688, 1148, ---, ---, ---, ---, ---, 
[67,997s][info ][gc,stats       ] Concurrent Weak References         3491 us, parallelism: 1,95x
[67,997s][info ][gc,stats       ]   CWRF: <total>                    6825 us
[67,997s][info ][gc,stats       ]   CWRF: Weak References            6825 us, workers (us):  42, 3363, 2936, 484,   0, ---, ---, ---, ---, ---, 
[67,997s][info ][gc,stats       ] Concurrent Weak Roots               801 us
[67,997s][info ][gc,stats       ]   Roots                             576 us, parallelism: 3,37x
[67,997s][info ][gc,stats       ]     CWR: <total>                   1942 us
[67,997s][info ][gc,stats       ]     CWR: Code Cache Roots          1010 us, workers (us): 164, 191, 253, 225, 176, ---, ---, ---, ---, ---, 
[67,997s][info ][gc,stats       ]     CWR: VM Weak Roots              913 us, workers (us): 286, 221, 136, 136, 135, ---, ---, ---, ---, ---, 
[67,997s][info ][gc,stats       ]     CWR: CLDG Roots                  19 us, workers (us):  10, ---, ---, ---,  10, ---, ---, ---, ---, ---, 
[67,997s][info ][gc,stats       ]   Rendezvous                        176 us
[67,997s][info ][gc,stats       ] Concurrent Cleanup                  224 us
[67,997s][info ][gc,stats       ] Concurrent Class Unloading         1248 us
[67,997s][info ][gc,stats       ]   Unlink Stale                      940 us
[67,997s][info ][gc,stats       ]     System Dictionary                25 us
[67,997s][info ][gc,stats       ]     Weak Class Links                  0 us
[67,997s][info ][gc,stats       ]     Code Roots                      915 us
[67,997s][info ][gc,stats       ]   Rendezvous                        216 us
[67,997s][info ][gc,stats       ]   Purge Unlinked                     70 us
[67,997s][info ][gc,stats       ]     Code Roots                       68 us
[67,997s][info ][gc,stats       ]     CLDG                              3 us
[67,997s][info ][gc,stats       ]     Exception Caches                  0 us
[67,997s][info ][gc,stats       ] Concurrent Strong Roots             261 us, parallelism: 0,97x
[67,997s][info ][gc,stats       ]   CSR: <total>                      254 us
[67,997s][info ][gc,stats       ]   CSR: VM Strong Roots               13 us, workers (us):   7,   6,   0,   0,   0, ---, ---, ---, ---, ---, 
[67,997s][info ][gc,stats       ]   CSR: CLDG Roots                   241 us, workers (us): 147,  94, ---, ---, ---, ---, ---, ---, ---, ---, 
[67,997s][info ][gc,stats       ] Concurrent Evacuation             33279 us
[67,997s][info ][gc,stats       ] Pause Init Update Refs (G)          196 us
[67,997s][info ][gc,stats       ] Pause Init Update Refs (N)           60 us
[67,997s][info ][gc,stats       ]   Manage GCLABs                       4 us
[67,997s][info ][gc,stats       ] Concurrent Update Refs            26724 us
[67,997s][info ][gc,stats       ] Concurrent Update Thread Roots     1074 us
[67,997s][info ][gc,stats       ] Pause Final Update Refs (G)         367 us
[67,997s][info ][gc,stats       ] Pause Final Update Refs (N)         157 us
[67,997s][info ][gc,stats       ]   Update Region States               72 us
[67,997s][info ][gc,stats       ]   Trash Collection Set               15 us
[67,997s][info ][gc,stats       ]   Rebuild Free Set                   19 us
[67,997s][info ][gc,stats       ] Concurrent Cleanup                  240 us
[67,997s][info ][gc,stats       ] 
[67,997s][info ][gc,stats       ] Allocation pacing accrued:
[67,997s][info ][gc,stats       ]       0 of  6849 ms (  0,0%): <total>
[67,997s][info ][gc,stats       ]       0 of  6849 ms (  0,0%): <average total>
[67,997s][info ][gc,stats       ] 
[67,997s][info ][gc,metaspace   ] Metaspace: 19858K(20288K)->19858K(20288K) NonClass: 17431K(17600K)->17431K(17600K) Class: 2426K(2688K)->2426K(2688K)
[67,997s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[68,172s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.setWindowWeightedSize [0x00007fae7cbec510] (c1)
[68,173s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture.uniApplyStage [0x00007fae5d80c110] (c1)
[68,174s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CompletableFuture$Signaller.tryFire [0x00007fae5d39ca90] (c1)
[70,237s][debug][gc,nmethod     ] Register NMethod: java.lang.Record.<init> [0x00007fae7cbec810] (c2)
[70,921s][debug][gc,nmethod     ] Register NMethod: java.lang.VirtualThread.compareAndSetState [0x00007fae7cbecb10] (c2)
[71,597s][debug][gc,nmethod     ] Register NMethod: java.lang.String.<init> [0x00007fae7cbece10] (c2)
[72,230s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.nextLocalTask [0x00007fae7cbed110] (c2)
[72,279s][debug][gc,nmethod     ] Register NMethod: io.sirix.utils.IntToObjectMap.clear [0x00007fae5d817d10] (c1)
[72,289s][debug][gc,nmethod     ] Register NMethod: java.util.BitSet.valueOf [0x00007fae7cbed690] (c2)
[72,290s][debug][gc,nmethod     ] Register NMethod: java.nio.MappedByteBuffer.flip [0x00007fae7cbeeb10] (c2)
[72,946s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.LocalAsyncCache$$Lambda/0x00007fadb4287548.<init> [0x00007fae5d80bc10] (c1)
[72,947s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.LocalAsyncCache.get [0x00007fae5d620910] (c1)
[72,947s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.LocalAsyncCache$AbstractCacheView.resolve [0x00007fae5d61f910] (c1)
[72,947s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.UnboundedLocalCache.computeIfAbsent [0x00007fae5d80ae10] (c1)
[72,948s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind$5.deserializePage [0x00007fae5d6ab610] (c1)
[72,948s][debug][gc,nmethod     ] Register NMethod: java.util.UUID.fromString [0x00007fae5d651b90] (c1)
[72,948s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.<init> [0x00007fae5d6ab010] (c1)
[72,948s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef.setDrainStatusRelease [0x00007fae5d61eb90] (c1)
[72,949s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleInts$FieldInstanceReadWrite.setRelease [0x00007fae5d61e010] (c1)
[72,949s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_LI_V [0x00007fae5d0c8990] (c1)
[72,949s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PS.getKeyReference [0x00007fae5d0c7990] (c1)
[72,949s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef.casDrainStatus [0x00007fae5d6aa410] (c1)
[73,581s][info ][gc             ] Trigger: Explicit GC request (System.gc())
[73,581s][info ][gc,ergo        ] Free: 1389M, Max: 4096K regular, 1388M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[73,581s][info ][gc,start       ] GC(25) Concurrent reset
[73,581s][info ][gc,task        ] GC(25) Using 5 of 10 workers for concurrent reset
[73,581s][info ][gc,ergo        ] GC(25) Pacer for Reset. Non-Taxable: 12288M
[73,585s][info ][gc             ] GC(25) Concurrent reset 3,802ms
[73,585s][info ][gc,start       ] GC(25) Pause Init Mark (unload classes)
[73,585s][info ][gc,task        ] GC(25) Using 10 of 10 workers for init marking
[73,585s][info ][gc,ref         ] GC(25) Clearing All SoftReferences
[73,585s][info ][gc,ergo        ] GC(25) Pacer for Mark. Expected Live: 385M, Free: 1389M, Non-Taxable: 138M, Alloc Tax Rate: 0,3x
[73,585s][info ][gc             ] GC(25) Pause Init Mark (unload classes) 0,080ms
[73,585s][info ][gc,start       ] GC(25) Concurrent marking roots
[73,585s][info ][gc,task        ] GC(25) Using 5 of 10 workers for concurrent marking roots
[73,585s][debug][gc,tlab        ] GC(25) TLAB totals: thrds: 1  refills: 6 max: 6 slow allocs: 0 max 0 waste: 16,2% gc: 4083024B max: 4083024B slow: 2984B max: 2984B
[73,586s][info ][gc             ] GC(25) Concurrent marking roots 0,630ms
[73,586s][info ][gc,start       ] GC(25) Concurrent marking (unload classes)
[73,586s][info ][gc,task        ] GC(25) Using 5 of 10 workers for concurrent marking
[73,629s][info ][gc             ] GC(25) Concurrent marking (unload classes) 43,151ms
[73,629s][info ][gc,start       ] GC(25) Pause Final Mark (unload classes)
[73,629s][info ][gc,task        ] GC(25) Using 10 of 10 workers for final marking
[73,630s][info ][gc,ergo        ] GC(25) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 6656M, Max CSet: 512M, Min Garbage: 0B
[73,630s][info ][gc,ergo        ] GC(25) Collectable Garbage: 9755M (99%), Immediate: 4652M (47%), CSet: 5103M (52%)
[73,630s][info ][gc,ergo        ] GC(25) Pacer for Evacuation. Used CSet: 5614M, Free: 6040M, Non-Taxable: 604M, Alloc Tax Rate: 2,3x
[73,630s][info ][gc             ] GC(25) Pause Final Mark (unload classes) 0,700ms
[73,630s][info ][gc,start       ] GC(25) Concurrent thread roots
[73,630s][info ][gc,task        ] GC(25) Using 5 of 10 workers for Concurrent thread roots
[73,631s][info ][gc             ] GC(25) Concurrent thread roots 0,730ms
[73,631s][info ][gc,start       ] GC(25) Concurrent weak references
[73,631s][info ][gc,task        ] GC(25) Using 5 of 10 workers for concurrent weak references
[73,634s][info ][gc,ref         ] GC(25) Encountered references: Soft: 2319, Weak: 1838, Final: 18260, Phantom: 18668
[73,635s][info ][gc,ref         ] GC(25) Discovered  references: Soft: 2227, Weak: 244, Final: 18260, Phantom: 18686
[73,635s][info ][gc,ref         ] GC(25) Enqueued    references: Soft: 0, Weak: 0, Final: 18260, Phantom: 18308
[73,635s][info ][gc             ] GC(25) Concurrent weak references 3,867ms
[73,635s][info ][gc,start       ] GC(25) Concurrent weak roots
[73,635s][info ][gc,task        ] GC(25) Using 5 of 10 workers for concurrent weak root
[73,635s][info ][gc             ] GC(25) Concurrent weak roots 0,838ms
[73,635s][info ][gc,start       ] GC(25) Concurrent cleanup
[73,636s][info ][gc             ] GC(25) Concurrent cleanup 10286M->5634M(10548M) 0,121ms
[73,636s][info ][gc,ergo        ] GC(25) Free: 6040M, Max: 4096K regular, 1728M humongous, Frag: 72% external, 0% internal; Reserve: 612M, Max: 4096K
[73,636s][info ][gc,start       ] GC(25) Concurrent class unloading
[73,636s][info ][gc,task        ] GC(25) Using 5 of 10 workers for concurrent class unloading
[73,636s][debug][gc,phases,start] GC(25) ClassLoaderData
[73,636s][debug][gc,phases      ] GC(25) ClassLoaderData 0,013ms
[73,636s][debug][gc,phases,start] GC(25) Trigger cleanups
[73,636s][debug][gc,phases      ] GC(25) Trigger cleanups 0,007ms
[73,637s][debug][gc,nmethod     ] GC(25) Unregister NMethod: java.lang.VirtualThread.compareAndSetState [0x00007fae5d772e90]
[73,637s][debug][gc,nmethod     ] GC(25) Unregister NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.nextLocalTask [0x00007fae7ca2ef10]
[73,637s][debug][gc,nmethod     ] GC(25) Unregister NMethod: java.util.BitSet.valueOf [0x00007fae5d0bd010]
[73,637s][debug][gc,nmethod     ] GC(25) Unregister NMethod: java.lang.Record.<init> [0x00007fae5d1f7510]
[73,637s][debug][gc,nmethod     ] GC(25) Unregister NMethod: java.nio.MappedByteBuffer.flip [0x00007fae5d187590]
[73,637s][debug][gc,nmethod     ] GC(25) Unregister NMethod: java.lang.String.<init> [0x00007fae5d0dbb90]
[73,637s][info ][gc             ] GC(25) Concurrent class unloading 1,093ms
[73,637s][info ][gc,start       ] GC(25) Concurrent strong roots
[73,637s][info ][gc,task        ] GC(25) Using 5 of 10 workers for concurrent strong root
[73,637s][info ][gc             ] GC(25) Concurrent strong roots 0,251ms
[73,637s][info ][gc,start       ] GC(25) Concurrent evacuation
[73,637s][info ][gc,task        ] GC(25) Using 5 of 10 workers for concurrent evacuation
[73,686s][info ][gc             ] GC(25) Concurrent evacuation 49,338ms
[73,686s][info ][gc,start       ] GC(25) Pause Init Update Refs
[73,687s][info ][gc,ergo        ] GC(25) Pacer for Update Refs. Used: 6150M, Free: 6040M, Non-Taxable: 604M, Alloc Tax Rate: 1,2x
[73,687s][info ][gc             ] GC(25) Pause Init Update Refs 0,059ms
[73,687s][info ][gc,start       ] GC(25) Concurrent update references
[73,687s][info ][gc,task        ] GC(25) Using 5 of 10 workers for concurrent reference update
[73,723s][info ][gc             ] GC(25) Concurrent update references 36,374ms
[73,723s][info ][gc,start       ] GC(25) Concurrent update thread roots
[73,725s][info ][gc             ] GC(25) Concurrent update thread roots 1,638ms
[73,725s][info ][gc,start       ] GC(25) Pause Final Update Refs
[73,725s][info ][gc,task        ] GC(25) Using 10 of 10 workers for final reference update
[73,725s][info ][gc             ] GC(25) Pause Final Update Refs 0,173ms
[73,725s][info ][gc,start       ] GC(25) Concurrent cleanup
[73,725s][info ][gc             ] GC(25) Concurrent cleanup 6150M->536M(10548M) 0,157ms
[73,725s][debug][gc,ergo        ] GC(25) Available: 11136 MB, z-score=0,176. Average available: 11089,0 MB +/- 266,4 MB.
[73,725s][info ][gc,ergo        ] Free: 11136M, Max: 4096K regular, 9204M humongous, Frag: 18% external, 0% internal; Reserve: 616M, Max: 4096K
[73,725s][info ][gc,stats       ] 
[73,725s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[73,725s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[73,725s][info ][gc,stats       ] 
[73,725s][info ][gc,stats       ] Concurrent Reset                   3830 us
[73,725s][info ][gc,stats       ] Pause Init Mark (G)                 127 us
[73,725s][info ][gc,stats       ] Pause Init Mark (N)                  92 us
[73,725s][info ][gc,stats       ]   Update Region States               16 us
[73,725s][info ][gc,stats       ] Concurrent Mark Roots               642 us, parallelism: 2,43x
[73,725s][info ][gc,stats       ]   CMR: <total>                     1559 us
[73,725s][info ][gc,stats       ]   CMR: Thread Roots                1490 us, workers (us): 569, 231, 274, 185, 231, ---, ---, ---, ---, ---, 
[73,725s][info ][gc,stats       ]   CMR: VM Strong Roots               11 us, workers (us):   3,   3,   2,   2,   1, ---, ---, ---, ---, ---, 
[73,725s][info ][gc,stats       ]   CMR: CLDG Roots                    58 us, workers (us): ---, ---,   8,  50, ---, ---, ---, ---, ---, ---, 
[73,725s][info ][gc,stats       ] Concurrent Marking                43188 us
[73,725s][info ][gc,stats       ] Pause Final Mark (G)                830 us
[73,725s][info ][gc,stats       ] Pause Final Mark (N)                713 us
[73,725s][info ][gc,stats       ]   Finish Mark                       294 us
[73,725s][info ][gc,stats       ]   Update Region States              104 us
[73,725s][info ][gc,stats       ]   Choose Collection Set             234 us
[73,726s][info ][gc,stats       ]   Rebuild Free Set                   12 us
[73,726s][info ][gc,stats       ] Concurrent Thread Roots             750 us, parallelism: 1,90x
[73,726s][info ][gc,stats       ]   CTR: <total>                     1427 us
[73,726s][info ][gc,stats       ]   CTR: Thread Roots                1427 us, workers (us): 601, 266, 186, 188, 186, ---, ---, ---, ---, ---, 
[73,726s][info ][gc,stats       ] Concurrent Weak References         3878 us, parallelism: 1,86x
[73,726s][info ][gc,stats       ]   CWRF: <total>                    7196 us
[73,726s][info ][gc,stats       ]   CWRF: Weak References            7196 us, workers (us):  23, 3532,  39, 3499, 102, ---, ---, ---, ---, ---, 
[73,726s][info ][gc,stats       ] Concurrent Weak Roots               864 us
[73,726s][info ][gc,stats       ]   Roots                             621 us, parallelism: 3,03x
[73,726s][info ][gc,stats       ]     CWR: <total>                   1881 us
[73,726s][info ][gc,stats       ]     CWR: Code Cache Roots           996 us, workers (us): 243, 168, 165, 196, 224, ---, ---, ---, ---, ---, 
[73,726s][info ][gc,stats       ]     CWR: VM Weak Roots              869 us, workers (us): 207, 205, 170, 143, 143, ---, ---, ---, ---, ---, 
[73,726s][info ][gc,stats       ]     CWR: CLDG Roots                  16 us, workers (us): ---,   8,   8, ---, ---, ---, ---, ---, ---, ---, 
[73,726s][info ][gc,stats       ]   Rendezvous                        201 us
[73,726s][info ][gc,stats       ] Concurrent Cleanup                  133 us
[73,726s][info ][gc,stats       ] Concurrent Class Unloading         1106 us
[73,726s][info ][gc,stats       ]   Unlink Stale                      821 us
[73,726s][info ][gc,stats       ]     System Dictionary                35 us
[73,726s][info ][gc,stats       ]     Weak Class Links                  0 us
[73,726s][info ][gc,stats       ]     Code Roots                      785 us
[73,726s][info ][gc,stats       ]   Rendezvous                        150 us
[73,726s][info ][gc,stats       ]   Purge Unlinked                    105 us
[73,726s][info ][gc,stats       ]     Code Roots                      102 us
[73,726s][info ][gc,stats       ]     CLDG                              3 us
[73,726s][info ][gc,stats       ]     Exception Caches                  0 us
[73,726s][info ][gc,stats       ] Concurrent Strong Roots             274 us, parallelism: 0,82x
[73,726s][info ][gc,stats       ]   CSR: <total>                      225 us
[73,726s][info ][gc,stats       ]   CSR: VM Strong Roots               12 us, workers (us):  11,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[73,726s][info ][gc,stats       ]   CSR: CLDG Roots                   213 us, workers (us): 130,  84, ---, ---, ---, ---, ---, ---, ---, ---, 
[73,726s][info ][gc,stats       ] Concurrent Evacuation             49391 us
[73,726s][info ][gc,stats       ] Pause Init Update Refs (G)          334 us
[73,726s][info ][gc,stats       ] Pause Init Update Refs (N)           75 us
[73,726s][info ][gc,stats       ]   Manage GCLABs                       4 us
[73,726s][info ][gc,stats       ] Concurrent Update Refs            36430 us
[73,726s][info ][gc,stats       ] Concurrent Update Thread Roots     1676 us
[73,726s][info ][gc,stats       ] Pause Final Update Refs (G)         309 us
[73,726s][info ][gc,stats       ] Pause Final Update Refs (N)         192 us
[73,726s][info ][gc,stats       ]   Update Region States              102 us
[73,726s][info ][gc,stats       ]   Trash Collection Set               23 us
[73,726s][info ][gc,stats       ]   Rebuild Free Set                   13 us
[73,726s][info ][gc,stats       ] Concurrent Cleanup                  170 us
[73,726s][info ][gc,stats       ] 
[73,726s][info ][gc,stats       ] Allocation pacing accrued:
[73,726s][info ][gc,stats       ]       0 of  5729 ms (  0,0%): <total>
[73,726s][info ][gc,stats       ]       0 of  5729 ms (  0,0%): <average total>
[73,726s][info ][gc,stats       ] 
[73,726s][info ][gc,metaspace   ] Metaspace: 19869K(20288K)->19869K(20288K) NonClass: 17443K(17600K)->17443K(17600K) Class: 2426K(2688K)->2426K(2688K)
[73,726s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[73,726s][info ][gc,start       ] Concurrent uncommit
[73,780s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite.compareAndSet [0x00007fae5d0bd990] (c1)
[73,847s][info ][gc             ] Concurrent uncommit 578M->804M(5120M) 121,080ms
[74,469s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue.lvProducerIndex [0x00007fae5d650f10] (c1)
[74,470s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.<init> [0x00007fae5d1e0c90] (c1)
[75,117s][info ][gc             ] Trigger: Learning 2 of 5. Free (8600M) is below initial threshold (8601M)
[75,117s][info ][gc,ergo        ] Free: 8600M, Max: 4096K regular, 6692M humongous, Frag: 23% external, 0% internal; Reserve: 616M, Max: 4096K
[75,117s][info ][gc,start       ] GC(26) Concurrent reset
[75,117s][info ][gc,task        ] GC(26) Using 5 of 10 workers for concurrent reset
[75,117s][info ][gc,ergo        ] GC(26) Pacer for Reset. Non-Taxable: 12288M
[75,119s][info ][gc             ] GC(26) Concurrent reset 2,071ms
[75,119s][info ][gc,start       ] GC(26) Pause Init Mark (unload classes)
[75,119s][info ][gc,task        ] GC(26) Using 10 of 10 workers for init marking
[75,119s][info ][gc,ergo        ] GC(26) Pacer for Mark. Expected Live: 477M, Free: 8600M, Non-Taxable: 860M, Alloc Tax Rate: 0,1x
[75,119s][info ][gc             ] GC(26) Pause Init Mark (unload classes) 0,060ms
[75,119s][info ][gc,start       ] GC(26) Concurrent marking roots
[75,119s][info ][gc,task        ] GC(26) Using 5 of 10 workers for concurrent marking roots
[75,119s][debug][gc,tlab        ] GC(26) TLAB totals: thrds: 1  refills: 336 max: 336 slow allocs: 0 max 0 waste:  0,2% gc: 1895352B max: 1895352B slow: 749672B max: 749672B
[75,120s][info ][gc             ] GC(26) Concurrent marking roots 0,678ms
[75,120s][info ][gc,start       ] GC(26) Concurrent marking (unload classes)
[75,120s][info ][gc,task        ] GC(26) Using 5 of 10 workers for concurrent marking
[75,161s][debug][gc,nmethod     ] Register NMethod: java.util.HashSet.<init> [0x00007fae5d0bd010] (c1)
[75,166s][info ][gc             ] GC(26) Concurrent marking (unload classes) 45,818ms
[75,166s][info ][gc,start       ] GC(26) Pause Final Mark (unload classes)
[75,166s][info ][gc,task        ] GC(26) Using 10 of 10 workers for final marking
[75,166s][info ][gc,ergo        ] GC(26) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10288M, Max CSet: 512M, Min Garbage: 0B
[75,166s][info ][gc,ergo        ] GC(26) Collectable Garbage: 2596M (99%), Immediate: 1100M (42%), CSet: 1496M (57%)
[75,166s][info ][gc,ergo        ] GC(26) Pacer for Evacuation. Used CSet: 1964M, Free: 9675M, Non-Taxable: 967M, Alloc Tax Rate: 1,1x
[75,166s][info ][gc             ] GC(26) Pause Final Mark (unload classes) 0,487ms
[75,166s][info ][gc,start       ] GC(26) Concurrent thread roots
[75,166s][info ][gc,task        ] GC(26) Using 5 of 10 workers for Concurrent thread roots
[75,168s][info ][gc             ] GC(26) Concurrent thread roots 1,797ms
[75,168s][info ][gc,start       ] GC(26) Concurrent weak references
[75,168s][info ][gc,task        ] GC(26) Using 5 of 10 workers for concurrent weak references
[75,170s][info ][gc,ref         ] GC(26) Encountered references: Soft: 2320, Weak: 1839, Final: 4820, Phantom: 5215
[75,170s][info ][gc,ref         ] GC(26) Discovered  references: Soft: 0, Weak: 319, Final: 4820, Phantom: 5083
[75,170s][info ][gc,ref         ] GC(26) Enqueued    references: Soft: 0, Weak: 0, Final: 4820, Phantom: 4832
[75,170s][info ][gc             ] GC(26) Concurrent weak references 1,851ms
[75,170s][info ][gc,start       ] GC(26) Concurrent weak roots
[75,170s][info ][gc,task        ] GC(26) Using 5 of 10 workers for concurrent weak root
[75,171s][info ][gc             ] GC(26) Concurrent weak roots 0,589ms
[75,171s][info ][gc,start       ] GC(26) Concurrent cleanup
[75,171s][info ][gc             ] GC(26) Concurrent cleanup 3101M->2001M(5124M) 0,170ms
[75,171s][info ][gc,ergo        ] GC(26) Free: 9672M, Max: 4096K regular, 9072M humongous, Frag: 7% external, 0% internal; Reserve: 614M, Max: 4096K
[75,171s][info ][gc,start       ] GC(26) Concurrent class unloading
[75,171s][info ][gc,task        ] GC(26) Using 5 of 10 workers for concurrent class unloading
[75,171s][debug][gc,phases,start] GC(26) ClassLoaderData
[75,171s][debug][gc,phases      ] GC(26) ClassLoaderData 0,009ms
[75,171s][debug][gc,phases,start] GC(26) Trigger cleanups
[75,171s][debug][gc,phases      ] GC(26) Trigger cleanups 0,004ms
[75,172s][info ][gc             ] GC(26) Concurrent class unloading 0,866ms
[75,172s][info ][gc,start       ] GC(26) Concurrent strong roots
[75,172s][info ][gc,task        ] GC(26) Using 5 of 10 workers for concurrent strong root
[75,172s][info ][gc             ] GC(26) Concurrent strong roots 0,156ms
[75,172s][info ][gc,start       ] GC(26) Concurrent evacuation
[75,172s][info ][gc,task        ] GC(26) Using 5 of 10 workers for concurrent evacuation
[75,221s][info ][gc             ] GC(26) Concurrent evacuation 48,797ms
[75,221s][info ][gc,start       ] GC(26) Pause Init Update Refs
[75,221s][info ][gc,ergo        ] GC(26) Pacer for Update Refs. Used: 2512M, Free: 9644M, Non-Taxable: 964M, Alloc Tax Rate: 1,1x
[75,221s][info ][gc             ] GC(26) Pause Init Update Refs 0,045ms
[75,221s][info ][gc,start       ] GC(26) Concurrent update references
[75,221s][info ][gc,task        ] GC(26) Using 5 of 10 workers for concurrent reference update
[75,255s][info ][gc             ] GC(26) Concurrent update references 33,899ms
[75,255s][info ][gc,start       ] GC(26) Concurrent update thread roots
[75,256s][info ][gc             ] GC(26) Concurrent update thread roots 0,844ms
[75,256s][info ][gc,start       ] GC(26) Pause Final Update Refs
[75,256s][info ][gc,task        ] GC(26) Using 10 of 10 workers for final reference update
[75,256s][info ][gc             ] GC(26) Pause Final Update Refs 0,108ms
[75,256s][info ][gc,start       ] GC(26) Concurrent cleanup
[75,256s][info ][gc             ] GC(26) Concurrent cleanup 2532M->568M(5136M) 0,147ms
[75,256s][debug][gc,ergo        ] GC(26) Available: 11104 MB, z-score=-0,066. Average available: 11120,2 MB +/- 247,3 MB.
[75,256s][info ][gc,ergo        ] Free: 11104M, Max: 4096K regular, 8616M humongous, Frag: 23% external, 0% internal; Reserve: 616M, Max: 4096K
[75,256s][info ][gc,stats       ] 
[75,256s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[75,256s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[75,256s][info ][gc,stats       ] 
[75,256s][info ][gc,stats       ] Concurrent Reset                   2100 us
[75,256s][info ][gc,stats       ] Pause Init Mark (G)                 104 us
[75,256s][info ][gc,stats       ] Pause Init Mark (N)                  68 us
[75,256s][info ][gc,stats       ]   Update Region States               22 us
[75,256s][info ][gc,stats       ] Concurrent Mark Roots               698 us, parallelism: 1,83x
[75,256s][info ][gc,stats       ]   CMR: <total>                     1275 us
[75,256s][info ][gc,stats       ]   CMR: Thread Roots                1226 us, workers (us): 471, 177, 177, 214, 187, ---, ---, ---, ---, ---, 
[75,256s][info ][gc,stats       ]   CMR: VM Strong Roots                6 us, workers (us):   5,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[75,256s][info ][gc,stats       ]   CMR: CLDG Roots                    43 us, workers (us):  43, ---, ---, ---, ---, ---, ---, ---, ---, ---, 
[75,256s][info ][gc,stats       ] Concurrent Marking                45848 us
[75,256s][info ][gc,stats       ] Pause Final Mark (G)                585 us
[75,256s][info ][gc,stats       ] Pause Final Mark (N)                496 us
[75,256s][info ][gc,stats       ]   Finish Mark                       267 us
[75,256s][info ][gc,stats       ]   Update Region States               92 us
[75,256s][info ][gc,stats       ]   Choose Collection Set              86 us
[75,256s][info ][gc,stats       ]   Rebuild Free Set                   10 us
[75,256s][info ][gc,stats       ] Concurrent Thread Roots            1819 us, parallelism: 3,86x
[75,256s][info ][gc,stats       ]   CTR: <total>                     7015 us
[75,256s][info ][gc,stats       ]   CTR: Thread Roots                7015 us, workers (us): 1506, 1642, 1352, 1272, 1244, ---, ---, ---, ---, ---, 
[75,256s][info ][gc,stats       ] Concurrent Weak References         1860 us, parallelism: 0,97x
[75,256s][info ][gc,stats       ]   CWRF: <total>                    1799 us
[75,256s][info ][gc,stats       ]   CWRF: Weak References            1799 us, workers (us): 1799,   1,   0,   0,   0, ---, ---, ---, ---, ---, 
[75,256s][info ][gc,stats       ] Concurrent Weak Roots               600 us
[75,256s][info ][gc,stats       ]   Roots                             502 us, parallelism: 3,89x
[75,256s][info ][gc,stats       ]     CWR: <total>                   1956 us
[75,256s][info ][gc,stats       ]     CWR: Code Cache Roots          1055 us, workers (us): 247, 235, 223, 179, 170, ---, ---, ---, ---, ---, 
[75,256s][info ][gc,stats       ]     CWR: VM Weak Roots              887 us, workers (us): 221, 218, 217, 116, 115, ---, ---, ---, ---, ---, 
[75,256s][info ][gc,stats       ]     CWR: CLDG Roots                  14 us, workers (us): ---, ---, ---,   7,   7, ---, ---, ---, ---, ---, 
[75,256s][info ][gc,stats       ]   Rendezvous                         74 us
[75,256s][info ][gc,stats       ] Concurrent Cleanup                  184 us
[75,256s][info ][gc,stats       ] Concurrent Class Unloading          878 us
[75,256s][info ][gc,stats       ]   Unlink Stale                      799 us
[75,256s][info ][gc,stats       ]     System Dictionary                23 us
[75,256s][info ][gc,stats       ]     Weak Class Links                  0 us
[75,257s][info ][gc,stats       ]     Code Roots                      775 us
[75,257s][info ][gc,stats       ]   Rendezvous                         56 us
[75,257s][info ][gc,stats       ]   Purge Unlinked                      2 us
[75,257s][info ][gc,stats       ]     Code Roots                        0 us
[75,257s][info ][gc,stats       ]     CLDG                              1 us
[75,257s][info ][gc,stats       ]     Exception Caches                  0 us
[75,257s][info ][gc,stats       ] Concurrent Strong Roots             161 us, parallelism: 1,43x
[75,257s][info ][gc,stats       ]   CSR: <total>                      231 us
[75,257s][info ][gc,stats       ]   CSR: VM Strong Roots               12 us, workers (us):   5,   4,   3,   0,   0, ---, ---, ---, ---, ---, 
[75,257s][info ][gc,stats       ]   CSR: CLDG Roots                   219 us, workers (us): 128, ---,  91, ---, ---, ---, ---, ---, ---, ---, 
[75,257s][info ][gc,stats       ] Concurrent Evacuation             48845 us
[75,257s][info ][gc,stats       ] Pause Init Update Refs (G)          197 us
[75,257s][info ][gc,stats       ] Pause Init Update Refs (N)           58 us
[75,257s][info ][gc,stats       ]   Manage GCLABs                       4 us
[75,257s][info ][gc,stats       ] Concurrent Update Refs            33948 us
[75,257s][info ][gc,stats       ] Concurrent Update Thread Roots      865 us
[75,257s][info ][gc,stats       ] Pause Final Update Refs (G)         207 us
[75,257s][info ][gc,stats       ] Pause Final Update Refs (N)         123 us
[75,257s][info ][gc,stats       ]   Update Region States               34 us
[75,257s][info ][gc,stats       ]   Trash Collection Set               22 us
[75,257s][info ][gc,stats       ]   Rebuild Free Set                   16 us
[75,257s][info ][gc,stats       ] Concurrent Cleanup                  177 us
[75,257s][info ][gc,stats       ] 
[75,257s][info ][gc,stats       ] Allocation pacing accrued:
[75,257s][info ][gc,stats       ]       0 of  1531 ms (  0,0%): <total>
[75,257s][info ][gc,stats       ]       0 of  1531 ms (  0,0%): <average total>
[75,257s][info ][gc,stats       ] 
[75,257s][info ][gc,metaspace   ] Metaspace: 19878K(20288K)->19878K(20288K) NonClass: 17451K(17600K)->17452K(17600K) Class: 2426K(2688K)->2426K(2688K)
[75,257s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[76,024s][debug][gc,nmethod     ] Register NMethod: java.util.stream.AbstractPipeline.wrapSink [0x00007fae7ca2ef10] (c2)
[76,029s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.hasTasks [0x00007fae7cbeee10] (c2)
[76,854s][info ][gc             ] Trigger: Learning 3 of 5. Free (8600M) is below initial threshold (8601M)
[76,854s][info ][gc,ergo        ] Free: 8600M, Max: 4096K regular, 8600M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[76,854s][info ][gc,start       ] GC(27) Concurrent reset
[76,854s][info ][gc,task        ] GC(27) Using 5 of 10 workers for concurrent reset
[76,854s][info ][gc,ergo        ] GC(27) Pacer for Reset. Non-Taxable: 12288M
[76,856s][info ][gc             ] GC(27) Concurrent reset 1,927ms
[76,856s][info ][gc,start       ] GC(27) Pause Init Mark (unload classes)
[76,856s][info ][gc,task        ] GC(27) Using 10 of 10 workers for init marking
[76,856s][info ][gc,ergo        ] GC(27) Pacer for Mark. Expected Live: 478M, Free: 8600M, Non-Taxable: 860M, Alloc Tax Rate: 0,1x
[76,856s][info ][gc             ] GC(27) Pause Init Mark (unload classes) 0,048ms
[76,856s][info ][gc,start       ] GC(27) Concurrent marking roots
[76,856s][info ][gc,task        ] GC(27) Using 5 of 10 workers for concurrent marking roots
[76,856s][debug][gc,tlab        ] GC(27) TLAB totals: thrds: 7  refills: 386 max: 363 slow allocs: 40 max 19 waste:  0,4% gc: 5907072B max: 4194200B slow: 771088B max: 760480B
[76,856s][info ][gc             ] GC(27) Concurrent marking roots 0,528ms
[76,856s][info ][gc,start       ] GC(27) Concurrent marking (unload classes)
[76,856s][info ][gc,task        ] GC(27) Using 5 of 10 workers for concurrent marking
[76,869s][info ][gc             ] GC(27) Concurrent marking (unload classes) 12,177ms
[76,869s][info ][gc,start       ] GC(27) Pause Final Mark (unload classes)
[76,869s][info ][gc,task        ] GC(27) Using 10 of 10 workers for final marking
[76,869s][info ][gc,ergo        ] GC(27) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10844M, Max CSet: 512M, Min Garbage: 0B
[76,869s][info ][gc,ergo        ] GC(27) Collectable Garbage: 2936M (99%), Immediate: 1640M (55%), CSet: 1296M (44%)
[76,869s][info ][gc,ergo        ] GC(27) Pacer for Evacuation. Used CSet: 1424M, Free: 10228M, Non-Taxable: 1022M, Alloc Tax Rate: 1,1x
[76,869s][info ][gc             ] GC(27) Pause Final Mark (unload classes) 0,383ms
[76,869s][info ][gc,start       ] GC(27) Concurrent thread roots
[76,869s][info ][gc,task        ] GC(27) Using 5 of 10 workers for Concurrent thread roots
[76,870s][info ][gc             ] GC(27) Concurrent thread roots 0,492ms
[76,870s][info ][gc,start       ] GC(27) Concurrent weak references
[76,870s][info ][gc,task        ] GC(27) Using 5 of 10 workers for concurrent weak references
[76,871s][info ][gc,ref         ] GC(27) Encountered references: Soft: 2320, Weak: 1835, Final: 4256, Phantom: 4465
[76,871s][info ][gc,ref         ] GC(27) Discovered  references: Soft: 0, Weak: 799, Final: 4256, Phantom: 4596
[76,871s][info ][gc,ref         ] GC(27) Enqueued    references: Soft: 0, Weak: 0, Final: 4256, Phantom: 4271
[76,871s][info ][gc             ] GC(27) Concurrent weak references 1,179ms
[76,871s][info ][gc,start       ] GC(27) Concurrent weak roots
[76,871s][info ][gc,task        ] GC(27) Using 5 of 10 workers for concurrent weak root
[76,872s][info ][gc             ] GC(27) Concurrent weak roots 0,589ms
[76,872s][info ][gc,start       ] GC(27) Concurrent cleanup
[76,872s][info ][gc             ] GC(27) Concurrent cleanup 3090M->1450M(5136M) 0,172ms
[76,872s][info ][gc,ergo        ] GC(27) Free: 10224M, Max: 4096K regular, 9036M humongous, Frag: 12% external, 0% internal; Reserve: 613M, Max: 4096K
[76,872s][info ][gc,start       ] GC(27) Concurrent class unloading
[76,872s][info ][gc,task        ] GC(27) Using 5 of 10 workers for concurrent class unloading
[76,872s][debug][gc,phases,start] GC(27) ClassLoaderData
[76,872s][debug][gc,phases      ] GC(27) ClassLoaderData 0,010ms
[76,872s][debug][gc,phases,start] GC(27) Trigger cleanups
[76,872s][debug][gc,phases      ] GC(27) Trigger cleanups 0,005ms
[76,873s][debug][gc,nmethod     ] GC(27) Unregister NMethod: java.util.concurrent.ForkJoinPool.hasTasks [0x00007fae5d6f1190]
[76,873s][debug][gc,nmethod     ] GC(27) Unregister NMethod: java.util.stream.AbstractPipeline.wrapSink [0x00007fae5d38d890]
[76,873s][info ][gc             ] GC(27) Concurrent class unloading 1,051ms
[76,873s][info ][gc,start       ] GC(27) Concurrent strong roots
[76,873s][info ][gc,task        ] GC(27) Using 5 of 10 workers for concurrent strong root
[76,873s][info ][gc             ] GC(27) Concurrent strong roots 0,219ms
[76,873s][info ][gc,start       ] GC(27) Concurrent evacuation
[76,873s][info ][gc,task        ] GC(27) Using 5 of 10 workers for concurrent evacuation
[76,885s][info ][gc             ] GC(27) Concurrent evacuation 12,431ms
[76,886s][info ][gc,start       ] GC(27) Pause Init Update Refs
[76,886s][info ][gc,ergo        ] GC(27) Pacer for Update Refs. Used: 1595M, Free: 10216M, Non-Taxable: 1021M, Alloc Tax Rate: 1,1x
[76,886s][info ][gc             ] GC(27) Pause Init Update Refs 0,033ms
[76,886s][info ][gc,start       ] GC(27) Concurrent update references
[76,886s][info ][gc,task        ] GC(27) Using 5 of 10 workers for concurrent reference update
[76,898s][info ][gc             ] GC(27) Concurrent update references 11,914ms
[76,898s][info ][gc,start       ] GC(27) Concurrent update thread roots
[76,899s][info ][gc             ] GC(27) Concurrent update thread roots 0,875ms
[76,899s][info ][gc,start       ] GC(27) Pause Final Update Refs
[76,899s][info ][gc,task        ] GC(27) Using 10 of 10 workers for final reference update
[76,899s][info ][gc             ] GC(27) Pause Final Update Refs 0,190ms
[76,899s][info ][gc,start       ] GC(27) Concurrent cleanup
[76,899s][info ][gc             ] GC(27) Concurrent cleanup 1603M->179M(5136M) 0,191ms
[76,899s][debug][gc,ergo        ] GC(27) Available: 11492 MB, z-score=1,420. Average available: 11127,4 MB +/- 256,8 MB.
[76,899s][info ][gc,ergo        ] Free: 11492M, Max: 4096K regular, 8928M humongous, Frag: 23% external, 0% internal; Reserve: 616M, Max: 4096K
[76,899s][info ][gc,stats       ] 
[76,899s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[76,899s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[76,899s][info ][gc,stats       ] 
[76,899s][info ][gc,stats       ] Concurrent Reset                   1952 us
[76,899s][info ][gc,stats       ] Pause Init Mark (G)                 209 us
[76,899s][info ][gc,stats       ] Pause Init Mark (N)                  56 us
[76,899s][info ][gc,stats       ]   Update Region States               12 us
[76,899s][info ][gc,stats       ] Concurrent Mark Roots               550 us, parallelism: 2,28x
[76,899s][info ][gc,stats       ]   CMR: <total>                     1251 us
[76,899s][info ][gc,stats       ]   CMR: Thread Roots                1194 us, workers (us): 424, 155, 183, 232, 200, ---, ---, ---, ---, ---, 
[76,899s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   2,   2,   2,   1,   0, ---, ---, ---, ---, ---, 
[76,899s][info ][gc,stats       ]   CMR: CLDG Roots                    49 us, workers (us): ---,  42,   7, ---, ---, ---, ---, ---, ---, ---, 
[76,899s][info ][gc,stats       ] Concurrent Marking                12241 us
[76,899s][info ][gc,stats       ] Pause Final Mark (G)                543 us
[76,899s][info ][gc,stats       ] Pause Final Mark (N)                405 us
[76,899s][info ][gc,stats       ]   Finish Mark                       259 us
[76,899s][info ][gc,stats       ]   Update Region States               16 us
[76,899s][info ][gc,stats       ]   Choose Collection Set              61 us
[76,899s][info ][gc,stats       ]   Rebuild Free Set                    9 us
[76,899s][info ][gc,stats       ] Concurrent Thread Roots             510 us, parallelism: 2,27x
[76,899s][info ][gc,stats       ]   CTR: <total>                     1157 us
[76,899s][info ][gc,stats       ]   CTR: Thread Roots                1157 us, workers (us): 423, 182, 179, 214, 159, ---, ---, ---, ---, ---, 
[76,899s][info ][gc,stats       ] Concurrent Weak References         1188 us, parallelism: 1,59x
[76,899s][info ][gc,stats       ]   CWRF: <total>                    1884 us
[76,899s][info ][gc,stats       ]   CWRF: Weak References            1884 us, workers (us): 311, 644, 928,   1,   0, ---, ---, ---, ---, ---, 
[76,899s][info ][gc,stats       ] Concurrent Weak Roots               599 us
[76,899s][info ][gc,stats       ]   Roots                             494 us, parallelism: 3,85x
[76,899s][info ][gc,stats       ]     CWR: <total>                   1904 us
[76,899s][info ][gc,stats       ]     CWR: Code Cache Roots          1024 us, workers (us): 211, 185, 166, 224, 237, ---, ---, ---, ---, ---, 
[76,899s][info ][gc,stats       ]     CWR: VM Weak Roots              868 us, workers (us): 222, 164, 161, 161, 159, ---, ---, ---, ---, ---, 
[76,899s][info ][gc,stats       ]     CWR: CLDG Roots                  13 us, workers (us): ---,   6,   7, ---, ---, ---, ---, ---, ---, ---, 
[76,899s][info ][gc,stats       ]   Rendezvous                         81 us
[76,899s][info ][gc,stats       ] Concurrent Cleanup                  181 us
[76,899s][info ][gc,stats       ] Concurrent Class Unloading         1059 us
[76,899s][info ][gc,stats       ]   Unlink Stale                      871 us
[76,899s][info ][gc,stats       ]     System Dictionary                28 us
[76,899s][info ][gc,stats       ]     Weak Class Links                  0 us
[76,899s][info ][gc,stats       ]     Code Roots                      843 us
[76,899s][info ][gc,stats       ]   Rendezvous                        125 us
[76,899s][info ][gc,stats       ]   Purge Unlinked                     43 us
[76,899s][info ][gc,stats       ]     Code Roots                       41 us
[76,899s][info ][gc,stats       ]     CLDG                              2 us
[76,899s][info ][gc,stats       ]     Exception Caches                  0 us
[76,899s][info ][gc,stats       ] Concurrent Strong Roots             228 us, parallelism: 1,21x
[76,899s][info ][gc,stats       ]   CSR: <total>                      275 us
[76,899s][info ][gc,stats       ]   CSR: VM Strong Roots               59 us, workers (us):  38,  21,   0,   0,   0, ---, ---, ---, ---, ---, 
[76,899s][info ][gc,stats       ]   CSR: CLDG Roots                   216 us, workers (us):  76, 140, ---, ---, ---, ---, ---, ---, ---, ---, 
[76,899s][info ][gc,stats       ] Concurrent Evacuation             12474 us
[76,899s][info ][gc,stats       ] Pause Init Update Refs (G)          143 us
[76,899s][info ][gc,stats       ] Pause Init Update Refs (N)           41 us
[76,899s][info ][gc,stats       ]   Manage GCLABs                       3 us
[76,899s][info ][gc,stats       ] Concurrent Update Refs            11980 us
[76,899s][info ][gc,stats       ] Concurrent Update Thread Roots      924 us
[76,899s][info ][gc,stats       ] Pause Final Update Refs (G)         313 us
[76,899s][info ][gc,stats       ] Pause Final Update Refs (N)         210 us
[76,899s][info ][gc,stats       ]   Update Region States              135 us
[76,899s][info ][gc,stats       ]   Trash Collection Set                7 us
[76,899s][info ][gc,stats       ]   Rebuild Free Set                   20 us
[76,899s][info ][gc,stats       ] Concurrent Cleanup                  202 us
[76,899s][info ][gc,stats       ] 
[76,899s][info ][gc,stats       ] Allocation pacing accrued:
[76,899s][info ][gc,stats       ]       0 of  1643 ms (  0,0%): <total>
[76,899s][info ][gc,stats       ]       0 of  1643 ms (  0,0%): <average total>
[76,899s][info ][gc,stats       ] 
[76,899s][info ][gc,metaspace   ] Metaspace: 19878K(20288K)->19878K(20288K) NonClass: 17452K(17600K)->17452K(17600K) Class: 2426K(2688K)->2426K(2688K)
[76,899s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[77,333s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinTask.setDone [0x00007fae5d0dbb90] (c1)
[77,358s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AbstractLinkedDeque.offerLast [0x00007fae5d6f1190] (c1)
[77,955s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.toString [0x00007fae5d38d890] (c1)
[78,024s][debug][gc,nmethod     ] Register NMethod: java.lang.StrictMath.ceil [0x00007fae7cbef710] (c2)
[78,036s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.parseUtf81 [0x00007fae7cbefb10] (c2)
[78,634s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.helpComplete [0x00007fae5d572010] (c1)
[78,636s][info ][gc             ] Trigger: Learning 4 of 5. Free (8436M) is below initial threshold (8601M)
[78,636s][info ][gc,ergo        ] Free: 8428M, Max: 4096K regular, 8428M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[78,636s][info ][gc,start       ] GC(28) Concurrent reset
[78,636s][info ][gc,task        ] GC(28) Using 5 of 10 workers for concurrent reset
[78,637s][info ][gc,ergo        ] GC(28) Pacer for Reset. Non-Taxable: 12288M
[78,638s][info ][gc             ] GC(28) Concurrent reset 1,941ms
[78,639s][info ][gc,start       ] GC(28) Pause Init Mark (unload classes)
[78,639s][info ][gc,task        ] GC(28) Using 10 of 10 workers for init marking
[78,639s][info ][gc,ergo        ] GC(28) Pacer for Mark. Expected Live: 401M, Free: 8396M, Non-Taxable: 839M, Alloc Tax Rate: 0,1x
[78,639s][info ][gc             ] GC(28) Pause Init Mark (unload classes) 0,171ms
[78,639s][info ][gc,start       ] GC(28) Concurrent marking roots
[78,639s][info ][gc,task        ] GC(28) Using 5 of 10 workers for concurrent marking roots
[78,639s][debug][gc,tlab        ] GC(28) TLAB totals: thrds: 19  refills: 761 max: 429 slow allocs: 1 max 1 waste:  1,7% gc: 46488312B max: 4108704B slow: 7819768B max: 696816B
[78,652s][info ][gc             ] GC(28) Concurrent marking roots 12,721ms
[78,652s][info ][gc,start       ] GC(28) Concurrent marking (unload classes)
[78,652s][info ][gc,task        ] GC(28) Using 5 of 10 workers for concurrent marking
[78,697s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getNamePage [0x00007fae7cbf1810] (c2)
[78,703s][info ][gc             ] GC(28) Concurrent marking (unload classes) 50,951ms
[78,703s][info ][gc,start       ] GC(28) Pause Final Mark (unload classes)
[78,703s][info ][gc,task        ] GC(28) Using 10 of 10 workers for final marking
[78,703s][info ][gc,ergo        ] GC(28) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 9856M, Max CSet: 512M, Min Garbage: 0B
[78,703s][info ][gc,ergo        ] GC(28) Collectable Garbage: 2765M (99%), Immediate: 1144M (41%), CSet: 1621M (58%)
[78,703s][info ][gc,ergo        ] GC(28) Pacer for Evacuation. Used CSet: 2123M, Free: 9240M, Non-Taxable: 924M, Alloc Tax Rate: 1,1x
[78,703s][info ][gc             ] GC(28) Pause Final Mark (unload classes) 0,364ms
[78,703s][info ][gc,start       ] GC(28) Concurrent thread roots
[78,703s][info ][gc,task        ] GC(28) Using 5 of 10 workers for Concurrent thread roots
[78,704s][info ][gc             ] GC(28) Concurrent thread roots 0,600ms
[78,704s][info ][gc,start       ] GC(28) Concurrent weak references
[78,704s][info ][gc,task        ] GC(28) Using 5 of 10 workers for concurrent weak references
[78,705s][info ][gc,ref         ] GC(28) Encountered references: Soft: 2317, Weak: 1835, Final: 5381, Phantom: 5772
[78,705s][info ][gc,ref         ] GC(28) Discovered  references: Soft: 0, Weak: 124, Final: 5374, Phantom: 5733
[78,705s][info ][gc,ref         ] GC(28) Enqueued    references: Soft: 0, Weak: 0, Final: 5373, Phantom: 5394
[78,705s][info ][gc             ] GC(28) Concurrent weak references 1,649ms
[78,705s][info ][gc,start       ] GC(28) Concurrent weak roots
[78,706s][info ][gc,task        ] GC(28) Using 5 of 10 workers for concurrent weak root
[78,706s][info ][gc             ] GC(28) Concurrent weak roots 0,664ms
[78,706s][info ][gc,start       ] GC(28) Concurrent cleanup
[78,706s][info ][gc             ] GC(28) Concurrent cleanup 3581M->2437M(5136M) 0,170ms
[78,706s][info ][gc,ergo        ] GC(28) Free: 9236M, Max: 4096K regular, 8208M humongous, Frag: 12% external, 0% internal; Reserve: 614M, Max: 4096K
[78,706s][info ][gc,start       ] GC(28) Concurrent class unloading
[78,706s][info ][gc,task        ] GC(28) Using 5 of 10 workers for concurrent class unloading
[78,706s][debug][gc,phases,start] GC(28) ClassLoaderData
[78,706s][debug][gc,phases      ] GC(28) ClassLoaderData 0,011ms
[78,706s][debug][gc,phases,start] GC(28) Trigger cleanups
[78,706s][debug][gc,phases      ] GC(28) Trigger cleanups 0,006ms
[78,707s][debug][gc,nmethod     ] GC(28) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.parseUtf81 [0x00007fae5d5b0a90]
[78,707s][debug][gc,nmethod     ] GC(28) Unregister NMethod: java.lang.StrictMath.ceil [0x00007fae5d3bc210]
[78,707s][info ][gc             ] GC(28) Concurrent class unloading 1,020ms
[78,707s][info ][gc,start       ] GC(28) Concurrent strong roots
[78,707s][info ][gc,task        ] GC(28) Using 5 of 10 workers for concurrent strong root
[78,708s][info ][gc             ] GC(28) Concurrent strong roots 0,220ms
[78,708s][info ][gc,start       ] GC(28) Concurrent evacuation
[78,708s][info ][gc,task        ] GC(28) Using 5 of 10 workers for concurrent evacuation
[78,755s][info ][gc             ] GC(28) Concurrent evacuation 47,605ms
[78,755s][info ][gc,start       ] GC(28) Pause Init Update Refs
[78,756s][info ][gc,ergo        ] GC(28) Pacer for Update Refs. Used: 2979M, Free: 9204M, Non-Taxable: 920M, Alloc Tax Rate: 1,1x
[78,756s][info ][gc             ] GC(28) Pause Init Update Refs 0,034ms
[78,756s][info ][gc,start       ] GC(28) Concurrent update references
[78,756s][info ][gc,task        ] GC(28) Using 5 of 10 workers for concurrent reference update
[78,789s][info ][gc             ] GC(28) Concurrent update references 33,703ms
[78,789s][info ][gc,start       ] GC(28) Concurrent update thread roots
[78,790s][info ][gc             ] GC(28) Concurrent update thread roots 0,786ms
[78,790s][info ][gc,start       ] GC(28) Pause Final Update Refs
[78,790s][info ][gc,task        ] GC(28) Using 10 of 10 workers for final reference update
[78,790s][info ][gc             ] GC(28) Pause Final Update Refs 0,191ms
[78,790s][info ][gc,start       ] GC(28) Concurrent cleanup
[78,791s][info ][gc             ] GC(28) Concurrent cleanup 3003M->880M(5136M) 0,179ms
[78,791s][debug][gc,ergo        ] GC(28) Available: 10792 MB, z-score=-1,105. Average available: 11097,0 MB +/- 276,0 MB.
[78,791s][info ][gc,ergo        ] Free: 10792M, Max: 4096K regular, 7720M humongous, Frag: 29% external, 0% internal; Reserve: 616M, Max: 4096K
[78,791s][info ][gc,stats       ] 
[78,791s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[78,791s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[78,791s][info ][gc,stats       ] 
[78,791s][info ][gc,stats       ] Concurrent Reset                   1996 us
[78,791s][info ][gc,stats       ] Pause Init Mark (G)                 447 us
[78,791s][info ][gc,stats       ] Pause Init Mark (N)                 181 us
[78,791s][info ][gc,stats       ]   Update Region States              117 us
[78,791s][info ][gc,stats       ] Concurrent Mark Roots             12817 us, parallelism: 1,10x
[78,791s][info ][gc,stats       ]   CMR: <total>                    14100 us
[78,791s][info ][gc,stats       ]   CMR: Thread Roots               14020 us, workers (us): 758, 12592, 670,   0,   0, ---, ---, ---, ---, ---, 
[78,791s][info ][gc,stats       ]   CMR: VM Strong Roots                9 us, workers (us):   4,   3,   2,   0,   0, ---, ---, ---, ---, ---, 
[78,791s][info ][gc,stats       ]   CMR: CLDG Roots                    71 us, workers (us): ---,   8,  63, ---, ---, ---, ---, ---, ---, ---, 
[78,791s][info ][gc,stats       ] Concurrent Marking                50980 us
[78,791s][info ][gc,stats       ] Pause Final Mark (G)                495 us
[78,791s][info ][gc,stats       ] Pause Final Mark (N)                373 us
[78,791s][info ][gc,stats       ]   Finish Mark                       212 us
[78,791s][info ][gc,stats       ]   Update Region States               24 us
[78,791s][info ][gc,stats       ]   Choose Collection Set              71 us
[78,791s][info ][gc,stats       ]   Rebuild Free Set                   10 us
[78,791s][info ][gc,stats       ] Concurrent Thread Roots             620 us, parallelism: 1,87x
[78,791s][info ][gc,stats       ]   CTR: <total>                     1158 us
[78,791s][info ][gc,stats       ]   CTR: Thread Roots                1158 us, workers (us): 367, 421, 370,   0,   0, ---, ---, ---, ---, ---, 
[78,791s][info ][gc,stats       ] Concurrent Weak References         1656 us, parallelism: 0,99x
[78,791s][info ][gc,stats       ]   CWRF: <total>                    1632 us
[78,791s][info ][gc,stats       ]   CWRF: Weak References            1632 us, workers (us): 126, 1501,   4,   0,   0, ---, ---, ---, ---, ---, 
[78,791s][info ][gc,stats       ] Concurrent Weak Roots               678 us
[78,791s][info ][gc,stats       ]   Roots                             576 us, parallelism: 3,48x
[78,791s][info ][gc,stats       ]     CWR: <total>                   2006 us
[78,791s][info ][gc,stats       ]     CWR: Code Cache Roots          1091 us, workers (us): 231, 254, 191, 174, 241, ---, ---, ---, ---, ---, 
[78,791s][info ][gc,stats       ]     CWR: VM Weak Roots              900 us, workers (us): 218, 218, 159, 158, 146, ---, ---, ---, ---, ---, 
[78,791s][info ][gc,stats       ]     CWR: CLDG Roots                  14 us, workers (us): ---, ---,   7,   7, ---, ---, ---, ---, ---, ---, 
[78,791s][info ][gc,stats       ]   Rendezvous                         77 us
[78,791s][info ][gc,stats       ] Concurrent Cleanup                  179 us
[78,791s][info ][gc,stats       ] Concurrent Class Unloading         1029 us
[78,791s][info ][gc,stats       ]   Unlink Stale                      832 us
[78,791s][info ][gc,stats       ]     System Dictionary                29 us
[78,791s][info ][gc,stats       ]     Weak Class Links                  0 us
[78,791s][info ][gc,stats       ]     Code Roots                      802 us
[78,791s][info ][gc,stats       ]   Rendezvous                        140 us
[78,791s][info ][gc,stats       ]   Purge Unlinked                     36 us
[78,791s][info ][gc,stats       ]     Code Roots                       34 us
[78,791s][info ][gc,stats       ]     CLDG                              2 us
[78,791s][info ][gc,stats       ]     Exception Caches                  0 us
[78,791s][info ][gc,stats       ] Concurrent Strong Roots             226 us, parallelism: 1,01x
[78,791s][info ][gc,stats       ]   CSR: <total>                      228 us
[78,791s][info ][gc,stats       ]   CSR: VM Strong Roots               11 us, workers (us):   7,   2,   2,   0,   0, ---, ---, ---, ---, ---, 
[78,791s][info ][gc,stats       ]   CSR: CLDG Roots                   216 us, workers (us):  85, 132, ---, ---, ---, ---, ---, ---, ---, ---, 
[78,791s][info ][gc,stats       ] Concurrent Evacuation             47641 us
[78,791s][info ][gc,stats       ] Pause Init Update Refs (G)          259 us
[78,791s][info ][gc,stats       ] Pause Init Update Refs (N)           43 us
[78,791s][info ][gc,stats       ]   Manage GCLABs                       3 us
[78,791s][info ][gc,stats       ] Concurrent Update Refs            33745 us
[78,791s][info ][gc,stats       ] Concurrent Update Thread Roots      803 us
[78,791s][info ][gc,stats       ] Pause Final Update Refs (G)         273 us
[78,791s][info ][gc,stats       ] Pause Final Update Refs (N)         211 us
[78,791s][info ][gc,stats       ]   Update Region States              132 us
[78,791s][info ][gc,stats       ]   Trash Collection Set                8 us
[78,791s][info ][gc,stats       ]   Rebuild Free Set                   19 us
[78,791s][info ][gc,stats       ] Concurrent Cleanup                  204 us
[78,791s][info ][gc,stats       ] 
[78,791s][info ][gc,stats       ] Allocation pacing accrued:
[78,791s][info ][gc,stats       ]       0 of  1891 ms (  0,0%): <total>
[78,791s][info ][gc,stats       ]       0 of  1891 ms (  0,0%): <average total>
[78,791s][info ][gc,stats       ] 
[78,791s][info ][gc,metaspace   ] Metaspace: 19882K(20288K)->19882K(20288K) NonClass: 17455K(17600K)->17455K(17600K) Class: 2426K(2688K)->2426K(2688K)
[78,791s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[79,407s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.name.Names.<init> [0x00007fae5d570210] (c1)
[80,050s][info ][gc             ] Trigger: Learning 5 of 5. Free (8592M) is below initial threshold (8601M)
[80,050s][info ][gc,ergo        ] Free: 8592M, Max: 4096K regular, 7720M humongous, Frag: 11% external, 0% internal; Reserve: 616M, Max: 4096K
[80,050s][info ][gc,start       ] GC(29) Concurrent reset
[80,050s][info ][gc,task        ] GC(29) Using 5 of 10 workers for concurrent reset
[80,050s][info ][gc,ergo        ] GC(29) Pacer for Reset. Non-Taxable: 12288M
[80,053s][info ][gc             ] GC(29) Concurrent reset 2,686ms
[80,053s][info ][gc,start       ] GC(29) Pause Init Mark (unload classes)
[80,053s][info ][gc,task        ] GC(29) Using 10 of 10 workers for init marking
[80,053s][info ][gc,ergo        ] GC(29) Pacer for Mark. Expected Live: 392M, Free: 8572M, Non-Taxable: 857M, Alloc Tax Rate: 0,1x
[80,053s][info ][gc             ] GC(29) Pause Init Mark (unload classes) 0,179ms
[80,053s][info ][gc,start       ] GC(29) Concurrent marking roots
[80,053s][info ][gc,task        ] GC(29) Using 5 of 10 workers for concurrent marking roots
[80,053s][debug][gc,tlab        ] GC(29) TLAB totals: thrds: 27  refills: 169 max: 15 slow allocs: 39 max 19 waste:  6,8% gc: 39225408B max: 3694328B slow: 2450712B max: 294840B
[80,054s][info ][gc             ] GC(29) Concurrent marking roots 0,786ms
[80,054s][info ][gc,start       ] GC(29) Concurrent marking (unload classes)
[80,054s][info ][gc,task        ] GC(29) Using 5 of 10 workers for concurrent marking
[80,107s][info ][gc             ] GC(29) Concurrent marking (unload classes) 53,081ms
[80,107s][info ][gc,start       ] GC(29) Pause Final Mark (unload classes)
[80,107s][info ][gc,task        ] GC(29) Using 10 of 10 workers for final marking
[80,107s][info ][gc,ergo        ] GC(29) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10116M, Max CSet: 512M, Min Garbage: 0B
[80,107s][info ][gc,ergo        ] GC(29) Collectable Garbage: 2548M (99%), Immediate: 1076M (42%), CSet: 1472M (57%)
[80,107s][info ][gc,ergo        ] GC(29) Pacer for Evacuation. Used CSet: 1983M, Free: 9500M, Non-Taxable: 950M, Alloc Tax Rate: 1,1x
[80,107s][info ][gc             ] GC(29) Pause Final Mark (unload classes) 0,411ms
[80,107s][info ][gc,start       ] GC(29) Concurrent thread roots
[80,107s][info ][gc,task        ] GC(29) Using 5 of 10 workers for Concurrent thread roots
[80,108s][info ][gc             ] GC(29) Concurrent thread roots 0,456ms
[80,108s][info ][gc,start       ] GC(29) Concurrent weak references
[80,108s][info ][gc,task        ] GC(29) Using 5 of 10 workers for concurrent weak references
[80,109s][info ][gc,ref         ] GC(29) Encountered references: Soft: 2320, Weak: 1839, Final: 4831, Phantom: 5175
[80,109s][info ][gc,ref         ] GC(29) Discovered  references: Soft: 0, Weak: 309, Final: 4828, Phantom: 5182
[80,109s][info ][gc,ref         ] GC(29) Enqueued    references: Soft: 0, Weak: 0, Final: 4828, Phantom: 4838
[80,109s][info ][gc             ] GC(29) Concurrent weak references 1,190ms
[80,109s][info ][gc,start       ] GC(29) Concurrent weak roots
[80,109s][info ][gc,task        ] GC(29) Using 5 of 10 workers for concurrent weak root
[80,110s][info ][gc             ] GC(29) Concurrent weak roots 0,575ms
[80,110s][info ][gc,start       ] GC(29) Concurrent cleanup
[80,110s][info ][gc             ] GC(29) Concurrent cleanup 3254M->2178M(5136M) 0,158ms
[80,110s][info ][gc,ergo        ] GC(29) Free: 9496M, Max: 4096K regular, 8200M humongous, Frag: 14% external, 0% internal; Reserve: 613M, Max: 4096K
[80,110s][info ][gc,start       ] GC(29) Concurrent class unloading
[80,110s][info ][gc,task        ] GC(29) Using 5 of 10 workers for concurrent class unloading
[80,110s][debug][gc,phases,start] GC(29) ClassLoaderData
[80,110s][debug][gc,phases      ] GC(29) ClassLoaderData 0,009ms
[80,110s][debug][gc,phases,start] GC(29) Trigger cleanups
[80,110s][debug][gc,phases      ] GC(29) Trigger cleanups 0,004ms
[80,111s][debug][gc,nmethod     ] GC(29) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getNamePage [0x00007fae5d596010]
[80,111s][info ][gc             ] GC(29) Concurrent class unloading 0,800ms
[80,111s][info ][gc,start       ] GC(29) Concurrent strong roots
[80,111s][info ][gc,task        ] GC(29) Using 5 of 10 workers for concurrent strong root
[80,111s][info ][gc             ] GC(29) Concurrent strong roots 0,200ms
[80,111s][info ][gc,start       ] GC(29) Concurrent evacuation
[80,111s][info ][gc,task        ] GC(29) Using 5 of 10 workers for concurrent evacuation
[80,166s][info ][gc             ] GC(29) Concurrent evacuation 54,710ms
[80,166s][info ][gc,start       ] GC(29) Pause Init Update Refs
[80,166s][info ][gc,ergo        ] GC(29) Pacer for Update Refs. Used: 2739M, Free: 9460M, Non-Taxable: 946M, Alloc Tax Rate: 1,1x
[80,166s][info ][gc             ] GC(29) Pause Init Update Refs 0,040ms
[80,166s][info ][gc,start       ] GC(29) Concurrent update references
[80,166s][info ][gc,task        ] GC(29) Using 5 of 10 workers for concurrent reference update
[80,203s][info ][gc             ] GC(29) Concurrent update references 36,991ms
[80,203s][info ][gc,start       ] GC(29) Concurrent update thread roots
[80,204s][info ][gc             ] GC(29) Concurrent update thread roots 0,983ms
[80,204s][info ][gc,start       ] GC(29) Pause Final Update Refs
[80,204s][info ][gc,task        ] GC(29) Using 10 of 10 workers for final reference update
[80,204s][info ][gc             ] GC(29) Pause Final Update Refs 0,176ms
[80,204s][info ][gc,start       ] GC(29) Concurrent cleanup
[80,204s][info ][gc             ] GC(29) Concurrent cleanup 2767M->784M(5168M) 0,174ms
[80,204s][debug][gc,ergo        ] GC(29) Available: 10888 MB, z-score=-0,659. Average available: 11074,4 MB +/- 282,9 MB.
[80,204s][info ][gc,ergo        ] Free: 10888M, Max: 4096K regular, 8708M humongous, Frag: 21% external, 0% internal; Reserve: 616M, Max: 4096K
[80,204s][info ][gc,stats       ] 
[80,204s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[80,204s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[80,204s][info ][gc,stats       ] 
[80,204s][info ][gc,stats       ] Concurrent Reset                   2766 us
[80,204s][info ][gc,stats       ] Pause Init Mark (G)                 330 us
[80,204s][info ][gc,stats       ] Pause Init Mark (N)                 189 us
[80,204s][info ][gc,stats       ]   Update Region States              123 us
[80,204s][info ][gc,stats       ] Concurrent Mark Roots               814 us, parallelism: 2,25x
[80,204s][info ][gc,stats       ]   CMR: <total>                     1833 us
[80,204s][info ][gc,stats       ]   CMR: Thread Roots                1759 us, workers (us): 703, 297, 350, 331,  78, ---, ---, ---, ---, ---, 
[80,204s][info ][gc,stats       ]   CMR: VM Strong Roots               10 us, workers (us):   6,   3,   0,   0,   0, ---, ---, ---, ---, ---, 
[80,205s][info ][gc,stats       ]   CMR: CLDG Roots                    65 us, workers (us):  10,  55, ---, ---, ---, ---, ---, ---, ---, ---, 
[80,205s][info ][gc,stats       ] Concurrent Marking                53120 us
[80,205s][info ][gc,stats       ] Pause Final Mark (G)                506 us
[80,205s][info ][gc,stats       ] Pause Final Mark (N)                424 us
[80,205s][info ][gc,stats       ]   Finish Mark                       206 us
[80,205s][info ][gc,stats       ]   Update Region States               18 us
[80,205s][info ][gc,stats       ]   Choose Collection Set             124 us
[80,205s][info ][gc,stats       ]   Rebuild Free Set                   13 us
[80,205s][info ][gc,stats       ] Concurrent Thread Roots             464 us, parallelism: 2,79x
[80,205s][info ][gc,stats       ]   CTR: <total>                     1295 us
[80,205s][info ][gc,stats       ]   CTR: Thread Roots                1295 us, workers (us): 436, 236, 194, 189, 240, ---, ---, ---, ---, ---, 
[80,205s][info ][gc,stats       ] Concurrent Weak References         1196 us, parallelism: 1,45x
[80,205s][info ][gc,stats       ]   CWRF: <total>                    1736 us
[80,205s][info ][gc,stats       ]   CWRF: Weak References            1736 us, workers (us): 1103,  23, 610,   0,   0, ---, ---, ---, ---, ---, 
[80,205s][info ][gc,stats       ] Concurrent Weak Roots               584 us
[80,205s][info ][gc,stats       ]   Roots                             540 us, parallelism: 3,80x
[80,205s][info ][gc,stats       ]     CWR: <total>                   2055 us
[80,205s][info ][gc,stats       ]     CWR: Code Cache Roots          1118 us, workers (us): 214, 200, 230, 236, 238, ---, ---, ---, ---, ---, 
[80,205s][info ][gc,stats       ]     CWR: VM Weak Roots              917 us, workers (us): 262, 207, 208, 121, 119, ---, ---, ---, ---, ---, 
[80,205s][info ][gc,stats       ]     CWR: CLDG Roots                  19 us, workers (us): ---,  10, ---, ---,  10, ---, ---, ---, ---, ---, 
[80,205s][info ][gc,stats       ]   Rendezvous                         25 us
[80,205s][info ][gc,stats       ] Concurrent Cleanup                  165 us
[80,205s][info ][gc,stats       ] Concurrent Class Unloading          809 us
[80,205s][info ][gc,stats       ]   Unlink Stale                      749 us
[80,205s][info ][gc,stats       ]     System Dictionary                24 us
[80,205s][info ][gc,stats       ]     Weak Class Links                  0 us
[80,205s][info ][gc,stats       ]     Code Roots                      725 us
[80,205s][info ][gc,stats       ]   Rendezvous                         17 us
[80,205s][info ][gc,stats       ]   Purge Unlinked                     24 us
[80,205s][info ][gc,stats       ]     Code Roots                       22 us
[80,205s][info ][gc,stats       ]     CLDG                              1 us
[80,205s][info ][gc,stats       ]     Exception Caches                  0 us
[80,205s][info ][gc,stats       ] Concurrent Strong Roots             208 us, parallelism: 1,28x
[80,205s][info ][gc,stats       ]   CSR: <total>                      265 us
[80,205s][info ][gc,stats       ]   CSR: VM Strong Roots               37 us, workers (us):  26,   5,   6,   1,   0, ---, ---, ---, ---, ---, 
[80,205s][info ][gc,stats       ]   CSR: CLDG Roots                   228 us, workers (us): ---, 134,  95, ---, ---, ---, ---, ---, ---, ---, 
[80,205s][info ][gc,stats       ] Concurrent Evacuation             54781 us
[80,205s][info ][gc,stats       ] Pause Init Update Refs (G)          247 us
[80,205s][info ][gc,stats       ] Pause Init Update Refs (N)           53 us
[80,205s][info ][gc,stats       ]   Manage GCLABs                       4 us
[80,205s][info ][gc,stats       ] Concurrent Update Refs            37039 us
[80,205s][info ][gc,stats       ] Concurrent Update Thread Roots     1005 us
[80,205s][info ][gc,stats       ] Pause Final Update Refs (G)         289 us
[80,205s][info ][gc,stats       ] Pause Final Update Refs (N)         202 us
[80,205s][info ][gc,stats       ]   Update Region States               99 us
[80,205s][info ][gc,stats       ]   Trash Collection Set               22 us
[80,205s][info ][gc,stats       ]   Rebuild Free Set                   16 us
[80,205s][info ][gc,stats       ] Concurrent Cleanup                  183 us
[80,205s][info ][gc,stats       ] 
[80,205s][info ][gc,stats       ] Allocation pacing accrued:
[80,205s][info ][gc,stats       ]       0 of  1414 ms (  0,0%): <total>
[80,205s][info ][gc,stats       ]       0 of  1414 ms (  0,0%): <average total>
[80,205s][info ][gc,stats       ] 
[80,205s][info ][gc,metaspace   ] Metaspace: 19885K(20288K)->19885K(20288K) NonClass: 17458K(17600K)->17458K(17600K) Class: 2426K(2688K)->2426K(2688K)
[80,205s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[80,793s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getIndirectDocumentIndexPageReference [0x00007fae7cbf2490] (c2)
[80,797s][debug][gc,nmethod     ] Register NMethod: java.util.stream.AbstractPipeline.wrapAndCopyInto [0x00007fae7cbf2810] (c2)
[82,900s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinTask.casStatus [0x00007fae7cbf3010] (c2)
[86,445s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixFileAttributes.<init> [0x00007fae5d1f7510] (c1)
[86,856s][info ][gc             ] Trigger: Free (1228M) is below minimum threshold (1228M)
[86,856s][info ][gc,ergo        ] Free: 1228M, Max: 4096K regular, 1228M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[86,856s][info ][gc,start       ] GC(30) Concurrent reset
[86,856s][info ][gc,task        ] GC(30) Using 5 of 10 workers for concurrent reset
[86,856s][info ][gc,ergo        ] GC(30) Pacer for Reset. Non-Taxable: 12288M
[86,861s][info ][gc             ] GC(30) Concurrent reset 5,164ms
[86,861s][info ][gc,start       ] GC(30) Pause Init Mark (unload classes)
[86,861s][info ][gc,task        ] GC(30) Using 10 of 10 workers for init marking
[86,861s][info ][gc,ergo        ] GC(30) Pacer for Mark. Expected Live: 436M, Free: 1224M, Non-Taxable: 122M, Alloc Tax Rate: 0,4x
[86,861s][info ][gc             ] GC(30) Pause Init Mark (unload classes) 0,072ms
[86,862s][info ][gc,start       ] GC(30) Concurrent marking roots
[86,862s][info ][gc,task        ] GC(30) Using 5 of 10 workers for concurrent marking roots
[86,862s][debug][gc,tlab        ] GC(30) TLAB totals: thrds: 24  refills: 1407 max: 1372 slow allocs: 10 max 5 waste:  1,0% gc: 54171176B max: 4119384B slow: 2999336B max: 2664208B
[86,862s][info ][gc             ] GC(30) Concurrent marking roots 0,569ms
[86,862s][info ][gc,start       ] GC(30) Concurrent marking (unload classes)
[86,862s][info ][gc,task        ] GC(30) Using 5 of 10 workers for concurrent marking
[86,887s][info ][gc             ] GC(30) Concurrent marking (unload classes) 24,669ms
[86,887s][info ][gc,start       ] GC(30) Pause Final Mark (unload classes)
[86,887s][info ][gc,task        ] GC(30) Using 10 of 10 workers for final marking
[86,888s][info ][gc,ergo        ] GC(30) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 7120M, Max CSet: 512M, Min Garbage: 0B
[86,888s][info ][gc,ergo        ] GC(30) Collectable Garbage: 10182M (99%), Immediate: 5296M (52%), CSet: 4886M (47%)
[86,888s][info ][gc,ergo        ] GC(30) Pacer for Evacuation. Used CSet: 5143M, Free: 6504M, Non-Taxable: 650M, Alloc Tax Rate: 1,9x
[86,888s][info ][gc             ] GC(30) Pause Final Mark (unload classes) 0,717ms
[86,888s][info ][gc,start       ] GC(30) Concurrent thread roots
[86,888s][info ][gc,task        ] GC(30) Using 5 of 10 workers for Concurrent thread roots
[86,889s][info ][gc             ] GC(30) Concurrent thread roots 1,492ms
[86,889s][info ][gc,start       ] GC(30) Concurrent weak references
[86,889s][info ][gc,task        ] GC(30) Using 5 of 10 workers for concurrent weak references
[86,893s][info ][gc,ref         ] GC(30) Encountered references: Soft: 2320, Weak: 1839, Final: 17137, Phantom: 17356
[86,893s][info ][gc,ref         ] GC(30) Discovered  references: Soft: 0, Weak: 323, Final: 17137, Phantom: 17558
[86,893s][info ][gc,ref         ] GC(30) Enqueued    references: Soft: 0, Weak: 0, Final: 17137, Phantom: 17181
[86,893s][info ][gc             ] GC(30) Concurrent weak references 3,422ms
[86,893s][info ][gc,start       ] GC(30) Concurrent weak roots
[86,893s][info ][gc,task        ] GC(30) Using 5 of 10 workers for concurrent weak root
[86,894s][info ][gc             ] GC(30) Concurrent weak roots 0,735ms
[86,894s][info ][gc,start       ] GC(30) Concurrent cleanup
[86,894s][info ][gc             ] GC(30) Concurrent cleanup 10471M->5175M(10508M) 0,138ms
[86,894s][info ][gc,ergo        ] GC(30) Free: 6500M, Max: 4096K regular, 1696M humongous, Frag: 74% external, 0% internal; Reserve: 612M, Max: 4096K
[86,894s][info ][gc,start       ] GC(30) Concurrent class unloading
[86,894s][info ][gc,task        ] GC(30) Using 5 of 10 workers for concurrent class unloading
[86,894s][debug][gc,phases,start] GC(30) ClassLoaderData
[86,894s][debug][gc,phases      ] GC(30) ClassLoaderData 0,013ms
[86,894s][debug][gc,phases,start] GC(30) Trigger cleanups
[86,894s][debug][gc,phases      ] GC(30) Trigger cleanups 0,007ms
[86,895s][debug][gc,nmethod     ] GC(30) Unregister NMethod: java.util.concurrent.ForkJoinTask.casStatus [0x00007fae5d6e2810]
[86,895s][debug][gc,nmethod     ] GC(30) Unregister NMethod: java.util.stream.AbstractPipeline.wrapAndCopyInto [0x00007fae5d38e090]
[86,895s][debug][gc,nmethod     ] GC(30) Unregister NMethod: io.sirix.page.RevisionRootPage.getIndirectDocumentIndexPageReference [0x00007fae5d53db10]
[86,895s][info ][gc             ] GC(30) Concurrent class unloading 0,981ms
[86,895s][info ][gc,start       ] GC(30) Concurrent strong roots
[86,895s][info ][gc,task        ] GC(30) Using 5 of 10 workers for concurrent strong root
[86,895s][info ][gc             ] GC(30) Concurrent strong roots 0,211ms
[86,895s][info ][gc,start       ] GC(30) Concurrent evacuation
[86,895s][info ][gc,task        ] GC(30) Using 5 of 10 workers for concurrent evacuation
[86,923s][info ][gc             ] GC(30) Concurrent evacuation 28,328ms
[86,924s][info ][gc,start       ] GC(30) Pause Init Update Refs
[86,924s][info ][gc,ergo        ] GC(30) Pacer for Update Refs. Used: 5459M, Free: 6480M, Non-Taxable: 648M, Alloc Tax Rate: 1,1x
[86,924s][info ][gc             ] GC(30) Pause Init Update Refs 0,063ms
[86,924s][info ][gc,start       ] GC(30) Concurrent update references
[86,924s][info ][gc,task        ] GC(30) Using 5 of 10 workers for concurrent reference update
[86,947s][info ][gc             ] GC(30) Concurrent update references 22,661ms
[86,947s][info ][gc,start       ] GC(30) Concurrent update thread roots
[86,948s][info ][gc             ] GC(30) Concurrent update thread roots 0,853ms
[86,948s][info ][gc,start       ] GC(30) Pause Final Update Refs
[86,948s][info ][gc,task        ] GC(30) Using 10 of 10 workers for final reference update
[86,948s][info ][gc             ] GC(30) Pause Final Update Refs 0,137ms
[86,948s][info ][gc,start       ] GC(30) Concurrent cleanup
[86,948s][info ][gc             ] GC(30) Concurrent cleanup 5475M->332M(10508M) 0,283ms
[86,948s][debug][gc,ergo        ] GC(30) Available: 11340 MB, z-score=1,168. Average available: 11050,8 MB +/- 247,7 MB.
[86,948s][info ][gc,ergo        ] Free: 11340M, Max: 4096K regular, 9876M humongous, Frag: 13% external, 0% internal; Reserve: 616M, Max: 4096K
[86,948s][info ][gc,stats       ] 
[86,948s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[86,948s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[86,948s][info ][gc,stats       ] 
[86,948s][info ][gc,stats       ] Concurrent Reset                   5208 us
[86,948s][info ][gc,stats       ] Pause Init Mark (G)                 430 us
[86,948s][info ][gc,stats       ] Pause Init Mark (N)                  84 us
[86,948s][info ][gc,stats       ]   Update Region States               20 us
[86,948s][info ][gc,stats       ] Concurrent Mark Roots               593 us, parallelism: 2,05x
[86,948s][info ][gc,stats       ]   CMR: <total>                     1214 us
[86,948s][info ][gc,stats       ]   CMR: Thread Roots                1158 us, workers (us): 210, 176, 408, 179, 185, ---, ---, ---, ---, ---, 
[86,948s][info ][gc,stats       ]   CMR: VM Strong Roots                6 us, workers (us):   5,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[86,948s][info ][gc,stats       ]   CMR: CLDG Roots                    50 us, workers (us):  46,   4, ---, ---, ---, ---, ---, ---, ---, ---, 
[86,948s][info ][gc,stats       ] Concurrent Marking                24719 us
[86,948s][info ][gc,stats       ] Pause Final Mark (G)                883 us
[86,948s][info ][gc,stats       ] Pause Final Mark (N)                733 us
[86,948s][info ][gc,stats       ]   Finish Mark                       295 us
[86,948s][info ][gc,stats       ]   Update Region States               85 us
[86,948s][info ][gc,stats       ]   Choose Collection Set             257 us
[86,948s][info ][gc,stats       ]   Rebuild Free Set                   12 us
[86,948s][info ][gc,stats       ] Concurrent Thread Roots            1524 us, parallelism: 3,65x
[86,948s][info ][gc,stats       ]   CTR: <total>                     5567 us
[86,948s][info ][gc,stats       ]   CTR: Thread Roots                5567 us, workers (us): 1332, 1099, 1056, 1058, 1022, ---, ---, ---, ---, ---, 
[86,948s][info ][gc,stats       ] Concurrent Weak References         3440 us, parallelism: 1,85x
[86,948s][info ][gc,stats       ]   CWRF: <total>                    6351 us
[86,948s][info ][gc,stats       ]   CWRF: Weak References            6351 us, workers (us): 3228, 1276,  40, 1807,   0, ---, ---, ---, ---, ---, 
[86,948s][info ][gc,stats       ] Concurrent Weak Roots               763 us
[86,948s][info ][gc,stats       ]   Roots                             676 us, parallelism: 3,13x
[86,948s][info ][gc,stats       ]     CWR: <total>                   2116 us
[86,948s][info ][gc,stats       ]     CWR: Code Cache Roots          1184 us, workers (us): 276, 295, 327, 285,   0, ---, ---, ---, ---, ---, 
[86,948s][info ][gc,stats       ]     CWR: VM Weak Roots              920 us, workers (us): 268, 241, 237, 174,   0, ---, ---, ---, ---, ---, 
[86,948s][info ][gc,stats       ]     CWR: CLDG Roots                  12 us, workers (us): ---, ---,   7,   5, ---, ---, ---, ---, ---, ---, 
[86,948s][info ][gc,stats       ]   Rendezvous                         34 us
[86,948s][info ][gc,stats       ] Concurrent Cleanup                  150 us
[86,948s][info ][gc,stats       ] Concurrent Class Unloading          994 us
[86,948s][info ][gc,stats       ]   Unlink Stale                      814 us
[86,948s][info ][gc,stats       ]     System Dictionary                36 us
[86,948s][info ][gc,stats       ]     Weak Class Links                  0 us
[86,948s][info ][gc,stats       ]     Code Roots                      776 us
[86,948s][info ][gc,stats       ]   Rendezvous                         70 us
[86,948s][info ][gc,stats       ]   Purge Unlinked                     80 us
[86,948s][info ][gc,stats       ]     Code Roots                       77 us
[86,948s][info ][gc,stats       ]     CLDG                              3 us
[86,948s][info ][gc,stats       ]     Exception Caches                  0 us
[86,948s][info ][gc,stats       ] Concurrent Strong Roots             231 us, parallelism: 1,05x
[86,948s][info ][gc,stats       ]   CSR: <total>                      243 us
[86,949s][info ][gc,stats       ]   CSR: VM Strong Roots               13 us, workers (us):   7,   6,   0,   0,   0, ---, ---, ---, ---, ---, 
[86,949s][info ][gc,stats       ]   CSR: CLDG Roots                   230 us, workers (us): 135,  95, ---, ---, ---, ---, ---, ---, ---, ---, 
[86,949s][info ][gc,stats       ] Concurrent Evacuation             28383 us
[86,949s][info ][gc,stats       ] Pause Init Update Refs (G)          730 us
[86,949s][info ][gc,stats       ] Pause Init Update Refs (N)           80 us
[86,949s][info ][gc,stats       ]   Manage GCLABs                       4 us
[86,949s][info ][gc,stats       ] Concurrent Update Refs            22704 us
[86,949s][info ][gc,stats       ] Concurrent Update Thread Roots      879 us
[86,949s][info ][gc,stats       ] Pause Final Update Refs (G)         233 us
[86,949s][info ][gc,stats       ] Pause Final Update Refs (N)         150 us
[86,949s][info ][gc,stats       ]   Update Region States               31 us
[86,949s][info ][gc,stats       ]   Trash Collection Set               51 us
[86,949s][info ][gc,stats       ]   Rebuild Free Set                   17 us
[86,949s][info ][gc,stats       ] Concurrent Cleanup                  344 us
[86,949s][info ][gc,stats       ] 
[86,949s][info ][gc,stats       ] Allocation pacing accrued:
[86,949s][info ][gc,stats       ]       0 of  6744 ms (  0,0%): <total>
[86,949s][info ][gc,stats       ]       0 of  6744 ms (  0,0%): <average total>
[86,949s][info ][gc,stats       ] 
[86,949s][info ][gc,metaspace   ] Metaspace: 19885K(20288K)->19885K(20288K) NonClass: 17458K(17600K)->17458K(17600K) Class: 2426K(2688K)->2426K(2688K)
[86,949s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[87,227s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixFileAttributes.get [0x00007fae5d38e090] (c1)
[87,909s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.readShort [0x00007fae7cbf3310] (c2)
[87,910s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.readShort [0x00007fae7cbf3a10] (c2)
[88,560s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayList.<init> [0x00007fae7cbf3d90] (c2)
[89,207s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.ResourceConfiguration.getResource [0x00007fae7cbf4290] (c1)
[91,192s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.stats.DisabledStatsCounter.recordHits [0x00007fae7cbf4590] (c2)
[91,895s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.pathsummary.LevelOrderSettingInMemoryInstancesAxis.getFirstChild [0x00007fae7cbf4890] (c2)
[92,492s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.asByteArray [0x00007fae7cbf6a90] (c1)
[92,494s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.resolve [0x00007fae7cbf6d90] (c2)
[92,532s][info ][gc             ] Trigger: Explicit GC request (System.gc())
[92,533s][info ][gc,ergo        ] Free: 1393M, Max: 4096K regular, 1392M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[92,533s][info ][gc,start       ] GC(31) Concurrent reset
[92,533s][info ][gc,task        ] GC(31) Using 5 of 10 workers for concurrent reset
[92,533s][info ][gc,ergo        ] GC(31) Pacer for Reset. Non-Taxable: 12288M
[92,538s][info ][gc             ] GC(31) Concurrent reset 4,481ms
[92,545s][info ][gc,start       ] GC(31) Pause Init Mark (unload classes)
[92,545s][info ][gc,task        ] GC(31) Using 10 of 10 workers for init marking
[92,545s][info ][gc,ref         ] GC(31) Clearing All SoftReferences
[92,545s][info ][gc,ergo        ] GC(31) Pacer for Mark. Expected Live: 385M, Free: 1364M, Non-Taxable: 136M, Alloc Tax Rate: 0,3x
[92,545s][info ][gc             ] GC(31) Pause Init Mark (unload classes) 0,165ms
[92,545s][info ][gc,start       ] GC(31) Concurrent marking roots
[92,545s][info ][gc,task        ] GC(31) Using 5 of 10 workers for concurrent marking roots
[92,545s][debug][gc,tlab        ] GC(31) TLAB totals: thrds: 11  refills: 1172 max: 131 slow allocs: 281 max 82 waste:  1,5% gc: 21528008B max: 3392080B slow: 16977976B max: 2418256B
[92,546s][info ][gc             ] GC(31) Concurrent marking roots 0,724ms
[92,546s][info ][gc,start       ] GC(31) Concurrent marking (unload classes)
[92,546s][info ][gc,task        ] GC(31) Using 5 of 10 workers for concurrent marking
[92,596s][info ][gc             ] GC(31) Concurrent marking (unload classes) 50,129ms
[92,596s][info ][gc,start       ] GC(31) Pause Final Mark (unload classes)
[92,596s][info ][gc,task        ] GC(31) Using 10 of 10 workers for final marking
[92,597s][info ][gc,ergo        ] GC(31) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 6608M, Max CSet: 512M, Min Garbage: 0B
[92,597s][info ][gc,ergo        ] GC(31) Collectable Garbage: 9780M (99%), Immediate: 4668M (47%), CSet: 5112M (52%)
[92,597s][info ][gc,ergo        ] GC(31) Pacer for Evacuation. Used CSet: 5624M, Free: 5992M, Non-Taxable: 599M, Alloc Tax Rate: 2,3x
[92,597s][info ][gc             ] GC(31) Pause Final Mark (unload classes) 0,604ms
[92,597s][info ][gc,start       ] GC(31) Concurrent thread roots
[92,597s][info ][gc,task        ] GC(31) Using 5 of 10 workers for Concurrent thread roots
[92,598s][info ][gc             ] GC(31) Concurrent thread roots 0,546ms
[92,598s][info ][gc,start       ] GC(31) Concurrent weak references
[92,598s][info ][gc,task        ] GC(31) Using 5 of 10 workers for concurrent weak references
[92,601s][info ][gc,ref         ] GC(31) Encountered references: Soft: 2320, Weak: 1834, Final: 18251, Phantom: 18437
[92,601s][info ][gc,ref         ] GC(31) Discovered  references: Soft: 172, Weak: 844, Final: 18248, Phantom: 18569
[92,601s][info ][gc,ref         ] GC(31) Enqueued    references: Soft: 0, Weak: 0, Final: 18248, Phantom: 18297
[92,601s][info ][gc             ] GC(31) Concurrent weak references 3,890ms
[92,601s][info ][gc,start       ] GC(31) Concurrent weak roots
[92,601s][info ][gc,task        ] GC(31) Using 5 of 10 workers for concurrent weak root
[92,602s][info ][gc             ] GC(31) Concurrent weak roots 0,780ms
[92,602s][info ][gc,start       ] GC(31) Concurrent cleanup
[92,602s][info ][gc             ] GC(31) Concurrent cleanup 10351M->5683M(10648M) 0,203ms
[92,602s][info ][gc,ergo        ] GC(31) Free: 5992M, Max: 4096K regular, 1572M humongous, Frag: 74% external, 0% internal; Reserve: 612M, Max: 4096K
[92,602s][info ][gc,start       ] GC(31) Concurrent class unloading
[92,602s][info ][gc,task        ] GC(31) Using 5 of 10 workers for concurrent class unloading
[92,602s][debug][gc,phases,start] GC(31) ClassLoaderData
[92,602s][debug][gc,phases      ] GC(31) ClassLoaderData 0,009ms
[92,602s][debug][gc,phases,start] GC(31) Trigger cleanups
[92,602s][debug][gc,phases      ] GC(31) Trigger cleanups 0,004ms
[92,603s][debug][gc,nmethod     ] GC(31) Unregister NMethod: com.github.benmanes.caffeine.cache.stats.DisabledStatsCounter.recordHits [0x00007fae5d17a890]
[92,603s][debug][gc,nmethod     ] GC(31) Unregister NMethod: io.sirix.axis.pathsummary.LevelOrderSettingInMemoryInstancesAxis.getFirstChild [0x00007fae5d740190]
[92,603s][debug][gc,nmethod     ] GC(31) Unregister NMethod: net.openhft.chronicle.bytes.internal.HeapBytesStore.readShort [0x00007fae5d134910]
[92,603s][debug][gc,nmethod     ] GC(31) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.readShort [0x00007fae5d4f8a90]
[92,603s][debug][gc,nmethod     ] GC(31) Unregister NMethod: sun.nio.fs.UnixPath.resolve [0x00007fae5d0df690]
[92,603s][debug][gc,nmethod     ] GC(31) Unregister NMethod: java.util.ArrayList.<init> [0x00007fae5d348a90]
[92,604s][info ][gc             ] GC(31) Concurrent class unloading 1,058ms
[92,604s][info ][gc,start       ] GC(31) Concurrent strong roots
[92,604s][info ][gc,task        ] GC(31) Using 5 of 10 workers for concurrent strong root
[92,604s][info ][gc             ] GC(31) Concurrent strong roots 0,224ms
[92,604s][info ][gc,start       ] GC(31) Concurrent evacuation
[92,604s][info ][gc,task        ] GC(31) Using 5 of 10 workers for concurrent evacuation
[92,653s][info ][gc             ] GC(31) Concurrent evacuation 48,883ms
[92,653s][info ][gc,start       ] GC(31) Pause Init Update Refs
[92,653s][info ][gc,ergo        ] GC(31) Pacer for Update Refs. Used: 6204M, Free: 5992M, Non-Taxable: 599M, Alloc Tax Rate: 1,3x
[92,653s][info ][gc             ] GC(31) Pause Init Update Refs 0,039ms
[92,653s][info ][gc,start       ] GC(31) Concurrent update references
[92,653s][info ][gc,task        ] GC(31) Using 5 of 10 workers for concurrent reference update
[92,690s][info ][gc             ] GC(31) Concurrent update references 36,746ms
[92,690s][info ][gc,start       ] GC(31) Concurrent update thread roots
[92,691s][info ][gc             ] GC(31) Concurrent update thread roots 1,613ms
[92,691s][info ][gc,start       ] GC(31) Pause Final Update Refs
[92,692s][info ][gc,task        ] GC(31) Using 10 of 10 workers for final reference update
[92,692s][info ][gc             ] GC(31) Pause Final Update Refs 0,164ms
[92,692s][info ][gc,start       ] GC(31) Concurrent cleanup
[92,692s][info ][gc             ] GC(31) Concurrent cleanup 6204M->580M(10648M) 0,213ms
[92,692s][debug][gc,ergo        ] GC(31) Available: 11092 MB, z-score=0,000. Average available: 11092,0 MB +/- 214,6 MB.
[92,692s][info ][gc,ergo        ] Free: 11092M, Max: 4096K regular, 9284M humongous, Frag: 17% external, 0% internal; Reserve: 616M, Max: 4096K
[92,692s][info ][gc,stats       ] 
[92,692s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[92,692s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[92,692s][info ][gc,stats       ] 
[92,692s][info ][gc,stats       ] Concurrent Reset                   4516 us
[92,692s][info ][gc,stats       ] Pause Init Mark (G)                7752 us
[92,692s][info ][gc,stats       ] Pause Init Mark (N)                 178 us
[92,692s][info ][gc,stats       ]   Update Region States               86 us
[92,692s][info ][gc,stats       ] Concurrent Mark Roots               737 us, parallelism: 2,05x
[92,692s][info ][gc,stats       ]   CMR: <total>                     1513 us
[92,692s][info ][gc,stats       ]   CMR: Thread Roots                1445 us, workers (us): 243, 334, 632, 235,   0, ---, ---, ---, ---, ---, 
[92,692s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   3,   3,   2,   0,   0, ---, ---, ---, ---, ---, 
[92,692s][info ][gc,stats       ]   CMR: CLDG Roots                    59 us, workers (us):  52,   7, ---, ---, ---, ---, ---, ---, ---, ---, 
[92,692s][info ][gc,stats       ] Concurrent Marking                50174 us
[92,692s][info ][gc,stats       ] Pause Final Mark (G)                752 us
[92,692s][info ][gc,stats       ] Pause Final Mark (N)                617 us
[92,692s][info ][gc,stats       ]   Finish Mark                       240 us
[92,692s][info ][gc,stats       ]   Update Region States              148 us
[92,692s][info ][gc,stats       ]   Choose Collection Set             157 us
[92,692s][info ][gc,stats       ]   Rebuild Free Set                   11 us
[92,692s][info ][gc,stats       ] Concurrent Thread Roots             557 us, parallelism: 2,41x
[92,692s][info ][gc,stats       ]   CTR: <total>                     1342 us
[92,692s][info ][gc,stats       ]   CTR: Thread Roots                1342 us, workers (us): 507, 211, 258, 218, 149, ---, ---, ---, ---, ---, 
[92,692s][info ][gc,stats       ] Concurrent Weak References         3900 us, parallelism: 1,72x
[92,692s][info ][gc,stats       ]   CWRF: <total>                    6706 us
[92,692s][info ][gc,stats       ]   CWRF: Weak References            6706 us, workers (us): 3568, 1763,  12, 1359,   4, ---, ---, ---, ---, ---, 
[92,692s][info ][gc,stats       ] Concurrent Weak Roots               801 us
[92,692s][info ][gc,stats       ]   Roots                             631 us, parallelism: 2,98x
[92,692s][info ][gc,stats       ]     CWR: <total>                   1878 us
[92,692s][info ][gc,stats       ]     CWR: Code Cache Roots          1002 us, workers (us): 218, 202, 238, 173, 172, ---, ---, ---, ---, ---, 
[92,692s][info ][gc,stats       ]     CWR: VM Weak Roots              850 us, workers (us): 253, 159, 159, 140, 139, ---, ---, ---, ---, ---, 
[92,692s][info ][gc,stats       ]     CWR: CLDG Roots                  25 us, workers (us): ---, ---, ---,  13,  13, ---, ---, ---, ---, ---, 
[92,692s][info ][gc,stats       ]   Rendezvous                        137 us
[92,692s][info ][gc,stats       ] Concurrent Cleanup                  210 us
[92,692s][info ][gc,stats       ] Concurrent Class Unloading         1066 us
[92,692s][info ][gc,stats       ]   Unlink Stale                      884 us
[92,692s][info ][gc,stats       ]     System Dictionary                22 us
[92,692s][info ][gc,stats       ]     Weak Class Links                  0 us
[92,692s][info ][gc,stats       ]     Code Roots                      862 us
[92,692s][info ][gc,stats       ]   Rendezvous                         99 us
[92,692s][info ][gc,stats       ]   Purge Unlinked                     65 us
[92,692s][info ][gc,stats       ]     Code Roots                       63 us
[92,692s][info ][gc,stats       ]     CLDG                              2 us
[92,692s][info ][gc,stats       ]     Exception Caches                  0 us
[92,692s][info ][gc,stats       ] Concurrent Strong Roots             254 us, parallelism: 0,77x
[92,692s][info ][gc,stats       ]   CSR: <total>                      197 us
[92,692s][info ][gc,stats       ]   CSR: VM Strong Roots                9 us, workers (us):   9,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[92,692s][info ][gc,stats       ]   CSR: CLDG Roots                   188 us, workers (us):  81, 106, ---, ---, ---, ---, ---, ---, ---, ---, 
[92,692s][info ][gc,stats       ] Concurrent Evacuation             48953 us
[92,692s][info ][gc,stats       ] Pause Init Update Refs (G)          236 us
[92,692s][info ][gc,stats       ] Pause Init Update Refs (N)           51 us
[92,692s][info ][gc,stats       ]   Manage GCLABs                       4 us
[92,692s][info ][gc,stats       ] Concurrent Update Refs            36794 us
[92,692s][info ][gc,stats       ] Concurrent Update Thread Roots     1640 us
[92,692s][info ][gc,stats       ] Pause Final Update Refs (G)         334 us
[92,692s][info ][gc,stats       ] Pause Final Update Refs (N)         180 us
[92,692s][info ][gc,stats       ]   Update Region States               87 us
[92,692s][info ][gc,stats       ]   Trash Collection Set               16 us
[92,692s][info ][gc,stats       ]   Rebuild Free Set                   18 us
[92,692s][info ][gc,stats       ] Concurrent Cleanup                  223 us
[92,692s][info ][gc,stats       ] 
[92,693s][info ][gc,stats       ] Allocation pacing accrued:
[92,693s][info ][gc,stats       ]       0 of  5744 ms (  0,0%): <total>
[92,693s][info ][gc,stats       ]       0 of  5744 ms (  0,0%): <average total>
[92,693s][info ][gc,stats       ] 
[92,693s][info ][gc,metaspace   ] Metaspace: 19887K(20288K)->19887K(20288K) NonClass: 17461K(17600K)->17461K(17600K) Class: 2426K(2688K)->2426K(2688K)
[92,693s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[92,693s][info ][gc,start       ] Concurrent uncommit
[92,812s][info ][gc             ] Concurrent uncommit 584M->706M(5120M) 119,795ms
[92,813s][info ][gc             ] Trigger: Explicit GC request (System.gc())
[92,814s][info ][gc,ergo        ] Free: 10965M, Max: 4096K regular, 9180M humongous, Frag: 17% external, 0% internal; Reserve: 616M, Max: 4096K
[92,814s][info ][gc,start       ] GC(32) Concurrent reset
[92,814s][info ][gc,task        ] GC(32) Using 5 of 10 workers for concurrent reset
[92,814s][info ][gc,ergo        ] GC(32) Pacer for Reset. Non-Taxable: 12288M
[92,815s][info ][gc             ] GC(32) Concurrent reset 1,823ms
[92,816s][info ][gc,start       ] GC(32) Pause Init Mark (unload classes)
[92,816s][info ][gc,task        ] GC(32) Using 10 of 10 workers for init marking
[92,816s][info ][gc,ref         ] GC(32) Clearing All SoftReferences
[92,816s][info ][gc,ergo        ] GC(32) Pacer for Mark. Expected Live: 395M, Free: 10965M, Non-Taxable: 1096M, Alloc Tax Rate: 0,0x
[92,816s][info ][gc             ] GC(32) Pause Init Mark (unload classes) 0,166ms
[92,816s][info ][gc,start       ] GC(32) Concurrent marking roots
[92,816s][info ][gc,task        ] GC(32) Using 5 of 10 workers for concurrent marking roots
[92,816s][debug][gc,tlab        ] GC(32) TLAB totals: thrds: 10  refills: 10 max: 1 slow allocs: 0 max 0 waste: 97,4% gc: 40859416B max: 4193744B slow: 0B max: 0B
[92,816s][info ][gc             ] GC(32) Concurrent marking roots 0,635ms
[92,816s][info ][gc,start       ] GC(32) Concurrent marking (unload classes)
[92,816s][info ][gc,task        ] GC(32) Using 5 of 10 workers for concurrent marking
[92,859s][info ][gc             ] GC(32) Concurrent marking (unload classes) 43,095ms
[92,860s][info ][gc,start       ] GC(32) Pause Final Mark (unload classes)
[92,860s][info ][gc,task        ] GC(32) Using 10 of 10 workers for final marking
[92,860s][info ][gc,ergo        ] GC(32) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 11580M, Max CSet: 512M, Min Garbage: 0B
[92,860s][info ][gc,ergo        ] GC(32) Collectable Garbage: 159M (98%), Immediate: 0B (0%), CSet: 159M (98%)
[92,860s][info ][gc,ergo        ] GC(32) Pacer for Evacuation. Used CSet: 198M, Free: 10964M, Non-Taxable: 1096M, Alloc Tax Rate: 1,1x
[92,860s][info ][gc             ] GC(32) Pause Final Mark (unload classes) 0,348ms
[92,860s][info ][gc,start       ] GC(32) Concurrent thread roots
[92,860s][info ][gc,task        ] GC(32) Using 5 of 10 workers for Concurrent thread roots
[92,862s][info ][gc             ] GC(32) Concurrent thread roots 2,404ms
[92,862s][info ][gc,start       ] GC(32) Concurrent weak references
[92,862s][info ][gc,task        ] GC(32) Using 5 of 10 workers for concurrent weak references
[92,863s][info ][gc,ref         ] GC(32) Encountered references: Soft: 2320, Weak: 1839, Final: 458, Phantom: 838
[92,863s][info ][gc,ref         ] GC(32) Discovered  references: Soft: 2233, Weak: 326, Final: 458, Phantom: 753
[92,863s][info ][gc,ref         ] GC(32) Enqueued    references: Soft: 0, Weak: 0, Final: 458, Phantom: 456
[92,863s][info ][gc             ] GC(32) Concurrent weak references 0,246ms
[92,863s][info ][gc,start       ] GC(32) Concurrent weak roots
[92,863s][info ][gc,task        ] GC(32) Using 5 of 10 workers for concurrent weak root
[92,864s][info ][gc             ] GC(32) Concurrent weak roots 1,806ms
[92,864s][info ][gc,start       ] GC(32) Concurrent cleanup
[92,865s][info ][gc             ] GC(32) Concurrent cleanup 708M->708M(5124M) 0,157ms
[92,865s][info ][gc,ergo        ] GC(32) Free: 10964M, Max: 4096K regular, 9180M humongous, Frag: 17% external, 0% internal; Reserve: 614M, Max: 4096K
[92,865s][info ][gc,start       ] GC(32) Concurrent class unloading
[92,865s][info ][gc,task        ] GC(32) Using 5 of 10 workers for concurrent class unloading
[92,865s][debug][gc,phases,start] GC(32) ClassLoaderData
[92,865s][debug][gc,phases      ] GC(32) ClassLoaderData 0,009ms
[92,865s][debug][gc,phases,start] GC(32) Trigger cleanups
[92,865s][debug][gc,phases      ] GC(32) Trigger cleanups 0,004ms
[92,865s][info ][gc             ] GC(32) Concurrent class unloading 0,859ms
[92,865s][info ][gc,start       ] GC(32) Concurrent strong roots
[92,865s][info ][gc,task        ] GC(32) Using 5 of 10 workers for concurrent strong root
[92,866s][info ][gc             ] GC(32) Concurrent strong roots 0,234ms
[92,866s][info ][gc,start       ] GC(32) Concurrent evacuation
[92,866s][info ][gc,task        ] GC(32) Using 5 of 10 workers for concurrent evacuation
[92,881s][info ][gc             ] GC(32) Concurrent evacuation 15,335ms
[92,881s][info ][gc,start       ] GC(32) Pause Init Update Refs
[92,881s][info ][gc,ergo        ] GC(32) Pacer for Update Refs. Used: 759M, Free: 10964M, Non-Taxable: 1096M, Alloc Tax Rate: 1,1x
[92,881s][info ][gc             ] GC(32) Pause Init Update Refs 0,032ms
[92,881s][info ][gc,start       ] GC(32) Concurrent update references
[92,881s][info ][gc,task        ] GC(32) Using 5 of 10 workers for concurrent reference update
[92,915s][info ][gc             ] GC(32) Concurrent update references 34,116ms
[92,915s][info ][gc,start       ] GC(32) Concurrent update thread roots
[92,917s][info ][gc             ] GC(32) Concurrent update thread roots 1,301ms
[92,917s][info ][gc,start       ] GC(32) Pause Final Update Refs
[92,917s][info ][gc,task        ] GC(32) Using 10 of 10 workers for final reference update
[92,917s][info ][gc             ] GC(32) Pause Final Update Refs 0,182ms
[92,917s][info ][gc,start       ] GC(32) Concurrent cleanup
[92,917s][info ][gc             ] GC(32) Concurrent cleanup 759M->561M(5176M) 0,189ms
[92,917s][debug][gc,ergo        ] GC(32) Available: 11110 MB, z-score=-0,037. Average available: 11118,3 MB +/- 198,6 MB.
[92,917s][info ][gc,ergo        ] Free: 11110M, Max: 4096K regular, 11084M humongous, Frag: 1% external, 0% internal; Reserve: 616M, Max: 4096K
[92,917s][info ][gc,stats       ] 
[92,917s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[92,917s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[92,917s][info ][gc,stats       ] 
[92,917s][info ][gc,stats       ] Concurrent Reset                   1852 us
[92,917s][info ][gc,stats       ] Pause Init Mark (G)                 272 us
[92,920s][info ][gc,stats       ] Pause Init Mark (N)                 175 us
[92,920s][info ][gc,stats       ]   Update Region States               67 us
[92,920s][info ][gc,stats       ] Concurrent Mark Roots               657 us, parallelism: 2,01x
[92,920s][info ][gc,stats       ]   CMR: <total>                     1321 us
[92,920s][info ][gc,stats       ]   CMR: Thread Roots                1259 us, workers (us): 207, 248, 276, 527,   0, ---, ---, ---, ---, ---, 
[92,920s][info ][gc,stats       ]   CMR: VM Strong Roots               12 us, workers (us):   3,   3,   2,   2,   0, ---, ---, ---, ---, ---, 
[92,920s][info ][gc,stats       ]   CMR: CLDG Roots                    50 us, workers (us):  43, ---,   7, ---, ---, ---, ---, ---, ---, ---, 
[92,920s][info ][gc,stats       ] Concurrent Marking                43140 us
[92,920s][info ][gc,stats       ] Pause Final Mark (G)                375 us
[92,920s][info ][gc,stats       ] Pause Final Mark (N)                356 us
[92,920s][info ][gc,stats       ]   Finish Mark                       255 us
[92,920s][info ][gc,stats       ]   Update Region States               13 us
[92,920s][info ][gc,stats       ]   Choose Collection Set              37 us
[92,920s][info ][gc,stats       ]   Rebuild Free Set                    9 us
[92,920s][info ][gc,stats       ] Concurrent Thread Roots            2425 us, parallelism: 3,37x
[92,920s][info ][gc,stats       ]   CTR: <total>                     8165 us
[92,920s][info ][gc,stats       ]   CTR: Thread Roots                8165 us, workers (us): 2245, 1442, 1394, 1682, 1402, ---, ---, ---, ---, ---, 
[92,920s][info ][gc,stats       ] Concurrent Weak References          252 us, parallelism: 1,11x
[92,920s][info ][gc,stats       ]   CWRF: <total>                     280 us
[92,920s][info ][gc,stats       ]   CWRF: Weak References             280 us, workers (us): 207,  72,   0,   0,   0, ---, ---, ---, ---, ---, 
[92,920s][info ][gc,stats       ] Concurrent Weak Roots              1827 us
[92,920s][info ][gc,stats       ]   Roots                             588 us, parallelism: 3,32x
[92,920s][info ][gc,stats       ]     CWR: <total>                   1951 us
[92,920s][info ][gc,stats       ]     CWR: Code Cache Roots          1038 us, workers (us): 169, 178, 196, 244, 250, ---, ---, ---, ---, ---, 
[92,920s][info ][gc,stats       ]     CWR: VM Weak Roots              901 us, workers (us): 193, 192, 188, 177, 152, ---, ---, ---, ---, ---, 
[92,920s][info ][gc,stats       ]     CWR: CLDG Roots                  13 us, workers (us):   7, ---, ---, ---,   6, ---, ---, ---, ---, ---, 
[92,920s][info ][gc,stats       ]   Rendezvous                       1207 us
[92,920s][info ][gc,stats       ] Concurrent Cleanup                  164 us
[92,920s][info ][gc,stats       ] Concurrent Class Unloading          876 us
[92,920s][info ][gc,stats       ]   Unlink Stale                      708 us
[92,920s][info ][gc,stats       ]     System Dictionary                24 us
[92,920s][info ][gc,stats       ]     Weak Class Links                  0 us
[92,920s][info ][gc,stats       ]     Code Roots                      684 us
[92,920s][info ][gc,stats       ]   Rendezvous                        137 us
[92,920s][info ][gc,stats       ]   Purge Unlinked                      3 us
[92,920s][info ][gc,stats       ]     Code Roots                        0 us
[92,920s][info ][gc,stats       ]     CLDG                              2 us
[92,920s][info ][gc,stats       ]     Exception Caches                  0 us
[92,920s][info ][gc,stats       ] Concurrent Strong Roots             251 us, parallelism: 0,82x
[92,920s][info ][gc,stats       ]   CSR: <total>                      206 us
[92,920s][info ][gc,stats       ]   CSR: VM Strong Roots                7 us, workers (us):   7,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[92,920s][info ][gc,stats       ]   CSR: CLDG Roots                   198 us, workers (us):  78, ---, 120, ---, ---, ---, ---, ---, ---, ---, 
[92,920s][info ][gc,stats       ] Concurrent Evacuation             15379 us
[92,920s][info ][gc,stats       ] Pause Init Update Refs (G)          270 us
[92,920s][info ][gc,stats       ] Pause Init Update Refs (N)           52 us
[92,920s][info ][gc,stats       ]   Manage GCLABs                       3 us
[92,920s][info ][gc,stats       ] Concurrent Update Refs            34160 us
[92,920s][info ][gc,stats       ] Concurrent Update Thread Roots     1326 us
[92,920s][info ][gc,stats       ] Pause Final Update Refs (G)         289 us
[92,920s][info ][gc,stats       ] Pause Final Update Refs (N)         208 us
[92,920s][info ][gc,stats       ]   Update Region States              133 us
[92,920s][info ][gc,stats       ]   Trash Collection Set                3 us
[92,920s][info ][gc,stats       ]   Rebuild Free Set                   19 us
[92,920s][info ][gc,stats       ] Concurrent Cleanup                  199 us
[92,920s][info ][gc,stats       ] 
[92,920s][info ][gc,stats       ] Allocation pacing accrued:
[92,920s][info ][gc,stats       ]       0 of   228 ms (  0,0%): <total>
[92,920s][info ][gc,stats       ]       0 of   228 ms (  0,0%): <average total>
[92,920s][info ][gc,stats       ] 
[92,920s][info ][gc,metaspace   ] Metaspace: 19887K(20288K)->19887K(20288K) NonClass: 17461K(17600K)->17461K(17600K) Class: 2426K(2688K)->2426K(2688K)
[92,920s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[92,920s][info ][gc,start       ] Concurrent uncommit
[92,924s][info ][gc             ] Concurrent uncommit 633M->645M(5120M) 3,370ms
[93,647s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2LongOpenHashMap.getOrDefault [0x00007fae5d0df690] (c1)
[94,311s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.interfaces.Page.commit [0x00007fae7cbf7610] (c2)
[94,321s][debug][gc,nmethod     ] Register NMethod: java.lang.Math.floorDiv [0x00007fae5d772e90] (c1)
[94,326s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.Node.<init> [0x00007fae5d172610] (c1)
[94,326s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.setHitsInSample [0x00007fae7cbf8d90] (c1)
[94,329s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.resolve [0x00007fae7cbf9090] (c2)
[94,393s][info ][gc             ] Trigger: Learning 2 of 5. Free (8598M) is below initial threshold (8601M)
[94,393s][info ][gc,ergo        ] Free: 8598M, Max: 4096K regular, 8596M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[94,393s][info ][gc,start       ] GC(33) Concurrent reset
[94,393s][info ][gc,task        ] GC(33) Using 5 of 10 workers for concurrent reset
[94,393s][info ][gc,ergo        ] GC(33) Pacer for Reset. Non-Taxable: 12288M
[94,393s][info ][gc             ] GC(33) Concurrent reset 0,781ms
[94,394s][info ][gc,start       ] GC(33) Pause Init Mark (unload classes)
[94,394s][info ][gc,task        ] GC(33) Using 10 of 10 workers for init marking
[94,394s][info ][gc,ergo        ] GC(33) Pacer for Mark. Expected Live: 477M, Free: 8598M, Non-Taxable: 859M, Alloc Tax Rate: 0,1x
[94,394s][info ][gc             ] GC(33) Pause Init Mark (unload classes) 0,149ms
[94,394s][info ][gc,start       ] GC(33) Concurrent marking roots
[94,394s][info ][gc,task        ] GC(33) Using 5 of 10 workers for concurrent marking roots
[94,394s][debug][gc,tlab        ] GC(33) TLAB totals: thrds: 1  refills: 344 max: 344 slow allocs: 0 max 0 waste:  0,3% gc: 3250384B max: 3250384B slow: 698352B max: 698352B
[94,394s][info ][gc             ] GC(33) Concurrent marking roots 0,526ms
[94,394s][info ][gc,start       ] GC(33) Concurrent marking (unload classes)
[94,394s][info ][gc,task        ] GC(33) Using 5 of 10 workers for concurrent marking
[94,401s][info ][gc             ] GC(33) Concurrent marking (unload classes) 6,283ms
[94,401s][info ][gc,start       ] GC(33) Pause Final Mark (unload classes)
[94,401s][info ][gc,task        ] GC(33) Using 10 of 10 workers for final marking
[94,401s][info ][gc,ergo        ] GC(33) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10917M, Max CSet: 512M, Min Garbage: 0B
[94,401s][info ][gc,ergo        ] GC(33) Collectable Garbage: 3011M (99%), Immediate: 1713M (56%), CSet: 1298M (43%)
[94,401s][info ][gc,ergo        ] GC(33) Pacer for Evacuation. Used CSet: 1352M, Free: 10304M, Non-Taxable: 1030M, Alloc Tax Rate: 1,1x
[94,401s][info ][gc             ] GC(33) Pause Final Mark (unload classes) 0,446ms
[94,401s][info ][gc,start       ] GC(33) Concurrent thread roots
[94,401s][info ][gc,task        ] GC(33) Using 5 of 10 workers for Concurrent thread roots
[94,403s][info ][gc             ] GC(33) Concurrent thread roots 1,401ms
[94,403s][info ][gc,start       ] GC(33) Concurrent weak references
[94,403s][info ][gc,task        ] GC(33) Using 5 of 10 workers for concurrent weak references
[94,404s][info ][gc,ref         ] GC(33) Encountered references: Soft: 2320, Weak: 1839, Final: 4424, Phantom: 4796
[94,404s][info ][gc,ref         ] GC(33) Discovered  references: Soft: 0, Weak: 164, Final: 4424, Phantom: 4814
[94,404s][info ][gc,ref         ] GC(33) Enqueued    references: Soft: 0, Weak: 0, Final: 4424, Phantom: 4438
[94,404s][info ][gc             ] GC(33) Concurrent weak references 1,505ms
[94,404s][info ][gc,start       ] GC(33) Concurrent weak roots
[94,404s][info ][gc,task        ] GC(33) Using 5 of 10 workers for concurrent weak root
[94,405s][info ][gc             ] GC(33) Concurrent weak roots 0,569ms
[94,405s][info ][gc,start       ] GC(33) Concurrent cleanup
[94,405s][info ][gc             ] GC(33) Concurrent cleanup 3087M->1374M(5124M) 0,164ms
[94,405s][info ][gc,ergo        ] GC(33) Free: 10300M, Max: 4096K regular, 9104M humongous, Frag: 12% external, 0% internal; Reserve: 613M, Max: 4096K
[94,405s][info ][gc,start       ] GC(33) Concurrent class unloading
[94,405s][info ][gc,task        ] GC(33) Using 5 of 10 workers for concurrent class unloading
[94,405s][debug][gc,phases,start] GC(33) ClassLoaderData
[94,405s][debug][gc,phases      ] GC(33) ClassLoaderData 0,009ms
[94,405s][debug][gc,phases,start] GC(33) Trigger cleanups
[94,405s][debug][gc,phases      ] GC(33) Trigger cleanups 0,004ms
[94,407s][debug][gc,nmethod     ] GC(33) Unregister NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.tryPoll [0x00007fae7cbdfb10]
[94,407s][debug][gc,nmethod     ] GC(33) Unregister NMethod: io.sirix.page.interfaces.Page.commit [0x00007fae5d590f10]
[94,407s][debug][gc,nmethod     ] GC(33) Unregister NMethod: sun.nio.fs.UnixPath.resolve [0x00007fae5d283710]
[94,407s][info ][gc             ] GC(33) Concurrent class unloading 2,096ms
[94,407s][info ][gc,start       ] GC(33) Concurrent strong roots
[94,407s][info ][gc,task        ] GC(33) Using 5 of 10 workers for concurrent strong root
[94,407s][info ][gc             ] GC(33) Concurrent strong roots 0,217ms
[94,407s][info ][gc,start       ] GC(33) Concurrent evacuation
[94,407s][info ][gc,task        ] GC(33) Using 5 of 10 workers for concurrent evacuation
[94,414s][info ][gc             ] GC(33) Concurrent evacuation 6,586ms
[94,414s][info ][gc,start       ] GC(33) Pause Init Update Refs
[94,414s][info ][gc,ergo        ] GC(33) Pacer for Update Refs. Used: 1443M, Free: 10292M, Non-Taxable: 1029M, Alloc Tax Rate: 1,1x
[94,414s][info ][gc             ] GC(33) Pause Init Update Refs 0,035ms
[94,414s][info ][gc,start       ] GC(33) Concurrent update references
[94,414s][info ][gc,task        ] GC(33) Using 5 of 10 workers for concurrent reference update
[94,419s][info ][gc             ] GC(33) Concurrent update references 5,284ms
[94,420s][info ][gc,start       ] GC(33) Concurrent update thread roots
[94,420s][info ][gc             ] GC(33) Concurrent update thread roots 0,654ms
[94,420s][info ][gc,start       ] GC(33) Pause Final Update Refs
[94,420s][info ][gc,task        ] GC(33) Using 10 of 10 workers for final reference update
[94,420s][info ][gc             ] GC(33) Pause Final Update Refs 0,175ms
[94,421s][info ][gc,start       ] GC(33) Concurrent cleanup
[94,421s][info ][gc             ] GC(33) Concurrent cleanup 1443M->91M(5128M) 0,179ms
[94,421s][debug][gc,ergo        ] GC(33) Available: 11580 MB, z-score=1,712. Average available: 11179,9 MB +/- 233,7 MB.
[94,421s][info ][gc,ergo        ] Free: 11580M, Max: 4096K regular, 9076M humongous, Frag: 22% external, 0% internal; Reserve: 616M, Max: 4096K
[94,421s][info ][gc,stats       ] 
[94,421s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[94,421s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[94,421s][info ][gc,stats       ] 
[94,421s][info ][gc,stats       ] Concurrent Reset                    802 us
[94,421s][info ][gc,stats       ] Pause Init Mark (G)                 346 us
[94,421s][info ][gc,stats       ] Pause Init Mark (N)                 159 us
[94,421s][info ][gc,stats       ]   Update Region States               99 us
[94,421s][info ][gc,stats       ] Concurrent Mark Roots               544 us, parallelism: 2,33x
[94,421s][info ][gc,stats       ]   CMR: <total>                     1268 us
[94,421s][info ][gc,stats       ]   CMR: Thread Roots                1214 us, workers (us): 417, 183, 181, 185, 248, ---, ---, ---, ---, ---, 
[94,421s][info ][gc,stats       ]   CMR: VM Strong Roots                5 us, workers (us):   4,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[94,421s][info ][gc,stats       ]   CMR: CLDG Roots                    49 us, workers (us):   7,  41, ---, ---, ---, ---, ---, ---, ---, ---, 
[94,421s][info ][gc,stats       ] Concurrent Marking                 6321 us
[94,421s][info ][gc,stats       ] Pause Final Mark (G)                647 us
[94,421s][info ][gc,stats       ] Pause Final Mark (N)                454 us
[94,421s][info ][gc,stats       ]   Finish Mark                       299 us
[94,421s][info ][gc,stats       ]   Update Region States               40 us
[94,421s][info ][gc,stats       ]   Choose Collection Set              62 us
[94,421s][info ][gc,stats       ]   Rebuild Free Set                   10 us
[94,421s][info ][gc,stats       ] Concurrent Thread Roots            1449 us, parallelism: 3,74x
[94,421s][info ][gc,stats       ]   CTR: <total>                     5414 us
[94,421s][info ][gc,stats       ]   CTR: Thread Roots                5414 us, workers (us): 1314, 1040, 1079, 990, 990, ---, ---, ---, ---, ---, 
[94,421s][info ][gc,stats       ] Concurrent Weak References         1513 us, parallelism: 1,12x
[94,421s][info ][gc,stats       ]   CWRF: <total>                    1701 us
[94,421s][info ][gc,stats       ]   CWRF: Weak References            1701 us, workers (us): 1380,  18, 303,   0,   0, ---, ---, ---, ---, ---, 
[94,421s][info ][gc,stats       ] Concurrent Weak Roots               587 us
[94,421s][info ][gc,stats       ]   Roots                             444 us, parallelism: 3,96x
[94,421s][info ][gc,stats       ]     CWR: <total>                   1761 us
[94,421s][info ][gc,stats       ]     CWR: Code Cache Roots           928 us, workers (us): 160, 215, 180, 174, 200, ---, ---, ---, ---, ---, 
[94,421s][info ][gc,stats       ]     CWR: VM Weak Roots              817 us, workers (us): 196, 195, 143, 143, 141, ---, ---, ---, ---, ---, 
[94,421s][info ][gc,stats       ]     CWR: CLDG Roots                  16 us, workers (us):   8, ---,   7, ---, ---, ---, ---, ---, ---, ---, 
[94,421s][info ][gc,stats       ]   Rendezvous                        114 us
[94,421s][info ][gc,stats       ] Concurrent Cleanup                  171 us
[94,421s][info ][gc,stats       ] Concurrent Class Unloading         2106 us
[94,421s][info ][gc,stats       ]   Unlink Stale                      919 us
[94,421s][info ][gc,stats       ]     System Dictionary                23 us
[94,421s][info ][gc,stats       ]     Weak Class Links                  0 us
[94,421s][info ][gc,stats       ]     Code Roots                      896 us
[94,421s][info ][gc,stats       ]   Rendezvous                       1103 us
[94,421s][info ][gc,stats       ]   Purge Unlinked                     65 us
[94,421s][info ][gc,stats       ]     Code Roots                       62 us
[94,421s][info ][gc,stats       ]     CLDG                              2 us
[94,421s][info ][gc,stats       ]     Exception Caches                  0 us
[94,421s][info ][gc,stats       ] Concurrent Strong Roots             236 us, parallelism: 0,84x
[94,421s][info ][gc,stats       ]   CSR: <total>                      199 us
[94,421s][info ][gc,stats       ]   CSR: VM Strong Roots                9 us, workers (us):   8,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[94,421s][info ][gc,stats       ]   CSR: CLDG Roots                   190 us, workers (us): 108,  83, ---, ---, ---, ---, ---, ---, ---, ---, 
[94,421s][info ][gc,stats       ] Concurrent Evacuation              6639 us
[94,421s][info ][gc,stats       ] Pause Init Update Refs (G)          184 us
[94,421s][info ][gc,stats       ] Pause Init Update Refs (N)           44 us
[94,421s][info ][gc,stats       ]   Manage GCLABs                       4 us
[94,421s][info ][gc,stats       ] Concurrent Update Refs             5354 us
[94,421s][info ][gc,stats       ] Concurrent Update Thread Roots      684 us
[94,421s][info ][gc,stats       ] Pause Final Update Refs (G)         321 us
[94,421s][info ][gc,stats       ] Pause Final Update Refs (N)         195 us
[94,421s][info ][gc,stats       ]   Update Region States              124 us
[94,421s][info ][gc,stats       ]   Trash Collection Set                8 us
[94,421s][info ][gc,stats       ]   Rebuild Free Set                   16 us
[94,421s][info ][gc,stats       ] Concurrent Cleanup                  190 us
[94,421s][info ][gc,stats       ] 
[94,421s][info ][gc,stats       ] Allocation pacing accrued:
[94,421s][info ][gc,stats       ]       0 of  1501 ms (  0,0%): <total>
[94,421s][info ][gc,stats       ]       0 of  1501 ms (  0,0%): <average total>
[94,421s][info ][gc,stats       ] 
[94,421s][info ][gc,metaspace   ] Metaspace: 19888K(20288K)->19888K(20288K) NonClass: 17461K(17600K)->17461K(17600K) Class: 2426K(2688K)->2426K(2688K)
[94,421s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[94,991s][debug][gc,nmethod     ] Register NMethod: java.time.Instant.<init> [0x00007fae5d2a0710] (c1)
[94,992s][debug][gc,nmethod     ] Register NMethod: java.time.Instant.create [0x00007fae5d53db10] (c1)
[94,992s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getRevisionTimestamp [0x00007fae7cbdfb10] (c1)
[94,997s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4241800.invoke [0x00007fae5d740190] (c1)
[94,998s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4241400.invoke [0x00007fae5d591310] (c1)
[94,998s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.invokeStatic [0x00007fae5d596490] (c1)
[94,998s][debug][gc,nmethod     ] Register NMethod: java.lang.StringConcatHelper.mix [0x00007fae5d4f8a90] (c1)
[94,998s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb4240c00.invoke [0x00007fae5d134d90] (c1)
[94,998s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.setMaxNodeKeyInDocumentIndex [0x00007fae7cbf9c10] (c1)
[94,998s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.setMaxNodeKeyInInChangedNodesIndex [0x00007fae7cbf9f10] (c1)
[94,998s][debug][gc,nmethod     ] Register NMethod: java.lang.StringConcatHelper.newArrayWithSuffix [0x00007fae5d650510] (c1)
[94,998s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getBufferManager [0x00007fae7cbfa210] (c1)
[94,998s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.json.JsonResourceSessionImpl.getWtxIndexController [0x00007fae5d283710] (c1)
[94,999s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.json.JsonResourceSessionImpl.getWtxIndexController [0x00007fae5d56f110] (c1)
[94,999s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.json.JsonResourceSessionImpl$$Lambda/0x00007fadb4237518.<init> [0x00007fae5d590f10] (c1)
[95,613s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.setUser [0x00007fae7cbfa510] (c1)
[95,613s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.TransactionIntentLog.getList [0x00007fae7cbfa810] (c1)
[95,640s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.tryPoll [0x00007fae5d349090] (c1)
[95,649s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.CountedCompleter.getRawResult [0x00007fae7cbfab10] (c1)
[95,667s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.NamePage.getNumberOfArrays [0x00007fae7cbfae10] (c1)
[95,667s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.DeweyIDPage.getMaxNodeKey [0x00007fae7cbfb110] (c1)
[95,667s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.DeweyIDPage.getCurrentMaxLevelOfIndirectPages [0x00007fae7cbfb410] (c1)
[95,667s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getCommitTimestamp [0x00007fae7cbfb710] (c1)
[95,667s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getMaxNodeKeyInRecordToRevisionsIndex [0x00007fae7cbfba10] (c1)
[95,667s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getCurrentMaxLevelOfChangedNodesIndexIndirectPages [0x00007fae7cbfbd10] (c1)
[95,667s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getCommitMessage [0x00007fae7cbfc010] (c1)
[95,667s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getCurrentMaxLevelOfRecordToRevisionsIndexIndirectPages [0x00007fae7cbfc310] (c1)
[95,667s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.setRevisionTimestamp [0x00007fae7cbfc610] (c1)
[95,667s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.User.getName [0x00007fae7cbfc910] (c1)
[95,667s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.User.getId [0x00007fae7cbfcc10] (c1)
[95,667s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind$3.serializePage [0x00007fae5d5b1710] (c1)
[95,668s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.UnboundedLocalCache.statsCounter [0x00007fae7cbfcf10] (c1)
[95,672s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractResourceSession.getCommitLock [0x00007fae5d348a90] (c1)
[95,672s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelReader.readUberPageReference [0x00007fae5d5b0a90] (c1)
[95,672s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.AbstractForwardingReader.readUberPageReference [0x00007fae5d134910] (c1)
[95,672s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractResourceSession.setLastCommittedUberPage [0x00007fae5d5efb90] (c1)
[95,672s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageTrx.readUberPage [0x00007fae5d5ef110] (c1)
[95,672s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.ResourceConfiguration.storeDiffs [0x00007fae7cbfd210] (c1)
[95,673s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeHashing.setBulkInsert [0x00007fae7cbfd510] (c1)
[95,673s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.loadDataPageFromDurableStorageAndCombinePageFragments [0x00007fae5d5ee210] (c1)
[95,673s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageKind$6.deserializePage [0x00007fae5d5ec990] (c1)
[95,673s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PathSummaryPage.<init> [0x00007fae5d56ea90] (c1)
[95,673s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.hasTrxIntentLog [0x00007fae5d596010] (c1)
[96,300s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.setCommitMessage [0x00007fae7cbfd810] (c1)
[96,306s][info ][gc             ] Trigger: Learning 3 of 5. Free (8592M) is below initial threshold (8601M)
[96,306s][info ][gc,ergo        ] Free: 8592M, Max: 4096K regular, 8592M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[96,306s][info ][gc,start       ] GC(34) Concurrent reset
[96,306s][info ][gc,task        ] GC(34) Using 5 of 10 workers for concurrent reset
[96,306s][info ][gc,ergo        ] GC(34) Pacer for Reset. Non-Taxable: 12288M
[96,308s][info ][gc             ] GC(34) Concurrent reset 2,241ms
[96,309s][info ][gc,start       ] GC(34) Pause Init Mark (unload classes)
[96,309s][info ][gc,task        ] GC(34) Using 10 of 10 workers for init marking
[96,309s][info ][gc,ergo        ] GC(34) Pacer for Mark. Expected Live: 387M, Free: 8580M, Non-Taxable: 858M, Alloc Tax Rate: 0,1x
[96,309s][info ][gc             ] GC(34) Pause Init Mark (unload classes) 0,169ms
[96,309s][info ][gc,start       ] GC(34) Concurrent marking roots
[96,309s][info ][gc,task        ] GC(34) Using 5 of 10 workers for concurrent marking roots
[96,309s][debug][gc,tlab        ] GC(34) TLAB totals: thrds: 17  refills: 704 max: 454 slow allocs: 1 max 1 waste:  1,3% gc: 30902872B max: 3666640B slow: 6009416B max: 738544B
[96,310s][info ][gc             ] GC(34) Concurrent marking roots 0,812ms
[96,310s][info ][gc,start       ] GC(34) Concurrent marking (unload classes)
[96,310s][info ][gc,task        ] GC(34) Using 5 of 10 workers for concurrent marking
[96,370s][info ][gc             ] GC(34) Concurrent marking (unload classes) 60,562ms
[96,370s][info ][gc,start       ] GC(34) Pause Final Mark (unload classes)
[96,370s][info ][gc,task        ] GC(34) Using 10 of 10 workers for final marking
[96,371s][info ][gc,ergo        ] GC(34) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 9871M, Max CSet: 512M, Min Garbage: 0B
[96,371s][info ][gc,ergo        ] GC(34) Collectable Garbage: 2620M (99%), Immediate: 1171M (44%), CSet: 1448M (55%)
[96,371s][info ][gc,ergo        ] GC(34) Pacer for Evacuation. Used CSet: 1912M, Free: 9256M, Non-Taxable: 925M, Alloc Tax Rate: 1,1x
[96,371s][info ][gc             ] GC(34) Pause Final Mark (unload classes) 0,545ms
[96,371s][info ][gc,start       ] GC(34) Concurrent thread roots
[96,371s][info ][gc,task        ] GC(34) Using 5 of 10 workers for Concurrent thread roots
[96,371s][info ][gc             ] GC(34) Concurrent thread roots 0,522ms
[96,371s][info ][gc,start       ] GC(34) Concurrent weak references
[96,371s][info ][gc,task        ] GC(34) Using 5 of 10 workers for concurrent weak references
[96,373s][info ][gc,ref         ] GC(34) Encountered references: Soft: 2320, Weak: 1839, Final: 4640, Phantom: 4990
[96,373s][info ][gc,ref         ] GC(34) Discovered  references: Soft: 0, Weak: 399, Final: 4633, Phantom: 4896
[96,373s][info ][gc,ref         ] GC(34) Enqueued    references: Soft: 0, Weak: 0, Final: 4633, Phantom: 4650
[96,373s][info ][gc             ] GC(34) Concurrent weak references 1,582ms
[96,373s][info ][gc,start       ] GC(34) Concurrent weak roots
[96,373s][info ][gc,task        ] GC(34) Using 5 of 10 workers for concurrent weak root
[96,374s][info ][gc             ] GC(34) Concurrent weak roots 0,632ms
[96,374s][info ][gc,start       ] GC(34) Concurrent cleanup
[96,374s][info ][gc             ] GC(34) Concurrent cleanup 3601M->2429M(5128M) 0,183ms
[96,374s][info ][gc,ergo        ] GC(34) Free: 9252M, Max: 4096K regular, 8120M humongous, Frag: 13% external, 0% internal; Reserve: 606M, Max: 4096K
[96,374s][info ][gc,start       ] GC(34) Concurrent class unloading
[96,374s][info ][gc,task        ] GC(34) Using 5 of 10 workers for concurrent class unloading
[96,374s][debug][gc,phases,start] GC(34) ClassLoaderData
[96,374s][debug][gc,phases      ] GC(34) ClassLoaderData 0,013ms
[96,374s][debug][gc,phases,start] GC(34) Trigger cleanups
[96,374s][debug][gc,phases      ] GC(34) Trigger cleanups 0,007ms
[96,375s][info ][gc             ] GC(34) Concurrent class unloading 1,051ms
[96,375s][info ][gc,start       ] GC(34) Concurrent strong roots
[96,375s][info ][gc,task        ] GC(34) Using 5 of 10 workers for concurrent strong root
[96,375s][info ][gc             ] GC(34) Concurrent strong roots 0,194ms
[96,375s][info ][gc,start       ] GC(34) Concurrent evacuation
[96,375s][info ][gc,task        ] GC(34) Using 5 of 10 workers for concurrent evacuation
[96,380s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.Indexes.getIndexDefs [0x00007fae5d5ebe90] (c1)
[96,382s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.setPageReadTransaction [0x00007fae5d5eb890] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.setWeightedSize [0x00007fae7cbfdb10] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.LocalManualCache.put [0x00007fae5d11de10] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.missesInSample [0x00007fae7cbfde10] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMSA.pacer [0x00007fae7cbfe110] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.setPreviousSampleHitRate [0x00007fae7cbfe410] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite.set [0x00007fae5d11d410] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.StripedBuffer.drainTo [0x00007fae5d11cd10] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.mainProtectedMaximum [0x00007fae7cbfe710] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.mainProtectedWeightedSize [0x00007fae7cbfea10] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSMS.adjustment [0x00007fae7cbfed10] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMSA.expiry [0x00007fae7cbff010] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMSA.fastpath [0x00007fae7cbff310] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.setWindowWeightedSize [0x00007fae7cbff610] (c1)
[96,383s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.setWeightedSize [0x00007fae7cbff910] (c1)
[96,384s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.NamePage.getCurrentMaxLevelOfIndirectPages [0x00007fae5d187590] (c1)
[96,384s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.missesInSample [0x00007fae7cbffc10] (c1)
[96,384s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMSA.pacer [0x00007fae7cbfff10] (c1)
[96,384s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.demoteFromMainProtected [0x00007fae5d11b390] (c1)
[96,384s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.json.JsonNodeTrxImpl.self [0x00007fae5d3bc210] (c1)
[96,384s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.pathsummary.AbstractAxis.reset [0x00007fae5d11af90] (c1)
[96,384s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.setPreviousSampleHitRate [0x00007fae7cc00210] (c1)
[96,385s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.rescheduleCleanUpIfIncomplete [0x00007fae5d657510] (c1)
[96,385s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.mainProtectedMaximum [0x00007fae7cc00510] (c1)
[96,385s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.adjustment [0x00007fae7cc00810] (c1)
[96,385s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.RecordToRevisionsIndex.setPageTrx [0x00007fae7cc00b10] (c1)
[96,385s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.mainProtectedWeightedSize [0x00007fae7cc00e10] (c1)
[96,420s][info ][gc             ] GC(34) Concurrent evacuation 44,352ms
[96,420s][info ][gc,start       ] GC(34) Pause Init Update Refs
[96,420s][info ][gc,ergo        ] GC(34) Pacer for Update Refs. Used: 2928M, Free: 9224M, Non-Taxable: 922M, Alloc Tax Rate: 1,1x
[96,420s][info ][gc             ] GC(34) Pause Init Update Refs 0,032ms
[96,420s][info ][gc,start       ] GC(34) Concurrent update references
[96,420s][info ][gc,task        ] GC(34) Using 5 of 10 workers for concurrent reference update
[96,457s][info ][gc             ] GC(34) Concurrent update references 37,141ms
[96,457s][info ][gc,start       ] GC(34) Concurrent update thread roots
[96,458s][info ][gc             ] GC(34) Concurrent update thread roots 1,201ms
[96,458s][info ][gc,start       ] GC(34) Pause Final Update Refs
[96,459s][info ][gc,task        ] GC(34) Using 10 of 10 workers for final reference update
[96,459s][info ][gc             ] GC(34) Pause Final Update Refs 0,183ms
[96,459s][info ][gc,start       ] GC(34) Concurrent cleanup
[96,459s][info ][gc             ] GC(34) Concurrent cleanup 2956M->1044M(5128M) 0,201ms
[96,459s][debug][gc,ergo        ] GC(34) Available: 10628 MB, z-score=-1,723. Average available: 11116,3 MB +/- 283,4 MB.
[96,459s][info ][gc,ergo        ] Free: 10628M, Max: 4096K regular, 7664M humongous, Frag: 28% external, 0% internal; Reserve: 616M, Max: 4096K
[96,459s][info ][gc,stats       ] 
[96,459s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[96,459s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[96,459s][info ][gc,stats       ] 
[96,459s][info ][gc,stats       ] Concurrent Reset                   2297 us
[96,459s][info ][gc,stats       ] Pause Init Mark (G)                 516 us
[96,459s][info ][gc,stats       ] Pause Init Mark (N)                 178 us
[96,459s][info ][gc,stats       ]   Update Region States              120 us
[96,459s][info ][gc,stats       ] Concurrent Mark Roots               841 us, parallelism: 1,88x
[96,459s][info ][gc,stats       ]   CMR: <total>                     1585 us
[96,459s][info ][gc,stats       ]   CMR: Thread Roots                1517 us, workers (us): 425, 725, 368,   0,   0, ---, ---, ---, ---, ---, 
[96,459s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   4,   2,   2,   0,   0, ---, ---, ---, ---, ---, 
[96,459s][info ][gc,stats       ]   CMR: CLDG Roots                    60 us, workers (us):   7, ---,  53, ---, ---, ---, ---, ---, ---, ---, 
[96,459s][info ][gc,stats       ] Concurrent Marking                60609 us
[96,459s][info ][gc,stats       ] Pause Final Mark (G)                686 us
[96,459s][info ][gc,stats       ] Pause Final Mark (N)                554 us
[96,459s][info ][gc,stats       ]   Finish Mark                       301 us
[96,459s][info ][gc,stats       ]   Update Region States              119 us
[96,459s][info ][gc,stats       ]   Choose Collection Set              75 us
[96,459s][info ][gc,stats       ]   Rebuild Free Set                   10 us
[96,459s][info ][gc,stats       ] Concurrent Thread Roots             537 us, parallelism: 2,54x
[96,459s][info ][gc,stats       ]   CTR: <total>                     1364 us
[96,459s][info ][gc,stats       ]   CTR: Thread Roots                1364 us, workers (us): 485, 226, 258, 233, 162, ---, ---, ---, ---, ---, 
[96,459s][info ][gc,stats       ] Concurrent Weak References         1602 us, parallelism: 1,17x
[96,459s][info ][gc,stats       ]   CWRF: <total>                    1880 us
[96,459s][info ][gc,stats       ]   CWRF: Weak References            1880 us, workers (us): 375, 1474,  32,   0,   0, ---, ---, ---, ---, ---, 
[96,459s][info ][gc,stats       ] Concurrent Weak Roots               647 us
[96,459s][info ][gc,stats       ]   Roots                             555 us, parallelism: 3,55x
[96,459s][info ][gc,stats       ]     CWR: <total>                   1972 us
[96,459s][info ][gc,stats       ]     CWR: Code Cache Roots          1060 us, workers (us): 254, 177, 177, 240, 213, ---, ---, ---, ---, ---, 
[96,459s][info ][gc,stats       ]     CWR: VM Weak Roots              882 us, workers (us): 216, 214, 151, 151, 151, ---, ---, ---, ---, ---, 
[96,459s][info ][gc,stats       ]     CWR: CLDG Roots                  30 us, workers (us): ---,  15,  15, ---, ---, ---, ---, ---, ---, ---, 
[96,459s][info ][gc,stats       ]   Rendezvous                         63 us
[96,459s][info ][gc,stats       ] Concurrent Cleanup                  198 us
[96,459s][info ][gc,stats       ] Concurrent Class Unloading         1063 us
[96,459s][info ][gc,stats       ]   Unlink Stale                      913 us
[96,459s][info ][gc,stats       ]     System Dictionary                36 us
[96,459s][info ][gc,stats       ]     Weak Class Links                  0 us
[96,459s][info ][gc,stats       ]     Code Roots                      877 us
[96,459s][info ][gc,stats       ]   Rendezvous                        120 us
[96,459s][info ][gc,stats       ]   Purge Unlinked                      2 us
[96,459s][info ][gc,stats       ]     Code Roots                        0 us
[96,459s][info ][gc,stats       ]     CLDG                              2 us
[96,459s][info ][gc,stats       ]     Exception Caches                  0 us
[96,459s][info ][gc,stats       ] Concurrent Strong Roots             200 us, parallelism: 1,25x
[96,459s][info ][gc,stats       ]   CSR: <total>                      249 us
[96,459s][info ][gc,stats       ]   CSR: VM Strong Roots               10 us, workers (us):   6,   2,   2,   0,   0, ---, ---, ---, ---, ---, 
[96,459s][info ][gc,stats       ]   CSR: CLDG Roots                   239 us, workers (us): 121, 118, ---, ---, ---, ---, ---, ---, ---, ---, 
[96,459s][info ][gc,stats       ] Concurrent Evacuation             44395 us
[96,459s][info ][gc,stats       ] Pause Init Update Refs (G)          303 us
[96,459s][info ][gc,stats       ] Pause Init Update Refs (N)           41 us
[96,459s][info ][gc,stats       ]   Manage GCLABs                       4 us
[96,459s][info ][gc,stats       ] Concurrent Update Refs            37187 us
[96,459s][info ][gc,stats       ] Concurrent Update Thread Roots     1223 us
[96,459s][info ][gc,stats       ] Pause Final Update Refs (G)         404 us
[96,459s][info ][gc,stats       ] Pause Final Update Refs (N)         204 us
[96,459s][info ][gc,stats       ]   Update Region States              108 us
[96,459s][info ][gc,stats       ]   Trash Collection Set               20 us
[96,459s][info ][gc,stats       ]   Rebuild Free Set                   18 us
[96,459s][info ][gc,stats       ] Concurrent Cleanup                  212 us
[96,459s][info ][gc,stats       ] 
[96,459s][info ][gc,stats       ] Allocation pacing accrued:
[96,459s][info ][gc,stats       ]       0 of  2038 ms (  0,0%): <total>
[96,459s][info ][gc,stats       ]       0 of  2038 ms (  0,0%): <average total>
[96,459s][info ][gc,stats       ] 
[96,459s][info ][gc,metaspace   ] Metaspace: 19900K(20288K)->19912K(20288K) NonClass: 17473K(17600K)->17485K(17600K) Class: 2426K(2688K)->2426K(2688K)
[96,459s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[97,091s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.putLongRelease [0x00007fae5d6d1790] (c1)
[97,091s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.Node.setPolicyWeight [0x00007fae5d17a890] (c1)
[97,091s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.drainKeyReferences [0x00007fae5d11ab10] (c1)
[97,092s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expireEntries [0x00007fae5d119990] (c1)
[97,092s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.evictFromWindow [0x00007fae5d655890] (c1)
[97,092s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.pathsummary.LevelOrderSettingInMemoryInstancesAxis.reset [0x00007fae5d118c90] (c1)
[97,092s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.getExpirationDelay [0x00007fae5d1ce710] (c1)
[97,737s][info ][gc             ] Trigger: Learning 4 of 5. Free (8596M) is below initial threshold (8601M)
[97,737s][info ][gc,ergo        ] Free: 8596M, Max: 4096K regular, 7664M humongous, Frag: 11% external, 0% internal; Reserve: 616M, Max: 4096K
[97,737s][info ][gc,start       ] GC(35) Concurrent reset
[97,737s][info ][gc,task        ] GC(35) Using 5 of 10 workers for concurrent reset
[97,737s][info ][gc,ergo        ] GC(35) Pacer for Reset. Non-Taxable: 12288M
[97,741s][info ][gc             ] GC(35) Concurrent reset 3,530ms
[97,741s][info ][gc,start       ] GC(35) Pause Init Mark (unload classes)
[97,741s][info ][gc,task        ] GC(35) Using 10 of 10 workers for init marking
[97,741s][info ][gc,ergo        ] GC(35) Pacer for Mark. Expected Live: 373M, Free: 8532M, Non-Taxable: 853M, Alloc Tax Rate: 0,1x
[97,741s][info ][gc             ] GC(35) Pause Init Mark (unload classes) 0,050ms
[97,741s][info ][gc,start       ] GC(35) Concurrent marking roots
[97,741s][info ][gc,task        ] GC(35) Using 5 of 10 workers for concurrent marking roots
[97,742s][debug][gc,tlab        ] GC(35) TLAB totals: thrds: 21  refills: 527 max: 321 slow allocs: 1 max 1 waste:  2,5% gc: 48286216B max: 4038184B slow: 4909048B max: 757304B
[97,742s][info ][gc             ] GC(35) Concurrent marking roots 0,740ms
[97,742s][info ][gc,start       ] GC(35) Concurrent marking (unload classes)
[97,742s][info ][gc,task        ] GC(35) Using 5 of 10 workers for concurrent marking
[97,800s][info ][gc             ] GC(35) Concurrent marking (unload classes) 57,622ms
[97,800s][info ][gc,start       ] GC(35) Pause Final Mark (unload classes)
[97,800s][info ][gc,task        ] GC(35) Using 10 of 10 workers for final marking
[97,800s][info ][gc,ergo        ] GC(35) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 9860M, Max CSet: 512M, Min Garbage: 0B
[97,801s][info ][gc,ergo        ] GC(35) Collectable Garbage: 2626M (99%), Immediate: 1016M (38%), CSet: 1610M (61%)
[97,801s][info ][gc,ergo        ] GC(35) Pacer for Evacuation. Used CSet: 2115M, Free: 9244M, Non-Taxable: 924M, Alloc Tax Rate: 1,1x
[97,801s][info ][gc             ] GC(35) Pause Final Mark (unload classes) 0,672ms
[97,801s][info ][gc,start       ] GC(35) Concurrent thread roots
[97,801s][info ][gc,task        ] GC(35) Using 5 of 10 workers for Concurrent thread roots
[97,801s][info ][gc             ] GC(35) Concurrent thread roots 0,738ms
[97,801s][info ][gc,start       ] GC(35) Concurrent weak references
[97,801s][info ][gc,task        ] GC(35) Using 5 of 10 workers for concurrent weak references
[97,803s][info ][gc,ref         ] GC(35) Encountered references: Soft: 2320, Weak: 1839, Final: 5002, Phantom: 5393
[97,803s][info ][gc,ref         ] GC(35) Discovered  references: Soft: 0, Weak: 315, Final: 4997, Phantom: 5260
[97,803s][info ][gc,ref         ] GC(35) Enqueued    references: Soft: 0, Weak: 0, Final: 4997, Phantom: 5012
[97,803s][info ][gc             ] GC(35) Concurrent weak references 1,160ms
[97,803s][info ][gc,start       ] GC(35) Concurrent weak roots
[97,803s][info ][gc,task        ] GC(35) Using 5 of 10 workers for concurrent weak root
[97,803s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.evictEntries [0x00007fae5d655210] (c1)
[97,803s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.Pacer.maySkip [0x00007fae5d654e10] (c1)
[97,804s][info ][gc             ] GC(35) Concurrent weak roots 1,158ms
[97,804s][info ][gc,start       ] GC(35) Concurrent cleanup
[97,804s][info ][gc             ] GC(35) Concurrent cleanup 3450M->2434M(5128M) 0,166ms
[97,804s][info ][gc,ergo        ] GC(35) Free: 9239M, Max: 4096K regular, 8072M humongous, Frag: 13% external, 0% internal; Reserve: 613M, Max: 4096K
[97,804s][info ][gc,start       ] GC(35) Concurrent class unloading
[97,804s][info ][gc,task        ] GC(35) Using 5 of 10 workers for concurrent class unloading
[97,804s][debug][gc,phases,start] GC(35) ClassLoaderData
[97,804s][debug][gc,phases      ] GC(35) ClassLoaderData 0,010ms
[97,804s][debug][gc,phases,start] GC(35) Trigger cleanups
[97,804s][debug][gc,phases      ] GC(35) Trigger cleanups 0,004ms
[97,805s][info ][gc             ] GC(35) Concurrent class unloading 0,788ms
[97,805s][info ][gc,start       ] GC(35) Concurrent strong roots
[97,805s][info ][gc,task        ] GC(35) Using 5 of 10 workers for concurrent strong root
[97,805s][info ][gc             ] GC(35) Concurrent strong roots 0,156ms
[97,805s][info ][gc,start       ] GC(35) Concurrent evacuation
[97,805s][info ][gc,task        ] GC(35) Using 5 of 10 workers for concurrent evacuation
[97,859s][info ][gc             ] GC(35) Concurrent evacuation 53,678ms
[97,859s][info ][gc,start       ] GC(35) Pause Init Update Refs
[97,859s][info ][gc,ergo        ] GC(35) Pacer for Update Refs. Used: 2988M, Free: 9203M, Non-Taxable: 920M, Alloc Tax Rate: 1,1x
[97,859s][info ][gc             ] GC(35) Pause Init Update Refs 0,030ms
[97,859s][info ][gc,start       ] GC(35) Concurrent update references
[97,859s][info ][gc,task        ] GC(35) Using 5 of 10 workers for concurrent reference update
[97,893s][info ][gc             ] GC(35) Concurrent update references 34,347ms
[97,893s][info ][gc,start       ] GC(35) Concurrent update thread roots
[97,894s][info ][gc             ] GC(35) Concurrent update thread roots 1,080ms
[97,894s][info ][gc,start       ] GC(35) Pause Final Update Refs
[97,895s][info ][gc,task        ] GC(35) Using 10 of 10 workers for final reference update
[97,895s][info ][gc             ] GC(35) Pause Final Update Refs 0,083ms
[97,895s][info ][gc,start       ] GC(35) Concurrent cleanup
[97,895s][info ][gc             ] GC(35) Concurrent cleanup 3008M->892M(5156M) 0,190ms
[97,895s][debug][gc,ergo        ] GC(35) Available: 10779 MB, z-score=-1,001. Average available: 11080,7 MB +/- 300,5 MB.
[97,895s][info ][gc,ergo        ] Free: 10779M, Max: 4096K regular, 8680M humongous, Frag: 20% external, 0% internal; Reserve: 616M, Max: 4096K
[97,895s][info ][gc,stats       ] 
[97,895s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[97,895s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[97,895s][info ][gc,stats       ] 
[97,895s][info ][gc,stats       ] Concurrent Reset                   3758 us
[97,895s][info ][gc,stats       ] Pause Init Mark (G)                 254 us
[97,895s][info ][gc,stats       ] Pause Init Mark (N)                  58 us
[97,895s][info ][gc,stats       ]   Update Region States               21 us
[97,895s][info ][gc,stats       ] Concurrent Mark Roots               752 us, parallelism: 2,22x
[97,895s][info ][gc,stats       ]   CMR: <total>                     1668 us
[97,895s][info ][gc,stats       ]   CMR: Thread Roots                1597 us, workers (us): 329, 650, 309, 309,   0, ---, ---, ---, ---, ---, 
[97,895s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   4,   3,   2,   0,   0, ---, ---, ---, ---, ---, 
[97,895s][info ][gc,stats       ]   CMR: CLDG Roots                    62 us, workers (us):   8, ---,  54, ---, ---, ---, ---, ---, ---, ---, 
[97,895s][info ][gc,stats       ] Concurrent Marking                57657 us
[97,895s][info ][gc,stats       ] Pause Final Mark (G)                795 us
[97,895s][info ][gc,stats       ] Pause Final Mark (N)                684 us
[97,895s][info ][gc,stats       ]   Finish Mark                       413 us
[97,895s][info ][gc,stats       ]   Update Region States              105 us
[97,895s][info ][gc,stats       ]   Choose Collection Set              88 us
[97,895s][info ][gc,stats       ]   Rebuild Free Set                   12 us
[97,895s][info ][gc,stats       ] Concurrent Thread Roots             756 us, parallelism: 1,84x
[97,895s][info ][gc,stats       ]   CTR: <total>                     1395 us
[97,895s][info ][gc,stats       ]   CTR: Thread Roots                1395 us, workers (us): 592, 251, 214, 168, 170, ---, ---, ---, ---, ---, 
[97,895s][info ][gc,stats       ] Concurrent Weak References         1170 us, parallelism: 1,62x
[97,895s][info ][gc,stats       ]   CWRF: <total>                    1892 us
[97,895s][info ][gc,stats       ]   CWRF: Weak References            1892 us, workers (us): 940,  19, 933,   0,   0, ---, ---, ---, ---, ---, 
[97,895s][info ][gc,stats       ] Concurrent Weak Roots              1177 us
[97,895s][info ][gc,stats       ]   Roots                             479 us, parallelism: 3,81x
[97,895s][info ][gc,stats       ]     CWR: <total>                   1829 us
[97,895s][info ][gc,stats       ]     CWR: Code Cache Roots           915 us, workers (us): 192, 182, 193, 171, 177, ---, ---, ---, ---, ---, 
[97,895s][info ][gc,stats       ]     CWR: VM Weak Roots              895 us, workers (us): 220, 203, 201, 136, 135, ---, ---, ---, ---, ---, 
[97,895s][info ][gc,stats       ]     CWR: CLDG Roots                  19 us, workers (us): ---, ---, ---,   9,  10, ---, ---, ---, ---, ---, 
[97,895s][info ][gc,stats       ]   Rendezvous                        666 us
[97,895s][info ][gc,stats       ] Concurrent Cleanup                  173 us
[97,895s][info ][gc,stats       ] Concurrent Class Unloading          814 us
[97,895s][info ][gc,stats       ]   Unlink Stale                      747 us
[97,895s][info ][gc,stats       ]     System Dictionary                23 us
[97,895s][info ][gc,stats       ]     Weak Class Links                  0 us
[97,895s][info ][gc,stats       ]     Code Roots                      723 us
[97,895s][info ][gc,stats       ]   Rendezvous                         27 us
[97,895s][info ][gc,stats       ]   Purge Unlinked                      2 us
[97,895s][info ][gc,stats       ]     Code Roots                        0 us
[97,895s][info ][gc,stats       ]     CLDG                              1 us
[97,895s][info ][gc,stats       ]     Exception Caches                  0 us
[97,895s][info ][gc,stats       ] Concurrent Strong Roots             165 us, parallelism: 1,36x
[97,895s][info ][gc,stats       ]   CSR: <total>                      223 us
[97,895s][info ][gc,stats       ]   CSR: VM Strong Roots               11 us, workers (us):   6,   4,   0,   0,   0, ---, ---, ---, ---, ---, 
[97,895s][info ][gc,stats       ]   CSR: CLDG Roots                   213 us, workers (us): 122,  91, ---, ---, ---, ---, ---, ---, ---, ---, 
[97,895s][info ][gc,stats       ] Concurrent Evacuation             53720 us
[97,895s][info ][gc,stats       ] Pause Init Update Refs (G)          279 us
[97,895s][info ][gc,stats       ] Pause Init Update Refs (N)           87 us
[97,895s][info ][gc,stats       ]   Manage GCLABs                       3 us
[97,895s][info ][gc,stats       ] Concurrent Update Refs            34387 us
[97,895s][info ][gc,stats       ] Concurrent Update Thread Roots     1100 us
[97,895s][info ][gc,stats       ] Pause Final Update Refs (G)         177 us
[97,895s][info ][gc,stats       ] Pause Final Update Refs (N)          92 us
[97,895s][info ][gc,stats       ]   Update Region States               35 us
[97,895s][info ][gc,stats       ]   Trash Collection Set                9 us
[97,895s][info ][gc,stats       ]   Rebuild Free Set                   14 us
[97,895s][info ][gc,stats       ] Concurrent Cleanup                  201 us
[97,895s][info ][gc,stats       ] 
[97,895s][info ][gc,stats       ] Allocation pacing accrued:
[97,895s][info ][gc,stats       ]       0 of  1436 ms (  0,0%): <total>
[97,895s][info ][gc,stats       ]       0 of  1436 ms (  0,0%): <average total>
[97,895s][info ][gc,stats       ] 
[97,895s][info ][gc,metaspace   ] Metaspace: 19923K(20352K)->19927K(20352K) NonClass: 17496K(17664K)->17500K(17664K) Class: 2426K(2688K)->2426K(2688K)
[97,895s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[99,130s][info ][gc             ] Trigger: Learning 5 of 5. Free (8588M) is below initial threshold (8601M)
[99,130s][info ][gc,ergo        ] Free: 8584M, Max: 4096K regular, 8584M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[99,130s][info ][gc,start       ] GC(36) Concurrent reset
[99,130s][info ][gc,task        ] GC(36) Using 5 of 10 workers for concurrent reset
[99,130s][info ][gc,ergo        ] GC(36) Pacer for Reset. Non-Taxable: 12288M
[99,134s][info ][gc             ] GC(36) Concurrent reset 3,664ms
[99,134s][info ][gc,start       ] GC(36) Pause Init Mark (unload classes)
[99,134s][info ][gc,task        ] GC(36) Using 10 of 10 workers for init marking
[99,134s][info ][gc,ergo        ] GC(36) Pacer for Mark. Expected Live: 422M, Free: 8552M, Non-Taxable: 855M, Alloc Tax Rate: 0,1x
[99,134s][info ][gc             ] GC(36) Pause Init Mark (unload classes) 0,175ms
[99,134s][info ][gc,start       ] GC(36) Concurrent marking roots
[99,134s][info ][gc,task        ] GC(36) Using 5 of 10 workers for concurrent marking roots
[99,134s][debug][gc,tlab        ] GC(36) TLAB totals: thrds: 21  refills: 440 max: 317 slow allocs: 0 max 0 waste:  3,5% gc: 59997488B max: 4119096B slow: 3163848B max: 615432B
[99,135s][info ][gc             ] GC(36) Concurrent marking roots 0,834ms
[99,135s][info ][gc,start       ] GC(36) Concurrent marking (unload classes)
[99,135s][info ][gc,task        ] GC(36) Using 5 of 10 workers for concurrent marking
[99,187s][debug][gc,nmethod     ] Register NMethod: io.sirix.index.path.summary.PathSummaryReader.moveToFirstChild [0x00007fae7cc01110] (c2)
[99,192s][info ][gc             ] GC(36) Concurrent marking (unload classes) 57,268ms
[99,192s][info ][gc,start       ] GC(36) Pause Final Mark (unload classes)
[99,192s][info ][gc,task        ] GC(36) Using 10 of 10 workers for final marking
[99,193s][info ][gc,ergo        ] GC(36) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 10096M, Max CSet: 512M, Min Garbage: 0B
[99,193s][info ][gc,ergo        ] GC(36) Collectable Garbage: 2568M (99%), Immediate: 1076M (41%), CSet: 1492M (57%)
[99,193s][info ][gc,ergo        ] GC(36) Pacer for Evacuation. Used CSet: 2003M, Free: 9480M, Non-Taxable: 948M, Alloc Tax Rate: 1,1x
[99,193s][info ][gc             ] GC(36) Pause Final Mark (unload classes) 0,536ms
[99,193s][info ][gc,start       ] GC(36) Concurrent thread roots
[99,193s][info ][gc,task        ] GC(36) Using 5 of 10 workers for Concurrent thread roots
[99,194s][info ][gc             ] GC(36) Concurrent thread roots 0,547ms
[99,194s][info ][gc,start       ] GC(36) Concurrent weak references
[99,194s][info ][gc,task        ] GC(36) Using 5 of 10 workers for concurrent weak references
[99,195s][info ][gc,ref         ] GC(36) Encountered references: Soft: 2320, Weak: 1838, Final: 4756, Phantom: 5014
[99,195s][info ][gc,ref         ] GC(36) Discovered  references: Soft: 0, Weak: 788, Final: 4756, Phantom: 5012
[99,195s][info ][gc,ref         ] GC(36) Enqueued    references: Soft: 0, Weak: 0, Final: 4756, Phantom: 4763
[99,195s][info ][gc             ] GC(36) Concurrent weak references 1,193ms
[99,195s][info ][gc,start       ] GC(36) Concurrent weak roots
[99,195s][info ][gc,task        ] GC(36) Using 5 of 10 workers for concurrent weak root
[99,196s][info ][gc             ] GC(36) Concurrent weak roots 0,732ms
[99,196s][info ][gc,start       ] GC(36) Concurrent cleanup
[99,196s][info ][gc             ] GC(36) Concurrent cleanup 3274M->2198M(5156M) 0,083ms
[99,196s][info ][gc,ergo        ] GC(36) Free: 9476M, Max: 4096K regular, 8868M humongous, Frag: 7% external, 0% internal; Reserve: 613M, Max: 4096K
[99,196s][info ][gc,start       ] GC(36) Concurrent class unloading
[99,196s][info ][gc,task        ] GC(36) Using 5 of 10 workers for concurrent class unloading
[99,196s][debug][gc,phases,start] GC(36) ClassLoaderData
[99,196s][debug][gc,phases      ] GC(36) ClassLoaderData 0,013ms
[99,196s][debug][gc,phases,start] GC(36) Trigger cleanups
[99,196s][debug][gc,phases      ] GC(36) Trigger cleanups 0,007ms
[99,197s][info ][gc             ] GC(36) Concurrent class unloading 1,037ms
[99,197s][info ][gc,start       ] GC(36) Concurrent strong roots
[99,197s][info ][gc,task        ] GC(36) Using 5 of 10 workers for concurrent strong root
[99,197s][info ][gc             ] GC(36) Concurrent strong roots 0,147ms
[99,197s][info ][gc,start       ] GC(36) Concurrent evacuation
[99,197s][info ][gc,task        ] GC(36) Using 5 of 10 workers for concurrent evacuation
[99,245s][info ][gc             ] GC(36) Concurrent evacuation 47,732ms
[99,245s][info ][gc,start       ] GC(36) Pause Init Update Refs
[99,245s][info ][gc,ergo        ] GC(36) Pacer for Update Refs. Used: 2747M, Free: 9444M, Non-Taxable: 944M, Alloc Tax Rate: 1,1x
[99,245s][info ][gc             ] GC(36) Pause Init Update Refs 0,034ms
[99,245s][info ][gc,start       ] GC(36) Concurrent update references
[99,245s][info ][gc,task        ] GC(36) Using 5 of 10 workers for concurrent reference update
[99,280s][info ][gc             ] GC(36) Concurrent update references 35,575ms
[99,280s][info ][gc,start       ] GC(36) Concurrent update thread roots
[99,281s][info ][gc             ] GC(36) Concurrent update thread roots 0,882ms
[99,281s][info ][gc,start       ] GC(36) Pause Final Update Refs
[99,281s][info ][gc,task        ] GC(36) Using 10 of 10 workers for final reference update
[99,282s][info ][gc             ] GC(36) Pause Final Update Refs 0,163ms
[99,282s][info ][gc,start       ] GC(36) Concurrent cleanup
[99,282s][info ][gc             ] GC(36) Concurrent cleanup 2771M->768M(5156M) 0,104ms
[99,282s][debug][gc,ergo        ] GC(36) Available: 10904 MB, z-score=-0,514. Average available: 11060,7 MB +/- 304,9 MB.
[99,282s][info ][gc,ergo        ] Free: 10904M, Max: 4096K regular, 8400M humongous, Frag: 23% external, 0% internal; Reserve: 616M, Max: 4096K
[99,282s][info ][gc,stats       ] 
[99,282s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[99,282s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[99,282s][info ][gc,stats       ] 
[99,282s][info ][gc,stats       ] Concurrent Reset                   3732 us
[99,282s][info ][gc,stats       ] Pause Init Mark (G)                 322 us
[99,282s][info ][gc,stats       ] Pause Init Mark (N)                 189 us
[99,282s][info ][gc,stats       ]   Update Region States              108 us
[99,282s][info ][gc,stats       ] Concurrent Mark Roots               865 us, parallelism: 2,05x
[99,282s][info ][gc,stats       ]   CMR: <total>                     1774 us
[99,282s][info ][gc,stats       ]   CMR: Thread Roots                1694 us, workers (us): 755, 263, 361, 314,   0, ---, ---, ---, ---, ---, 
[99,282s][info ][gc,stats       ]   CMR: VM Strong Roots               10 us, workers (us):   3,   3,   4,   0,   0, ---, ---, ---, ---, ---, 
[99,282s][info ][gc,stats       ]   CMR: CLDG Roots                    70 us, workers (us): ---,  62, ---,   9, ---, ---, ---, ---, ---, ---, 
[99,282s][info ][gc,stats       ] Concurrent Marking                57308 us
[99,282s][info ][gc,stats       ] Pause Final Mark (G)                604 us
[99,282s][info ][gc,stats       ] Pause Final Mark (N)                548 us
[99,282s][info ][gc,stats       ]   Finish Mark                       262 us
[99,282s][info ][gc,stats       ]   Update Region States              111 us
[99,282s][info ][gc,stats       ]   Choose Collection Set             106 us
[99,282s][info ][gc,stats       ]   Rebuild Free Set                   12 us
[99,282s][info ][gc,stats       ] Concurrent Thread Roots             576 us, parallelism: 2,34x
[99,282s][info ][gc,stats       ]   CTR: <total>                     1345 us
[99,282s][info ][gc,stats       ]   CTR: Thread Roots                1345 us, workers (us): 488, 234, 214, 208, 201, ---, ---, ---, ---, ---, 
[99,282s][info ][gc,stats       ] Concurrent Weak References         1207 us, parallelism: 1,64x
[99,282s][info ][gc,stats       ]   CWRF: <total>                    1978 us
[99,282s][info ][gc,stats       ]   CWRF: Weak References            1978 us, workers (us): 996, 270, 319, 390,   3, ---, ---, ---, ---, ---, 
[99,282s][info ][gc,stats       ] Concurrent Weak Roots               755 us
[99,282s][info ][gc,stats       ]   Roots                             585 us, parallelism: 4,00x
[99,282s][info ][gc,stats       ]     CWR: <total>                   2337 us
[99,282s][info ][gc,stats       ]     CWR: Code Cache Roots          1317 us, workers (us): 269, 260, 268, 240, 280, ---, ---, ---, ---, ---, 
[99,282s][info ][gc,stats       ]     CWR: VM Weak Roots             1010 us, workers (us): 239, 239, 238, 182, 110, ---, ---, ---, ---, ---, 
[99,282s][info ][gc,stats       ]     CWR: CLDG Roots                  11 us, workers (us):   7, ---, ---,   4, ---, ---, ---, ---, ---, ---, 
[99,282s][info ][gc,stats       ]   Rendezvous                        107 us
[99,282s][info ][gc,stats       ] Concurrent Cleanup                   94 us
[99,282s][info ][gc,stats       ] Concurrent Class Unloading         1056 us
[99,282s][info ][gc,stats       ]   Unlink Stale                      941 us
[99,282s][info ][gc,stats       ]     System Dictionary                35 us
[99,282s][info ][gc,stats       ]     Weak Class Links                  0 us
[99,282s][info ][gc,stats       ]     Code Roots                      904 us
[99,282s][info ][gc,stats       ]   Rendezvous                         79 us
[99,282s][info ][gc,stats       ]   Purge Unlinked                      2 us
[99,282s][info ][gc,stats       ]     Code Roots                        0 us
[99,282s][info ][gc,stats       ]     CLDG                              2 us
[99,282s][info ][gc,stats       ]     Exception Caches                  0 us
[99,282s][info ][gc,stats       ] Concurrent Strong Roots             159 us, parallelism: 1,23x
[99,282s][info ][gc,stats       ]   CSR: <total>                      195 us
[99,282s][info ][gc,stats       ]   CSR: VM Strong Roots               11 us, workers (us):  10,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[99,282s][info ][gc,stats       ]   CSR: CLDG Roots                   184 us, workers (us): 101,  83, ---, ---, ---, ---, ---, ---, ---, ---, 
[99,282s][info ][gc,stats       ] Concurrent Evacuation             47783 us
[99,282s][info ][gc,stats       ] Pause Init Update Refs (G)          139 us
[99,282s][info ][gc,stats       ] Pause Init Update Refs (N)           46 us
[99,282s][info ][gc,stats       ]   Manage GCLABs                       3 us
[99,282s][info ][gc,stats       ] Concurrent Update Refs            35624 us
[99,282s][info ][gc,stats       ] Concurrent Update Thread Roots      907 us
[99,282s][info ][gc,stats       ] Pause Final Update Refs (G)         378 us
[99,282s][info ][gc,stats       ] Pause Final Update Refs (N)         184 us
[99,282s][info ][gc,stats       ]   Update Region States              110 us
[99,282s][info ][gc,stats       ]   Trash Collection Set                5 us
[99,282s][info ][gc,stats       ]   Rebuild Free Set                   15 us
[99,282s][info ][gc,stats       ] Concurrent Cleanup                  117 us
[99,282s][info ][gc,stats       ] 
[99,282s][info ][gc,stats       ] Allocation pacing accrued:
[99,282s][info ][gc,stats       ]       0 of  1387 ms (  0,0%): <total>
[99,282s][info ][gc,stats       ]       0 of  1387 ms (  0,0%): <average total>
[99,282s][info ][gc,stats       ] 
[99,282s][info ][gc,metaspace   ] Metaspace: 19927K(20352K)->19927K(20352K) NonClass: 17500K(17664K)->17500K(17664K) Class: 2426K(2688K)->2426K(2688K)
[99,282s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[99,891s][debug][gc,nmethod     ] Register NMethod: java.lang.Integer.equals [0x00007fae5d1ce090] (c1)
[102,872s][debug][gc,nmethod     ] Register NMethod: io.brackit.query.atomic.AbstractAtomic.atomicCmp [0x00007fae7cc02210] (c2)
[104,662s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.SerializationType$1.deserializeBitmapReferencesPage [0x00007fae7cc02e10] (c2)
[105,904s][info ][gc             ] Trigger: Free (1228M) is below minimum threshold (1228M)
[105,904s][info ][gc,ergo        ] Free: 1228M, Max: 4096K regular, 1228M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[105,905s][info ][gc,start       ] GC(37) Concurrent reset
[105,905s][info ][gc,task        ] GC(37) Using 5 of 10 workers for concurrent reset
[105,905s][info ][gc,ergo        ] GC(37) Pacer for Reset. Non-Taxable: 12288M
[105,909s][info ][gc             ] GC(37) Concurrent reset 4,235ms
[105,909s][info ][gc,start       ] GC(37) Pause Init Mark (unload classes)
[105,909s][info ][gc,task        ] GC(37) Using 10 of 10 workers for init marking
[105,909s][info ][gc,ergo        ] GC(37) Pacer for Mark. Expected Live: 426M, Free: 1224M, Non-Taxable: 122M, Alloc Tax Rate: 0,4x
[105,909s][info ][gc             ] GC(37) Pause Init Mark (unload classes) 0,116ms
[105,909s][info ][gc,start       ] GC(37) Concurrent marking roots
[105,909s][info ][gc,task        ] GC(37) Using 5 of 10 workers for concurrent marking roots
[105,909s][debug][gc,tlab        ] GC(37) TLAB totals: thrds: 25  refills: 1421 max: 1366 slow allocs: 45 max 39 waste:  0,9% gc: 46890792B max: 4194248B slow: 2797344B max: 2550048B
[105,910s][info ][gc             ] GC(37) Concurrent marking roots 0,619ms
[105,910s][info ][gc,start       ] GC(37) Concurrent marking (unload classes)
[105,910s][info ][gc,task        ] GC(37) Using 5 of 10 workers for concurrent marking
[105,934s][info ][gc             ] GC(37) Concurrent marking (unload classes) 23,662ms
[105,934s][info ][gc,start       ] GC(37) Pause Final Mark (unload classes)
[105,934s][info ][gc,task        ] GC(37) Using 10 of 10 workers for final marking
[105,934s][info ][gc,ergo        ] GC(37) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 7108M, Max CSet: 512M, Min Garbage: 0B
[105,934s][info ][gc,ergo        ] GC(37) Collectable Garbage: 10192M (99%), Immediate: 5288M (51%), CSet: 4904M (48%)
[105,934s][info ][gc,ergo        ] GC(37) Pacer for Evacuation. Used CSet: 5151M, Free: 6492M, Non-Taxable: 649M, Alloc Tax Rate: 1,9x
[105,934s][info ][gc             ] GC(37) Pause Final Mark (unload classes) 0,622ms
[105,934s][info ][gc,start       ] GC(37) Concurrent thread roots
[105,934s][info ][gc,task        ] GC(37) Using 5 of 10 workers for Concurrent thread roots
[105,937s][info ][gc             ] GC(37) Concurrent thread roots 2,204ms
[105,937s][info ][gc,start       ] GC(37) Concurrent weak references
[105,937s][info ][gc,task        ] GC(37) Using 5 of 10 workers for concurrent weak references
[105,940s][info ][gc,ref         ] GC(37) Encountered references: Soft: 2320, Weak: 1840, Final: 17154, Phantom: 17001
[105,940s][info ][gc,ref         ] GC(37) Discovered  references: Soft: 0, Weak: 359, Final: 17154, Phantom: 17577
[105,940s][info ][gc,ref         ] GC(37) Enqueued    references: Soft: 0, Weak: 0, Final: 17154, Phantom: 17200
[105,940s][info ][gc             ] GC(37) Concurrent weak references 3,184ms
[105,940s][info ][gc,start       ] GC(37) Concurrent weak roots
[105,940s][info ][gc,task        ] GC(37) Using 5 of 10 workers for concurrent weak root
[105,940s][info ][gc             ] GC(37) Concurrent weak roots 0,643ms
[105,941s][info ][gc,start       ] GC(37) Concurrent cleanup
[105,941s][info ][gc             ] GC(37) Concurrent cleanup 10474M->5186M(10552M) 0,197ms
[105,941s][info ][gc,ergo        ] GC(37) Free: 6488M, Max: 4096K regular, 1676M humongous, Frag: 75% external, 0% internal; Reserve: 612M, Max: 4096K
[105,941s][info ][gc,start       ] GC(37) Concurrent class unloading
[105,941s][info ][gc,task        ] GC(37) Using 5 of 10 workers for concurrent class unloading
[105,941s][debug][gc,phases,start] GC(37) ClassLoaderData
[105,941s][debug][gc,phases      ] GC(37) ClassLoaderData 0,010ms
[105,941s][debug][gc,phases,start] GC(37) Trigger cleanups
[105,941s][debug][gc,phases      ] GC(37) Trigger cleanups 0,004ms
[105,942s][debug][gc,nmethod     ] GC(37) Unregister NMethod: sun.nio.ch.IOUtil.read [0x00007fae7cbe0f90]
[105,942s][debug][gc,nmethod     ] GC(37) Unregister NMethod: io.sirix.index.path.summary.PathSummaryReader.moveToFirstChild [0x00007fae5d5a9190]
[105,942s][debug][gc,nmethod     ] GC(37) Unregister NMethod: io.brackit.query.atomic.AbstractAtomic.atomicCmp [0x00007fae5d775210]
[105,942s][info ][gc             ] GC(37) Concurrent class unloading 1,100ms
[105,942s][info ][gc,start       ] GC(37) Concurrent strong roots
[105,942s][info ][gc,task        ] GC(37) Using 5 of 10 workers for concurrent strong root
[105,942s][info ][gc             ] GC(37) Concurrent strong roots 0,217ms
[105,942s][info ][gc,start       ] GC(37) Concurrent evacuation
[105,942s][info ][gc,task        ] GC(37) Using 5 of 10 workers for concurrent evacuation
[105,970s][info ][gc             ] GC(37) Concurrent evacuation 28,270ms
[105,970s][info ][gc,start       ] GC(37) Pause Init Update Refs
[105,971s][info ][gc,ergo        ] GC(37) Pacer for Update Refs. Used: 5459M, Free: 6468M, Non-Taxable: 646M, Alloc Tax Rate: 1,1x
[105,971s][info ][gc             ] GC(37) Pause Init Update Refs 0,045ms
[105,971s][info ][gc,start       ] GC(37) Concurrent update references
[105,971s][info ][gc,task        ] GC(37) Using 5 of 10 workers for concurrent reference update
[105,993s][info ][gc             ] GC(37) Concurrent update references 22,292ms
[105,993s][info ][gc,start       ] GC(37) Concurrent update thread roots
[105,994s][info ][gc             ] GC(37) Concurrent update thread roots 1,026ms
[105,994s][info ][gc,start       ] GC(37) Pause Final Update Refs
[105,994s][info ][gc,task        ] GC(37) Using 10 of 10 workers for final reference update
[105,994s][info ][gc             ] GC(37) Pause Final Update Refs 0,114ms
[105,994s][info ][gc,start       ] GC(37) Concurrent cleanup
[105,994s][info ][gc             ] GC(37) Concurrent cleanup 5475M->324M(10552M) 0,227ms
[105,994s][debug][gc,ergo        ] GC(37) Available: 11348 MB, z-score=1,051. Average available: 11046,3 MB +/- 287,1 MB.
[105,994s][info ][gc,ergo        ] Free: 11348M, Max: 4096K regular, 9884M humongous, Frag: 13% external, 0% internal; Reserve: 616M, Max: 4096K
[105,995s][info ][gc,stats       ] 
[105,995s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[105,995s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[105,995s][info ][gc,stats       ] 
[105,995s][info ][gc,stats       ] Concurrent Reset                   4281 us
[105,995s][info ][gc,stats       ] Pause Init Mark (G)                 573 us
[105,995s][info ][gc,stats       ] Pause Init Mark (N)                 128 us
[105,995s][info ][gc,stats       ]   Update Region States               64 us
[105,995s][info ][gc,stats       ] Concurrent Mark Roots               638 us, parallelism: 2,22x
[105,995s][info ][gc,stats       ]   CMR: <total>                     1416 us
[105,995s][info ][gc,stats       ]   CMR: Thread Roots                1352 us, workers (us): 501, 199, 232, 221, 199, ---, ---, ---, ---, ---, 
[105,995s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   3,   4,   0,   0,   0, ---, ---, ---, ---, ---, 
[105,995s][info ][gc,stats       ]   CMR: CLDG Roots                    57 us, workers (us):   5,  52, ---, ---, ---, ---, ---, ---, ---, ---, 
[105,995s][info ][gc,stats       ] Concurrent Marking                23697 us
[105,995s][info ][gc,stats       ] Pause Final Mark (G)                711 us
[105,995s][info ][gc,stats       ] Pause Final Mark (N)                635 us
[105,995s][info ][gc,stats       ]   Finish Mark                       254 us
[105,995s][info ][gc,stats       ]   Update Region States              105 us
[105,995s][info ][gc,stats       ]   Choose Collection Set             198 us
[105,995s][info ][gc,stats       ]   Rebuild Free Set                   13 us
[105,995s][info ][gc,stats       ] Concurrent Thread Roots            2219 us, parallelism: 3,63x
[105,995s][info ][gc,stats       ]   CTR: <total>                     8046 us
[105,995s][info ][gc,stats       ]   CTR: Thread Roots                8046 us, workers (us): 2175, 1165, 1106, 1819, 1780, ---, ---, ---, ---, ---, 
[105,995s][info ][gc,stats       ] Concurrent Weak References         3192 us, parallelism: 1,99x
[105,995s][info ][gc,stats       ]   CWRF: <total>                    6367 us
[105,995s][info ][gc,stats       ]   CWRF: Weak References            6367 us, workers (us): 1337, 3078, 1061,   2, 890, ---, ---, ---, ---, ---, 
[105,995s][info ][gc,stats       ] Concurrent Weak Roots               676 us
[105,995s][info ][gc,stats       ]   Roots                             562 us, parallelism: 3,90x
[105,995s][info ][gc,stats       ]     CWR: <total>                   2191 us
[105,995s][info ][gc,stats       ]     CWR: Code Cache Roots          1210 us, workers (us): 229, 286, 237, 245, 212, ---, ---, ---, ---, ---, 
[105,995s][info ][gc,stats       ]     CWR: VM Weak Roots              968 us, workers (us): 237, 235, 191, 179, 127, ---, ---, ---, ---, ---, 
[105,995s][info ][gc,stats       ]     CWR: CLDG Roots                  13 us, workers (us):   6, ---, ---, ---,   7, ---, ---, ---, ---, ---, 
[105,995s][info ][gc,stats       ]   Rendezvous                         67 us
[105,995s][info ][gc,stats       ] Concurrent Cleanup                  206 us
[105,995s][info ][gc,stats       ] Concurrent Class Unloading         1109 us
[105,995s][info ][gc,stats       ]   Unlink Stale                      938 us
[105,995s][info ][gc,stats       ]     System Dictionary                25 us
[105,995s][info ][gc,stats       ]     Weak Class Links                  0 us
[105,995s][info ][gc,stats       ]     Code Roots                      913 us
[105,995s][info ][gc,stats       ]   Rendezvous                         96 us
[105,995s][info ][gc,stats       ]   Purge Unlinked                     54 us
[105,995s][info ][gc,stats       ]     Code Roots                       51 us
[105,995s][info ][gc,stats       ]     CLDG                              3 us
[105,995s][info ][gc,stats       ]     Exception Caches                  0 us
[105,995s][info ][gc,stats       ] Concurrent Strong Roots             225 us, parallelism: 1,09x
[105,995s][info ][gc,stats       ]   CSR: <total>                      244 us
[105,995s][info ][gc,stats       ]   CSR: VM Strong Roots               13 us, workers (us):   5,   5,   2,   0,   0, ---, ---, ---, ---, ---, 
[105,995s][info ][gc,stats       ]   CSR: CLDG Roots                   232 us, workers (us): 136, ---,  95, ---, ---, ---, ---, ---, ---, ---, 
[105,995s][info ][gc,stats       ] Concurrent Evacuation             28318 us
[105,995s][info ][gc,stats       ] Pause Init Update Refs (G)          157 us
[105,995s][info ][gc,stats       ] Pause Init Update Refs (N)           58 us
[105,995s][info ][gc,stats       ]   Manage GCLABs                       4 us
[105,995s][info ][gc,stats       ] Concurrent Update Refs            22345 us
[105,995s][info ][gc,stats       ] Concurrent Update Thread Roots     1049 us
[105,995s][info ][gc,stats       ] Pause Final Update Refs (G)         274 us
[105,995s][info ][gc,stats       ] Pause Final Update Refs (N)         129 us
[105,995s][info ][gc,stats       ]   Update Region States               31 us
[105,995s][info ][gc,stats       ]   Trash Collection Set               33 us
[105,995s][info ][gc,stats       ]   Rebuild Free Set                   15 us
[105,995s][info ][gc,stats       ] Concurrent Cleanup                  240 us
[105,995s][info ][gc,stats       ] 
[105,995s][info ][gc,stats       ] Allocation pacing accrued:
[105,995s][info ][gc,stats       ]       0 of  6713 ms (  0,0%): <total>
[105,995s][info ][gc,stats       ]       0 of  6713 ms (  0,0%): <average total>
[105,995s][info ][gc,stats       ] 
[105,995s][info ][gc,metaspace   ] Metaspace: 19927K(20352K)->19927K(20352K) NonClass: 17501K(17664K)->17501K(17664K) Class: 2426K(2688K)->2426K(2688K)
[105,995s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[106,293s][debug][gc,nmethod     ] Register NMethod: java.util.Arrays.sort [0x00007fae7cbe4510] (c2)
[106,958s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.appendUtf8Char [0x00007fae7cbe3310] (c2)
[106,960s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.IOUtil.read [0x00007fae5d5a9490] (c1)
[106,961s][debug][gc,nmethod     ] Register NMethod: java.io.FilterInputStream.close [0x00007fae7cbe2f90] (c2)
[107,685s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.bytepipe.ByteHandlerPipeline.deserialize [0x00007fae7cc05410] (c2)
[107,686s][debug][gc,nmethod     ] Register NMethod: java.nio.DirectByteBuffer.getInt [0x00007fae7cbe2b90] (c2)
[109,356s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.delegates.FullReferencesPage.getOrCreateReference [0x00007fae7cbe2510] (c2)
[109,730s][debug][gc,nmethod     ] Register NMethod: java.io.InputStream.readNBytes [0x00007fae7cc07790] (c2)
[109,730s][debug][gc,nmethod     ] Register NMethod: java.io.InputStream.readAllBytes [0x00007fae7cbe2190] (c2)
[110,702s][debug][gc,nmethod     ] Register NMethod: java.util.BitSet.size [0x00007fae7cbe1e90] (c2)
[110,943s][debug][gc,nmethod     ] Register NMethod: jdk.internal.loader.Resource.getBytes [0x00007fae5d1cbe10] (c1)
[110,945s][debug][gc,nmethod     ] Register NMethod: java.util.zip.ZipEntry.getName [0x00007fae7cbe1b90] (c1)
[110,949s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodType.isAllObject [0x00007fae5d775690] (c1)
[110,950s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7cbe1610] ()
[110,950s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7cbe1310] ()
[110,950s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodTypeForm.findForm [0x00007fae5d1cb890] (c1)
[110,950s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cbe0f90] ()
[110,950s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7cc09710] ()
[110,950s][debug][gc,nmethod     ] Register NMethod: jdk.internal.org.objectweb.asm.ByteVector.put122 [0x00007fae7cc09c90] (c2)
[110,950s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$Name.replaceNames [0x00007fae5d51d110] (c1)
[110,950s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7cc0a210] ()
[110,950s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7cc0a790] ()
[110,951s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm.methodType [0x00007fae5d1cab10] (c1)
[110,951s][debug][gc,nmethod     ] Register NMethod: java.util.Arrays.copyOf [0x00007fae7cc0aa90] (c2)
[110,952s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodType.<init> [0x00007fae7cc0b090] (c2)
[110,952s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.RevisionRootPage.getNamePageReference [0x00007fae7cc0b390] (c2)
[110,953s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cc0b710] ()
[110,953s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7cc0ba10] ()
[110,953s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7cc0bf90] ()
[110,953s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7cc0c290] ()
[110,953s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7cc0c810] ()
[110,953s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cc0cb10] ()
[110,953s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7cc0ce10] ()
[110,953s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7cc0d390] ()
[110,953s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7cc0d690] ()
[110,953s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodType.makeImpl [0x00007fae5d51bc10] (c1)
[110,953s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7cc0dc10] ()
[110,954s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodType.methodType [0x00007fae5d51b310] (c1)
[110,954s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$Name.internArguments [0x00007fae5d51a790] (c1)
[110,954s][debug][gc,nmethod     ] Register NMethod: java.lang.StringBuffer.length [0x00007fae7cc0df10] (c1)
[110,955s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.initOffsets [0x00007fae5d519810] (c1)
[110,955s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.ReentrantLock$NonfairSync.<init> [0x00007fae5d519290] (c1)
[110,955s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.ReentrantLock$Sync.<init> [0x00007fae5d518d90] (c1)
[110,956s][debug][gc,nmethod     ] Register NMethod: java.util.Calendar.internalSet [0x00007fae5d518990] (c1)
[110,956s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cc0e290] ()
[110,956s][debug][gc,nmethod     ] Register NMethod: ch.qos.logback.core.pattern.Converter.getNext [0x00007fae7cc0e590] (c1)
[110,957s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.copyMemoryChecks [0x00007fae7cc0e890] (c2)
[110,957s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7cc0f090] ()
[110,958s][debug][gc,nmethod     ] Register NMethod: jdk.internal.org.objectweb.asm.AnnotationWriter.putAnnotations [0x00007fae5d68a590] (c1)
[110,958s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.DirectMethodHandle$Holder.invokeStatic [0x00007fae5d689d10] (c1)
[110,958s][debug][gc,nmethod     ] Register NMethod: java.lang.ref.SoftReference.get [0x00007fae5d775210] (c1)
[110,958s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToVirtual [0x00007fae7cc0f390] ()
[110,958s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandleNatives.refKindIsGetter [0x00007fae5d6e2810] (c1)
[110,958s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cc0f690] ()
[110,958s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cc0f990] ()
[110,959s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cc0fc90] ()
[110,959s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cc0ff90] ()
[110,959s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cc10290] ()
[110,959s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cc10590] ()
[110,959s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToStatic [0x00007fae7cc10890] ()
[110,959s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodTypeForm.<init> [0x00007fae5d687d10] (c1)
[110,960s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.ClassSpecializer$SpeciesData.getterFunction [0x00007fae5d687710] (c1)
[110,960s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.CDS.isDumpingClassList [0x00007fae5d4cf910] (c1)
[110,960s][debug][gc,nmethod     ] Register NMethod: jdk.internal.org.objectweb.asm.Type.getType [0x00007fae5d687190] (c1)
[110,960s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.isMostRecentlyReadPage [0x00007fae5d686b10] (c1)
[110,960s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.add [0x00007fae5d686490] (c1)
[110,961s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.read [0x00007fae5d685490] (c1)
[110,961s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.DescendantAxis.nextKey [0x00007fae5d108010] (c1)
[110,961s][debug][gc,nmethod     ] Register NMethod: java.lang.ThreadLocal$ThreadLocalMap.<init> [0x00007fae7cc10b90] (c2)
[110,962s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.hasFirstChild [0x00007fae5d107410] (c1)
[110,962s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.hasRightSibling [0x00007fae5d106810] (c1)
[110,962s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.AbstractAxis.getStartKey [0x00007fae7cc11910] (c1)
[110,962s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getFirstChildKey [0x00007fae5d105c10] (c1)
[110,962s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.read [0x00007fae5d105190] (c1)
[110,962s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$22.deserialize [0x00007fae5d104090] (c1)
[110,963s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.json.ObjectKeyNode.<init> [0x00007fae5d27ca10] (c1)
[110,963s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$21.deserialize [0x00007fae5d27a090] (c1)
[110,963s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getRightSiblingKey [0x00007fae5d279490] (c1)
[110,963s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.DescendantAxis.hasNextNode [0x00007fae5d278b10] (c1)
[110,963s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getLeftSiblingKey [0x00007fae5d277f10] (c1)
[110,963s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getName [0x00007fae5d277790] (c1)
[110,963s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.json.ObjectNode.<init> [0x00007fae5d816b90] (c1)
[110,964s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$19.deserialize [0x00007fae5d815390] (c1)
[110,964s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.json.ObjectNumberNode.<init> [0x00007fae5d814d10] (c1)
[110,964s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveTo [0x00007fae7cc11c10] (c2)
[110,964s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind.deserializeStructNodeJsonValueNode [0x00007fae5d814210] (c1)
[110,965s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$26.deserialize [0x00007fae5d813290] (c1)
[110,965s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$29.deserialize [0x00007fae5d812a10] (c1)
[110,966s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.AbstractAxis.hasNext [0x00007fae7cc12690] (c2)
[110,967s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.isMostRecentlyReadPage [0x00007fae7cc13210] (c2)
[110,967s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$28.deserialize [0x00007fae5d5d0810] (c1)
[110,968s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.xml.AbstractStructForwardingNode.hasFirstChild [0x00007fae7cc13690] (c2)
[110,968s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue.soElement [0x00007fae5d811110] (c1)
[110,968s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$27.deserialize [0x00007fae5d5cfa90] (c1)
[110,968s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.scheduleDrainBuffers [0x00007fae5d510f10] (c1)
[110,974s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMSA.expiresAfterAccess [0x00007fae5d5cf690] (c1)
[110,976s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.AbstractAxis.nextLong [0x00007fae7cc13a10] (c2)
[110,977s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.copyMemory [0x00007fae5d5cdf90] (c1)
[110,982s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSAMS.setQueueType [0x00007fae7cc15790] (c1)
[110,983s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.put [0x00007fae5d5cda10] (c1)
[110,983s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSAMS.newNode [0x00007fae5d510a90] (c1)
[110,983s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSAMS.<init> [0x00007fae5d510690] (c1)
[110,983s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.AbstractBytes.read [0x00007fae7cc15a90] (c2)
[110,984s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.<init> [0x00007fae5d50fa90] (c1)
[110,984s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PS.isAlive [0x00007fae5d50ea90] (c1)
[110,984s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PS.<init> [0x00007fae5d1ecb10] (c1)
[110,985s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.AbstractAxis.tryToComputeNext [0x00007fae7cc17410] (c2)
[110,985s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.drainWriteBuffer [0x00007fae5d1eb910] (c1)
[110,985s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PS.<init> [0x00007fae5d1e9e90] (c1)
[110,985s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expireAfterCreate [0x00007fae5d1e9690] (c1)
[110,985s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.setVariableTime [0x00007fae5d1e9110] (c1)
[110,985s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$AddTask.<init> [0x00007fae5d1e8c90] (c1)
[110,986s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.afterWrite [0x00007fae5d64d190] (c1)
[110,986s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.AbstractAxis.resetToLastKey [0x00007fae7cc17910] (c2)
[110,986s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue.offer [0x00007fae5d64a690] (c1)
[110,987s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue.casProducerIndex [0x00007fae5d649990] (c1)
[110,987s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.scheduleAfterWrite [0x00007fae5d18e190] (c1)
[110,988s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap.get [0x00007fae7cc18090] (c2)
[110,988s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.delegates.NodeDelegate.<init> [0x00007fae7cc18810] (c2)
[110,989s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.put [0x00007fae5d635b90] (c1)
[110,989s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.ReentrantLock$Sync.tryLock [0x00007fae5d635190] (c1)
[110,989s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$PerformCleanupTask.exec [0x00007fae5d1e8190] (c1)
[110,989s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$PerformCleanupTask.run [0x00007fae5d649290] (c1)
[110,990s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.performCleanUp [0x00007fae5d647f10] (c1)
[110,990s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$AddTask.run [0x00007fae5d661810] (c1)
[110,990s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BBHeader$ReadAndWriteCounterRef.writeCounterOpaque [0x00007fae5d18d610] (c1)
[110,990s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.drainValueReferences [0x00007fae5d647990] (c1)
[110,990s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expireAfterWriteEntries [0x00007fae5d661210] (c1)
[110,990s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.drainReadBuffer [0x00007fae5d18cc10] (c1)
[110,990s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.Pacer.schedule [0x00007fae5d18c290] (c1)
[110,990s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.climb [0x00007fae5d18b810] (c1)
[110,990s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.determineAdjustment [0x00007fae5d189f10] (c1)
[110,993s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind.deserializeNodeDelegate [0x00007fae7cc18c10] (c2)
[110,995s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredderTest.testChicagoDescendantAxis [0x00007fae5d553690] (c1)
[110,996s][debug][gc,nmethod     ] Register NMethod: java.io.InputStream.readNBytes [0x00007fae5d766690] (c1)
[110,997s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredderTest.testChicagoDescendantAxis [0x00007fae5d6c3410] (c1)
[111,000s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.maintenance [0x00007fae5d59cb10] (c1)
[111,004s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.DescendantAxis.nextKey [0x00007fae7cc1a410] (c2)
[111,005s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.hasFirstChild [0x00007fae7cc1d310] (c2)
[111,006s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.hasRightSibling [0x00007fae7cc1d790] (c2)
[111,007s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind.deserializeStructNodeJsonValueNode [0x00007fae7cc1dc10] (c2)
[111,008s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae5d59ad10] (c1)
[111,008s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.hasTasks [0x00007fae5d189690] (c1)
[111,012s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expireAfterAccessEntries [0x00007fae5d765b10] (c1)
[111,012s][debug][gc,nmethod     ] Register NMethod: io.sirix.axis.DescendantAxis.hasNextNode [0x00007fae7cc1e110] (c2)
[111,013s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedBuffer$RingBuffer.drainTo [0x00007fae5d761f10] (c1)
[111,013s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getLeftSiblingKey [0x00007fae7cc1fa10] (c2)
[111,013s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.evictFromMain [0x00007fae5d167390] (c1)
[111,014s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getRightSiblingKey [0x00007fae7cc1fe90] (c2)
[111,014s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.json.NullNode.<init> [0x00007fae7cc20310] (c2)
[111,019s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$26.deserialize [0x00007fae7cc20610] (c2)
[111,024s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredderTest.testChicagoDescendantAxis [0x00007fae7cc21c10] (c2)
[111,025s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$29.deserialize [0x00007fae7cc23090] (c2)
[111,026s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.putIntRelease [0x00007fae7cc23710] (c2)
[111,026s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.delegates.StructNodeDelegate.hasFirstChild [0x00007fae7cc23a10] (c2)
[111,027s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.read [0x00007fae7cc23d10] (c2)
[111,032s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$28.deserialize [0x00007fae7cc24610] (c2)
[111,032s][debug][gc,nmethod     ] Register NMethod: net.openhft.chronicle.core.UnsafeMemory.readLong [0x00007fae7cc25a10] (c2)
[111,033s][debug][gc,nmethod     ] Register NMethod: io.brackit.query.atomic.QNm.<init> [0x00007fae7cc25d10] (c2)
[111,036s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$27.deserialize [0x00007fae7cc26110] (c2)
[111,038s][debug][gc,nmethod     ] Register NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.add [0x00007fae7cc26f90] (c2)
[111,039s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MemberName.getMethodType [0x00007fae7cc27690] (c2)
[111,041s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.IOUtil.readIntoNativeBuffer [0x00007fae7cc28110] (c2)
[111,041s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.UnixFileDispatcherImpl.pread [0x00007fae7cc28d10] (c2)
[111,045s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind.deserializeObjectOrArrayStructDelegate [0x00007fae7cc29010] (c2)
[111,051s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.MpscGrowableArrayQueue.getCurrentBufferCapacity [0x00007fae5d189290] (c1)
[111,051s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue.lvConsumerIndex [0x00007fae5d5b9c10] (c1)
[111,051s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue.casProducerLimit [0x00007fae5d5b8f10] (c1)
[111,051s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue.offerSlowPath [0x00007fae5d5b7e10] (c1)
[111,056s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.NodeKind$20.deserialize [0x00007fae7cc29910] (c2)
[111,057s][debug][gc,nmethod     ] Register NMethod: io.sirix.node.json.ArrayNode.<init> [0x00007fae7cc2bd90] (c2)
[111,069s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae7cc2c090] (c2)
[111,117s][debug][gc,nmethod     ] Register NMethod: io.sirix.io.filechannel.FileChannelReader.read [0x00007fae7cc2d910] (c2)
[111,117s][debug][gc,nmethod     ] Register NMethod: jdk.internal.misc.Unsafe.putLongRelease [0x00007fae7cc32990] (c2)
[111,120s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.setPreviousInAccessOrder [0x00007fae7cc32c90] (c2)
[111,124s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.getPreviousInAccessOrder [0x00007fae7cc33010] (c2)
[111,140s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.getAccessTime [0x00007fae7cc33310] (c2)
[111,147s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.incrementAt [0x00007fae5d59a590] (c1)
[111,148s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMSA.expiresVariable [0x00007fae7cc33610] (c2)
[111,160s][debug][gc,nmethod     ] Register NMethod: java.util.BitSet.valueOf [0x00007fae7cc33910] (c2)
[111,161s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.getNextInAccessOrder [0x00007fae7cc34690] (c2)
[111,165s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMS.hitsInSample [0x00007fae7cc34990] (c1)
[111,171s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PSA.setNextInAccessOrder [0x00007fae7cc34c90] (c2)
[111,193s][debug][gc,nmethod     ] Register NMethod: io.sirix.page.PageReference.hashCode [0x00007fae7cc35010] (c2)
[111,203s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expireAfterAccessEntries [0x00007fae7cc35a10] (c2)
[111,203s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.Caffeine.requireArgument [0x00007fae5d5b7990] (c1)
[111,204s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.ensureCapacity [0x00007fae5d5b6d90] (c1)
[111,207s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AccessOrderDeque.contains [0x00007fae7cc35f10] (c2)
[111,218s][debug][gc,nmethod     ] Register NMethod: io.sirix.BinaryEncodingVersion.values [0x00007fae7cc36290] (c2)
[111,260s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SystemTicker.read [0x00007fae7cc36610] (c2)
[111,270s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.submissionQueue [0x00007fae7cc36910] (c2)
[111,276s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7cc37610] ()
[111,277s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7cc37910] ()
[111,277s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.invokeBasic [0x00007fae7cc37c10] ()
[111,277s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.MethodHandle.linkToSpecial [0x00007fae7cc38190] ()
[111,278s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm.arguments [0x00007fae5d5b5d10] (c1)
[111,279s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PS.getValue [0x00007fae5d5b4e10] (c1)
[111,288s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.Node.getWeight [0x00007fae7cc38490] (c1)
[111,293s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.nextLocalTask [0x00007fae7cc38790] (c2)
[111,302s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.rehash [0x00007fae5d50e710] (c1)
[111,302s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.spread [0x00007fae5d73a890] (c1)
[111,304s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AbstractLinkedDeque.linkLast [0x00007fae7cc38d10] (c2)
[111,305s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinTask.getAndBitwiseOrStatus [0x00007fae7cc39390] (c2)
[111,314s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.frequency [0x00007fae5d5b4090] (c1)
[111,314s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AccessOrderDeque.remove [0x00007fae5d5b3810] (c1)
[111,314s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSL.hasRemovalListener [0x00007fae7cc39690] (c1)
[111,314s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSL.removalListener [0x00007fae7cc39990] (c1)
[111,314s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap.computeIfPresent [0x00007fae5d33de10] (c1)
[111,317s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleGuards.guard_LL_V [0x00007fae7cc39c90] (c2)
[111,318s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite.set [0x00007fae7cc3aa10] (c2)
[111,336s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue.poll [0x00007fae7cc3b090] (c2)
[111,351s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.Node.inMainProbation [0x00007fae5d5b3390] (c1)
[111,351s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.admit [0x00007fae5d33d590] (c1)
[111,351s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$MH/0x00007fadb42ab800.linkToTargetMethod [0x00007fae5d33ce10] (c1)
[111,351s][debug][gc,nmethod     ] Register NMethod: java.lang.invoke.LambdaForm$DMH/0x00007fadb42ab000.newInvokeSpecial [0x00007fae5d33c110] (c1)
[111,351s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$$Lambda/0x00007fadb42a6d28.<init> [0x00007fae5d5b2c90] (c1)
[111,352s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$$Lambda/0x00007fadb42a6d28.apply [0x00007fae5d33b890] (c1)
[111,352s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.evictEntry [0x00007fae5d14c990] (c1)
[111,353s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$evictEntry$2 [0x00007fae5d619510] (c1)
[111,353s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.notifyEviction [0x00007fae5d33b110] (c1)
[111,354s][debug][gc,nmethod     ] Register NMethod: java.util.ArrayList.isEmpty [0x00007fae7cc3b910] (c2)
[111,366s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.isSecondMostRecentlyReadPage [0x00007fae7cc3bc10] (c2)
[111,367s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.SSLMSA.expiresAfterAccess [0x00007fae7cc3c090] (c2)
[111,389s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.Node.inMainProtected [0x00007fae5d33ac90] (c1)
[111,389s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PS.isDead [0x00007fae5d339c90] (c1)
[111,390s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.PS.die [0x00007fae5d14b310] (c1)
[111,390s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.notifyRemoval [0x00007fae5d338a90] (c1)
[111,390s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$$Lambda/0x00007fadb42a6f60.<init> [0x00007fae5d14ae10] (c1)
[111,390s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.logIfAlive [0x00007fae5d148910] (c1)
[111,390s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$$Lambda/0x00007fadb42a6f60.run [0x00007fae5d618f90] (c1)
[111,390s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$notifyRemoval$1 [0x00007fae5d618790] (c1)
[111,390s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.RecordPageCache$$Lambda/0x00007fadb41b9de0.onRemoval [0x00007fae5d618110] (c1)
[111,390s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.RecordPageCache.lambda$new$0 [0x00007fae5d617d90] (c1)
[111,391s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.makeDead [0x00007fae5d672810] (c1)
[111,461s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.execute [0x00007fae7cc3c390] (c2)
[111,466s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.tryPoll [0x00007fae7cc3dd10] (c2)
[111,501s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.LocalManualCache.getIfPresent [0x00007fae7cc3e290] (c2)
[111,508s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae5d616d90] (c1)
[111,509s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.incrementAt [0x00007fae7cc3f990] (c2)
[111,541s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.AbstractLinkedDeque.unlink [0x00007fae7cc3fd90] (c2)
[111,549s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae7cc40610] (c2)
[111,571s][debug][gc,nmethod     ] Register NMethod: java.lang.Float.isNaN [0x00007fae7cc41c90] (c2)
[111,591s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.increment [0x00007fae7cc41f90] (c2)
[111,661s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.IOUtil.read [0x00007fae7cc43310] (c2)
[111,712s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.scheduleDrainBuffers [0x00007fae7cc47390] (c2)
[111,746s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.LocalManualCache.put [0x00007fae7cc48190] (c2)
[111,750s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.StripedBuffer.drainTo [0x00007fae7cc48710] (c2)
[111,752s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae5d614f90] (c1)
[111,752s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.rescheduleCleanUpIfIncomplete [0x00007fae7cc48d90] (c2)
[111,756s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.getExpirationDelay [0x00007fae7cc49810] (c2)
[111,787s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.maintenance [0x00007fae7cc4a810] (c2)
[111,804s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.put [0x00007fae7cc4eb90] (c2)
[111,815s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae7cc51e10] (c2)
[111,822s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.frequency [0x00007fae7cc53610] (c2)
[111,883s][info ][gc             ] Trigger: Free (1228M) is below minimum threshold (1228M)
[111,883s][info ][gc,ergo        ] Free: 1228M, Max: 4096K regular, 1228M humongous, Frag: 0% external, 0% internal; Reserve: 616M, Max: 4096K
[111,883s][info ][gc,start       ] GC(38) Concurrent reset
[111,883s][info ][gc,task        ] GC(38) Using 5 of 10 workers for concurrent reset
[111,883s][info ][gc,ergo        ] GC(38) Pacer for Reset. Non-Taxable: 12288M
[111,888s][info ][gc             ] GC(38) Concurrent reset 4,504ms
[111,888s][info ][gc,start       ] GC(38) Pause Init Mark (unload classes)
[111,888s][info ][gc,task        ] GC(38) Using 10 of 10 workers for init marking
[111,888s][info ][gc,ergo        ] GC(38) Pacer for Mark. Expected Live: 367M, Free: 1224M, Non-Taxable: 122M, Alloc Tax Rate: 0,4x
[111,888s][info ][gc             ] GC(38) Pause Init Mark (unload classes) 0,172ms
[111,888s][info ][gc,start       ] GC(38) Concurrent marking roots
[111,888s][info ][gc,task        ] GC(38) Using 5 of 10 workers for concurrent marking roots
[111,888s][debug][gc,tlab        ] GC(38) TLAB totals: thrds: 2  refills: 1657 max: 1549 slow allocs: 2 max 2 waste:  0,2% gc: 5668272B max: 3020872B slow: 6294032B max: 4430872B
[111,889s][info ][gc             ] GC(38) Concurrent marking roots 0,451ms
[111,889s][info ][gc,start       ] GC(38) Concurrent marking (unload classes)
[111,889s][info ][gc,task        ] GC(38) Using 5 of 10 workers for concurrent marking
[111,927s][info ][gc             ] GC(38) Concurrent marking (unload classes) 37,816ms
[111,927s][info ][gc,start       ] GC(38) Pause Final Mark (unload classes)
[111,927s][info ][gc,task        ] GC(38) Using 10 of 10 workers for final marking
[111,927s][info ][gc,ergo        ] GC(38) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 6332M, Max CSet: 512M, Min Garbage: 0B
[111,927s][info ][gc,ergo        ] GC(38) Collectable Garbage: 10099M (99%), Immediate: 4548M (45%), CSet: 5551M (54%)
[111,927s][info ][gc,ergo        ] GC(38) Pacer for Evacuation. Used CSet: 5892M, Free: 5716M, Non-Taxable: 571M, Alloc Tax Rate: 2,5x
[111,927s][info ][gc             ] GC(38) Pause Final Mark (unload classes) 0,372ms
[111,927s][info ][gc,start       ] GC(38) Concurrent thread roots
[111,927s][info ][gc,task        ] GC(38) Using 5 of 10 workers for Concurrent thread roots
[111,929s][info ][gc             ] GC(38) Concurrent thread roots 2,109ms
[111,929s][info ][gc,start       ] GC(38) Concurrent weak references
[111,929s][info ][gc,task        ] GC(38) Using 5 of 10 workers for concurrent weak references
[111,936s][info ][gc,ref         ] GC(38) Encountered references: Soft: 2403, Weak: 2030, Final: 19293, Phantom: 19082
[111,936s][info ][gc,ref         ] GC(38) Discovered  references: Soft: 0, Weak: 1290, Final: 19293, Phantom: 19661
[111,936s][info ][gc,ref         ] GC(38) Enqueued    references: Soft: 0, Weak: 42, Final: 19293, Phantom: 19354
[111,936s][info ][gc             ] GC(38) Concurrent weak references 6,833ms
[111,936s][info ][gc,start       ] GC(38) Concurrent weak roots
[111,936s][info ][gc,task        ] GC(38) Using 5 of 10 workers for concurrent weak root
[111,939s][info ][gc             ] GC(38) Concurrent weak roots 2,813ms
[111,939s][info ][gc,start       ] GC(38) Concurrent cleanup
[111,939s][info ][gc             ] GC(38) Concurrent cleanup 10528M->5980M(10860M) 0,127ms
[111,939s][info ][gc,ergo        ] GC(38) Free: 5696M, Max: 4096K regular, 1384M humongous, Frag: 76% external, 0% internal; Reserve: 612M, Max: 4096K
[111,939s][info ][gc,start       ] GC(38) Concurrent class unloading
[111,939s][info ][gc,task        ] GC(38) Using 5 of 10 workers for concurrent class unloading
[111,939s][debug][gc,phases,start] GC(38) ClassLoaderData
[111,939s][debug][gc,phases      ] GC(38) ClassLoaderData 0,015ms
[111,939s][debug][gc,phases,start] GC(38) Trigger cleanups
[111,939s][debug][gc,phases      ] GC(38) Trigger cleanups 0,007ms
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae5d614f90]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae5d616d90]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.frequency [0x00007fae5d5b4090]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.incrementAt [0x00007fae5d59a590]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae5d59ad10]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.maintenance [0x00007fae5d59cb10]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.increment [0x00007fae5d6b0810]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.PSA.getNextInAccessOrder [0x00007fae5d701890]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.AbstractLinkedDeque.unlink [0x00007fae5d504610]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.io.InputStream.readNBytes [0x00007fae7cc07790]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: sun.nio.ch.IOUtil.read [0x00007fae5d5a9490]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.getExpirationDelay [0x00007fae5d1ce710]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.service.json.shredder.JsonShredderTest.testChicagoDescendantAxis [0x00007fae5d553690]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: jdk.internal.misc.Unsafe.putIntRelease [0x00007fae5d2cf190]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: jdk.internal.misc.Unsafe.putLongRelease [0x00007fae5d6d1790]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.rescheduleCleanUpIfIncomplete [0x00007fae5d657510]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.SSLMSA.expiresVariable [0x00007fae5d750e10]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.StripedBuffer.drainTo [0x00007fae5d11cd10]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.put [0x00007fae5d635b90]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.LocalManualCache.put [0x00007fae5d11de10]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.HashMap.clear [0x00007fae7cb8e190]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.tryPoll [0x00007fae5d349090]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.PSA.getAccessTime [0x00007fae5d145e90]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.SystemTicker.read [0x00007fae5d2e6310]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.concurrent.ForkJoinPool.execute [0x00007fae5d0c6390]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.nio.DirectByteBuffer.getInt [0x00007fae5d789610]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.BinaryEncodingVersion.values [0x00007fae5d331310]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.SSLMSA.expiresAfterAccess [0x00007fae5d5cf690]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.io.bytepipe.ByteHandlerPipeline.deserialize [0x00007fae5d0f1f10]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.scheduleDrainBuffers [0x00007fae5d510f10]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.node.NodeKind$27.deserialize [0x00007fae5d5cfa90]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.node.delegates.NodeDelegate.<init> [0x00007fae5d1f6d90]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.page.delegates.FullReferencesPage.getOrCreateReference [0x00007fae5d7fa810]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.node.NodeKind$28.deserialize [0x00007fae5d5d0810]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.node.NodeKind$29.deserialize [0x00007fae5d812a10]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.node.NodeKind$26.deserialize [0x00007fae5d813290]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.node.NodeKind.deserializeStructNodeJsonValueNode [0x00007fae5d814210]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.concurrent.ForkJoinPool$WorkQueue.nextLocalTask [0x00007fae7cbed110]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getLeftSiblingKey [0x00007fae5d277f10]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.axis.DescendantAxis.hasNextNode [0x00007fae5d278b10]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.getRightSiblingKey [0x00007fae5d279490]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.PSA.setPreviousInAccessOrder [0x00007fae5d7db990]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.isSecondMostRecentlyReadPage [0x00007fae5d592910]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: net.openhft.chronicle.bytes.internal.NativeBytesStore.read [0x00007fae5d105190]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.hasRightSibling [0x00007fae5d106810]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.hasFirstChild [0x00007fae5d107410]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.axis.DescendantAxis.nextKey [0x00007fae5d108010]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.node.json.ArrayNode.<init> [0x00007fae5d6ffa90]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.node.NodeKind.deserializeObjectOrArrayStructDelegate [0x00007fae5d593410]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.node.NodeKind$20.deserialize [0x00007fae5d594b10]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.read [0x00007fae5d685490]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.add [0x00007fae5d686490]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.isMostRecentlyReadPage [0x00007fae5d686b10]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: sun.security.provider.DigestBase.engineUpdate [0x00007fae7cb16b90]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: sun.nio.ch.FileChannelImpl.endBlocking [0x00007fae7cbe0790]
[111,940s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.PSA.getPreviousInAccessOrder [0x00007fae5d17e890]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.isMostRecentlyReadPage [0x00007fae7cb82390]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue.poll [0x00007fae5d793690]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae7cbdad90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.BitSet.size [0x00007fae5d72da90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.google.gson.stream.JsonReader.isLiteral [0x00007fae7c991410]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: jdk.internal.misc.Unsafe.copyMemory [0x00007fae7ca39810]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.google.gson.stream.JsonReader.peekKeyword [0x00007fae7c98ab90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.google.gson.stream.JsonReader.nextString [0x00007fae7c989c90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: net.openhft.chronicle.bytes.AbstractBytes.read [0x00007fae7c89f690]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.google.gson.stream.JsonReader.fillBuffer [0x00007fae7ca30a10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.node.NodeKind.deserializeNodeDelegate [0x00007fae5d7fe810]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: net.openhft.chronicle.core.UnsafeMemory.readLong [0x00007fae5d7c2f90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.concurrent.ForkJoinTask.getAndBitwiseOrStatus [0x00007fae5d37e510]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.google.gson.stream.JsonReader.beginArray [0x00007fae7cbacd90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertNewContent [0x00007fae7cba9710]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.lang.ThreadLocal$ThreadLocalMap.<init> [0x00007fae5d0e2090]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.access.trx.node.AbstractNodeReadOnlyTrx.moveTo [0x00007fae7cae4a10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processTrxMovement [0x00007fae7cba8490]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.concurrent.ForkJoinPool.hasTasks [0x00007fae7cbeee10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processEndArray [0x00007fae5d65bf90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.page.PageReference.hashCode [0x00007fae5d5da990]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: sun.nio.fs.UnixPath.resolve [0x00007fae7cbf9090]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.AbstractLinkedDeque.linkLast [0x00007fae5d719110]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.concurrent.ForkJoinPool.submissionQueue [0x00007fae5d7eb390]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expireAfterAccessEntries [0x00007fae5d6eea90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.nio.charset.CharsetDecoder.decode [0x00007fae7ca25a90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.google.gson.stream.JsonReader.doPeek [0x00007fae7c974990]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: it.unimi.dsi.fastutil.longs.LongArrayList.add [0x00007fae7c970d90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.readNumber [0x00007fae5d645810]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.AccessOrderDeque.contains [0x00007fae5d7edd90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite.set [0x00007fae5d704f10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.lang.invoke.VarHandleGuards.guard_LL_V [0x00007fae5d735090]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.addObjectRecord [0x00007fae5d5d3a90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.io.InputStream.readAllBytes [0x00007fae5d74a810]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.io.FilterInputStream.close [0x00007fae5d2c3990]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.io.InputStream.readNBytes [0x00007fae5d7a5d10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.node.xml.AbstractStructForwardingNode.hasFirstChild [0x00007fae7c9f8990]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.getObjectRecordValue [0x00007fae5d5c3410]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap.get [0x00007fae5d5beb10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.ImmutableCollections$ListItr.hasNext [0x00007fae7cb19310]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.node.json.NullNode.<init> [0x00007fae5d61da10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.google.gson.stream.JsonReader.nextBoolean [0x00007fae7c9e5f10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.axis.AbstractAxis.tryToComputeNext [0x00007fae7c9cde10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.insertNewContent [0x00007fae5d67d810]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.axis.AbstractAxis.nextLong [0x00007fae7c966310]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.google.gson.stream.JsonReader.peekNumber [0x00007fae7c9c3c10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.axis.AbstractAxis.resetToLastKey [0x00007fae7c9b8890]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.axis.AbstractAxis.hasNext [0x00007fae7c9a5910]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: sun.nio.cs.StreamDecoder.inReady [0x00007fae7cb0e110]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processName [0x00007fae5d596b90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: net.openhft.chronicle.bytes.internal.BytesInternal.appendUtf8Char [0x00007fae5d7df710]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.node.delegates.StructNodeDelegate.hasFirstChild [0x00007fae5d58ab90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: jdk.internal.org.objectweb.asm.Frame.push [0x00007fae7c939590]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: sun.nio.cs.StreamDecoder.readBytes [0x00007fae7cb0ea90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.google.gson.stream.JsonReader.nextName [0x00007fae5d573910]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processBeginObject [0x00007fae5d5fcb10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.google.gson.stream.JsonReader.nextNull [0x00007fae7c992510]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.google.gson.stream.JsonReader.beginObject [0x00007fae5d5f3610]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.service.json.shredder.JsonShredder.processEndObject [0x00007fae5d5f1e90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.google.gson.stream.JsonReader.endObject [0x00007fae5d5f0410]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.page.RevisionRootPage.getNamePageReference [0x00007fae5d561d10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.brackit.query.atomic.QNm.<init> [0x00007fae5d54e710]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.BitSet.valueOf [0x00007fae5d7a0290]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: jdk.internal.misc.Unsafe.copyMemoryChecks [0x00007fae5d4f0990]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.ArrayList.isEmpty [0x00007fae5d3b4a10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: io.sirix.io.filechannel.FileChannelReader.read [0x00007fae5d72fa10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.Arrays.copyOf [0x00007fae5d296c10]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.Arrays.sort [0x00007fae5d75c190]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.lang.Float.isNaN [0x00007fae5d26d310]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: sun.nio.ch.IOUtil.readIntoNativeBuffer [0x00007fae5d528210]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.lang.invoke.MethodType.<init> [0x00007fae5d0fa410]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: sun.nio.ch.UnixFileDispatcherImpl.pread [0x00007fae5d5e7e90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.LocalManualCache.getIfPresent [0x00007fae5d773a90]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: com.github.benmanes.caffeine.cache.PSA.setNextInAccessOrder [0x00007fae5d7e5590]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.lang.invoke.MemberName.getMethodType [0x00007fae5d13f690]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: jdk.internal.org.objectweb.asm.ByteVector.put122 [0x00007fae5d1a3110]
[111,941s][debug][gc,nmethod     ] GC(38) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.clear [0x00007fae7cb2d610]
[111,941s][info ][gc             ] GC(38) Concurrent class unloading 1,813ms
[111,941s][info ][gc,start       ] GC(38) Concurrent strong roots
[111,941s][info ][gc,task        ] GC(38) Using 5 of 10 workers for concurrent strong root
[111,941s][info ][gc             ] GC(38) Concurrent strong roots 0,171ms
[111,941s][info ][gc,start       ] GC(38) Concurrent evacuation
[111,941s][info ][gc,task        ] GC(38) Using 5 of 10 workers for concurrent evacuation
[111,979s][info ][gc             ] GC(38) Concurrent evacuation 37,451ms
[111,979s][info ][gc,start       ] GC(38) Pause Init Update Refs
[111,979s][info ][gc,ergo        ] GC(38) Pacer for Update Refs. Used: 6376M, Free: 5648M, Non-Taxable: 564M, Alloc Tax Rate: 1,4x
[111,979s][info ][gc             ] GC(38) Pause Init Update Refs 0,052ms
[111,979s][info ][gc,start       ] GC(38) Concurrent update references
[111,979s][info ][gc,task        ] GC(38) Using 5 of 10 workers for concurrent reference update
[112,008s][info ][gc             ] GC(38) Concurrent update references 28,853ms
[112,008s][info ][gc,start       ] GC(38) Concurrent update thread roots
[112,009s][info ][gc             ] GC(38) Concurrent update thread roots 0,755ms
[112,009s][info ][gc,start       ] GC(38) Pause Final Update Refs
[112,009s][info ][gc,task        ] GC(38) Using 10 of 10 workers for final reference update
[112,009s][info ][gc             ] GC(38) Pause Final Update Refs 0,091ms
[112,009s][info ][gc,start       ] GC(38) Concurrent cleanup
[112,009s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.evictFromMain [0x00007fae7cba8490] (c2)
[112,009s][info ][gc             ] GC(38) Concurrent cleanup 6412M->520M(10860M) 0,155ms
[112,009s][debug][gc,ergo        ] GC(38) Available: 11152 MB, z-score=0,253. Average available: 11082,3 MB +/- 275,3 MB.
[112,009s][info ][gc,ergo        ] Free: 11152M, Max: 4096K regular, 10100M humongous, Frag: 10% external, 0% internal; Reserve: 616M, Max: 4096K
[112,009s][info ][gc,stats       ] 
[112,009s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[112,009s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[112,009s][info ][gc,stats       ] 
[112,009s][info ][gc,stats       ] Concurrent Reset                   4561 us
[112,009s][info ][gc,stats       ] Pause Init Mark (G)                 438 us
[112,009s][info ][gc,stats       ] Pause Init Mark (N)                 182 us
[112,009s][info ][gc,stats       ]   Update Region States              112 us
[112,009s][info ][gc,stats       ] Concurrent Mark Roots               471 us, parallelism: 2,27x
[112,009s][info ][gc,stats       ]   CMR: <total>                     1067 us
[112,009s][info ][gc,stats       ]   CMR: Thread Roots                 997 us, workers (us): 193, 331, 243, 230,   0, ---, ---, ---, ---, ---, 
[112,009s][info ][gc,stats       ]   CMR: VM Strong Roots                9 us, workers (us):   3,   3,   2,   0,   0, ---, ---, ---, ---, ---, 
[112,009s][info ][gc,stats       ]   CMR: CLDG Roots                    61 us, workers (us):  51, ---,  10, ---, ---, ---, ---, ---, ---, ---, 
[112,009s][info ][gc,stats       ] Concurrent Marking                37864 us
[112,009s][info ][gc,stats       ] Pause Final Mark (G)                463 us
[112,009s][info ][gc,stats       ] Pause Final Mark (N)                381 us
[112,009s][info ][gc,stats       ]   Finish Mark                       194 us
[112,009s][info ][gc,stats       ]   Update Region States               15 us
[112,009s][info ][gc,stats       ]   Choose Collection Set             113 us
[112,009s][info ][gc,stats       ]   Rebuild Free Set                    8 us
[112,009s][info ][gc,stats       ] Concurrent Thread Roots            2129 us, parallelism: 3,68x
[112,009s][info ][gc,stats       ]   CTR: <total>                     7836 us
[112,009s][info ][gc,stats       ]   CTR: Thread Roots                7836 us, workers (us): 2077, 1662, 1219, 1689, 1189, ---, ---, ---, ---, ---, 
[112,009s][info ][gc,stats       ] Concurrent Weak References         6862 us, parallelism: 3,42x
[112,009s][info ][gc,stats       ]   CWRF: <total>                   23435 us
[112,009s][info ][gc,stats       ]   CWRF: Weak References           23435 us, workers (us): 3022, 5877, 2861, 6684, 4991, ---, ---, ---, ---, ---, 
[112,009s][info ][gc,stats       ] Concurrent Weak Roots              2837 us
[112,009s][info ][gc,stats       ]   Roots                             554 us, parallelism: 4,31x
[112,009s][info ][gc,stats       ]     CWR: <total>                   2388 us
[112,009s][info ][gc,stats       ]     CWR: Code Cache Roots          1413 us, workers (us): 276, 282, 283, 280, 291, ---, ---, ---, ---, ---, 
[112,009s][info ][gc,stats       ]     CWR: VM Weak Roots              958 us, workers (us): 212, 212, 212, 166, 156, ---, ---, ---, ---, ---, 
[112,009s][info ][gc,stats       ]     CWR: CLDG Roots                  18 us, workers (us): ---,  11, ---,   6, ---, ---, ---, ---, ---, ---, 
[112,009s][info ][gc,stats       ]   Rendezvous                       2234 us
[112,009s][info ][gc,stats       ] Concurrent Cleanup                  139 us
[112,009s][info ][gc,stats       ] Concurrent Class Unloading         1822 us
[112,009s][info ][gc,stats       ]   Unlink Stale                      809 us
[112,009s][info ][gc,stats       ]     System Dictionary                38 us
[112,009s][info ][gc,stats       ]     Weak Class Links                  0 us
[112,009s][info ][gc,stats       ]     Code Roots                      770 us
[112,009s][info ][gc,stats       ]   Rendezvous                         41 us
[112,009s][info ][gc,stats       ]   Purge Unlinked                    947 us
[112,009s][info ][gc,stats       ]     Code Roots                      942 us
[112,009s][info ][gc,stats       ]     CLDG                              4 us
[112,009s][info ][gc,stats       ]     Exception Caches                  0 us
[112,009s][info ][gc,stats       ] Concurrent Strong Roots             190 us, parallelism: 1,38x
[112,009s][info ][gc,stats       ]   CSR: <total>                      262 us
[112,009s][info ][gc,stats       ]   CSR: VM Strong Roots               21 us, workers (us):  12,   5,   4,   0,   0, ---, ---, ---, ---, ---, 
[112,009s][info ][gc,stats       ]   CSR: CLDG Roots                   241 us, workers (us): ---, 103, 138, ---, ---, ---, ---, ---, ---, ---, 
[112,009s][info ][gc,stats       ] Concurrent Evacuation             37495 us
[112,009s][info ][gc,stats       ] Pause Init Update Refs (G)          169 us
[112,009s][info ][gc,stats       ] Pause Init Update Refs (N)           65 us
[112,009s][info ][gc,stats       ]   Manage GCLABs                       4 us
[112,009s][info ][gc,stats       ] Concurrent Update Refs            28908 us
[112,009s][info ][gc,stats       ] Concurrent Update Thread Roots      774 us
[112,009s][info ][gc,stats       ] Pause Final Update Refs (G)         187 us
[112,009s][info ][gc,stats       ] Pause Final Update Refs (N)         102 us
[112,009s][info ][gc,stats       ]   Update Region States               26 us
[112,009s][info ][gc,stats       ]   Trash Collection Set               22 us
[112,009s][info ][gc,stats       ]   Rebuild Free Set                   13 us
[112,009s][info ][gc,stats       ] Concurrent Cleanup                  167 us
[112,009s][info ][gc,stats       ] 
[112,009s][info ][gc,stats       ] Allocation pacing accrued:
[112,009s][info ][gc,stats       ]       0 of  6014 ms (  0,0%): <total>
[112,009s][info ][gc,stats       ]       0 of  6014 ms (  0,0%): <average total>
[112,009s][info ][gc,stats       ] 
[112,009s][info ][gc,metaspace   ] Metaspace: 20453K(20864K)->20453K(20864K) NonClass: 17947K(18176K)->17947K(18176K) Class: 2505K(2688K)->2505K(2688K)
[112,010s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[112,018s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$AddTask.run [0x00007fae7c89f690] (c2)
[112,025s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$PerformCleanupTask.exec [0x00007fae7cb0e890] (c2)
[112,030s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.performCleanUp [0x00007fae7cbdad90] (c2)
[112,101s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap.size [0x00007fae7c970d90] (c2)
[112,114s][debug][gc,nmethod     ] Register NMethod: io.sirix.settings.VersioningType$4.getRevisionRoots [0x00007fae7cc07f10] (c2)
[112,120s][debug][gc,nmethod     ] Register NMethod: io.sirix.settings.VersioningType$4.convertIntegers [0x00007fae7c966310] (c2)
[112,425s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getPageFragments [0x00007fae7ca30a10] (c2)
[112,476s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getLeafPageReference [0x00007fae7cae5810] (c2)
[112,478s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.setMostRecentlyReadRecordPage [0x00007fae7cb0e110] (c2)
[112,484s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinTask.signalWaiters [0x00007fae7cc07790] (c2)
[112,724s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec [0x00007fae7c974990] (c2)
[112,780s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getInMemoryPageInstance [0x00007fae7c992510] (c2)
[112,781s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getFromBufferManager [0x00007fae7c9b8890] (c2)
[112,785s][debug][gc,nmethod     ] Register NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.loadDataPageFromDurableStorageAndCombinePageFragments [0x00007fae7c9d0e90] (c2)
[112,930s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap.computeIfPresent [0x00007fae7c9a9690] (c2)
[113,969s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.runWorker [0x00007fae5d1f6d90] (c1)
[114,033s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.runWorker [0x00007fae5d11cd10] (c1)
[114,195s][debug][gc,nmethod     ] Register NMethod: sun.nio.fs.UnixPath.resolve [0x00007fae5d6b0810] (c1)
[114,285s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.isNotInitialized [0x00007fae7c991410] (c2)
[114,285s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.increment [0x00007fae5d5beb10] (c1)
[114,293s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.maintenance [0x00007fae5d66d210] (c1)
[114,400s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.demoteFromMainProtected [0x00007fae7c9f8990] (c2)
[114,403s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expireAfterAccessEntries [0x00007fae7cb16f10] (c2)
[114,404s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expireAfterWriteEntries [0x00007fae7cb19310] (c2)
[114,404s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.drainKeyReferences [0x00007fae7cb2d610] (c2)
[114,405s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.Pacer.schedule [0x00007fae7ca25a90] (c2)
[114,405s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.Pacer.maySkip [0x00007fae7cb16b90] (c2)
[114,414s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expireEntries [0x00007fae7c9ce790] (c2)
[114,420s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.evictFromWindow [0x00007fae7c9a6e10] (c2)
[114,422s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.drainWriteBuffer [0x00007fae7c9c3c10] (c2)
[114,424s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.drainValueReferences [0x00007fae7c9e5f10] (c2)
[114,593s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire [0x00007fae5d2c3990] (c1)
[115,044s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.climb [0x00007fae7cbe0790] (c2)
[115,047s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.increment [0x00007fae7c9a5910] (c2)
[115,193s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.maintenance [0x00007fae7cc54690] (c2)
[116,496s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.runWorker [0x00007fae7c939590] (c2)
[116,865s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.compareAndExchangeCtl [0x00007fae7cb82390] (c2)
[117,405s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.decreaseWindow [0x00007fae5d593a90] (c1)
[117,869s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.signalWork [0x00007fae7cbeee10] (c2)
[118,186s][info ][gc             ] Trigger: Free (1228M) is below minimum threshold (1228M)
[118,186s][info ][gc,ergo        ] Free: 1228M, Max: 4096K regular, 1052M humongous, Frag: 15% external, 0% internal; Reserve: 616M, Max: 4096K
[118,186s][info ][gc,start       ] GC(39) Concurrent reset
[118,186s][info ][gc,task        ] GC(39) Using 5 of 10 workers for concurrent reset
[118,186s][info ][gc,ergo        ] GC(39) Pacer for Reset. Non-Taxable: 12288M
[118,191s][info ][gc             ] GC(39) Concurrent reset 4,822ms
[118,191s][info ][gc,start       ] GC(39) Pause Init Mark (unload classes)
[118,191s][info ][gc,task        ] GC(39) Using 10 of 10 workers for init marking
[118,191s][info ][gc,ergo        ] GC(39) Pacer for Mark. Expected Live: 425M, Free: 1220M, Non-Taxable: 122M, Alloc Tax Rate: 0,4x
[118,191s][info ][gc             ] GC(39) Pause Init Mark (unload classes) 0,081ms
[118,191s][info ][gc,start       ] GC(39) Concurrent marking roots
[118,191s][info ][gc,task        ] GC(39) Using 5 of 10 workers for concurrent marking roots
[118,191s][debug][gc,tlab        ] GC(39) TLAB totals: thrds: 4  refills: 2510 max: 2507 slow allocs: 0 max 0 waste:  0,2% gc: 12720576B max: 4187904B slow: 8337952B max: 8337952B
[118,191s][info ][gc             ] GC(39) Concurrent marking roots 0,516ms
[118,191s][info ][gc,start       ] GC(39) Concurrent marking (unload classes)
[118,191s][info ][gc,task        ] GC(39) Using 5 of 10 workers for concurrent marking
[118,318s][info ][gc             ] GC(39) Concurrent marking (unload classes) 126,889ms
[118,318s][info ][gc,start       ] GC(39) Pause Final Mark (unload classes)
[118,318s][info ][gc,task        ] GC(39) Using 10 of 10 workers for final marking
[118,319s][info ][gc,ergo        ] GC(39) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 1676M, Max CSet: 512M, Min Garbage: 66355K
[118,319s][info ][gc,ergo        ] GC(39) Collectable Garbage: 4064M (45%), Immediate: 20480K (0%), CSet: 4044M (45%)
[118,319s][info ][gc,ergo        ] GC(39) Pacer for Evacuation. Used CSet: 4556M, Free: 1060M, Non-Taxable: 106M, Alloc Tax Rate: 10,5x
[118,319s][info ][gc             ] GC(39) Pause Final Mark (unload classes) 0,492ms
[118,319s][info ][gc,start       ] GC(39) Concurrent thread roots
[118,319s][info ][gc,task        ] GC(39) Using 5 of 10 workers for Concurrent thread roots
[118,319s][info ][gc             ] GC(39) Concurrent thread roots 0,500ms
[118,319s][info ][gc,start       ] GC(39) Concurrent weak references
[118,319s][info ][gc,task        ] GC(39) Using 5 of 10 workers for concurrent weak references
[118,326s][info ][gc,ref         ] GC(39) Encountered references: Soft: 2403, Weak: 1991, Final: 20453, Phantom: 20725
[118,326s][info ][gc,ref         ] GC(39) Discovered  references: Soft: 0, Weak: 190, Final: 20452, Phantom: 20850
[118,326s][info ][gc,ref         ] GC(39) Enqueued    references: Soft: 0, Weak: 0, Final: 20452, Phantom: 20463
[118,326s][info ][gc             ] GC(39) Concurrent weak references 6,488ms
[118,326s][info ][gc,start       ] GC(39) Concurrent weak roots
[118,326s][info ][gc,task        ] GC(39) Using 5 of 10 workers for concurrent weak root
[118,329s][info ][gc             ] GC(39) Concurrent weak roots 2,671ms
[118,329s][info ][gc,start       ] GC(39) Concurrent cleanup
[118,329s][info ][gc             ] GC(39) Concurrent cleanup 10644M->10624M(10884M) 0,080ms
[118,329s][info ][gc,ergo        ] GC(39) Free: 1048M, Max: 4096K regular, 1028M humongous, Frag: 2% external, 0% internal; Reserve: 615M, Max: 4096K
[118,329s][info ][gc,start       ] GC(39) Concurrent class unloading
[118,329s][info ][gc,task        ] GC(39) Using 5 of 10 workers for concurrent class unloading
[118,329s][debug][gc,phases,start] GC(39) ClassLoaderData
[118,329s][debug][gc,phases      ] GC(39) ClassLoaderData 0,017ms
[118,329s][debug][gc,phases,start] GC(39) Trigger cleanups
[118,329s][debug][gc,phases      ] GC(39) Trigger cleanups 0,008ms
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.Pacer.maySkip [0x00007fae5d654e10]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.increment [0x00007fae7cc41f90]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.evictFromWindow [0x00007fae5d655890]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expireEntries [0x00007fae5d119990]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.drainKeyReferences [0x00007fae5d11ab10]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.demoteFromMainProtected [0x00007fae5d11b390]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.loadDataPageFromDurableStorageAndCombinePageFragments [0x00007fae5d5ee210]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.maintenance [0x00007fae5d66d210]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.increment [0x00007fae5d5beb10]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.FrequencySketch.isNotInitialized [0x00007fae5d7f9590]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.drainWriteBuffer [0x00007fae5d1eb910]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.setMostRecentlyReadRecordPage [0x00007fae5d7bdd90]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getFromBufferManager [0x00007fae5d115b10]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getInMemoryPageInstance [0x00007fae5d116790]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getLeafPageReference [0x00007fae5d592410]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.computeIfPresent [0x00007fae5d33de10]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.size [0x00007fae5d100810]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec [0x00007fae5d535110]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: java.util.concurrent.ForkJoinPool.awaitWork [0x00007fae7cc2c090]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: java.util.concurrent.ForkJoinPool.signalWork [0x00007fae5d523e90]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: java.util.concurrent.ForkJoinTask.signalWaiters [0x00007fae5d65ac10]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.maintenance [0x00007fae7cc4a810]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: io.sirix.access.trx.page.NodePageReadOnlyTrx.getPageFragments [0x00007fae5d54f910]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.evictFromMain [0x00007fae5d167390]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: io.sirix.settings.VersioningType$4.convertIntegers [0x00007fae5d0f3510]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: io.sirix.settings.VersioningType$4.getRevisionRoots [0x00007fae5d6ef690]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expireAfterAccessEntries [0x00007fae5d765b10]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: java.util.concurrent.ConcurrentHashMap.transfer [0x00007fae7c8c3e90]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.climb [0x00007fae5d18b810]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.Pacer.schedule [0x00007fae5d18c290]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.expireAfterWriteEntries [0x00007fae5d661210]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: java.util.concurrent.ForkJoinPool.compareAndExchangeCtl [0x00007fae5d731090]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.drainValueReferences [0x00007fae5d647990]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$AddTask.run [0x00007fae5d661810]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.performCleanUp [0x00007fae5d647f10]
[118,330s][debug][gc,nmethod     ] GC(39) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$PerformCleanupTask.exec [0x00007fae5d1e8190]
[118,330s][info ][gc             ] GC(39) Concurrent class unloading 1,486ms
[118,330s][info ][gc,start       ] GC(39) Concurrent strong roots
[118,330s][info ][gc,task        ] GC(39) Using 5 of 10 workers for concurrent strong root
[118,330s][info ][gc             ] GC(39) Concurrent strong roots 0,086ms
[118,330s][info ][gc,start       ] GC(39) Concurrent evacuation
[118,330s][info ][gc,task        ] GC(39) Using 5 of 10 workers for concurrent evacuation
[118,426s][info ][gc             ] GC(39) Concurrent evacuation 95,511ms
[118,426s][info ][gc,start       ] GC(39) Pause Init Update Refs
[118,426s][info ][gc,ergo        ] GC(39) Pacer for Update Refs. Used: 11204M, Free: 996M, Non-Taxable: 101990K, Alloc Tax Rate: 13,7x
[118,426s][info ][gc             ] GC(39) Pause Init Update Refs 0,035ms
[118,426s][info ][gc,start       ] GC(39) Concurrent update references
[118,426s][info ][gc,task        ] GC(39) Using 5 of 10 workers for concurrent reference update
[118,510s][info ][gc             ] GC(39) Concurrent update references 84,116ms
[118,510s][info ][gc,start       ] GC(39) Concurrent update thread roots
[118,511s][info ][gc             ] GC(39) Concurrent update thread roots 0,724ms
[118,511s][info ][gc,start       ] GC(39) Pause Final Update Refs
[118,511s][info ][gc,task        ] GC(39) Using 10 of 10 workers for final reference update
[118,511s][info ][gc             ] GC(39) Pause Final Update Refs 0,223ms
[118,511s][info ][gc,start       ] GC(39) Concurrent cleanup
[118,512s][info ][gc             ] GC(39) Concurrent cleanup 11288M->6732M(11288M) 0,172ms
[118,512s][debug][gc,ergo        ] GC(39) Available: 4940 MB, z-score=-2,969. Average available: 10487,5 MB +/- 1868,4 MB.
[118,512s][info ][gc,ergo        ] Free: 4940M, Max: 4096K regular, 384M humongous, Frag: 93% external, 0% internal; Reserve: 616M, Max: 4096K
[118,512s][info ][gc,stats       ] 
[118,512s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[118,512s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[118,512s][info ][gc,stats       ] 
[118,512s][info ][gc,stats       ] Concurrent Reset                   4874 us
[118,512s][info ][gc,stats       ] Pause Init Mark (G)                 239 us
[118,512s][info ][gc,stats       ] Pause Init Mark (N)                  89 us
[118,512s][info ][gc,stats       ]   Update Region States               19 us
[118,512s][info ][gc,stats       ] Concurrent Mark Roots               536 us, parallelism: 2,08x
[118,512s][info ][gc,stats       ]   CMR: <total>                     1114 us
[118,512s][info ][gc,stats       ]   CMR: Thread Roots                1044 us, workers (us): 143, 335, 210, 205, 150, ---, ---, ---, ---, ---, 
[118,512s][info ][gc,stats       ]   CMR: VM Strong Roots                9 us, workers (us):   3,   3,   2,   1,   0, ---, ---, ---, ---, ---, 
[118,512s][info ][gc,stats       ]   CMR: CLDG Roots                    61 us, workers (us):  51, ---,  10, ---, ---, ---, ---, ---, ---, ---, 
[118,512s][info ][gc,stats       ] Concurrent Marking               126936 us
[118,512s][info ][gc,stats       ] Pause Final Mark (G)                630 us
[118,512s][info ][gc,stats       ] Pause Final Mark (N)                501 us
[118,512s][info ][gc,stats       ]   Finish Mark                       202 us
[118,512s][info ][gc,stats       ]   Update Region States               13 us
[118,512s][info ][gc,stats       ]   Choose Collection Set             218 us
[118,512s][info ][gc,stats       ]   Rebuild Free Set                   18 us
[118,512s][info ][gc,stats       ] Concurrent Thread Roots             522 us, parallelism: 2,47x
[118,512s][info ][gc,stats       ]   CTR: <total>                     1288 us
[118,512s][info ][gc,stats       ]   CTR: Thread Roots                1288 us, workers (us): 425, 214, 210, 215, 224, ---, ---, ---, ---, ---, 
[118,512s][info ][gc,stats       ] Concurrent Weak References         6502 us, parallelism: 1,46x
[118,512s][info ][gc,stats       ]   CWRF: <total>                    9508 us
[118,512s][info ][gc,stats       ]   CWRF: Weak References            9508 us, workers (us): 6398, 3109,   1,   1,   0, ---, ---, ---, ---, ---, 
[118,512s][info ][gc,stats       ] Concurrent Weak Roots              2698 us
[118,512s][info ][gc,stats       ]   Roots                             423 us, parallelism: 3,93x
[118,512s][info ][gc,stats       ]     CWR: <total>                   1662 us
[118,512s][info ][gc,stats       ]     CWR: Code Cache Roots          1146 us, workers (us): 248, 239, 207, 226, 225, ---, ---, ---, ---, ---, 
[118,512s][info ][gc,stats       ]     CWR: VM Weak Roots              495 us, workers (us): 124, 126, 122, 107,  17, ---, ---, ---, ---, ---, 
[118,512s][info ][gc,stats       ]     CWR: CLDG Roots                  21 us, workers (us):  11, ---,  11, ---, ---, ---, ---, ---, ---, ---, 
[118,512s][info ][gc,stats       ]   Rendezvous                       2229 us
[118,512s][info ][gc,stats       ] Concurrent Cleanup                   93 us
[118,512s][info ][gc,stats       ] Concurrent Class Unloading         1498 us
[118,512s][info ][gc,stats       ]   Unlink Stale                      840 us
[118,512s][info ][gc,stats       ]     System Dictionary                41 us
[118,512s][info ][gc,stats       ]     Weak Class Links                  0 us
[118,512s][info ][gc,stats       ]     Code Roots                      798 us
[118,512s][info ][gc,stats       ]   Rendezvous                         81 us
[118,512s][info ][gc,stats       ]   Purge Unlinked                    545 us
[118,512s][info ][gc,stats       ]     Code Roots                      541 us
[118,512s][info ][gc,stats       ]     CLDG                              3 us
[118,512s][info ][gc,stats       ]     Exception Caches                  0 us
[118,512s][info ][gc,stats       ] Concurrent Strong Roots              98 us, parallelism: 0,91x
[118,512s][info ][gc,stats       ]   CSR: <total>                       89 us
[118,512s][info ][gc,stats       ]   CSR: VM Strong Roots                6 us, workers (us):   4,   2,   0,   0,   0, ---, ---, ---, ---, ---, 
[118,512s][info ][gc,stats       ]   CSR: CLDG Roots                    83 us, workers (us):  38, ---,  45, ---, ---, ---, ---, ---, ---, ---, 
[118,512s][info ][gc,stats       ] Concurrent Evacuation             95562 us
[118,512s][info ][gc,stats       ] Pause Init Update Refs (G)          209 us
[118,512s][info ][gc,stats       ] Pause Init Update Refs (N)           45 us
[118,512s][info ][gc,stats       ]   Manage GCLABs                       3 us
[118,512s][info ][gc,stats       ] Concurrent Update Refs            84166 us
[118,512s][info ][gc,stats       ] Concurrent Update Thread Roots      740 us
[118,512s][info ][gc,stats       ] Pause Final Update Refs (G)         344 us
[118,512s][info ][gc,stats       ] Pause Final Update Refs (N)         246 us
[118,512s][info ][gc,stats       ]   Update Region States              141 us
[118,512s][info ][gc,stats       ]   Trash Collection Set               28 us
[118,512s][info ][gc,stats       ]   Rebuild Free Set                   20 us
[118,512s][info ][gc,stats       ] Concurrent Cleanup                  184 us
[118,512s][info ][gc,stats       ] 
[118,512s][info ][gc,stats       ] Allocation pacing accrued:
[118,512s][info ][gc,stats       ]       0 of  6503 ms (  0,0%): <total>
[118,512s][info ][gc,stats       ]       0 of  6503 ms (  0,0%): <average total>
[118,512s][info ][gc,stats       ] 
[118,512s][info ][gc,metaspace   ] Metaspace: 20454K(20864K)->20454K(20864K) NonClass: 17948K(18176K)->17948K(18176K) Class: 2505K(2688K)->2505K(2688K)
[118,512s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[119,035s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.decreaseWindow [0x00007fae7c9cde10] (c2)
[120,846s][info ][gc             ] Trigger: Average GC time (410,50 ms) is above the time for average allocation rate (1639 MB/s) to deplete free headroom (669M) (margin of error = 1,80)
[120,846s][info ][gc,ergo        ] Free headroom: 1283M (free) - 614M (spike) - 0B (penalties) = 669M
[120,846s][info ][gc,ergo        ] Free: 1283M, Max: 4096K regular, 384M humongous, Frag: 70% external, 0% internal; Reserve: 616M, Max: 4096K
[120,846s][info ][gc,start       ] GC(40) Concurrent reset
[120,846s][info ][gc,task        ] GC(40) Using 5 of 10 workers for concurrent reset
[120,846s][info ][gc,ergo        ] GC(40) Pacer for Reset. Non-Taxable: 12288M
[120,855s][info ][gc             ] GC(40) Concurrent reset 8,443ms
[120,855s][info ][gc,start       ] GC(40) Pause Init Mark (unload classes)
[120,855s][info ][gc,task        ] GC(40) Using 10 of 10 workers for init marking
[120,855s][info ][gc,ergo        ] GC(40) Pacer for Mark. Expected Live: 634M, Free: 1272M, Non-Taxable: 127M, Alloc Tax Rate: 0,6x
[120,855s][info ][gc             ] GC(40) Pause Init Mark (unload classes) 0,056ms
[120,855s][info ][gc,start       ] GC(40) Concurrent marking roots
[120,855s][info ][gc,task        ] GC(40) Using 5 of 10 workers for concurrent marking roots
[120,855s][debug][gc,tlab        ] GC(40) TLAB totals: thrds: 4  refills: 957 max: 954 slow allocs: 0 max 0 waste:  0,2% gc: 4256632B max: 2752496B slow: 3272552B max: 3272552B
[120,856s][info ][gc             ] GC(40) Concurrent marking roots 0,746ms
[120,856s][info ][gc,start       ] GC(40) Concurrent marking (unload classes)
[120,856s][info ][gc,task        ] GC(40) Using 5 of 10 workers for concurrent marking
[121,009s][info ][gc             ] GC(40) Concurrent marking (unload classes) 153,274ms
[121,009s][info ][gc,start       ] GC(40) Pause Final Mark (unload classes)
[121,009s][info ][gc,task        ] GC(40) Using 10 of 10 workers for final marking
[121,009s][info ][gc,ergo        ] GC(40) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 1668M, Max CSet: 512M, Min Garbage: 74547K
[121,010s][info ][gc,ergo        ] GC(40) Collectable Garbage: 4048M (48%), Immediate: 0B (0%), CSet: 4048M (48%)
[121,010s][info ][gc,ergo        ] GC(40) Pacer for Evacuation. Used CSet: 4560M, Free: 1052M, Non-Taxable: 105M, Alloc Tax Rate: 10,6x
[121,010s][info ][gc             ] GC(40) Pause Final Mark (unload classes) 0,561ms
[121,010s][info ][gc,start       ] GC(40) Concurrent thread roots
[121,010s][info ][gc,task        ] GC(40) Using 5 of 10 workers for Concurrent thread roots
[121,010s][info ][gc             ] GC(40) Concurrent thread roots 0,449ms
[121,010s][info ][gc,start       ] GC(40) Concurrent weak references
[121,010s][info ][gc,task        ] GC(40) Using 5 of 10 workers for concurrent weak references
[121,013s][info ][gc,ref         ] GC(40) Encountered references: Soft: 2405, Weak: 1992, Final: 8104, Phantom: 8204
[121,013s][info ][gc,ref         ] GC(40) Discovered  references: Soft: 0, Weak: 355, Final: 8104, Phantom: 8495
[121,013s][info ][gc,ref         ] GC(40) Enqueued    references: Soft: 0, Weak: 0, Final: 8104, Phantom: 8107
[121,013s][info ][gc             ] GC(40) Concurrent weak references 2,844ms
[121,013s][info ][gc,start       ] GC(40) Concurrent weak roots
[121,013s][info ][gc,task        ] GC(40) Using 5 of 10 workers for concurrent weak root
[121,013s][info ][gc             ] GC(40) Concurrent weak roots 0,418ms
[121,013s][info ][gc,start       ] GC(40) Concurrent cleanup
[121,014s][info ][gc             ] GC(40) Concurrent cleanup 10624M->10624M(11292M) 0,168ms
[121,014s][info ][gc,ergo        ] GC(40) Free: 1047M, Max: 4096K regular, 384M humongous, Frag: 64% external, 0% internal; Reserve: 615M, Max: 4096K
[121,014s][info ][gc,start       ] GC(40) Concurrent class unloading
[121,014s][info ][gc,task        ] GC(40) Using 5 of 10 workers for concurrent class unloading
[121,014s][debug][gc,phases,start] GC(40) ClassLoaderData
[121,014s][debug][gc,phases      ] GC(40) ClassLoaderData 0,012ms
[121,014s][debug][gc,phases,start] GC(40) Trigger cleanups
[121,014s][debug][gc,phases      ] GC(40) Trigger cleanups 0,019ms
[121,014s][debug][gc,nmethod     ] GC(40) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.decreaseWindow [0x00007fae5d593a90]
[121,015s][debug][gc,nmethod     ] GC(40) Unregister NMethod: java.util.concurrent.ForkJoinPool.runWorker [0x00007fae5d1f6d90]
[121,015s][info ][gc             ] GC(40) Concurrent class unloading 0,841ms
[121,015s][info ][gc,start       ] GC(40) Concurrent strong roots
[121,015s][info ][gc,task        ] GC(40) Using 5 of 10 workers for concurrent strong root
[121,015s][info ][gc             ] GC(40) Concurrent strong roots 0,058ms
[121,015s][info ][gc,start       ] GC(40) Concurrent evacuation
[121,015s][info ][gc,task        ] GC(40) Using 5 of 10 workers for concurrent evacuation
[121,142s][info ][gc             ] GC(40) Concurrent evacuation 127,415ms
[121,142s][info ][gc,start       ] GC(40) Pause Init Update Refs
[121,142s][info ][gc,ergo        ] GC(40) Pacer for Update Refs. Used: 11168M, Free: 1032M, Non-Taxable: 103M, Alloc Tax Rate: 13,2x
[121,142s][info ][gc             ] GC(40) Pause Init Update Refs 0,034ms
[121,142s][info ][gc,start       ] GC(40) Concurrent update references
[121,142s][info ][gc,task        ] GC(40) Using 5 of 10 workers for concurrent reference update
[121,245s][info ][gc             ] GC(40) Concurrent update references 102,274ms
[121,245s][info ][gc,start       ] GC(40) Concurrent update thread roots
[121,246s][info ][gc             ] GC(40) Concurrent update thread roots 0,812ms
[121,246s][info ][gc,start       ] GC(40) Pause Final Update Refs
[121,246s][info ][gc,task        ] GC(40) Using 10 of 10 workers for final reference update
[121,246s][info ][gc             ] GC(40) Pause Final Update Refs 0,192ms
[121,246s][info ][gc,start       ] GC(40) Concurrent cleanup
[121,246s][info ][gc             ] GC(40) Concurrent cleanup 11288M->6728M(11816M) 0,238ms
[121,246s][debug][gc,ergo        ] GC(40) Available: 4943 MB, z-score=-1,988. Average available: 9847,9 MB +/- 2466,2 MB.
[121,246s][debug][gc,ergo        ] GC(40) Margin of error now 1,82
[121,246s][info ][gc,ergo        ] Free: 4943M, Max: 4096K regular, 28672K humongous, Frag: 100% external, 0% internal; Reserve: 616M, Max: 4096K
[121,246s][info ][gc,stats       ] 
[121,246s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[121,246s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[121,246s][info ][gc,stats       ] 
[121,246s][info ][gc,stats       ] Concurrent Reset                   8493 us
[121,246s][info ][gc,stats       ] Pause Init Mark (G)                 211 us
[121,246s][info ][gc,stats       ] Pause Init Mark (N)                  65 us
[121,246s][info ][gc,stats       ]   Update Region States               17 us
[121,246s][info ][gc,stats       ] Concurrent Mark Roots               762 us, parallelism: 2,05x
[121,246s][info ][gc,stats       ]   CMR: <total>                     1563 us
[121,246s][info ][gc,stats       ]   CMR: Thread Roots                1488 us, workers (us): 258, 159, 659, 225, 187, ---, ---, ---, ---, ---, 
[121,246s][info ][gc,stats       ]   CMR: VM Strong Roots                9 us, workers (us):   3,   3,   3,   0,   0, ---, ---, ---, ---, ---, 
[121,246s][info ][gc,stats       ]   CMR: CLDG Roots                    65 us, workers (us):   9,  56, ---, ---, ---, ---, ---, ---, ---, ---, 
[121,246s][info ][gc,stats       ] Concurrent Marking               153323 us
[121,246s][info ][gc,stats       ] Pause Final Mark (G)                648 us
[121,246s][info ][gc,stats       ] Pause Final Mark (N)                571 us
[121,246s][info ][gc,stats       ]   Finish Mark                       249 us
[121,246s][info ][gc,stats       ]   Update Region States               19 us
[121,246s][info ][gc,stats       ]   Choose Collection Set             239 us
[121,246s][info ][gc,stats       ]   Rebuild Free Set                   20 us
[121,246s][info ][gc,stats       ] Concurrent Thread Roots             459 us, parallelism: 2,72x
[121,246s][info ][gc,stats       ]   CTR: <total>                     1247 us
[121,246s][info ][gc,stats       ]   CTR: Thread Roots                1247 us, workers (us): 379, 287, 266, 147, 167, ---, ---, ---, ---, ---, 
[121,246s][info ][gc,stats       ] Concurrent Weak References         2854 us, parallelism: 1,63x
[121,246s][info ][gc,stats       ]   CWRF: <total>                    4653 us
[121,246s][info ][gc,stats       ]   CWRF: Weak References            4653 us, workers (us): 2781, 1845,   1,  26,   0, ---, ---, ---, ---, ---, 
[121,246s][info ][gc,stats       ] Concurrent Weak Roots               429 us
[121,246s][info ][gc,stats       ]   Roots                             383 us, parallelism: 4,14x
[121,247s][info ][gc,stats       ]     CWR: <total>                   1586 us
[121,247s][info ][gc,stats       ]     CWR: Code Cache Roots          1120 us, workers (us): 211, 238, 248, 232, 190, ---, ---, ---, ---, ---, 
[121,247s][info ][gc,stats       ]     CWR: VM Weak Roots              447 us, workers (us):  99,  98,  98,  96,  55, ---, ---, ---, ---, ---, 
[121,247s][info ][gc,stats       ]     CWR: CLDG Roots                  19 us, workers (us):   9, ---, ---, ---,   9, ---, ---, ---, ---, ---, 
[121,247s][info ][gc,stats       ]   Rendezvous                         21 us
[121,247s][info ][gc,stats       ] Concurrent Cleanup                  178 us
[121,247s][info ][gc,stats       ] Concurrent Class Unloading          850 us
[121,247s][info ][gc,stats       ]   Unlink Stale                      768 us
[121,247s][info ][gc,stats       ]     System Dictionary                46 us
[121,247s][info ][gc,stats       ]     Weak Class Links                  0 us
[121,247s][info ][gc,stats       ]     Code Roots                      721 us
[121,247s][info ][gc,stats       ]   Rendezvous                         12 us
[121,247s][info ][gc,stats       ]   Purge Unlinked                     47 us
[121,247s][info ][gc,stats       ]     Code Roots                       45 us
[121,247s][info ][gc,stats       ]     CLDG                              2 us
[121,247s][info ][gc,stats       ]     Exception Caches                  0 us
[121,247s][info ][gc,stats       ] Concurrent Strong Roots              68 us, parallelism: 0,89x
[121,247s][info ][gc,stats       ]   CSR: <total>                       61 us
[121,247s][info ][gc,stats       ]   CSR: VM Strong Roots                5 us, workers (us):   2,   2,   0,   0,   0, ---, ---, ---, ---, ---, 
[121,247s][info ][gc,stats       ]   CSR: CLDG Roots                    56 us, workers (us):  26,  31, ---, ---, ---, ---, ---, ---, ---, ---, 
[121,247s][info ][gc,stats       ] Concurrent Evacuation            127464 us
[121,247s][info ][gc,stats       ] Pause Init Update Refs (G)          407 us
[121,247s][info ][gc,stats       ] Pause Init Update Refs (N)           43 us
[121,247s][info ][gc,stats       ]   Manage GCLABs                       4 us
[121,247s][info ][gc,stats       ] Concurrent Update Refs           102326 us
[121,247s][info ][gc,stats       ] Concurrent Update Thread Roots      844 us
[121,247s][info ][gc,stats       ] Pause Final Update Refs (G)         407 us
[121,247s][info ][gc,stats       ] Pause Final Update Refs (N)         213 us
[121,247s][info ][gc,stats       ]   Update Region States              100 us
[121,247s][info ][gc,stats       ]   Trash Collection Set               40 us
[121,247s][info ][gc,stats       ]   Rebuild Free Set                   23 us
[121,247s][info ][gc,stats       ] Concurrent Cleanup                  251 us
[121,247s][info ][gc,stats       ] 
[121,247s][info ][gc,stats       ] Allocation pacing accrued:
[121,247s][info ][gc,stats       ]       0 of  2735 ms (  0,0%): <total>
[121,247s][info ][gc,stats       ]       0 of  2735 ms (  0,0%): <average total>
[121,247s][info ][gc,stats       ] 
[121,247s][info ][gc,metaspace   ] Metaspace: 20454K(20864K)->20454K(20864K) NonClass: 17948K(18176K)->17948K(18176K) Class: 2505K(2688K)->2505K(2688K)
[121,247s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[122,811s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.evictEntry [0x00007fae7cc4c910] (c2)
[123,419s][info ][gc             ] Trigger: Average GC time (520,73 ms) is above the time for average allocation rate (1611 MB/s) to deplete free headroom (837M) (margin of error = 1,82)
[123,419s][info ][gc,ergo        ] Free headroom: 1451M (free) - 614M (spike) - 0B (penalties) = 837M
[123,419s][info ][gc,ergo        ] Free: 1451M, Max: 4096K regular, 28672K humongous, Frag: 99% external, 0% internal; Reserve: 616M, Max: 4096K
[123,419s][info ][gc,start       ] GC(41) Concurrent reset
[123,419s][info ][gc,task        ] GC(41) Using 5 of 10 workers for concurrent reset
[123,419s][info ][gc,ergo        ] GC(41) Pacer for Reset. Non-Taxable: 12288M
[123,428s][info ][gc             ] GC(41) Concurrent reset 8,305ms
[123,428s][info ][gc,start       ] GC(41) Pause Init Mark (unload classes)
[123,428s][info ][gc,task        ] GC(41) Using 10 of 10 workers for init marking
[123,428s][info ][gc,ergo        ] GC(41) Pacer for Mark. Expected Live: 925M, Free: 1439M, Non-Taxable: 143M, Alloc Tax Rate: 0,8x
[123,428s][info ][gc             ] GC(41) Pause Init Mark (unload classes) 0,056ms
[123,428s][info ][gc,start       ] GC(41) Concurrent marking roots
[123,428s][info ][gc,task        ] GC(41) Using 5 of 10 workers for concurrent marking roots
[123,428s][debug][gc,tlab        ] GC(41) TLAB totals: thrds: 4  refills: 917 max: 911 slow allocs: 0 max 0 waste:  0,2% gc: 2697568B max: 2595288B slow: 3205776B max: 3204000B
[123,429s][info ][gc             ] GC(41) Concurrent marking roots 1,145ms
[123,429s][info ][gc,start       ] GC(41) Concurrent marking (unload classes)
[123,429s][info ][gc,task        ] GC(41) Using 5 of 10 workers for concurrent marking
[123,622s][info ][gc             ] GC(41) Concurrent marking (unload classes) 193,363ms
[123,622s][info ][gc,start       ] GC(41) Pause Final Mark (unload classes)
[123,622s][info ][gc,task        ] GC(41) Using 10 of 10 workers for final marking
[123,623s][info ][gc,ergo        ] GC(41) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 1776M, Max CSet: 512M, Min Garbage: 0B
[123,623s][info ][gc,ergo        ] GC(41) Collectable Garbage: 4016M (51%), Immediate: 0B (0%), CSet: 4016M (51%)
[123,623s][info ][gc,ergo        ] GC(41) Pacer for Evacuation. Used CSet: 4528M, Free: 1160M, Non-Taxable: 116M, Alloc Tax Rate: 9,5x
[123,623s][info ][gc             ] GC(41) Pause Final Mark (unload classes) 0,655ms
[123,623s][info ][gc,start       ] GC(41) Concurrent thread roots
[123,623s][info ][gc,task        ] GC(41) Using 5 of 10 workers for Concurrent thread roots
[123,624s][info ][gc             ] GC(41) Concurrent thread roots 0,594ms
[123,624s][info ][gc,start       ] GC(41) Concurrent weak references
[123,624s][info ][gc,task        ] GC(41) Using 5 of 10 workers for concurrent weak references
[123,625s][info ][gc,ref         ] GC(41) Encountered references: Soft: 2404, Weak: 1992, Final: 7837, Phantom: 8225
[123,625s][info ][gc,ref         ] GC(41) Discovered  references: Soft: 0, Weak: 173, Final: 7837, Phantom: 8150
[123,625s][info ][gc,ref         ] GC(41) Enqueued    references: Soft: 0, Weak: 0, Final: 7837, Phantom: 7841
[123,625s][info ][gc             ] GC(41) Concurrent weak references 1,384ms
[123,625s][info ][gc,start       ] GC(41) Concurrent weak roots
[123,625s][info ][gc,task        ] GC(41) Using 5 of 10 workers for concurrent weak root
[123,626s][info ][gc             ] GC(41) Concurrent weak roots 0,724ms
[123,626s][info ][gc,start       ] GC(41) Concurrent cleanup
[123,626s][info ][gc             ] GC(41) Concurrent cleanup 10516M->10516M(11816M) 0,163ms
[123,626s][info ][gc,ergo        ] GC(41) Free: 1155M, Max: 4096K regular, 28672K humongous, Frag: 98% external, 0% internal; Reserve: 615M, Max: 4096K
[123,626s][info ][gc,start       ] GC(41) Concurrent class unloading
[123,626s][info ][gc,task        ] GC(41) Using 5 of 10 workers for concurrent class unloading
[123,626s][debug][gc,phases,start] GC(41) ClassLoaderData
[123,626s][debug][gc,phases      ] GC(41) ClassLoaderData 0,011ms
[123,626s][debug][gc,phases,start] GC(41) Trigger cleanups
[123,626s][debug][gc,phases      ] GC(41) Trigger cleanups 0,005ms
[123,627s][debug][gc,nmethod     ] GC(41) Unregister NMethod: com.github.benmanes.caffeine.cache.StripedBuffer.drainTo [0x00007fae7cc48710]
[123,627s][debug][gc,nmethod     ] GC(41) Unregister NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.evictEntry [0x00007fae5d14c990]
[123,627s][info ][gc             ] GC(41) Concurrent class unloading 0,969ms
[123,627s][info ][gc,start       ] GC(41) Concurrent strong roots
[123,627s][info ][gc,task        ] GC(41) Using 5 of 10 workers for concurrent strong root
[123,627s][info ][gc             ] GC(41) Concurrent strong roots 0,118ms
[123,627s][info ][gc,start       ] GC(41) Concurrent evacuation
[123,627s][info ][gc,task        ] GC(41) Using 5 of 10 workers for concurrent evacuation
[123,750s][info ][gc             ] GC(41) Concurrent evacuation 123,049ms
[123,750s][info ][gc,start       ] GC(41) Pause Init Update Refs
[123,750s][info ][gc,ergo        ] GC(41) Pacer for Update Refs. Used: 11112M, Free: 1080M, Non-Taxable: 108M, Alloc Tax Rate: 12,6x
[123,750s][info ][gc             ] GC(41) Pause Init Update Refs 0,045ms
[123,750s][info ][gc,start       ] GC(41) Concurrent update references
[123,751s][info ][gc,task        ] GC(41) Using 5 of 10 workers for concurrent reference update
[123,883s][info ][gc             ] GC(41) Concurrent update references 132,373ms
[123,883s][info ][gc,start       ] GC(41) Concurrent update thread roots
[123,884s][info ][gc             ] GC(41) Concurrent update thread roots 0,930ms
[123,884s][info ][gc,start       ] GC(41) Pause Final Update Refs
[123,884s][info ][gc,task        ] GC(41) Using 10 of 10 workers for final reference update
[123,884s][info ][gc             ] GC(41) Pause Final Update Refs 0,115ms
[123,884s][info ][gc,start       ] GC(41) Concurrent cleanup
[123,884s][info ][gc             ] GC(41) Concurrent cleanup 11272M->6744M(12288M) 0,245ms
[123,884s][debug][gc,ergo        ] GC(41) Available: 4928 MB, z-score=-1,525. Average available: 9231,5 MB +/- 2822,8 MB.
[123,884s][debug][gc,ergo        ] GC(41) Margin of error now 1,84
[123,884s][info ][gc,ergo        ] Free: 4928M, Max: 4096K regular, 32768K humongous, Frag: 100% external, 0% internal; Reserve: 616M, Max: 4096K
[123,884s][info ][gc,stats       ] 
[123,884s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[123,884s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[123,884s][info ][gc,stats       ] 
[123,885s][info ][gc,stats       ] Concurrent Reset                   8348 us
[123,885s][info ][gc,stats       ] Pause Init Mark (G)                 173 us
[123,885s][info ][gc,stats       ] Pause Init Mark (N)                  64 us
[123,885s][info ][gc,stats       ]   Update Region States               19 us
[123,885s][info ][gc,stats       ] Concurrent Mark Roots              1162 us, parallelism: 1,82x
[123,885s][info ][gc,stats       ]   CMR: <total>                     2112 us
[123,885s][info ][gc,stats       ]   CMR: Thread Roots                2045 us, workers (us): 344, 219, 229, 181, 1071, ---, ---, ---, ---, ---, 
[123,885s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   3,   2,   2,   0,   0, ---, ---, ---, ---, ---, 
[123,885s][info ][gc,stats       ]   CMR: CLDG Roots                    59 us, workers (us): ---,   9, ---,  50, ---, ---, ---, ---, ---, ---, 
[123,885s][info ][gc,stats       ] Concurrent Marking               193406 us
[123,885s][info ][gc,stats       ] Pause Final Mark (G)                772 us
[123,885s][info ][gc,stats       ] Pause Final Mark (N)                664 us
[123,885s][info ][gc,stats       ]   Finish Mark                       249 us
[123,885s][info ][gc,stats       ]   Update Region States              108 us
[123,885s][info ][gc,stats       ]   Choose Collection Set             235 us
[123,885s][info ][gc,stats       ]   Rebuild Free Set                   21 us
[123,885s][info ][gc,stats       ] Concurrent Thread Roots             615 us, parallelism: 2,12x
[123,885s][info ][gc,stats       ]   CTR: <total>                     1304 us
[123,885s][info ][gc,stats       ]   CTR: Thread Roots                1304 us, workers (us): 446, 221, 234, 236, 166, ---, ---, ---, ---, ---, 
[123,885s][info ][gc,stats       ] Concurrent Weak References         1392 us, parallelism: 1,82x
[123,885s][info ][gc,stats       ]   CWRF: <total>                    2533 us
[123,885s][info ][gc,stats       ]   CWRF: Weak References            2533 us, workers (us): 1236,  51, 1246,   0,   0, ---, ---, ---, ---, ---, 
[123,885s][info ][gc,stats       ] Concurrent Weak Roots               743 us
[123,885s][info ][gc,stats       ]   Roots                             525 us, parallelism: 3,04x
[123,885s][info ][gc,stats       ]     CWR: <total>                   1594 us
[123,885s][info ][gc,stats       ]     CWR: Code Cache Roots          1116 us, workers (us): 236, 229, 248, 184, 219, ---, ---, ---, ---, ---, 
[123,885s][info ][gc,stats       ]     CWR: VM Weak Roots              462 us, workers (us): 125, 124, 124,  77,  12, ---, ---, ---, ---, ---, 
[123,885s][info ][gc,stats       ]     CWR: CLDG Roots                  16 us, workers (us): ---,  10, ---,   6, ---, ---, ---, ---, ---, ---, 
[123,885s][info ][gc,stats       ]   Rendezvous                        188 us
[123,885s][info ][gc,stats       ] Concurrent Cleanup                  171 us
[123,885s][info ][gc,stats       ] Concurrent Class Unloading          978 us
[123,885s][info ][gc,stats       ]   Unlink Stale                      815 us
[123,885s][info ][gc,stats       ]     System Dictionary                26 us
[123,885s][info ][gc,stats       ]     Weak Class Links                  0 us
[123,885s][info ][gc,stats       ]     Code Roots                      789 us
[123,885s][info ][gc,stats       ]   Rendezvous                         86 us
[123,885s][info ][gc,stats       ]   Purge Unlinked                     45 us
[123,885s][info ][gc,stats       ]     Code Roots                       42 us
[123,885s][info ][gc,stats       ]     CLDG                              3 us
[123,885s][info ][gc,stats       ]     Exception Caches                  0 us
[123,885s][info ][gc,stats       ] Concurrent Strong Roots             137 us, parallelism: 0,59x
[123,885s][info ][gc,stats       ]   CSR: <total>                       81 us
[123,885s][info ][gc,stats       ]   CSR: VM Strong Roots                6 us, workers (us):   2,   2,   1,   0,   0, ---, ---, ---, ---, ---, 
[123,885s][info ][gc,stats       ]   CSR: CLDG Roots                    75 us, workers (us):  42, ---,  33, ---, ---, ---, ---, ---, ---, ---, 
[123,885s][info ][gc,stats       ] Concurrent Evacuation            123100 us
[123,885s][info ][gc,stats       ] Pause Init Update Refs (G)          170 us
[123,885s][info ][gc,stats       ] Pause Init Update Refs (N)           55 us
[123,885s][info ][gc,stats       ]   Manage GCLABs                       6 us
[123,885s][info ][gc,stats       ] Concurrent Update Refs           132421 us
[123,885s][info ][gc,stats       ] Concurrent Update Thread Roots      953 us
[123,885s][info ][gc,stats       ] Pause Final Update Refs (G)         297 us
[123,885s][info ][gc,stats       ] Pause Final Update Refs (N)         132 us
[123,885s][info ][gc,stats       ]   Update Region States               27 us
[123,885s][info ][gc,stats       ]   Trash Collection Set               31 us
[123,885s][info ][gc,stats       ]   Rebuild Free Set                   29 us
[123,885s][info ][gc,stats       ] Concurrent Cleanup                  258 us
[123,885s][info ][gc,stats       ] 
[123,885s][info ][gc,stats       ] Allocation pacing accrued:
[123,885s][info ][gc,stats       ]       0 of  2638 ms (  0,0%): <total>
[123,885s][info ][gc,stats       ]       0 of  2638 ms (  0,0%): <average total>
[123,885s][info ][gc,stats       ] 
[123,885s][info ][gc,metaspace   ] Metaspace: 20454K(20864K)->20454K(20864K) NonClass: 17948K(18176K)->17948K(18176K) Class: 2505K(2688K)->2505K(2688K)
[123,885s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[125,694s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.PageCache.get [0x00007fae5d1f6d90] (c1)
[125,694s][debug][gc,nmethod     ] Register NMethod: io.sirix.cache.PageCache.get [0x00007fae5d11de10] (c1)
[126,008s][info ][gc             ] Trigger: Average GC time (593,39 ms) is above the time for average allocation rate (1593 MB/s) to deplete free headroom (941M) (margin of error = 1,84)
[126,008s][info ][gc,ergo        ] Free headroom: 1556M (free) - 614M (spike) - 0B (penalties) = 941M
[126,008s][info ][gc,ergo        ] Free: 1556M, Max: 4096K regular, 28672K humongous, Frag: 99% external, 0% internal; Reserve: 616M, Max: 4096K
[126,008s][info ][gc,start       ] GC(42) Concurrent reset
[126,008s][info ][gc,task        ] GC(42) Using 5 of 10 workers for concurrent reset
[126,008s][info ][gc,ergo        ] GC(42) Pacer for Reset. Non-Taxable: 12288M
[126,018s][info ][gc             ] GC(42) Concurrent reset 9,988ms
[126,018s][info ][gc,start       ] GC(42) Pause Init Mark (unload classes)
[126,018s][info ][gc,task        ] GC(42) Using 10 of 10 workers for init marking
[126,018s][info ][gc,ergo        ] GC(42) Pacer for Mark. Expected Live: 1299M, Free: 1544M, Non-Taxable: 154M, Alloc Tax Rate: 1,0x
[126,018s][info ][gc             ] GC(42) Pause Init Mark (unload classes) 0,217ms
[126,018s][info ][gc,start       ] GC(42) Concurrent marking roots
[126,018s][info ][gc,task        ] GC(42) Using 5 of 10 workers for concurrent marking roots
[126,018s][debug][gc,tlab        ] GC(42) TLAB totals: thrds: 4  refills: 916 max: 906 slow allocs: 0 max 0 waste:  0,1% gc: 926144B max: 900064B slow: 3442608B max: 3438512B
[126,019s][info ][gc             ] GC(42) Concurrent marking roots 0,410ms
[126,019s][info ][gc,start       ] GC(42) Concurrent marking (unload classes)
[126,019s][info ][gc,task        ] GC(42) Using 5 of 10 workers for concurrent marking
[126,243s][info ][gc             ] GC(42) Concurrent marking (unload classes) 224,140ms
[126,243s][info ][gc,start       ] GC(42) Pause Final Mark (unload classes)
[126,243s][info ][gc,task        ] GC(42) Using 10 of 10 workers for final marking
[126,243s][info ][gc,ergo        ] GC(42) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 1840M, Max CSet: 512M, Min Garbage: 0B
[126,244s][info ][gc,ergo        ] GC(42) Collectable Garbage: 3960M (54%), Immediate: 0B (0%), CSet: 3960M (54%)
[126,244s][info ][gc,ergo        ] GC(42) Pacer for Evacuation. Used CSet: 4472M, Free: 1224M, Non-Taxable: 122M, Alloc Tax Rate: 8,9x
[126,244s][info ][gc             ] GC(42) Pause Final Mark (unload classes) 0,568ms
[126,244s][info ][gc,start       ] GC(42) Concurrent thread roots
[126,244s][info ][gc,task        ] GC(42) Using 5 of 10 workers for Concurrent thread roots
[126,244s][info ][gc             ] GC(42) Concurrent thread roots 0,614ms
[126,244s][info ][gc,start       ] GC(42) Concurrent weak references
[126,244s][info ][gc,task        ] GC(42) Using 5 of 10 workers for concurrent weak references
[126,247s][info ][gc,ref         ] GC(42) Encountered references: Soft: 2405, Weak: 1992, Final: 7918, Phantom: 8293
[126,247s][info ][gc,ref         ] GC(42) Discovered  references: Soft: 0, Weak: 1181, Final: 7918, Phantom: 8311
[126,247s][info ][gc,ref         ] GC(42) Enqueued    references: Soft: 0, Weak: 0, Final: 7918, Phantom: 7922
[126,247s][info ][gc             ] GC(42) Concurrent weak references 2,856ms
[126,247s][info ][gc,start       ] GC(42) Concurrent weak roots
[126,247s][info ][gc,task        ] GC(42) Using 5 of 10 workers for concurrent weak root
[126,248s][info ][gc             ] GC(42) Concurrent weak roots 0,650ms
[126,248s][info ][gc,start       ] GC(42) Concurrent cleanup
[126,248s][info ][gc             ] GC(42) Concurrent cleanup 10456M->10456M(12288M) 0,165ms
[126,248s][info ][gc,ergo        ] GC(42) Free: 1216M, Max: 4096K regular, 28672K humongous, Frag: 98% external, 0% internal; Reserve: 615M, Max: 4096K
[126,248s][info ][gc,start       ] GC(42) Concurrent class unloading
[126,248s][info ][gc,task        ] GC(42) Using 5 of 10 workers for concurrent class unloading
[126,248s][debug][gc,phases,start] GC(42) ClassLoaderData
[126,248s][debug][gc,phases      ] GC(42) ClassLoaderData 0,012ms
[126,248s][debug][gc,phases,start] GC(42) Trigger cleanups
[126,248s][debug][gc,phases      ] GC(42) Trigger cleanups 0,005ms
[126,249s][info ][gc             ] GC(42) Concurrent class unloading 0,860ms
[126,249s][info ][gc,start       ] GC(42) Concurrent strong roots
[126,249s][info ][gc,task        ] GC(42) Using 5 of 10 workers for concurrent strong root
[126,249s][info ][gc             ] GC(42) Concurrent strong roots 0,093ms
[126,249s][info ][gc,start       ] GC(42) Concurrent evacuation
[126,249s][info ][gc,task        ] GC(42) Using 5 of 10 workers for concurrent evacuation
[126,297s][info ][gc             ] GC(42) Concurrent evacuation 48,069ms
[126,297s][info ][gc,start       ] GC(42) Pause Init Update Refs
[126,297s][info ][gc,ergo        ] GC(42) Pacer for Update Refs. Used: 11036M, Free: 1160M, Non-Taxable: 116M, Alloc Tax Rate: 11,6x
[126,297s][info ][gc             ] GC(42) Pause Init Update Refs 0,036ms
[126,297s][info ][gc,start       ] GC(42) Concurrent update references
[126,297s][info ][gc,task        ] GC(42) Using 5 of 10 workers for concurrent reference update
[126,442s][info ][gc             ] GC(42) Concurrent update references 144,496ms
[126,442s][info ][gc,start       ] GC(42) Concurrent update thread roots
[126,443s][info ][gc             ] GC(42) Concurrent update thread roots 0,939ms
[126,443s][info ][gc,start       ] GC(42) Pause Final Update Refs
[126,443s][info ][gc,task        ] GC(42) Using 10 of 10 workers for final reference update
[126,443s][info ][gc             ] GC(42) Pause Final Update Refs 0,161ms
[126,443s][info ][gc,start       ] GC(42) Concurrent cleanup
[126,444s][info ][gc             ] GC(42) Concurrent cleanup 11212M->6740M(12288M) 0,260ms
[126,444s][debug][gc,ergo        ] GC(42) Available: 4932 MB, z-score=-1,222. Average available: 8613,6 MB +/- 3013,6 MB.
[126,444s][debug][gc,ergo        ] GC(42) Margin of error now 1,85
[126,444s][info ][gc,ergo        ] Free: 4932M, Max: 4096K regular, 73728K humongous, Frag: 99% external, 0% internal; Reserve: 616M, Max: 4096K
[126,444s][info ][gc,stats       ] 
[126,444s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[126,444s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[126,444s][info ][gc,stats       ] 
[126,444s][info ][gc,stats       ] Concurrent Reset                  10037 us
[126,444s][info ][gc,stats       ] Pause Init Mark (G)                 432 us
[126,444s][info ][gc,stats       ] Pause Init Mark (N)                 227 us
[126,444s][info ][gc,stats       ]   Update Region States              146 us
[126,444s][info ][gc,stats       ] Concurrent Mark Roots               420 us, parallelism: 2,80x
[126,444s][info ][gc,stats       ]   CMR: <total>                     1176 us
[126,444s][info ][gc,stats       ]   CMR: Thread Roots                1106 us, workers (us): 331, 204, 197, 179, 195, ---, ---, ---, ---, ---, 
[126,444s][info ][gc,stats       ]   CMR: VM Strong Roots                7 us, workers (us):   5,   1,   0,   0,   0, ---, ---, ---, ---, ---, 
[126,444s][info ][gc,stats       ]   CMR: CLDG Roots                    63 us, workers (us):   8,  55, ---, ---, ---, ---, ---, ---, ---, ---, 
[126,444s][info ][gc,stats       ] Concurrent Marking               224182 us
[126,444s][info ][gc,stats       ] Pause Final Mark (G)                825 us
[126,444s][info ][gc,stats       ] Pause Final Mark (N)                577 us
[126,444s][info ][gc,stats       ]   Finish Mark                       245 us
[126,444s][info ][gc,stats       ]   Update Region States               20 us
[126,444s][info ][gc,stats       ]   Choose Collection Set             239 us
[126,444s][info ][gc,stats       ]   Rebuild Free Set                   22 us
[126,444s][info ][gc,stats       ] Concurrent Thread Roots             637 us, parallelism: 2,16x
[126,444s][info ][gc,stats       ]   CTR: <total>                     1374 us
[126,444s][info ][gc,stats       ]   CTR: Thread Roots                1374 us, workers (us): 439, 244, 224, 246, 220, ---, ---, ---, ---, ---, 
[126,444s][info ][gc,stats       ] Concurrent Weak References         2868 us, parallelism: 1,00x
[126,444s][info ][gc,stats       ]   CWRF: <total>                    2874 us
[126,444s][info ][gc,stats       ]   CWRF: Weak References            2874 us, workers (us): 103,  55,  49, 2629,  37, ---, ---, ---, ---, ---, 
[126,444s][info ][gc,stats       ] Concurrent Weak Roots               661 us
[126,444s][info ][gc,stats       ]   Roots                             599 us, parallelism: 3,87x
[126,444s][info ][gc,stats       ]     CWR: <total>                   2318 us
[126,444s][info ][gc,stats       ]     CWR: Code Cache Roots          1814 us, workers (us): 341, 335, 400, 376, 363, ---, ---, ---, ---, ---, 
[126,444s][info ][gc,stats       ]     CWR: VM Weak Roots              484 us, workers (us): 154, 142,  96,  47,  45, ---, ---, ---, ---, ---, 
[126,444s][info ][gc,stats       ]     CWR: CLDG Roots                  19 us, workers (us): ---,   9, ---,  10, ---, ---, ---, ---, ---, ---, 
[126,444s][info ][gc,stats       ]   Rendezvous                         37 us
[126,444s][info ][gc,stats       ] Concurrent Cleanup                  178 us
[126,444s][info ][gc,stats       ] Concurrent Class Unloading          876 us
[126,444s][info ][gc,stats       ]   Unlink Stale                      781 us
[126,444s][info ][gc,stats       ]     System Dictionary                27 us
[126,444s][info ][gc,stats       ]     Weak Class Links                  0 us
[126,444s][info ][gc,stats       ]     Code Roots                      753 us
[126,444s][info ][gc,stats       ]   Rendezvous                         64 us
[126,444s][info ][gc,stats       ]   Purge Unlinked                      3 us
[126,444s][info ][gc,stats       ]     Code Roots                        0 us
[126,444s][info ][gc,stats       ]     CLDG                              2 us
[126,444s][info ][gc,stats       ]     Exception Caches                  0 us
[126,444s][info ][gc,stats       ] Concurrent Strong Roots             102 us, parallelism: 1,02x
[126,444s][info ][gc,stats       ]   CSR: <total>                      104 us
[126,444s][info ][gc,stats       ]   CSR: VM Strong Roots                6 us, workers (us):   2,   2,   2,   0,   0, ---, ---, ---, ---, ---, 
[126,444s][info ][gc,stats       ]   CSR: CLDG Roots                    98 us, workers (us):  39, ---,  58, ---, ---, ---, ---, ---, ---, ---, 
[126,444s][info ][gc,stats       ] Concurrent Evacuation             48114 us
[126,444s][info ][gc,stats       ] Pause Init Update Refs (G)          185 us
[126,444s][info ][gc,stats       ] Pause Init Update Refs (N)           44 us
[126,444s][info ][gc,stats       ]   Manage GCLABs                       2 us
[126,444s][info ][gc,stats       ] Concurrent Update Refs           144542 us
[126,444s][info ][gc,stats       ] Concurrent Update Thread Roots      963 us
[126,444s][info ][gc,stats       ] Pause Final Update Refs (G)         316 us
[126,444s][info ][gc,stats       ] Pause Final Update Refs (N)         171 us
[126,444s][info ][gc,stats       ]   Update Region States               75 us
[126,444s][info ][gc,stats       ]   Trash Collection Set               35 us
[126,444s][info ][gc,stats       ]   Rebuild Free Set                   25 us
[126,444s][info ][gc,stats       ] Concurrent Cleanup                  274 us
[126,444s][info ][gc,stats       ] 
[126,444s][info ][gc,stats       ] Allocation pacing accrued:
[126,444s][info ][gc,stats       ]       0 of  2559 ms (  0,0%): <total>
[126,444s][info ][gc,stats       ]       0 of  2559 ms (  0,0%): <average total>
[126,444s][info ][gc,stats       ] 
[126,444s][info ][gc,metaspace   ] Metaspace: 20454K(20864K)->20454K(20864K) NonClass: 17948K(18176K)->17948K(18176K) Class: 2505K(2688K)->2505K(2688K)
[126,444s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[126,640s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredderTest.testChicagoDescendantAxis [0x00007fae5d661210] (c1)
[126,663s][debug][gc,nmethod     ] Register NMethod: io.sirix.service.json.shredder.JsonShredderTest.testChicagoDescendantAxis [0x00007fae7c8c3e90] (c2)
[126,750s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ThreadLocalRandom.getProbe [0x00007fae7c989c90] (c2)
[126,966s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec [0x00007fae7cbf9090] (c2)
[128,609s][info ][gc             ] Trigger: Average GC time (564,31 ms) is above the time for average allocation rate (1624 MB/s) to deplete free headroom (913M) (margin of error = 1,85)
[128,609s][info ][gc,ergo        ] Free headroom: 1528M (free) - 614M (spike) - 0B (penalties) = 913M
[128,609s][info ][gc,ergo        ] Free: 1528M, Max: 4096K regular, 65536K humongous, Frag: 96% external, 0% internal; Reserve: 616M, Max: 4096K
[128,609s][info ][gc,start       ] GC(43) Concurrent reset
[128,609s][info ][gc,task        ] GC(43) Using 5 of 10 workers for concurrent reset
[128,609s][info ][gc,ergo        ] GC(43) Pacer for Reset. Non-Taxable: 12288M
[128,618s][info ][gc             ] GC(43) Concurrent reset 8,477ms
[128,618s][info ][gc,start       ] GC(43) Pause Init Mark (unload classes)
[128,618s][info ][gc,task        ] GC(43) Using 10 of 10 workers for init marking
[128,618s][info ][gc,ergo        ] GC(43) Pacer for Mark. Expected Live: 1819M, Free: 1516M, Non-Taxable: 151M, Alloc Tax Rate: 1,5x
[128,618s][info ][gc             ] GC(43) Pause Init Mark (unload classes) 0,092ms
[128,618s][info ][gc,start       ] GC(43) Concurrent marking roots
[128,618s][info ][gc,task        ] GC(43) Using 5 of 10 workers for concurrent marking roots
[128,618s][debug][gc,tlab        ] GC(43) TLAB totals: thrds: 4  refills: 920 max: 914 slow allocs: 0 max 0 waste:  0,2% gc: 2962408B max: 2663240B slow: 3117448B max: 3115664B
[128,618s][info ][gc             ] GC(43) Concurrent marking roots 0,452ms
[128,618s][info ][gc,start       ] GC(43) Concurrent marking (unload classes)
[128,618s][info ][gc,task        ] GC(43) Using 5 of 10 workers for concurrent marking
[128,857s][info ][gc             ] GC(43) Concurrent marking (unload classes) 238,357ms
[128,857s][info ][gc,start       ] GC(43) Pause Final Mark (unload classes)
[128,857s][info ][gc,task        ] GC(43) Using 10 of 10 workers for final marking
[128,857s][info ][gc,ergo        ] GC(43) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 2164M, Max CSet: 512M, Min Garbage: 0B
[128,857s][info ][gc,ergo        ] GC(43) Collectable Garbage: 4996M (70%), Immediate: 372M (5%), CSet: 4624M (64%)
[128,857s][info ][gc,ergo        ] GC(43) Pacer for Evacuation. Used CSet: 5136M, Free: 1548M, Non-Taxable: 154M, Alloc Tax Rate: 8,1x
[128,857s][info ][gc             ] GC(43) Pause Final Mark (unload classes) 0,398ms
[128,857s][info ][gc,start       ] GC(43) Concurrent thread roots
[128,857s][info ][gc,task        ] GC(43) Using 5 of 10 workers for Concurrent thread roots
[128,858s][info ][gc             ] GC(43) Concurrent thread roots 0,514ms
[128,858s][info ][gc,start       ] GC(43) Concurrent weak references
[128,858s][info ][gc,task        ] GC(43) Using 5 of 10 workers for concurrent weak references
[128,860s][info ][gc,ref         ] GC(43) Encountered references: Soft: 2405, Weak: 1991, Final: 8055, Phantom: 8366
[128,860s][info ][gc,ref         ] GC(43) Discovered  references: Soft: 0, Weak: 216, Final: 8055, Phantom: 8445
[128,860s][info ][gc,ref         ] GC(43) Enqueued    references: Soft: 0, Weak: 0, Final: 8055, Phantom: 8058
[128,860s][info ][gc             ] GC(43) Concurrent weak references 2,450ms
[128,860s][info ][gc,start       ] GC(43) Concurrent weak roots
[128,860s][info ][gc,task        ] GC(43) Using 5 of 10 workers for concurrent weak root
[128,861s][info ][gc             ] GC(43) Concurrent weak roots 0,718ms
[128,861s][info ][gc,start       ] GC(43) Concurrent cleanup
[128,861s][info ][gc             ] GC(43) Concurrent cleanup 10500M->10132M(12288M) 0,185ms
[128,861s][info ][gc,ergo        ] GC(43) Free: 1539M, Max: 4096K regular, 98304K humongous, Frag: 94% external, 0% internal; Reserve: 615M, Max: 4096K
[128,861s][info ][gc,start       ] GC(43) Concurrent class unloading
[128,861s][info ][gc,task        ] GC(43) Using 5 of 10 workers for concurrent class unloading
[128,861s][debug][gc,phases,start] GC(43) ClassLoaderData
[128,861s][debug][gc,phases      ] GC(43) ClassLoaderData 0,012ms
[128,861s][debug][gc,phases,start] GC(43) Trigger cleanups
[128,861s][debug][gc,phases      ] GC(43) Trigger cleanups 0,005ms
[128,862s][debug][gc,nmethod     ] GC(43) Unregister NMethod: io.sirix.service.json.shredder.JsonShredderTest.testChicagoDescendantAxis [0x00007fae5d661210]
[128,862s][debug][gc,nmethod     ] GC(43) Unregister NMethod: java.util.concurrent.ThreadLocalRandom.getProbe [0x00007fae5d356a90]
[128,862s][debug][gc,nmethod     ] GC(43) Unregister NMethod: io.sirix.service.json.shredder.JsonShredderTest.testChicagoDescendantAxis [0x00007fae7cc21c10]
[128,862s][debug][gc,nmethod     ] GC(43) Unregister NMethod: java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec [0x00007fae7c974990]
[128,862s][info ][gc             ] GC(43) Concurrent class unloading 1,191ms
[128,862s][info ][gc,start       ] GC(43) Concurrent strong roots
[128,862s][info ][gc,task        ] GC(43) Using 5 of 10 workers for concurrent strong root
[128,863s][info ][gc             ] GC(43) Concurrent strong roots 0,168ms
[128,863s][info ][gc,start       ] GC(43) Concurrent evacuation
[128,863s][info ][gc,task        ] GC(43) Using 5 of 10 workers for concurrent evacuation
[128,915s][info ][gc             ] GC(43) Concurrent evacuation 52,207ms
[128,915s][info ][gc,start       ] GC(43) Pause Init Update Refs
[128,915s][info ][gc,ergo        ] GC(43) Pacer for Update Refs. Used: 10711M, Free: 1480M, Non-Taxable: 148M, Alloc Tax Rate: 8,8x
[128,915s][info ][gc             ] GC(43) Pause Init Update Refs 0,033ms
[128,915s][info ][gc,start       ] GC(43) Concurrent update references
[128,915s][info ][gc,task        ] GC(43) Using 5 of 10 workers for concurrent reference update
[129,071s][info ][gc             ] GC(43) Concurrent update references 156,184ms
[129,071s][info ][gc,start       ] GC(43) Concurrent update thread roots
[129,072s][info ][gc             ] GC(43) Concurrent update thread roots 0,857ms
[129,072s][info ][gc,start       ] GC(43) Pause Final Update Refs
[129,072s][info ][gc,task        ] GC(43) Using 10 of 10 workers for final reference update
[129,072s][info ][gc             ] GC(43) Pause Final Update Refs 0,209ms
[129,072s][info ][gc,start       ] GC(43) Concurrent cleanup
[129,073s][info ][gc             ] GC(43) Concurrent cleanup 10895M->5759M(12288M) 0,256ms
[129,073s][debug][gc,ergo        ] GC(43) Available: 5912 MB, z-score=-0,728. Average available: 8046,8 MB +/- 2934,3 MB.
[129,073s][debug][gc,ergo        ] GC(43) Margin of error now 1,85
[129,073s][info ][gc,ergo        ] Free: 5912M, Max: 4096K regular, 98304K humongous, Frag: 99% external, 0% internal; Reserve: 616M, Max: 4096K
[129,073s][info ][gc,stats       ] 
[129,073s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[129,073s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[129,073s][info ][gc,stats       ] 
[129,073s][info ][gc,stats       ] Concurrent Reset                   8525 us
[129,073s][info ][gc,stats       ] Pause Init Mark (G)                 269 us
[129,073s][info ][gc,stats       ] Pause Init Mark (N)                 100 us
[129,073s][info ][gc,stats       ]   Update Region States               53 us
[129,073s][info ][gc,stats       ] Concurrent Mark Roots               471 us, parallelism: 2,59x
[129,073s][info ][gc,stats       ]   CMR: <total>                     1221 us
[129,073s][info ][gc,stats       ]   CMR: Thread Roots                1156 us, workers (us): 332, 183, 210, 257, 174, ---, ---, ---, ---, ---, 
[129,073s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   4,   2,   1,   2,   0, ---, ---, ---, ---, ---, 
[129,073s][info ][gc,stats       ]   CMR: CLDG Roots                    57 us, workers (us): ---,  47,   9, ---, ---, ---, ---, ---, ---, ---, 
[129,073s][info ][gc,stats       ] Concurrent Marking               238402 us
[129,073s][info ][gc,stats       ] Pause Final Mark (G)                490 us
[129,073s][info ][gc,stats       ] Pause Final Mark (N)                407 us
[129,073s][info ][gc,stats       ]   Finish Mark                       110 us
[129,073s][info ][gc,stats       ]   Update Region States               17 us
[129,073s][info ][gc,stats       ]   Choose Collection Set             211 us
[129,073s][info ][gc,stats       ]   Rebuild Free Set                   19 us
[129,073s][info ][gc,stats       ] Concurrent Thread Roots             535 us, parallelism: 2,81x
[129,073s][info ][gc,stats       ]   CTR: <total>                     1507 us
[129,073s][info ][gc,stats       ]   CTR: Thread Roots                1507 us, workers (us): 276, 480, 253, 260, 238, ---, ---, ---, ---, ---, 
[129,073s][info ][gc,stats       ] Concurrent Weak References         2461 us, parallelism: 1,24x
[129,073s][info ][gc,stats       ]   CWRF: <total>                    3061 us
[129,073s][info ][gc,stats       ]   CWRF: Weak References            3061 us, workers (us):  29, 798, 2234,   0,   0, ---, ---, ---, ---, ---, 
[129,073s][info ][gc,stats       ] Concurrent Weak Roots               740 us
[129,073s][info ][gc,stats       ]   Roots                             569 us, parallelism: 3,30x
[129,073s][info ][gc,stats       ]     CWR: <total>                   1876 us
[129,073s][info ][gc,stats       ]     CWR: Code Cache Roots          1352 us, workers (us): 266, 269, 268, 275, 275, ---, ---, ---, ---, ---, 
[129,073s][info ][gc,stats       ]     CWR: VM Weak Roots              504 us, workers (us): 120, 120, 119,  80,  65, ---, ---, ---, ---, ---, 
[129,073s][info ][gc,stats       ]     CWR: CLDG Roots                  19 us, workers (us):  10, ---, ---, ---,  10, ---, ---, ---, ---, ---, 
[129,073s][info ][gc,stats       ]   Rendezvous                        124 us
[129,073s][info ][gc,stats       ] Concurrent Cleanup                  193 us
[129,073s][info ][gc,stats       ] Concurrent Class Unloading         1200 us
[129,073s][info ][gc,stats       ]   Unlink Stale                     1034 us
[129,073s][info ][gc,stats       ]     System Dictionary                29 us
[129,073s][info ][gc,stats       ]     Weak Class Links                  0 us
[129,073s][info ][gc,stats       ]     Code Roots                     1004 us
[129,073s][info ][gc,stats       ]   Rendezvous                         75 us
[129,073s][info ][gc,stats       ]   Purge Unlinked                     70 us
[129,073s][info ][gc,stats       ]     Code Roots                       67 us
[129,073s][info ][gc,stats       ]     CLDG                              3 us
[129,073s][info ][gc,stats       ]     Exception Caches                  0 us
[129,073s][info ][gc,stats       ] Concurrent Strong Roots             189 us, parallelism: 0,92x
[129,073s][info ][gc,stats       ]   CSR: <total>                      174 us
[129,073s][info ][gc,stats       ]   CSR: VM Strong Roots               28 us, workers (us):  10,   9,   8,   1,   0, ---, ---, ---, ---, ---, 
[129,073s][info ][gc,stats       ]   CSR: CLDG Roots                   147 us, workers (us): ---,  71,  76, ---, ---, ---, ---, ---, ---, ---, 
[129,073s][info ][gc,stats       ] Concurrent Evacuation             52255 us
[129,073s][info ][gc,stats       ] Pause Init Update Refs (G)          235 us
[129,073s][info ][gc,stats       ] Pause Init Update Refs (N)           42 us
[129,073s][info ][gc,stats       ]   Manage GCLABs                       4 us
[129,073s][info ][gc,stats       ] Concurrent Update Refs           156232 us
[129,073s][info ][gc,stats       ] Concurrent Update Thread Roots      890 us
[129,073s][info ][gc,stats       ] Pause Final Update Refs (G)         357 us
[129,073s][info ][gc,stats       ] Pause Final Update Refs (N)         231 us
[129,073s][info ][gc,stats       ]   Update Region States              118 us
[129,073s][info ][gc,stats       ]   Trash Collection Set               37 us
[129,073s][info ][gc,stats       ]   Rebuild Free Set                   22 us
[129,073s][info ][gc,stats       ] Concurrent Cleanup                  270 us
[129,073s][info ][gc,stats       ] 
[129,073s][info ][gc,stats       ] Allocation pacing accrued:
[129,073s][info ][gc,stats       ]       0 of  2629 ms (  0,0%): <total>
[129,073s][info ][gc,stats       ]       0 of  2629 ms (  0,0%): <average total>
[129,073s][info ][gc,stats       ] 
[129,073s][info ][gc,metaspace   ] Metaspace: 20454K(20864K)->20454K(20864K) NonClass: 17948K(18176K)->17948K(18176K) Class: 2505K(2688K)->2505K(2688K)
[129,073s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[131,857s][info ][gc             ] Trigger: Average GC time (556,14 ms) is above the time for average allocation rate (1605 MB/s) to deplete free headroom (889M) (margin of error = 1,85)
[131,857s][info ][gc,ergo        ] Free headroom: 1504M (free) - 614M (spike) - 0B (penalties) = 889M
[131,857s][info ][gc,ergo        ] Free: 1504M, Max: 4096K regular, 98304K humongous, Frag: 94% external, 0% internal; Reserve: 616M, Max: 4096K
[131,857s][info ][gc,start       ] GC(44) Concurrent reset
[131,857s][info ][gc,task        ] GC(44) Using 5 of 10 workers for concurrent reset
[131,857s][info ][gc,ergo        ] GC(44) Pacer for Reset. Non-Taxable: 12288M
[131,865s][info ][gc             ] GC(44) Concurrent reset 8,325ms
[131,865s][info ][gc,start       ] GC(44) Pause Init Mark (unload classes)
[131,865s][info ][gc,task        ] GC(44) Using 10 of 10 workers for init marking
[131,865s][info ][gc,ergo        ] GC(44) Pacer for Mark. Expected Live: 2355M, Free: 1491M, Non-Taxable: 149M, Alloc Tax Rate: 1,9x
[131,865s][info ][gc             ] GC(44) Pause Init Mark (unload classes) 0,065ms
[131,865s][info ][gc,start       ] GC(44) Concurrent marking roots
[131,866s][info ][gc,task        ] GC(44) Using 5 of 10 workers for concurrent marking roots
[131,866s][debug][gc,tlab        ] GC(44) TLAB totals: thrds: 7  refills: 1190 max: 1168 slow allocs: 7 max 7 waste:  0,2% gc: 3985616B max: 3753480B slow: 4019448B max: 4010040B
[131,866s][info ][gc             ] GC(44) Concurrent marking roots 0,429ms
[131,866s][info ][gc,start       ] GC(44) Concurrent marking (unload classes)
[131,866s][info ][gc,task        ] GC(44) Using 5 of 10 workers for concurrent marking
[132,103s][info ][gc             ] GC(44) Concurrent marking (unload classes) 237,349ms
[132,103s][info ][gc,start       ] GC(44) Pause Final Mark (unload classes)
[132,103s][info ][gc,task        ] GC(44) Using 10 of 10 workers for final marking
[132,104s][info ][gc,ergo        ] GC(44) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 2104M, Max CSet: 512M, Min Garbage: 0B
[132,104s][info ][gc,ergo        ] GC(44) Collectable Garbage: 6280M (87%), Immediate: 332M (4%), CSet: 5948M (83%)
[132,104s][info ][gc,ergo        ] GC(44) Pacer for Evacuation. Used CSet: 6460M, Free: 1488M, Non-Taxable: 148M, Alloc Tax Rate: 10,6x
[132,104s][info ][gc             ] GC(44) Pause Final Mark (unload classes) 0,500ms
[132,104s][info ][gc,start       ] GC(44) Concurrent thread roots
[132,104s][info ][gc,task        ] GC(44) Using 5 of 10 workers for Concurrent thread roots
[132,104s][info ][gc             ] GC(44) Concurrent thread roots 0,511ms
[132,104s][info ][gc,start       ] GC(44) Concurrent weak references
[132,104s][info ][gc,task        ] GC(44) Using 5 of 10 workers for concurrent weak references
[132,107s][info ][gc,ref         ] GC(44) Encountered references: Soft: 2405, Weak: 1990, Final: 10245, Phantom: 10506
[132,107s][info ][gc,ref         ] GC(44) Discovered  references: Soft: 0, Weak: 744, Final: 10245, Phantom: 10557
[132,107s][info ][gc,ref         ] GC(44) Enqueued    references: Soft: 0, Weak: 0, Final: 10245, Phantom: 10250
[132,107s][info ][gc             ] GC(44) Concurrent weak references 2,091ms
[132,107s][info ][gc,start       ] GC(44) Concurrent weak roots
[132,107s][info ][gc,task        ] GC(44) Using 5 of 10 workers for concurrent weak root
[132,107s][info ][gc             ] GC(44) Concurrent weak roots 0,478ms
[132,107s][info ][gc,start       ] GC(44) Concurrent cleanup
[132,107s][info ][gc             ] GC(44) Concurrent cleanup 10520M->10188M(12288M) 0,078ms
[132,107s][info ][gc,ergo        ] GC(44) Free: 1483M, Max: 4096K regular, 98304K humongous, Frag: 94% external, 0% internal; Reserve: 615M, Max: 4096K
[132,107s][info ][gc,start       ] GC(44) Concurrent class unloading
[132,107s][info ][gc,task        ] GC(44) Using 5 of 10 workers for concurrent class unloading
[132,107s][debug][gc,phases,start] GC(44) ClassLoaderData
[132,107s][debug][gc,phases      ] GC(44) ClassLoaderData 0,015ms
[132,107s][debug][gc,phases,start] GC(44) Trigger cleanups
[132,107s][debug][gc,phases      ] GC(44) Trigger cleanups 0,007ms
[132,108s][info ][gc             ] GC(44) Concurrent class unloading 0,913ms
[132,108s][info ][gc,start       ] GC(44) Concurrent strong roots
[132,108s][info ][gc,task        ] GC(44) Using 5 of 10 workers for concurrent strong root
[132,108s][info ][gc             ] GC(44) Concurrent strong roots 0,096ms
[132,108s][info ][gc,start       ] GC(44) Concurrent evacuation
[132,108s][info ][gc,task        ] GC(44) Using 5 of 10 workers for concurrent evacuation
[132,157s][info ][gc             ] GC(44) Concurrent evacuation 48,976ms
[132,157s][info ][gc,start       ] GC(44) Pause Init Update Refs
[132,158s][info ][gc,ergo        ] GC(44) Pacer for Update Refs. Used: 10772M, Free: 1423M, Non-Taxable: 142M, Alloc Tax Rate: 9,2x
[132,158s][info ][gc             ] GC(44) Pause Init Update Refs 0,039ms
[132,158s][info ][gc,start       ] GC(44) Concurrent update references
[132,158s][info ][gc,task        ] GC(44) Using 5 of 10 workers for concurrent reference update
[132,316s][info ][gc             ] GC(44) Concurrent update references 158,820ms
[132,316s][info ][gc,start       ] GC(44) Concurrent update thread roots
[132,317s][info ][gc             ] GC(44) Concurrent update thread roots 0,844ms
[132,317s][info ][gc,start       ] GC(44) Pause Final Update Refs
[132,317s][info ][gc,task        ] GC(44) Using 10 of 10 workers for final reference update
[132,318s][info ][gc             ] GC(44) Pause Final Update Refs 0,193ms
[132,318s][info ][gc,start       ] GC(44) Concurrent cleanup
[132,318s][info ][gc             ] GC(44) Concurrent cleanup 10955M->4495M(12288M) 0,171ms
[132,318s][debug][gc,ergo        ] GC(44) Available: 7176 MB, z-score=-0,187. Average available: 7701,6 MB +/- 2810,8 MB.
[132,318s][info ][gc,ergo        ] Free: 7176M, Max: 4096K regular, 936M humongous, Frag: 87% external, 0% internal; Reserve: 616M, Max: 4096K
[132,318s][info ][gc,stats       ] 
[132,318s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[132,318s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[132,318s][info ][gc,stats       ] 
[132,318s][info ][gc,stats       ] Concurrent Reset                   8385 us
[132,318s][info ][gc,stats       ] Pause Init Mark (G)                 232 us
[132,318s][info ][gc,stats       ] Pause Init Mark (N)                  73 us
[132,318s][info ][gc,stats       ]   Update Region States               17 us
[132,318s][info ][gc,stats       ] Concurrent Mark Roots               442 us, parallelism: 2,80x
[132,318s][info ][gc,stats       ]   CMR: <total>                     1238 us
[132,318s][info ][gc,stats       ]   CMR: Thread Roots                1162 us, workers (us): 228, 171, 341, 208, 214, ---, ---, ---, ---, ---, 
[132,318s][info ][gc,stats       ]   CMR: VM Strong Roots               11 us, workers (us):   4,   1,   2,   2,   2, ---, ---, ---, ---, ---, 
[132,318s][info ][gc,stats       ]   CMR: CLDG Roots                    65 us, workers (us):  10,  55, ---, ---, ---, ---, ---, ---, ---, ---, 
[132,318s][info ][gc,stats       ] Concurrent Marking               237400 us
[132,318s][info ][gc,stats       ] Pause Final Mark (G)                590 us
[132,318s][info ][gc,stats       ] Pause Final Mark (N)                509 us
[132,318s][info ][gc,stats       ]   Finish Mark                       218 us
[132,318s][info ][gc,stats       ]   Update Region States               19 us
[132,318s][info ][gc,stats       ]   Choose Collection Set             204 us
[132,318s][info ][gc,stats       ]   Rebuild Free Set                   14 us
[132,318s][info ][gc,stats       ] Concurrent Thread Roots             544 us, parallelism: 2,47x
[132,318s][info ][gc,stats       ]   CTR: <total>                     1346 us
[132,318s][info ][gc,stats       ]   CTR: Thread Roots                1346 us, workers (us): 457, 273, 248, 218, 150, ---, ---, ---, ---, ---, 
[132,318s][info ][gc,stats       ] Concurrent Weak References         2100 us, parallelism: 1,81x
[132,318s][info ][gc,stats       ]   CWRF: <total>                    3804 us
[132,318s][info ][gc,stats       ]   CWRF: Weak References            3804 us, workers (us): 557, 1291, 1931,  25,   0, ---, ---, ---, ---, ---, 
[132,318s][info ][gc,stats       ] Concurrent Weak Roots               501 us
[132,318s][info ][gc,stats       ]   Roots                             442 us, parallelism: 3,60x
[132,318s][info ][gc,stats       ]     CWR: <total>                   1591 us
[132,318s][info ][gc,stats       ]     CWR: Code Cache Roots          1110 us, workers (us): 233, 248, 193, 222, 213, ---, ---, ---, ---, ---, 
[132,318s][info ][gc,stats       ]     CWR: VM Weak Roots              465 us, workers (us): 156, 112, 111,  45,  42, ---, ---, ---, ---, ---, 
[132,318s][info ][gc,stats       ]     CWR: CLDG Roots                  16 us, workers (us): ---, ---,  10, ---,   6, ---, ---, ---, ---, ---, 
[132,318s][info ][gc,stats       ]   Rendezvous                         24 us
[132,318s][info ][gc,stats       ] Concurrent Cleanup                   89 us
[132,318s][info ][gc,stats       ] Concurrent Class Unloading          929 us
[132,318s][info ][gc,stats       ]   Unlink Stale                      861 us
[132,318s][info ][gc,stats       ]     System Dictionary                39 us
[132,318s][info ][gc,stats       ]     Weak Class Links                  0 us
[132,318s][info ][gc,stats       ]     Code Roots                      821 us
[132,318s][info ][gc,stats       ]   Rendezvous                         33 us
[132,318s][info ][gc,stats       ]   Purge Unlinked                      2 us
[132,318s][info ][gc,stats       ]     Code Roots                        0 us
[132,318s][info ][gc,stats       ]     CLDG                              2 us
[132,318s][info ][gc,stats       ]     Exception Caches                  0 us
[132,318s][info ][gc,stats       ] Concurrent Strong Roots             107 us, parallelism: 0,65x
[132,318s][info ][gc,stats       ]   CSR: <total>                       70 us
[132,318s][info ][gc,stats       ]   CSR: VM Strong Roots                4 us, workers (us):   4,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[132,318s][info ][gc,stats       ]   CSR: CLDG Roots                    66 us, workers (us):  61,   5, ---, ---, ---, ---, ---, ---, ---, ---, 
[132,318s][info ][gc,stats       ] Concurrent Evacuation             49041 us
[132,318s][info ][gc,stats       ] Pause Init Update Refs (G)          275 us
[132,318s][info ][gc,stats       ] Pause Init Update Refs (N)           49 us
[132,318s][info ][gc,stats       ]   Manage GCLABs                       4 us
[132,318s][info ][gc,stats       ] Concurrent Update Refs           158869 us
[132,318s][info ][gc,stats       ] Concurrent Update Thread Roots      861 us
[132,318s][info ][gc,stats       ] Pause Final Update Refs (G)         371 us
[132,318s][info ][gc,stats       ] Pause Final Update Refs (N)         215 us
[132,318s][info ][gc,stats       ]   Update Region States              128 us
[132,318s][info ][gc,stats       ]   Trash Collection Set               15 us
[132,318s][info ][gc,stats       ]   Rebuild Free Set                   17 us
[132,318s][info ][gc,stats       ] Concurrent Cleanup                  183 us
[132,318s][info ][gc,stats       ] 
[132,318s][info ][gc,stats       ] Allocation pacing accrued:
[132,318s][info ][gc,stats       ]       0 of  3245 ms (  0,0%): <total>
[132,318s][info ][gc,stats       ]       0 of  3245 ms (  0,0%): <average total>
[132,318s][info ][gc,stats       ] 
[132,318s][info ][gc,metaspace   ] Metaspace: 20454K(20864K)->20454K(20864K) NonClass: 17948K(18176K)->17948K(18176K) Class: 2505K(2688K)->2505K(2688K)
[132,318s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[135,166s][debug][gc,nmethod     ] Register NMethod: java.lang.String.getBytesNoRepl1 [0x00007fae7cb8e190] (c2)
[135,309s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae5d5f3610] (c1)
[135,347s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae7cc2c410] (c2)
[135,379s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae5d1eb910] (c1)
[135,380s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae5d7fe810] (c1)
[135,420s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae7cc4b390] (c2)
[135,925s][info ][gc             ] Trigger: Average GC time (535,73 ms) is above the time for average allocation rate (1591 MB/s) to deplete free headroom (849M) (margin of error = 1,85)
[135,925s][info ][gc,ergo        ] Free headroom: 1464M (free) - 614M (spike) - 0B (penalties) = 849M
[135,925s][info ][gc,ergo        ] Free: 1464M, Max: 4096K regular, 936M humongous, Frag: 37% external, 0% internal; Reserve: 616M, Max: 4096K
[135,925s][info ][gc,start       ] GC(45) Concurrent reset
[135,925s][info ][gc,task        ] GC(45) Using 5 of 10 workers for concurrent reset
[135,925s][info ][gc,ergo        ] GC(45) Pacer for Reset. Non-Taxable: 12288M
[135,934s][info ][gc             ] GC(45) Concurrent reset 8,436ms
[135,934s][info ][gc,start       ] GC(45) Pause Init Mark (unload classes)
[135,934s][info ][gc,task        ] GC(45) Using 10 of 10 workers for init marking
[135,934s][info ][gc,ergo        ] GC(45) Pacer for Mark. Expected Live: 2660M, Free: 1452M, Non-Taxable: 145M, Alloc Tax Rate: 2,2x
[135,934s][info ][gc             ] GC(45) Pause Init Mark (unload classes) 0,058ms
[135,934s][info ][gc,start       ] GC(45) Concurrent marking roots
[135,934s][info ][gc,task        ] GC(45) Using 5 of 10 workers for concurrent marking roots
[135,934s][debug][gc,tlab        ] GC(45) TLAB totals: thrds: 7  refills: 1515 max: 1493 slow allocs: 7 max 7 waste:  0,1% gc: 3050872B max: 2916520B slow: 4733768B max: 4724304B
[135,934s][info ][gc             ] GC(45) Concurrent marking roots 0,515ms
[135,934s][info ][gc,start       ] GC(45) Concurrent marking (unload classes)
[135,934s][info ][gc,task        ] GC(45) Using 5 of 10 workers for concurrent marking
[136,172s][info ][gc             ] GC(45) Concurrent marking (unload classes) 237,847ms
[136,172s][info ][gc,start       ] GC(45) Pause Final Mark (unload classes)
[136,172s][info ][gc,task        ] GC(45) Using 10 of 10 workers for final marking
[136,173s][info ][gc,ergo        ] GC(45) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 2240M, Max CSet: 512M, Min Garbage: 0B
[136,173s][info ][gc,ergo        ] GC(45) Collectable Garbage: 6628M (92%), Immediate: 508M (7%), CSet: 6120M (85%)
[136,173s][info ][gc,ergo        ] GC(45) Pacer for Evacuation. Used CSet: 6632M, Free: 1624M, Non-Taxable: 162M, Alloc Tax Rate: 10,0x
[136,173s][info ][gc             ] GC(45) Pause Final Mark (unload classes) 0,421ms
[136,173s][info ][gc,start       ] GC(45) Concurrent thread roots
[136,173s][info ][gc,task        ] GC(45) Using 5 of 10 workers for Concurrent thread roots
[136,173s][info ][gc             ] GC(45) Concurrent thread roots 0,433ms
[136,173s][info ][gc,start       ] GC(45) Concurrent weak references
[136,173s][info ][gc,task        ] GC(45) Using 5 of 10 workers for concurrent weak references
[136,176s][info ][gc,ref         ] GC(45) Encountered references: Soft: 2400, Weak: 1992, Final: 12930, Phantom: 13296
[136,176s][info ][gc,ref         ] GC(45) Discovered  references: Soft: 0, Weak: 831, Final: 12930, Phantom: 13216
[136,176s][info ][gc,ref         ] GC(45) Enqueued    references: Soft: 0, Weak: 0, Final: 12930, Phantom: 12937
[136,176s][info ][gc             ] GC(45) Concurrent weak references 2,670ms
[136,176s][info ][gc,start       ] GC(45) Concurrent weak roots
[136,176s][info ][gc,task        ] GC(45) Using 5 of 10 workers for concurrent weak root
[136,176s][info ][gc             ] GC(45) Concurrent weak roots 0,544ms
[136,176s][info ][gc,start       ] GC(45) Concurrent cleanup
[136,177s][info ][gc             ] GC(45) Concurrent cleanup 10562M->10054M(12288M) 0,086ms
[136,177s][info ][gc,ergo        ] GC(45) Free: 1619M, Max: 4096K regular, 1192M humongous, Frag: 27% external, 0% internal; Reserve: 613M, Max: 4096K
[136,177s][info ][gc,start       ] GC(45) Concurrent class unloading
[136,177s][info ][gc,task        ] GC(45) Using 5 of 10 workers for concurrent class unloading
[136,177s][debug][gc,phases,start] GC(45) ClassLoaderData
[136,177s][debug][gc,phases      ] GC(45) ClassLoaderData 0,015ms
[136,177s][debug][gc,phases,start] GC(45) Trigger cleanups
[136,177s][debug][gc,phases      ] GC(45) Trigger cleanups 0,008ms
[136,178s][debug][gc,nmethod     ] GC(45) Unregister NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae5d7fe810]
[136,178s][debug][gc,nmethod     ] GC(45) Unregister NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae7cc40610]
[136,178s][debug][gc,nmethod     ] GC(45) Unregister NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae7cc2c410]
[136,178s][debug][gc,nmethod     ] GC(45) Unregister NMethod: java.util.concurrent.ForkJoinPool.scan [0x00007fae5d5f3610]
[136,178s][debug][gc,nmethod     ] GC(45) Unregister NMethod: java.lang.String.getBytesNoRepl1 [0x00007fae5d162c90]
[136,178s][info ][gc             ] GC(45) Concurrent class unloading 1,136ms
[136,178s][info ][gc,start       ] GC(45) Concurrent strong roots
[136,178s][info ][gc,task        ] GC(45) Using 5 of 10 workers for concurrent strong root
[136,178s][info ][gc             ] GC(45) Concurrent strong roots 0,209ms
[136,178s][info ][gc,start       ] GC(45) Concurrent evacuation
[136,178s][info ][gc,task        ] GC(45) Using 5 of 10 workers for concurrent evacuation
[136,230s][info ][gc             ] GC(45) Concurrent evacuation 52,410ms
[136,231s][info ][gc,start       ] GC(45) Pause Init Update Refs
[136,231s][info ][gc,ergo        ] GC(45) Pacer for Update Refs. Used: 10640M, Free: 1555M, Non-Taxable: 155M, Alloc Tax Rate: 8,4x
[136,231s][info ][gc             ] GC(45) Pause Init Update Refs 0,040ms
[136,231s][info ][gc,start       ] GC(45) Concurrent update references
[136,231s][info ][gc,task        ] GC(45) Using 5 of 10 workers for concurrent reference update
[136,386s][info ][gc             ] GC(45) Concurrent update references 154,839ms
[136,386s][info ][gc,start       ] GC(45) Concurrent update thread roots
[136,386s][info ][gc             ] GC(45) Concurrent update thread roots 0,776ms
[136,386s][info ][gc,start       ] GC(45) Pause Final Update Refs
[136,386s][info ][gc,task        ] GC(45) Using 10 of 10 workers for final reference update
[136,387s][info ][gc             ] GC(45) Pause Final Update Refs 0,120ms
[136,387s][info ][gc,start       ] GC(45) Concurrent cleanup
[136,387s][info ][gc             ] GC(45) Concurrent cleanup 10820M->4188M(12288M) 0,188ms
[136,387s][debug][gc,ergo        ] GC(45) Available: 7483 MB, z-score=0,043. Average available: 7372,0 MB +/- 2617,1 MB.
[136,387s][info ][gc,ergo        ] Free: 7483M, Max: 4096K regular, 872M humongous, Frag: 89% external, 0% internal; Reserve: 616M, Max: 4096K
[136,387s][info ][gc,stats       ] 
[136,387s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[136,387s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[136,387s][info ][gc,stats       ] 
[136,387s][info ][gc,stats       ] Concurrent Reset                   8486 us
[136,387s][info ][gc,stats       ] Pause Init Mark (G)                 208 us
[136,387s][info ][gc,stats       ] Pause Init Mark (N)                  67 us
[136,387s][info ][gc,stats       ]   Update Region States               17 us
[136,387s][info ][gc,stats       ] Concurrent Mark Roots               537 us, parallelism: 2,20x
[136,387s][info ][gc,stats       ]   CMR: <total>                     1182 us
[136,387s][info ][gc,stats       ]   CMR: Thread Roots                1113 us, workers (us): 144, 386, 189, 219, 176, ---, ---, ---, ---, ---, 
[136,387s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   3,   3,   2,   0,   0, ---, ---, ---, ---, ---, 
[136,387s][info ][gc,stats       ]   CMR: CLDG Roots                    60 us, workers (us):  51, ---,  10, ---, ---, ---, ---, ---, ---, ---, 
[136,387s][info ][gc,stats       ] Concurrent Marking               237899 us
[136,387s][info ][gc,stats       ] Pause Final Mark (G)                495 us
[136,387s][info ][gc,stats       ] Pause Final Mark (N)                430 us
[136,387s][info ][gc,stats       ]   Finish Mark                       160 us
[136,387s][info ][gc,stats       ]   Update Region States               17 us
[136,387s][info ][gc,stats       ]   Choose Collection Set             186 us
[136,387s][info ][gc,stats       ]   Rebuild Free Set                   13 us
[136,387s][info ][gc,stats       ] Concurrent Thread Roots             465 us, parallelism: 2,75x
[136,387s][info ][gc,stats       ]   CTR: <total>                     1277 us
[136,387s][info ][gc,stats       ]   CTR: Thread Roots                1277 us, workers (us): 396, 254, 208, 218, 201, ---, ---, ---, ---, ---, 
[136,387s][info ][gc,stats       ] Concurrent Weak References         2683 us, parallelism: 1,80x
[136,387s][info ][gc,stats       ]   CWRF: <total>                    4838 us
[136,387s][info ][gc,stats       ]   CWRF: Weak References            4838 us, workers (us): 2598, 2167,  46,  27,   0, ---, ---, ---, ---, ---, 
[136,387s][info ][gc,stats       ] Concurrent Weak Roots               565 us
[136,387s][info ][gc,stats       ]   Roots                             452 us, parallelism: 3,56x
[136,387s][info ][gc,stats       ]     CWR: <total>                   1610 us
[136,387s][info ][gc,stats       ]     CWR: Code Cache Roots          1005 us, workers (us): 116, 216, 251, 225, 197, ---, ---, ---, ---, ---, 
[136,387s][info ][gc,stats       ]     CWR: VM Weak Roots              587 us, workers (us): 234, 154, 117,  59,  21, ---, ---, ---, ---, ---, 
[136,387s][info ][gc,stats       ]     CWR: CLDG Roots                  19 us, workers (us): ---,   9, ---, ---,   9, ---, ---, ---, ---, ---, 
[136,387s][info ][gc,stats       ]   Rendezvous                         73 us
[136,387s][info ][gc,stats       ] Concurrent Cleanup                   98 us
[136,387s][info ][gc,stats       ] Concurrent Class Unloading         1149 us
[136,387s][info ][gc,stats       ]   Unlink Stale                      866 us
[136,387s][info ][gc,stats       ]     System Dictionary                40 us
[136,387s][info ][gc,stats       ]     Weak Class Links                  0 us
[136,387s][info ][gc,stats       ]     Code Roots                      825 us
[136,387s][info ][gc,stats       ]   Rendezvous                        150 us
[136,387s][info ][gc,stats       ]   Purge Unlinked                    102 us
[136,387s][info ][gc,stats       ]     Code Roots                      100 us
[136,387s][info ][gc,stats       ]     CLDG                              2 us
[136,387s][info ][gc,stats       ]     Exception Caches                  0 us
[136,387s][info ][gc,stats       ] Concurrent Strong Roots             223 us, parallelism: 1,01x
[136,387s][info ][gc,stats       ]   CSR: <total>                      224 us
[136,387s][info ][gc,stats       ]   CSR: VM Strong Roots                5 us, workers (us):   4,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[136,387s][info ][gc,stats       ]   CSR: CLDG Roots                   220 us, workers (us): 107, 112, ---, ---, ---, ---, ---, ---, ---, ---, 
[136,387s][info ][gc,stats       ] Concurrent Evacuation             52488 us
[136,387s][info ][gc,stats       ] Pause Init Update Refs (G)          272 us
[136,387s][info ][gc,stats       ] Pause Init Update Refs (N)           50 us
[136,387s][info ][gc,stats       ]   Manage GCLABs                       4 us
[136,387s][info ][gc,stats       ] Concurrent Update Refs           154892 us
[136,387s][info ][gc,stats       ] Concurrent Update Thread Roots      798 us
[136,387s][info ][gc,stats       ] Pause Final Update Refs (G)         234 us
[136,387s][info ][gc,stats       ] Pause Final Update Refs (N)         131 us
[136,387s][info ][gc,stats       ]   Update Region States               33 us
[136,387s][info ][gc,stats       ]   Trash Collection Set               39 us
[136,387s][info ][gc,stats       ]   Rebuild Free Set                   16 us
[136,387s][info ][gc,stats       ] Concurrent Cleanup                  204 us
[136,387s][info ][gc,stats       ] 
[136,387s][info ][gc,stats       ] Allocation pacing accrued:
[136,387s][info ][gc,stats       ]       0 of  4069 ms (  0,0%): <total>
[136,387s][info ][gc,stats       ]       0 of  4069 ms (  0,0%): <average total>
[136,387s][info ][gc,stats       ] 
[136,387s][info ][gc,metaspace   ] Metaspace: 20454K(20864K)->20454K(20864K) NonClass: 17948K(18176K)->17948K(18176K) Class: 2505K(2688K)->2505K(2688K)
[136,387s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[140,116s][info ][gc             ] Trigger: Average GC time (517,66 ms) is above the time for average allocation rate (1615 MB/s) to deplete free headroom (833M) (margin of error = 1,85)
[140,116s][info ][gc,ergo        ] Free headroom: 1447M (free) - 614M (spike) - 0B (penalties) = 833M
[140,116s][info ][gc,ergo        ] Free: 1447M, Max: 4096K regular, 872M humongous, Frag: 40% external, 0% internal; Reserve: 616M, Max: 4096K
[140,116s][info ][gc,start       ] GC(46) Concurrent reset
[140,116s][info ][gc,task        ] GC(46) Using 5 of 10 workers for concurrent reset
[140,116s][info ][gc,ergo        ] GC(46) Pacer for Reset. Non-Taxable: 12288M
[140,123s][info ][gc             ] GC(46) Concurrent reset 7,386ms
[140,123s][info ][gc,start       ] GC(46) Pause Init Mark (unload classes)
[140,123s][info ][gc,task        ] GC(46) Using 10 of 10 workers for init marking
[140,123s][info ][gc,ergo        ] GC(46) Pacer for Mark. Expected Live: 2874M, Free: 1439M, Non-Taxable: 143M, Alloc Tax Rate: 2,4x
[140,123s][info ][gc             ] GC(46) Pause Init Mark (unload classes) 0,092ms
[140,123s][info ][gc,start       ] GC(46) Concurrent marking roots
[140,123s][info ][gc,task        ] GC(46) Using 5 of 10 workers for concurrent marking roots
[140,123s][debug][gc,tlab        ] GC(46) TLAB totals: thrds: 5  refills: 1585 max: 1573 slow allocs: 0 max 0 waste:  0,1% gc: 951992B max: 887024B slow: 5917744B max: 5913016B
[140,124s][info ][gc             ] GC(46) Concurrent marking roots 0,471ms
[140,124s][info ][gc,start       ] GC(46) Concurrent marking (unload classes)
[140,124s][info ][gc,task        ] GC(46) Using 5 of 10 workers for concurrent marking
[140,369s][info ][gc             ] GC(46) Concurrent marking (unload classes) 245,154ms
[140,369s][info ][gc,start       ] GC(46) Pause Final Mark (unload classes)
[140,369s][info ][gc,task        ] GC(46) Using 10 of 10 workers for final marking
[140,370s][info ][gc,ergo        ] GC(46) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 2044M, Max CSet: 512M, Min Garbage: 0B
[140,370s][info ][gc,ergo        ] GC(46) Collectable Garbage: 6356M (88%), Immediate: 340M (4%), CSet: 6016M (83%)
[140,370s][info ][gc,ergo        ] GC(46) Pacer for Evacuation. Used CSet: 6528M, Free: 1432M, Non-Taxable: 143M, Alloc Tax Rate: 11,1x
[140,370s][info ][gc             ] GC(46) Pause Final Mark (unload classes) 0,614ms
[140,370s][info ][gc,start       ] GC(46) Concurrent thread roots
[140,370s][info ][gc,task        ] GC(46) Using 5 of 10 workers for Concurrent thread roots
[140,370s][info ][gc             ] GC(46) Concurrent thread roots 0,557ms
[140,371s][info ][gc,start       ] GC(46) Concurrent weak references
[140,371s][info ][gc,task        ] GC(46) Using 5 of 10 workers for concurrent weak references
[140,374s][info ][gc,ref         ] GC(46) Encountered references: Soft: 2405, Weak: 1993, Final: 13511, Phantom: 13834
[140,374s][info ][gc,ref         ] GC(46) Discovered  references: Soft: 0, Weak: 405, Final: 13511, Phantom: 13798
[140,374s][info ][gc,ref         ] GC(46) Enqueued    references: Soft: 0, Weak: 1, Final: 13511, Phantom: 13517
[140,374s][info ][gc             ] GC(46) Concurrent weak references 3,834ms
[140,374s][info ][gc,start       ] GC(46) Concurrent weak roots
[140,374s][info ][gc,task        ] GC(46) Using 5 of 10 workers for concurrent weak root
[140,375s][info ][gc             ] GC(46) Concurrent weak roots 0,579ms
[140,375s][info ][gc,start       ] GC(46) Concurrent cleanup
[140,375s][info ][gc             ] GC(46) Concurrent cleanup 10589M->10249M(12288M) 0,084ms
[140,375s][info ][gc,ergo        ] GC(46) Free: 1424M, Max: 4096K regular, 1064M humongous, Frag: 26% external, 0% internal; Reserve: 614M, Max: 4096K
[140,375s][info ][gc,start       ] GC(46) Concurrent class unloading
[140,375s][info ][gc,task        ] GC(46) Using 5 of 10 workers for concurrent class unloading
[140,375s][debug][gc,phases,start] GC(46) ClassLoaderData
[140,375s][debug][gc,phases      ] GC(46) ClassLoaderData 0,015ms
[140,375s][debug][gc,phases,start] GC(46) Trigger cleanups
[140,375s][debug][gc,phases      ] GC(46) Trigger cleanups 0,008ms
[140,376s][info ][gc             ] GC(46) Concurrent class unloading 0,801ms
[140,376s][info ][gc,start       ] GC(46) Concurrent strong roots
[140,376s][info ][gc,task        ] GC(46) Using 5 of 10 workers for concurrent strong root
[140,376s][info ][gc             ] GC(46) Concurrent strong roots 0,082ms
[140,376s][info ][gc,start       ] GC(46) Concurrent evacuation
[140,376s][info ][gc,task        ] GC(46) Using 5 of 10 workers for concurrent evacuation
[140,426s][info ][gc             ] GC(46) Concurrent evacuation 50,074ms
[140,426s][info ][gc,start       ] GC(46) Pause Init Update Refs
[140,426s][info ][gc,ergo        ] GC(46) Pacer for Update Refs. Used: 10831M, Free: 1364M, Non-Taxable: 136M, Alloc Tax Rate: 9,7x
[140,426s][info ][gc             ] GC(46) Pause Init Update Refs 0,040ms
[140,426s][info ][gc,start       ] GC(46) Concurrent update references
[140,426s][info ][gc,task        ] GC(46) Using 5 of 10 workers for concurrent reference update
[140,583s][info ][gc             ] GC(46) Concurrent update references 156,692ms
[140,583s][info ][gc,start       ] GC(46) Concurrent update thread roots
[140,584s][info ][gc             ] GC(46) Concurrent update thread roots 0,946ms
[140,584s][info ][gc,start       ] GC(46) Pause Final Update Refs
[140,584s][info ][gc,task        ] GC(46) Using 10 of 10 workers for final reference update
[140,584s][info ][gc             ] GC(46) Pause Final Update Refs 0,195ms
[140,585s][info ][gc,start       ] GC(46) Concurrent cleanup
[140,585s][info ][gc             ] GC(46) Concurrent cleanup 11016M->4488M(12288M) 0,260ms
[140,585s][debug][gc,ergo        ] GC(46) Available: 7183 MB, z-score=0,079. Average available: 7000,0 MB +/- 2338,1 MB.
[140,585s][info ][gc,ergo        ] Free: 7183M, Max: 4096K regular, 980M humongous, Frag: 87% external, 0% internal; Reserve: 616M, Max: 4096K
[140,585s][info ][gc,stats       ] 
[140,585s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[140,585s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[140,585s][info ][gc,stats       ] 
[140,585s][info ][gc,stats       ] Concurrent Reset                   7444 us
[140,585s][info ][gc,stats       ] Pause Init Mark (G)                 264 us
[140,585s][info ][gc,stats       ] Pause Init Mark (N)                 102 us
[140,585s][info ][gc,stats       ]   Update Region States               29 us
[140,585s][info ][gc,stats       ] Concurrent Mark Roots               479 us, parallelism: 2,47x
[140,585s][info ][gc,stats       ]   CMR: <total>                     1184 us
[140,585s][info ][gc,stats       ]   CMR: Thread Roots                1118 us, workers (us): 201, 391, 182, 172, 171, ---, ---, ---, ---, ---, 
[140,585s][info ][gc,stats       ]   CMR: VM Strong Roots                7 us, workers (us):   3,   4,   0,   0,   0, ---, ---, ---, ---, ---, 
[140,585s][info ][gc,stats       ]   CMR: CLDG Roots                    58 us, workers (us):  49,   9, ---, ---, ---, ---, ---, ---, ---, ---, 
[140,585s][info ][gc,stats       ] Concurrent Marking               245198 us
[140,585s][info ][gc,stats       ] Pause Final Mark (G)                915 us
[140,585s][info ][gc,stats       ] Pause Final Mark (N)                624 us
[140,585s][info ][gc,stats       ]   Finish Mark                       217 us
[140,585s][info ][gc,stats       ]   Update Region States              115 us
[140,585s][info ][gc,stats       ]   Choose Collection Set             217 us
[140,585s][info ][gc,stats       ]   Rebuild Free Set                   12 us
[140,585s][info ][gc,stats       ] Concurrent Thread Roots             576 us, parallelism: 2,59x
[140,585s][info ][gc,stats       ]   CTR: <total>                     1493 us
[140,585s][info ][gc,stats       ]   CTR: Thread Roots                1493 us, workers (us): 469, 282, 260, 306, 176, ---, ---, ---, ---, ---, 
[140,585s][info ][gc,stats       ] Concurrent Weak References         3849 us, parallelism: 1,24x
[140,585s][info ][gc,stats       ]   CWRF: <total>                    4784 us
[140,585s][info ][gc,stats       ]   CWRF: Weak References            4784 us, workers (us): 729, 3693, 357,   4,   0, ---, ---, ---, ---, ---, 
[140,585s][info ][gc,stats       ] Concurrent Weak Roots               598 us
[140,585s][info ][gc,stats       ]   Roots                             422 us, parallelism: 3,92x
[140,585s][info ][gc,stats       ]     CWR: <total>                   1654 us
[140,585s][info ][gc,stats       ]     CWR: Code Cache Roots          1158 us, workers (us): 248, 242, 237, 199, 233, ---, ---, ---, ---, ---, 
[140,585s][info ][gc,stats       ]     CWR: VM Weak Roots              479 us, workers (us): 127, 127, 126,  85,  14, ---, ---, ---, ---, ---, 
[140,585s][info ][gc,stats       ]     CWR: CLDG Roots                  16 us, workers (us):   6, ---, ---,  10, ---, ---, ---, ---, ---, ---, 
[140,585s][info ][gc,stats       ]   Rendezvous                        138 us
[140,585s][info ][gc,stats       ] Concurrent Cleanup                   96 us
[140,585s][info ][gc,stats       ] Concurrent Class Unloading          818 us
[140,585s][info ][gc,stats       ]   Unlink Stale                      763 us
[140,585s][info ][gc,stats       ]     System Dictionary                41 us
[140,585s][info ][gc,stats       ]     Weak Class Links                  0 us
[140,585s][info ][gc,stats       ]     Code Roots                      721 us
[140,585s][info ][gc,stats       ]   Rendezvous                         18 us
[140,585s][info ][gc,stats       ]   Purge Unlinked                      2 us
[140,585s][info ][gc,stats       ]     Code Roots                        0 us
[140,585s][info ][gc,stats       ]     CLDG                              2 us
[140,585s][info ][gc,stats       ]     Exception Caches                  0 us
[140,585s][info ][gc,stats       ] Concurrent Strong Roots              94 us, parallelism: 1,00x
[140,585s][info ][gc,stats       ]   CSR: <total>                       93 us
[140,585s][info ][gc,stats       ]   CSR: VM Strong Roots                5 us, workers (us):   3,   2,   0,   0,   0, ---, ---, ---, ---, ---, 
[140,585s][info ][gc,stats       ]   CSR: CLDG Roots                    88 us, workers (us): ---,  48,  40, ---, ---, ---, ---, ---, ---, ---, 
[140,585s][info ][gc,stats       ] Concurrent Evacuation             50132 us
[140,585s][info ][gc,stats       ] Pause Init Update Refs (G)          249 us
[140,585s][info ][gc,stats       ] Pause Init Update Refs (N)           49 us
[140,585s][info ][gc,stats       ]   Manage GCLABs                       4 us
[140,585s][info ][gc,stats       ] Concurrent Update Refs           156748 us
[140,585s][info ][gc,stats       ] Concurrent Update Thread Roots      979 us
[140,585s][info ][gc,stats       ] Pause Final Update Refs (G)         415 us
[140,585s][info ][gc,stats       ] Pause Final Update Refs (N)         217 us
[140,585s][info ][gc,stats       ]   Update Region States              111 us
[140,585s][info ][gc,stats       ]   Trash Collection Set               39 us
[140,585s][info ][gc,stats       ]   Rebuild Free Set                   16 us
[140,585s][info ][gc,stats       ] Concurrent Cleanup                  272 us
[140,585s][info ][gc,stats       ] 
[140,585s][info ][gc,stats       ] Allocation pacing accrued:
[140,585s][info ][gc,stats       ]       0 of  4198 ms (  0,0%): <total>
[140,585s][info ][gc,stats       ]       0 of  4198 ms (  0,0%): <average total>
[140,585s][info ][gc,stats       ] 
[140,585s][info ][gc,metaspace   ] Metaspace: 20454K(20864K)->20454K(20864K) NonClass: 17948K(18176K)->17948K(18176K) Class: 2505K(2688K)->2505K(2688K)
[140,585s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[144,100s][info ][gc             ] Trigger: Average GC time (508,04 ms) is above the time for average allocation rate (1639 MB/s) to deplete free headroom (829M) (margin of error = 1,85)
[144,100s][info ][gc,ergo        ] Free headroom: 1443M (free) - 614M (spike) - 0B (penalties) = 829M
[144,100s][info ][gc,ergo        ] Free: 1443M, Max: 4096K regular, 904M humongous, Frag: 38% external, 0% internal; Reserve: 616M, Max: 4096K
[144,100s][info ][gc,start       ] GC(47) Concurrent reset
[144,100s][info ][gc,task        ] GC(47) Using 5 of 10 workers for concurrent reset
[144,100s][info ][gc,ergo        ] GC(47) Pacer for Reset. Non-Taxable: 12288M
[144,109s][info ][gc             ] GC(47) Concurrent reset 8,565ms
[144,109s][info ][gc,start       ] GC(47) Pause Init Mark (unload classes)
[144,109s][info ][gc,task        ] GC(47) Using 10 of 10 workers for init marking
[144,109s][info ][gc,ergo        ] GC(47) Pacer for Mark. Expected Live: 3001M, Free: 1431M, Non-Taxable: 143M, Alloc Tax Rate: 2,6x
[144,109s][info ][gc             ] GC(47) Pause Init Mark (unload classes) 0,061ms
[144,109s][info ][gc,start       ] GC(47) Concurrent marking roots
[144,109s][info ][gc,task        ] GC(47) Using 5 of 10 workers for concurrent marking roots
[144,109s][debug][gc,tlab        ] GC(47) TLAB totals: thrds: 6  refills: 1902 max: 1501 slow allocs: 6 max 6 waste:  0,1% gc: 2548168B max: 2477600B slow: 5797952B max: 5564528B
[144,110s][info ][gc             ] GC(47) Concurrent marking roots 0,523ms
[144,110s][info ][gc,start       ] GC(47) Concurrent marking (unload classes)
[144,110s][info ][gc,task        ] GC(47) Using 5 of 10 workers for concurrent marking
[144,352s][info ][gc             ] GC(47) Concurrent marking (unload classes) 242,019ms
[144,352s][info ][gc,start       ] GC(47) Pause Final Mark (unload classes)
[144,352s][info ][gc,task        ] GC(47) Using 10 of 10 workers for final marking
[144,352s][info ][gc,ergo        ] GC(47) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 2004M, Max CSet: 512M, Min Garbage: 0B
[144,352s][info ][gc,ergo        ] GC(47) Collectable Garbage: 6472M (90%), Immediate: 304M (4%), CSet: 6168M (85%)
[144,352s][info ][gc,ergo        ] GC(47) Pacer for Evacuation. Used CSet: 6680M, Free: 1392M, Non-Taxable: 139M, Alloc Tax Rate: 11,7x
[144,352s][info ][gc             ] GC(47) Pause Final Mark (unload classes) 0,353ms
[144,352s][info ][gc,start       ] GC(47) Concurrent thread roots
[144,352s][info ][gc,task        ] GC(47) Using 5 of 10 workers for Concurrent thread roots
[144,353s][info ][gc             ] GC(47) Concurrent thread roots 0,553ms
[144,353s][info ][gc,start       ] GC(47) Concurrent weak references
[144,353s][info ][gc,task        ] GC(47) Using 5 of 10 workers for concurrent weak references
[144,357s][info ][gc,ref         ] GC(47) Encountered references: Soft: 2402, Weak: 1992, Final: 12898, Phantom: 13300
[144,357s][info ][gc,ref         ] GC(47) Discovered  references: Soft: 0, Weak: 323, Final: 12898, Phantom: 13293
[144,357s][info ][gc,ref         ] GC(47) Enqueued    references: Soft: 0, Weak: 0, Final: 12898, Phantom: 12905
[144,357s][info ][gc             ] GC(47) Concurrent weak references 4,342ms
[144,357s][info ][gc,start       ] GC(47) Concurrent weak roots
[144,357s][info ][gc,task        ] GC(47) Using 5 of 10 workers for concurrent weak root
[144,358s][info ][gc             ] GC(47) Concurrent weak roots 0,627ms
[144,358s][info ][gc,start       ] GC(47) Concurrent cleanup
[144,358s][info ][gc             ] GC(47) Concurrent cleanup 10593M->10289M(12288M) 0,083ms
[144,358s][info ][gc,ergo        ] GC(47) Free: 1384M, Max: 4096K regular, 1100M humongous, Frag: 21% external, 0% internal; Reserve: 614M, Max: 4096K
[144,358s][info ][gc,start       ] GC(47) Concurrent class unloading
[144,358s][info ][gc,task        ] GC(47) Using 5 of 10 workers for concurrent class unloading
[144,358s][debug][gc,phases,start] GC(47) ClassLoaderData
[144,358s][debug][gc,phases      ] GC(47) ClassLoaderData 0,016ms
[144,358s][debug][gc,phases,start] GC(47) Trigger cleanups
[144,358s][debug][gc,phases      ] GC(47) Trigger cleanups 0,007ms
[144,359s][info ][gc             ] GC(47) Concurrent class unloading 0,857ms
[144,359s][info ][gc,start       ] GC(47) Concurrent strong roots
[144,359s][info ][gc,task        ] GC(47) Using 5 of 10 workers for concurrent strong root
[144,359s][info ][gc             ] GC(47) Concurrent strong roots 0,086ms
[144,359s][info ][gc,start       ] GC(47) Concurrent evacuation
[144,359s][info ][gc,task        ] GC(47) Using 5 of 10 workers for concurrent evacuation
[144,411s][info ][gc             ] GC(47) Concurrent evacuation 52,145ms
[144,411s][info ][gc,start       ] GC(47) Pause Init Update Refs
[144,411s][info ][gc,ergo        ] GC(47) Pacer for Update Refs. Used: 10875M, Free: 1320M, Non-Taxable: 132M, Alloc Tax Rate: 10,1x
[144,411s][info ][gc             ] GC(47) Pause Init Update Refs 0,040ms
[144,411s][info ][gc,start       ] GC(47) Concurrent update references
[144,411s][info ][gc,task        ] GC(47) Using 5 of 10 workers for concurrent reference update
[144,574s][info ][gc             ] GC(47) Concurrent update references 162,725ms
[144,574s][info ][gc,start       ] GC(47) Concurrent update thread roots
[144,575s][info ][gc             ] GC(47) Concurrent update thread roots 0,841ms
[144,575s][info ][gc,start       ] GC(47) Pause Final Update Refs
[144,575s][info ][gc,task        ] GC(47) Using 10 of 10 workers for final reference update
[144,575s][info ][gc             ] GC(47) Pause Final Update Refs 0,210ms
[144,575s][info ][gc,start       ] GC(47) Concurrent cleanup
[144,575s][info ][gc             ] GC(47) Concurrent cleanup 11068M->4388M(12288M) 0,185ms
[144,576s][debug][gc,ergo        ] GC(47) Available: 7283 MB, z-score=0,373. Average available: 6593,6 MB +/- 1849,1 MB.
[144,576s][info ][gc,ergo        ] Free: 7283M, Max: 4096K regular, 1268M humongous, Frag: 83% external, 0% internal; Reserve: 616M, Max: 4096K
[144,576s][info ][gc,stats       ] 
[144,576s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[144,576s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[144,576s][info ][gc,stats       ] 
[144,576s][info ][gc,stats       ] Concurrent Reset                   8624 us
[144,576s][info ][gc,stats       ] Pause Init Mark (G)                 169 us
[144,576s][info ][gc,stats       ] Pause Init Mark (N)                  70 us
[144,576s][info ][gc,stats       ]   Update Region States               14 us
[144,576s][info ][gc,stats       ] Concurrent Mark Roots               549 us, parallelism: 2,24x
[144,576s][info ][gc,stats       ]   CMR: <total>                     1231 us
[144,576s][info ][gc,stats       ]   CMR: Thread Roots                1156 us, workers (us): 180, 200, 401, 194, 181, ---, ---, ---, ---, ---, 
[144,576s][info ][gc,stats       ]   CMR: VM Strong Roots               11 us, workers (us):   4,   2,   2,   1,   2, ---, ---, ---, ---, ---, 
[144,576s][info ][gc,stats       ]   CMR: CLDG Roots                    63 us, workers (us):  54,  10, ---, ---, ---, ---, ---, ---, ---, ---, 
[144,576s][info ][gc,stats       ] Concurrent Marking               242073 us
[144,576s][info ][gc,stats       ] Pause Final Mark (G)                382 us
[144,576s][info ][gc,stats       ] Pause Final Mark (N)                362 us
[144,576s][info ][gc,stats       ]   Finish Mark                        70 us
[144,576s][info ][gc,stats       ]   Update Region States               14 us
[144,576s][info ][gc,stats       ]   Choose Collection Set             209 us
[144,576s][info ][gc,stats       ]   Rebuild Free Set                   13 us
[144,576s][info ][gc,stats       ] Concurrent Thread Roots             602 us, parallelism: 2,25x
[144,576s][info ][gc,stats       ]   CTR: <total>                     1356 us
[144,576s][info ][gc,stats       ]   CTR: Thread Roots                1356 us, workers (us): 494, 201, 234, 206, 219, ---, ---, ---, ---, ---, 
[144,576s][info ][gc,stats       ] Concurrent Weak References         4355 us, parallelism: 1,06x
[144,576s][info ][gc,stats       ]   CWRF: <total>                    4627 us
[144,576s][info ][gc,stats       ]   CWRF: Weak References            4627 us, workers (us): 4200, 416,   6,   5,   0, ---, ---, ---, ---, ---, 
[144,576s][info ][gc,stats       ] Concurrent Weak Roots               647 us
[144,576s][info ][gc,stats       ]   Roots                             459 us, parallelism: 3,88x
[144,576s][info ][gc,stats       ]     CWR: <total>                   1782 us
[144,576s][info ][gc,stats       ]     CWR: Code Cache Roots          1256 us, workers (us): 244, 263, 263, 248, 237, ---, ---, ---, ---, ---, 
[144,576s][info ][gc,stats       ]     CWR: VM Weak Roots              506 us, workers (us): 144, 140,  98,  97,  27, ---, ---, ---, ---, ---, 
[144,576s][info ][gc,stats       ]     CWR: CLDG Roots                  20 us, workers (us): ---,  10, ---, ---,  10, ---, ---, ---, ---, ---, 
[144,576s][info ][gc,stats       ]   Rendezvous                        148 us
[144,576s][info ][gc,stats       ] Concurrent Cleanup                   95 us
[144,576s][info ][gc,stats       ] Concurrent Class Unloading          876 us
[144,576s][info ][gc,stats       ]   Unlink Stale                      772 us
[144,576s][info ][gc,stats       ]     System Dictionary                40 us
[144,576s][info ][gc,stats       ]     Weak Class Links                  0 us
[144,576s][info ][gc,stats       ]     Code Roots                      732 us
[144,576s][info ][gc,stats       ]   Rendezvous                         64 us
[144,576s][info ][gc,stats       ]   Purge Unlinked                      2 us
[144,576s][info ][gc,stats       ]     Code Roots                        0 us
[144,576s][info ][gc,stats       ]     CLDG                              2 us
[144,576s][info ][gc,stats       ]     Exception Caches                  0 us
[144,576s][info ][gc,stats       ] Concurrent Strong Roots              96 us, parallelism: 0,97x
[144,576s][info ][gc,stats       ]   CSR: <total>                       94 us
[144,576s][info ][gc,stats       ]   CSR: VM Strong Roots                7 us, workers (us):   3,   3,   0,   0,   0, ---, ---, ---, ---, ---, 
[144,576s][info ][gc,stats       ]   CSR: CLDG Roots                    87 us, workers (us):  40,  47, ---, ---, ---, ---, ---, ---, ---, ---, 
[144,576s][info ][gc,stats       ] Concurrent Evacuation             52196 us
[144,576s][info ][gc,stats       ] Pause Init Update Refs (G)          250 us
[144,576s][info ][gc,stats       ] Pause Init Update Refs (N)           50 us
[144,576s][info ][gc,stats       ]   Manage GCLABs                       3 us
[144,576s][info ][gc,stats       ] Concurrent Update Refs           162788 us
[144,576s][info ][gc,stats       ] Concurrent Update Thread Roots      866 us
[144,576s][info ][gc,stats       ] Pause Final Update Refs (G)         357 us
[144,576s][info ][gc,stats       ] Pause Final Update Refs (N)         231 us
[144,576s][info ][gc,stats       ]   Update Region States              121 us
[144,576s][info ][gc,stats       ]   Trash Collection Set               42 us
[144,576s][info ][gc,stats       ]   Rebuild Free Set                   15 us
[144,576s][info ][gc,stats       ] Concurrent Cleanup                  200 us
[144,576s][info ][gc,stats       ] 
[144,576s][info ][gc,stats       ] Allocation pacing accrued:
[144,576s][info ][gc,stats       ]       0 of  3991 ms (  0,0%): <total>
[144,576s][info ][gc,stats       ]       0 of  3991 ms (  0,0%): <average total>
[144,576s][info ][gc,stats       ] 
[144,576s][info ][gc,metaspace   ] Metaspace: 20454K(20864K)->20454K(20864K) NonClass: 17948K(18176K)->17948K(18176K) Class: 2505K(2688K)->2505K(2688K)
[144,576s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[148,176s][info ][gc             ] Trigger: Average GC time (503,17 ms) is above the time for average allocation rate (1627 MB/s) to deplete free headroom (817M) (margin of error = 1,85)
[148,176s][info ][gc,ergo        ] Free headroom: 1431M (free) - 614M (spike) - 0B (penalties) = 817M
[148,176s][info ][gc,ergo        ] Free: 1431M, Max: 4096K regular, 776M humongous, Frag: 46% external, 0% internal; Reserve: 616M, Max: 4096K
[148,176s][info ][gc,start       ] GC(48) Concurrent reset
[148,176s][info ][gc,task        ] GC(48) Using 5 of 10 workers for concurrent reset
[148,176s][info ][gc,ergo        ] GC(48) Pacer for Reset. Non-Taxable: 12288M
[148,184s][info ][gc             ] GC(48) Concurrent reset 7,998ms
[148,184s][info ][gc,start       ] GC(48) Pause Init Mark (unload classes)
[148,184s][info ][gc,task        ] GC(48) Using 10 of 10 workers for init marking
[148,184s][info ][gc,ergo        ] GC(48) Pacer for Mark. Expected Live: 3041M, Free: 1419M, Non-Taxable: 141M, Alloc Tax Rate: 2,6x
[148,184s][info ][gc             ] GC(48) Pause Init Mark (unload classes) 0,057ms
[148,184s][info ][gc,start       ] GC(48) Concurrent marking roots
[148,184s][info ][gc,task        ] GC(48) Using 5 of 10 workers for concurrent marking roots
[148,185s][debug][gc,tlab        ] GC(48) TLAB totals: thrds: 5  refills: 1544 max: 1532 slow allocs: 0 max 0 waste:  0,1% gc: 3605680B max: 3487368B slow: 5507872B max: 5503112B
[148,185s][info ][gc             ] GC(48) Concurrent marking roots 0,482ms
[148,185s][info ][gc,start       ] GC(48) Concurrent marking (unload classes)
[148,185s][info ][gc,task        ] GC(48) Using 5 of 10 workers for concurrent marking
[148,425s][info ][gc             ] GC(48) Concurrent marking (unload classes) 240,221ms
[148,425s][info ][gc,start       ] GC(48) Pause Final Mark (unload classes)
[148,426s][info ][gc,task        ] GC(48) Using 10 of 10 workers for final marking
[148,426s][info ][gc,ergo        ] GC(48) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 1820M, Max CSet: 512M, Min Garbage: 0B
[148,426s][info ][gc,ergo        ] GC(48) Collectable Garbage: 6745M (93%), Immediate: 132M (1%), CSet: 6613M (92%)
[148,426s][info ][gc,ergo        ] GC(48) Pacer for Evacuation. Used CSet: 7124M, Free: 1208M, Non-Taxable: 120M, Alloc Tax Rate: 14,4x
[148,426s][info ][gc             ] GC(48) Pause Final Mark (unload classes) 0,558ms
[148,426s][info ][gc,start       ] GC(48) Concurrent thread roots
[148,426s][info ][gc,task        ] GC(48) Using 5 of 10 workers for Concurrent thread roots
[148,427s][info ][gc             ] GC(48) Concurrent thread roots 0,483ms
[148,427s][info ][gc,start       ] GC(48) Concurrent weak references
[148,427s][info ][gc,task        ] GC(48) Using 5 of 10 workers for concurrent weak references
[148,429s][info ][gc,ref         ] GC(48) Encountered references: Soft: 2394, Weak: 1991, Final: 13137, Phantom: 13484
[148,429s][info ][gc,ref         ] GC(48) Discovered  references: Soft: 0, Weak: 453, Final: 13137, Phantom: 13532
[148,429s][info ][gc,ref         ] GC(48) Enqueued    references: Soft: 0, Weak: 0, Final: 13137, Phantom: 13143
[148,429s][info ][gc             ] GC(48) Concurrent weak references 2,394ms
[148,429s][info ][gc,start       ] GC(48) Concurrent weak roots
[148,429s][info ][gc,task        ] GC(48) Using 5 of 10 workers for concurrent weak root
[148,430s][info ][gc             ] GC(48) Concurrent weak roots 0,744ms
[148,430s][info ][gc,start       ] GC(48) Concurrent cleanup
[148,430s][info ][gc             ] GC(48) Concurrent cleanup 10607M->10475M(12288M) 0,081ms
[148,430s][info ][gc,ergo        ] GC(48) Free: 1200M, Max: 4096K regular, 800M humongous, Frag: 34% external, 0% internal; Reserve: 612M, Max: 4096K
[148,430s][info ][gc,start       ] GC(48) Concurrent class unloading
[148,430s][info ][gc,task        ] GC(48) Using 5 of 10 workers for concurrent class unloading
[148,430s][debug][gc,phases,start] GC(48) ClassLoaderData
[148,430s][debug][gc,phases      ] GC(48) ClassLoaderData 0,015ms
[148,430s][debug][gc,phases,start] GC(48) Trigger cleanups
[148,430s][debug][gc,phases      ] GC(48) Trigger cleanups 0,008ms
[148,431s][info ][gc             ] GC(48) Concurrent class unloading 0,863ms
[148,431s][info ][gc,start       ] GC(48) Concurrent strong roots
[148,431s][info ][gc,task        ] GC(48) Using 5 of 10 workers for concurrent strong root
[148,431s][info ][gc             ] GC(48) Concurrent strong roots 0,090ms
[148,431s][info ][gc,start       ] GC(48) Concurrent evacuation
[148,431s][info ][gc,task        ] GC(48) Using 5 of 10 workers for concurrent evacuation
[148,482s][info ][gc             ] GC(48) Concurrent evacuation 51,455ms
[148,482s][info ][gc,start       ] GC(48) Pause Init Update Refs
[148,483s][info ][gc,ergo        ] GC(48) Pacer for Update Refs. Used: 11055M, Free: 1140M, Non-Taxable: 114M, Alloc Tax Rate: 11,9x
[148,483s][info ][gc             ] GC(48) Pause Init Update Refs 0,043ms
[148,483s][info ][gc,start       ] GC(48) Concurrent update references
[148,483s][info ][gc,task        ] GC(48) Using 5 of 10 workers for concurrent reference update
[148,646s][info ][gc             ] GC(48) Concurrent update references 163,387ms
[148,646s][info ][gc,start       ] GC(48) Concurrent update thread roots
[148,647s][info ][gc             ] GC(48) Concurrent update thread roots 0,941ms
[148,647s][info ][gc,start       ] GC(48) Pause Final Update Refs
[148,647s][info ][gc,task        ] GC(48) Using 10 of 10 workers for final reference update
[148,647s][info ][gc             ] GC(48) Pause Final Update Refs 0,146ms
[148,647s][info ][gc,start       ] GC(48) Concurrent cleanup
[148,647s][info ][gc             ] GC(48) Concurrent cleanup 11248M->4124M(12288M) 0,182ms
[148,647s][debug][gc,ergo        ] GC(48) Available: 7547 MB, z-score=1,152. Average available: 6233,2 MB +/- 1141,2 MB.
[148,647s][debug][gc,ergo        ] GC(48) Margin of error now 1,84
[148,648s][info ][gc,ergo        ] Free: 7547M, Max: 4096K regular, 1268M humongous, Frag: 84% external, 0% internal; Reserve: 616M, Max: 4096K
[148,648s][info ][gc,stats       ] 
[148,648s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[148,648s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[148,648s][info ][gc,stats       ] 
[148,648s][info ][gc,stats       ] Concurrent Reset                   8058 us
[148,648s][info ][gc,stats       ] Pause Init Mark (G)                 157 us
[148,648s][info ][gc,stats       ] Pause Init Mark (N)                  65 us
[148,648s][info ][gc,stats       ]   Update Region States               14 us
[148,648s][info ][gc,stats       ] Concurrent Mark Roots               494 us, parallelism: 2,51x
[148,648s][info ][gc,stats       ]   CMR: <total>                     1243 us
[148,648s][info ][gc,stats       ]   CMR: Thread Roots                1173 us, workers (us): 155, 405, 226, 201, 185, ---, ---, ---, ---, ---, 
[148,648s][info ][gc,stats       ]   CMR: VM Strong Roots                8 us, workers (us):   2,   3,   2,   0,   0, ---, ---, ---, ---, ---, 
[148,648s][info ][gc,stats       ]   CMR: CLDG Roots                    62 us, workers (us):  52, ---,  10, ---, ---, ---, ---, ---, ---, ---, 
[148,648s][info ][gc,stats       ] Concurrent Marking               240386 us
[148,648s][info ][gc,stats       ] Pause Final Mark (G)                709 us
[148,648s][info ][gc,stats       ] Pause Final Mark (N)                572 us
[148,648s][info ][gc,stats       ]   Finish Mark                       182 us
[148,648s][info ][gc,stats       ]   Update Region States               21 us
[148,648s][info ][gc,stats       ]   Choose Collection Set             292 us
[148,648s][info ][gc,stats       ]   Rebuild Free Set                   16 us
[148,648s][info ][gc,stats       ] Concurrent Thread Roots             501 us, parallelism: 2,62x
[148,648s][info ][gc,stats       ]   CTR: <total>                     1314 us
[148,648s][info ][gc,stats       ]   CTR: Thread Roots                1314 us, workers (us): 217, 242, 446, 203, 207, ---, ---, ---, ---, ---, 
[148,648s][info ][gc,stats       ] Concurrent Weak References         2406 us, parallelism: 1,91x
[148,648s][info ][gc,stats       ]   CWRF: <total>                    4591 us
[148,648s][info ][gc,stats       ]   CWRF: Weak References            4591 us, workers (us): 2074, 232,  96, 2189,   0, ---, ---, ---, ---, ---, 
[148,648s][info ][gc,stats       ] Concurrent Weak Roots               762 us
[148,648s][info ][gc,stats       ]   Roots                             639 us, parallelism: 3,43x
[148,648s][info ][gc,stats       ]     CWR: <total>                   2196 us
[148,648s][info ][gc,stats       ]     CWR: Code Cache Roots          1169 us, workers (us): 322, 267, 308, 272,   0, ---, ---, ---, ---, ---, 
[148,648s][info ][gc,stats       ]     CWR: VM Weak Roots             1011 us, workers (us): 280, 252, 239, 240,   0, ---, ---, ---, ---, ---, 
[148,648s][info ][gc,stats       ]     CWR: CLDG Roots                  16 us, workers (us): ---, ---,   8,   8, ---, ---, ---, ---, ---, ---, 
[148,648s][info ][gc,stats       ]   Rendezvous                         87 us
[148,648s][info ][gc,stats       ] Concurrent Cleanup                   94 us
[148,648s][info ][gc,stats       ] Concurrent Class Unloading          883 us
[148,648s][info ][gc,stats       ]   Unlink Stale                      790 us
[148,648s][info ][gc,stats       ]     System Dictionary                40 us
[148,648s][info ][gc,stats       ]     Weak Class Links                  0 us
[148,648s][info ][gc,stats       ]     Code Roots                      749 us
[148,648s][info ][gc,stats       ]   Rendezvous                         53 us
[148,648s][info ][gc,stats       ]   Purge Unlinked                      2 us
[148,648s][info ][gc,stats       ]     Code Roots                        0 us
[148,648s][info ][gc,stats       ]     CLDG                              2 us
[148,648s][info ][gc,stats       ]     Exception Caches                  0 us
[148,648s][info ][gc,stats       ] Concurrent Strong Roots             104 us, parallelism: 0,99x
[148,648s][info ][gc,stats       ]   CSR: <total>                      103 us
[148,648s][info ][gc,stats       ]   CSR: VM Strong Roots               11 us, workers (us):   6,   4,   0,   0,   0, ---, ---, ---, ---, ---, 
[148,648s][info ][gc,stats       ]   CSR: CLDG Roots                    92 us, workers (us):  45,  47, ---, ---, ---, ---, ---, ---, ---, ---, 
[148,648s][info ][gc,stats       ] Concurrent Evacuation             51505 us
[148,648s][info ][gc,stats       ] Pause Init Update Refs (G)          195 us
[148,648s][info ][gc,stats       ] Pause Init Update Refs (N)           57 us
[148,648s][info ][gc,stats       ]   Manage GCLABs                       4 us
[148,648s][info ][gc,stats       ] Concurrent Update Refs           163438 us
[148,648s][info ][gc,stats       ] Concurrent Update Thread Roots      968 us
[148,648s][info ][gc,stats       ] Pause Final Update Refs (G)         312 us
[148,648s][info ][gc,stats       ] Pause Final Update Refs (N)         163 us
[148,648s][info ][gc,stats       ]   Update Region States               41 us
[148,648s][info ][gc,stats       ]   Trash Collection Set               45 us
[148,648s][info ][gc,stats       ]   Rebuild Free Set                   19 us
[148,648s][info ][gc,stats       ] Concurrent Cleanup                  197 us
[148,648s][info ][gc,stats       ] 
[148,648s][info ][gc,stats       ] Allocation pacing accrued:
[148,648s][info ][gc,stats       ]       0 of  4072 ms (  0,0%): <total>
[148,648s][info ][gc,stats       ]       0 of  4072 ms (  0,0%): <average total>
[148,648s][info ][gc,stats       ] 
[148,648s][info ][gc,metaspace   ] Metaspace: 20454K(20864K)->20454K(20864K) NonClass: 17948K(18176K)->17948K(18176K) Class: 2505K(2688K)->2505K(2688K)
[148,648s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[152,391s][info ][gc             ] Trigger: Average GC time (494,27 ms) is above the time for average allocation rate (1660 MB/s) to deplete free headroom (817M) (margin of error = 1,84)
[152,391s][info ][gc,ergo        ] Free headroom: 1431M (free) - 614M (spike) - 0B (penalties) = 817M
[152,391s][info ][gc,ergo        ] Free: 1431M, Max: 4096K regular, 1100M humongous, Frag: 23% external, 0% internal; Reserve: 616M, Max: 4096K
[152,391s][info ][gc,start       ] GC(49) Concurrent reset
[152,391s][info ][gc,task        ] GC(49) Using 5 of 10 workers for concurrent reset
[152,391s][info ][gc,ergo        ] GC(49) Pacer for Reset. Non-Taxable: 12288M
[152,400s][info ][gc             ] GC(49) Concurrent reset 9,124ms
[152,401s][info ][gc,start       ] GC(49) Pause Init Mark (unload classes)
[152,401s][info ][gc,task        ] GC(49) Using 10 of 10 workers for init marking
[152,401s][info ][gc,ergo        ] GC(49) Pacer for Mark. Expected Live: 3048M, Free: 1419M, Non-Taxable: 141M, Alloc Tax Rate: 2,6x
[152,401s][info ][gc             ] GC(49) Pause Init Mark (unload classes) 0,110ms
[152,401s][info ][gc,start       ] GC(49) Concurrent marking roots
[152,401s][info ][gc,task        ] GC(49) Using 5 of 10 workers for concurrent marking roots
[152,401s][debug][gc,tlab        ] GC(49) TLAB totals: thrds: 6  refills: 1612 max: 1597 slow allocs: 0 max 0 waste:  0,1% gc: 2688912B max: 2567112B slow: 6213968B max: 6208128B
[152,401s][info ][gc             ] GC(49) Concurrent marking roots 0,420ms
[152,401s][info ][gc,start       ] GC(49) Concurrent marking (unload classes)
[152,401s][info ][gc,task        ] GC(49) Using 5 of 10 workers for concurrent marking
[152,641s][info ][gc             ] GC(49) Concurrent marking (unload classes) 239,913ms
[152,641s][info ][gc,start       ] GC(49) Pause Final Mark (unload classes)
[152,641s][info ][gc,task        ] GC(49) Using 10 of 10 workers for final marking
[152,641s][info ][gc,ergo        ] GC(49) Adaptive CSet Selection. Target Free: 1740M, Actual Free: 1740M, Max CSet: 512M, Min Garbage: 819K
[152,642s][info ][gc,ergo        ] GC(49) Collectable Garbage: 6880M (95%), Immediate: 49152K (0%), CSet: 6832M (95%)
[152,642s][info ][gc,ergo        ] GC(49) Pacer for Evacuation. Used CSet: 7344M, Free: 1124M, Non-Taxable: 112M, Alloc Tax Rate: 16,0x
[152,642s][info ][gc             ] GC(49) Pause Final Mark (unload classes) 0,603ms
[152,642s][info ][gc,start       ] GC(49) Concurrent thread roots
[152,642s][info ][gc,task        ] GC(49) Using 5 of 10 workers for Concurrent thread roots
[152,642s][info ][gc             ] GC(49) Concurrent thread roots 0,543ms
[152,642s][info ][gc,start       ] GC(49) Concurrent weak references
[152,642s][info ][gc,task        ] GC(49) Using 5 of 10 workers for concurrent weak references
[152,645s][info ][gc,ref         ] GC(49) Encountered references: Soft: 2403, Weak: 1991, Final: 13670, Phantom: 13839
[152,645s][info ][gc,ref         ] GC(49) Discovered  references: Soft: 0, Weak: 1359, Final: 13670, Phantom: 14064
[152,645s][info ][gc,ref         ] GC(49) Enqueued    references: Soft: 0, Weak: 0, Final: 13670, Phantom: 13677
[152,645s][info ][gc             ] GC(49) Concurrent weak references 2,401ms
[152,645s][info ][gc,start       ] GC(49) Concurrent weak roots
[152,645s][info ][gc,task        ] GC(49) Using 5 of 10 workers for concurrent weak root
[152,645s][info ][gc             ] GC(49) Concurrent weak roots 0,588ms
[152,645s][info ][gc,start       ] GC(49) Concurrent cleanup
[152,645s][info ][gc             ] GC(49) Concurrent cleanup 10604M->10556M(12288M) 0,078ms
[152,645s][info ][gc,ergo        ] GC(49) Free: 1119M, Max: 4096K regular, 1088M humongous, Frag: 3% external, 0% internal; Reserve: 611M, Max: 4096K
[152,645s][info ][gc,start       ] GC(49) Concurrent class unloading
[152,646s][info ][gc,task        ] GC(49) Using 5 of 10 workers for concurrent class unloading
[152,646s][debug][gc,phases,start] GC(49) ClassLoaderData
[152,646s][debug][gc,phases      ] GC(49) ClassLoaderData 0,015ms
[152,646s][debug][gc,phases,start] GC(49) Trigger cleanups
[152,646s][debug][gc,phases      ] GC(49) Trigger cleanups 0,008ms
[152,646s][info ][gc             ] GC(49) Concurrent class unloading 0,775ms
[152,646s][info ][gc,start       ] GC(49) Concurrent strong roots
[152,646s][info ][gc,task        ] GC(49) Using 5 of 10 workers for concurrent strong root
[152,646s][info ][gc             ] GC(49) Concurrent strong roots 0,194ms
[152,647s][info ][gc,start       ] GC(49) Concurrent evacuation
[152,647s][info ][gc,task        ] GC(49) Using 5 of 10 workers for concurrent evacuation
[152,697s][info ][gc             ] GC(49) Concurrent evacuation 50,449ms
[152,697s][info ][gc,start       ] GC(49) Pause Init Update Refs
[152,697s][info ][gc,ergo        ] GC(49) Pacer for Update Refs. Used: 11136M, Free: 1059M, Non-Taxable: 105M, Alloc Tax Rate: 12,8x
[152,697s][info ][gc             ] GC(49) Pause Init Update Refs 0,056ms
[152,697s][info ][gc,start       ] GC(49) Concurrent update references
[152,697s][info ][gc,task        ] GC(49) Using 5 of 10 workers for concurrent reference update
[152,851s][info ][gc             ] GC(49) Concurrent update references 154,079ms
[152,851s][info ][gc,start       ] GC(49) Concurrent update thread roots
[152,852s][info ][gc             ] GC(49) Concurrent update thread roots 1,030ms
[152,852s][info ][gc,start       ] GC(49) Pause Final Update Refs
[152,852s][info ][gc,task        ] GC(49) Using 10 of 10 workers for final reference update
[152,853s][info ][gc             ] GC(49) Pause Final Update Refs 0,197ms
[152,853s][info ][gc,start       ] GC(49) Concurrent cleanup
[152,853s][info ][gc             ] GC(49) Concurrent cleanup 11319M->3975M(12288M) 0,202ms
[152,853s][debug][gc,ergo        ] GC(49) Available: 7696 MB, z-score=1,052. Average available: 6508,8 MB +/- 1128,4 MB.
[152,853s][debug][gc,ergo        ] GC(49) Margin of error now 1,83
[152,853s][info ][gc,ergo        ] Free: 7696M, Max: 4096K regular, 6344M humongous, Frag: 18% external, 0% internal; Reserve: 616M, Max: 4096K
[152,853s][info ][gc,stats       ] 
[152,853s][info ][gc,stats       ] All times are wall-clock times, except per-root-class counters, that are sum over
[152,853s][info ][gc,stats       ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[152,853s][info ][gc,stats       ] 
[152,853s][info ][gc,stats       ] Concurrent Reset                   9180 us
[152,853s][info ][gc,stats       ] Pause Init Mark (G)                 219 us
[152,853s][info ][gc,stats       ] Pause Init Mark (N)                 122 us
[152,853s][info ][gc,stats       ]   Update Region States               56 us
[152,853s][info ][gc,stats       ] Concurrent Mark Roots               435 us, parallelism: 2,79x
[152,853s][info ][gc,stats       ]   CMR: <total>                     1213 us
[152,853s][info ][gc,stats       ]   CMR: Thread Roots                1143 us, workers (us): 335, 191, 218, 208, 190, ---, ---, ---, ---, ---, 
[152,853s][info ][gc,stats       ]   CMR: VM Strong Roots                7 us, workers (us):   4,   3,   0,   0,   0, ---, ---, ---, ---, ---, 
[152,853s][info ][gc,stats       ]   CMR: CLDG Roots                    62 us, workers (us):  10,  52, ---, ---, ---, ---, ---, ---, ---, ---, 
[152,853s][info ][gc,stats       ] Concurrent Marking               239964 us
[152,853s][info ][gc,stats       ] Pause Final Mark (G)                737 us
[152,853s][info ][gc,stats       ] Pause Final Mark (N)                617 us
[152,853s][info ][gc,stats       ]   Finish Mark                       239 us
[152,853s][info ][gc,stats       ]   Update Region States               22 us
[152,853s][info ][gc,stats       ]   Choose Collection Set             272 us
[152,853s][info ][gc,stats       ]   Rebuild Free Set                   19 us
[152,853s][info ][gc,stats       ] Concurrent Thread Roots             558 us, parallelism: 2,40x
[152,853s][info ][gc,stats       ]   CTR: <total>                     1339 us
[152,853s][info ][gc,stats       ]   CTR: Thread Roots                1339 us, workers (us): 500, 262, 270, 150, 156, ---, ---, ---, ---, ---, 
[152,853s][info ][gc,stats       ] Concurrent Weak References         2427 us, parallelism: 2,05x
[152,853s][info ][gc,stats       ]   CWRF: <total>                    4973 us
[152,853s][info ][gc,stats       ]   CWRF: Weak References            4973 us, workers (us): 1637,  88, 2262, 986,   0, ---, ---, ---, ---, ---, 
[152,853s][info ][gc,stats       ] Concurrent Weak Roots               611 us
[152,853s][info ][gc,stats       ]   Roots                             535 us, parallelism: 4,03x
[152,853s][info ][gc,stats       ]     CWR: <total>                   2158 us
[152,853s][info ][gc,stats       ]     CWR: Code Cache Roots          1154 us, workers (us): 243, 252, 237, 196, 227, ---, ---, ---, ---, ---, 
[152,853s][info ][gc,stats       ]     CWR: VM Weak Roots              989 us, workers (us): 241, 240, 213, 184, 112, ---, ---, ---, ---, ---, 
[152,853s][info ][gc,stats       ]     CWR: CLDG Roots                  14 us, workers (us): ---, ---, ---,   8,   5, ---, ---, ---, ---, ---, 
[152,853s][info ][gc,stats       ]   Rendezvous                         33 us
[152,853s][info ][gc,stats       ] Concurrent Cleanup                   90 us
[152,853s][info ][gc,stats       ] Concurrent Class Unloading          792 us
[152,853s][info ][gc,stats       ]   Unlink Stale                      732 us
[152,853s][info ][gc,stats       ]     System Dictionary                40 us
[152,853s][info ][gc,stats       ]     Weak Class Links                  0 us
[152,853s][info ][gc,stats       ]     Code Roots                      691 us
[152,853s][info ][gc,stats       ]   Rendezvous                         22 us
[152,853s][info ][gc,stats       ]   Purge Unlinked                      2 us
[152,853s][info ][gc,stats       ]     Code Roots                        0 us
[152,853s][info ][gc,stats       ]     CLDG                              2 us
[152,853s][info ][gc,stats       ]     Exception Caches                  0 us
[152,853s][info ][gc,stats       ] Concurrent Strong Roots             209 us, parallelism: 1,16x
[152,853s][info ][gc,stats       ]   CSR: <total>                      242 us
[152,853s][info ][gc,stats       ]   CSR: VM Strong Roots               11 us, workers (us):  11,   0,   0,   0,   0, ---, ---, ---, ---, ---, 
[152,853s][info ][gc,stats       ]   CSR: CLDG Roots                   231 us, workers (us): 149,  82, ---, ---, ---, ---, ---, ---, ---, ---, 
[152,853s][info ][gc,stats       ] Concurrent Evacuation             50504 us
[152,853s][info ][gc,stats       ] Pause Init Update Refs (G)          107 us
[152,853s][info ][gc,stats       ] Pause Init Update Refs (N)           70 us
[152,853s][info ][gc,stats       ]   Manage GCLABs                       4 us
[152,853s][info ][gc,stats       ] Concurrent Update Refs           154131 us
[152,853s][info ][gc,stats       ] Concurrent Update Thread Roots     1058 us
[152,853s][info ][gc,stats       ] Pause Final Update Refs (G)         399 us
[152,853s][info ][gc,stats       ] Pause Final Update Refs (N)         219 us
[152,853s][info ][gc,stats       ]   Update Region States              102 us
[152,853s][info ][gc,stats       ]   Trash Collection Set               44 us
[152,853s][info ][gc,stats       ]   Rebuild Free Set                   15 us
[152,853s][info ][gc,stats       ] Concurrent Cleanup                  217 us
[152,853s][info ][gc,stats       ] 
[152,853s][info ][gc,stats       ] Allocation pacing accrued:
[152,853s][info ][gc,stats       ]       0 of  4205 ms (  0,0%): <total>
[152,853s][info ][gc,stats       ]       0 of  4205 ms (  0,0%): <average total>
[152,854s][info ][gc,stats       ] 
[152,854s][info ][gc,metaspace   ] Metaspace: 20454K(20864K)->20454K(20864K) NonClass: 17948K(18176K)->17948K(18176K) Class: 2505K(2688K)->2505K(2688K)
[152,854s][info ][gc,ergo        ] Pacer for Idle. Initial: 245M, Alloc Tax Rate: 1,0x
[153,702s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ForkJoinPool.reactivate [0x00007fae5d5beb10] (c1)
[154,307s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.drainReadBuffer [0x00007fae7cc41f90] (c2)
[154,321s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.maintenance [0x00007fae7cc56210] (c2)
[154,323s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache.climb [0x00007fae7ca39810] (c2)
[154,324s][debug][gc,nmethod     ] Register NMethod: com.github.benmanes.caffeine.cache.BoundedLocalCache$PerformCleanupTask.exec [0x00007fae7cbed110] (c2)
[154,899s][debug][gc,nmethod     ] Register NMethod: java.util.concurrent.ConcurrentHashMap.containsKey [0x00007fae5d0fa410] (c1)
[154,900s][debug][gc,nmethod     ] Register NMethod: sun.nio.ch.IOUtil.read [0x00007fae5d5f3610] (c1)
[154,900s][info ][gc             ] Cancelling GC: Stopping VM
[154,901s][info ][gc,heap,exit   ] Heap
[154,901s][info ][gc,heap,exit   ] Shenandoah Heap
[154,901s][info ][gc,heap,exit   ]  12288M max, 12288M soft max, 12288M committed, 7276M used
[154,901s][info ][gc,heap,exit   ]  3072 x 4096K regions
[154,901s][info ][gc,heap,exit   ] Status: cancelled
[154,901s][info ][gc,heap,exit   ] Reserved region:
[154,901s][info ][gc,heap,exit   ]  - [0x0000000500000000, 0x0000000800000000) 
[154,901s][info ][gc,heap,exit   ] Collection set:
[154,901s][info ][gc,heap,exit   ]  - map (vanilla): 0x0000000000011400
[154,901s][info ][gc,heap,exit   ]  - map (biased):  0x0000000000010000
[154,901s][info ][gc,heap,exit   ] 
[154,901s][info ][gc,heap,exit   ]  Metaspace       used 20459K, committed 20864K, reserved 1114112K
[154,901s][info ][gc,heap,exit   ]   class space    used 2505K, committed 2688K, reserved 1048576K
[154,901s][info ][gc,stats       ] 
[154,901s][info ][gc,stats       ] GC STATISTICS:
[154,901s][info ][gc,stats       ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[154,901s][info ][gc,stats       ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[154,901s][info ][gc,stats       ]   "(N)" (net) pauses are the times spent in the actual GC code.
[154,901s][info ][gc,stats       ]   "a" is average time for each phase, look at levels to see if average makes sense.
[154,901s][info ][gc,stats       ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[154,901s][info ][gc,stats       ] 
[154,901s][info ][gc,stats       ]   All times are wall-clock times, except per-root-class counters, that are sum over
[154,901s][info ][gc,stats       ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[154,901s][info ][gc,stats       ] 
[154,901s][info ][gc,stats       ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[154,901s][info ][gc,stats       ]   observed pacing delays may be higher than the threshold when paced thread spent more
[154,901s][info ][gc,stats       ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[154,901s][info ][gc,stats       ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[154,901s][info ][gc,stats       ] 
[154,901s][info ][gc,stats       ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[154,901s][info ][gc,stats       ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[154,901s][info ][gc,stats       ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[154,901s][info ][gc,stats       ]   Raise max pacing delay with care.
[154,901s][info ][gc,stats       ] 
[154,901s][info ][gc,stats       ] Concurrent Reset               =    0,203 s (a =     4053 us) (n =    50) (lvls, us =      520,     2090,     2988,     4863,    10037)
[154,901s][info ][gc,stats       ] Pause Init Mark (G)            =    0,042 s (a =      832 us) (n =    50) (lvls, us =      104,      201,      268,      430,     8801)
[154,901s][info ][gc,stats       ] Pause Init Mark (N)            =    0,006 s (a =      118 us) (n =    50) (lvls, us =       54,       69,      100,      174,      229)
[154,901s][info ][gc,stats       ]   Update Region States         =    0,003 s (a =       53 us) (n =    50) (lvls, us =       10,       18,       24,       89,      146)
[154,901s][info ][gc,stats       ] Concurrent Mark Roots          =    0,052 s (a =     1034 us) (n =    50) (lvls, us =      418,      549,      719,      865,    12817)
[154,901s][info ][gc,stats       ]   CMR: <total>                 =    0,090 s (a =     1803 us) (n =    50) (lvls, us =     1055,     1230,     1445,     1738,    14100)
[154,901s][info ][gc,stats       ]   CMR: Thread Roots            =    0,086 s (a =     1726 us) (n =    50) (lvls, us =      996,     1172,     1387,     1660,    14020)
[154,901s][info ][gc,stats       ]   CMR: VM Strong Roots         =    0,000 s (a =        9 us) (n =    50) (lvls, us =        5,        7,        8,        9,       17)
[154,901s][info ][gc,stats       ]   CMR: CLDG Roots              =    0,003 s (a =       68 us) (n =    50) (lvls, us =       43,       54,       60,       65,      422)
[154,901s][info ][gc,stats       ] Concurrent Marking             =    4,168 s (a =    83357 us) (n =    50) (lvls, us =     6309,    37695,    51563,    62305,   245198)
[154,901s][info ][gc,stats       ] Pause Final Mark (G)           =    0,030 s (a =      593 us) (n =    50) (lvls, us =      340,      471,      582,      709,      915)
[154,901s][info ][gc,stats       ] Pause Final Mark (N)           =    0,025 s (a =      492 us) (n =    50) (lvls, us =      248,      379,      480,      570,      733)
[154,901s][info ][gc,stats       ]   Finish Mark                  =    0,012 s (a =      242 us) (n =    50) (lvls, us =       70,      205,      244,      266,      413)
[154,901s][info ][gc,stats       ]   Update Region States         =    0,003 s (a =       55 us) (n =    50) (lvls, us =       13,       17,       22,      104,      193)
[154,901s][info ][gc,stats       ]   Choose Collection Set        =    0,006 s (a =      129 us) (n =    50) (lvls, us =       37,       65,       92,      203,      292)
[154,901s][info ][gc,stats       ]   Rebuild Free Set             =    0,001 s (a =       12 us) (n =    50) (lvls, us =        8,        9,       11,       12,       22)
[154,901s][info ][gc,stats       ] Concurrent Thread Roots        =    0,050 s (a =     1003 us) (n =    50) (lvls, us =      457,      543,      629,     1523,     2425)
[154,901s][info ][gc,stats       ]   CTR: <total>                 =    0,157 s (a =     3136 us) (n =    50) (lvls, us =     1152,     1289,     1387,     5566,     8165)
[154,901s][info ][gc,stats       ]   CTR: Thread Roots            =    0,157 s (a =     3136 us) (n =    50) (lvls, us =     1152,     1289,     1387,     5566,     8165)
[154,901s][info ][gc,stats       ] Concurrent Weak References     =    0,106 s (a =     2125 us) (n =    50) (lvls, us =      252,     1094,     1504,     2852,     6862)
[154,901s][info ][gc,stats       ]   CWRF: <total>                =    0,188 s (a =     3763 us) (n =    50) (lvls, us =      273,     1758,     2090,     4824,    23435)
[154,901s][info ][gc,stats       ]   CWRF: Weak References        =    0,188 s (a =     3763 us) (n =    50) (lvls, us =      273,     1758,     2090,     4824,    23435)
[154,901s][info ][gc,stats       ] Concurrent Weak Roots          =    0,046 s (a =      918 us) (n =    50) (lvls, us =      428,      598,      699,      799,     2939)
[154,901s][info ][gc,stats       ]   Roots                        =    0,030 s (a =      592 us) (n =    50) (lvls, us =      383,      496,      553,      588,     2249)
[154,901s][info ][gc,stats       ]     CWR: <total>               =    0,104 s (a =     2085 us) (n =    50) (lvls, us =     1582,     1738,     1875,     2012,    10405)
[154,901s][info ][gc,stats       ]     CWR: Code Cache Roots      =    0,052 s (a =     1040 us) (n =    50) (lvls, us =      750,      914,      996,     1113,     1814)
[154,902s][info ][gc,stats       ]     CWR: VM Weak Roots         =    0,051 s (a =     1028 us) (n =    50) (lvls, us =      445,      822,      895,      930,     9309)
[154,902s][info ][gc,stats       ]     CWR: CLDG Roots            =    0,001 s (a =       17 us) (n =    50) (lvls, us =       10,       13,       16,       19,       35)
[154,902s][info ][gc,stats       ]   Rendezvous                   =    0,015 s (a =      290 us) (n =    50) (lvls, us =       21,       63,       89,      137,     2387)
[154,902s][info ][gc,stats       ] Concurrent Cleanup             =    0,008 s (a =      156 us) (n =    50) (lvls, us =       89,      102,      160,      180,      366)
[154,902s][info ][gc,stats       ] Concurrent Class Unloading     =    0,070 s (a =     1405 us) (n =    50) (lvls, us =      791,      881,     1055,     1230,    10812)
[154,902s][info ][gc,stats       ]   Unlink Stale                 =    0,045 s (a =      900 us) (n =    50) (lvls, us =      707,      777,      814,      891,     2905)
[154,902s][info ][gc,stats       ]     System Dictionary          =    0,002 s (a =       34 us) (n =    50) (lvls, us =       21,       24,       31,       38,      125)
[154,902s][info ][gc,stats       ]     Weak Class Links           =    0,002 s (a =       38 us) (n =    50) (lvls, us =        0,        0,        0,        0,     1908)
[154,902s][info ][gc,stats       ]     Code Roots                 =    0,041 s (a =      827 us) (n =    50) (lvls, us =      684,      748,      787,      863,     1977)
[154,902s][info ][gc,stats       ]   Rendezvous                   =    0,008 s (a =      151 us) (n =    50) (lvls, us =       12,       41,       79,      137,     1103)
[154,902s][info ][gc,stats       ]   Purge Unlinked               =    0,016 s (a =      325 us) (n =    50) (lvls, us =        2,        3,       54,      102,     8685)
[154,902s][info ][gc,stats       ]     Code Roots                 =    0,016 s (a =      320 us) (n =    50) (lvls, us =        0,        0,       51,       99,     8667)
[154,902s][info ][gc,stats       ]     CLDG                       =    0,000 s (a =        5 us) (n =    50) (lvls, us =        1,        2,        2,        3,      140)
[154,902s][info ][gc,stats       ]     Exception Caches           =    0,000 s (a =        0 us) (n =    50) (lvls, us =        0,        0,        0,        0,        0)
[154,902s][info ][gc,stats       ] Concurrent Strong Roots        =    0,010 s (a =      209 us) (n =    50) (lvls, us =       68,      158,      223,      248,      359)
[154,902s][info ][gc,stats       ]   CSR: <total>                 =    0,011 s (a =      217 us) (n =    50) (lvls, us =       61,      182,      227,      248,      515)
[154,902s][info ][gc,stats       ]   CSR: VM Strong Roots         =    0,001 s (a =       16 us) (n =    50) (lvls, us =        4,        9,       11,       13,       59)
[154,902s][info ][gc,stats       ]   CSR: CLDG Roots              =    0,010 s (a =      201 us) (n =    50) (lvls, us =       56,      172,      213,      229,      492)
[154,902s][info ][gc,stats       ] Concurrent Evacuation          =    2,294 s (a =    45879 us) (n =    50) (lvls, us =     6094,    28320,    48633,    52148,   127464)
[154,902s][info ][gc,stats       ] Pause Init Update Refs (G)     =    0,014 s (a =      283 us) (n =    50) (lvls, us =       63,      170,      234,      273,     1106)
[154,902s][info ][gc,stats       ] Pause Init Update Refs (N)     =    0,003 s (a =       52 us) (n =    50) (lvls, us =       33,       44,       50,       57,       87)
[154,902s][info ][gc,stats       ]   Manage GCLABs                =    0,000 s (a =        4 us) (n =    50) (lvls, us =        2,        3,        4,        4,        6)
[154,902s][info ][gc,stats       ] Concurrent Update Refs         =    2,687 s (a =    53739 us) (n =    50) (lvls, us =     5352,    28906,    33789,    36914,   163438)
[154,902s][info ][gc,stats       ] Concurrent Update Thread Roots =    0,051 s (a =     1018 us) (n =    50) (lvls, us =      684,      842,      914,     1055,     1913)
[154,902s][info ][gc,stats       ] Pause Final Update Refs (G)    =    0,015 s (a =      307 us) (n =    50) (lvls, us =       87,      232,      311,      367,      469)
[154,902s][info ][gc,stats       ] Pause Final Update Refs (N)    =    0,009 s (a =      172 us) (n =    50) (lvls, us =       70,      121,      172,      213,      333)
[154,902s][info ][gc,stats       ]   Update Region States         =    0,004 s (a =       85 us) (n =    50) (lvls, us =       26,       33,       89,      119,      171)
[154,902s][info ][gc,stats       ]   Trash Collection Set         =    0,001 s (a =       19 us) (n =    50) (lvls, us =        2,        5,       13,       31,       56)
[154,902s][info ][gc,stats       ]   Rebuild Free Set             =    0,001 s (a =       16 us) (n =    50) (lvls, us =       10,       13,       16,       18,       29)
[154,902s][info ][gc,stats       ] Concurrent Cleanup             =    0,010 s (a =      192 us) (n =    50) (lvls, us =      109,      166,      186,      203,      344)
[154,902s][info ][gc,stats       ] Concurrent Uncommit            =    0,620 s (a =    77557 us) (n =     8) (lvls, us =     2793,     3105,   119141,   121094,   123703)
[154,902s][info ][gc,stats       ] Pacing                         =    0,024 s (a =      474 us) (n =    50) (lvls, us =        0,        0,        0,        0,    14328)
[154,902s][info ][gc,stats       ] 
[154,902s][info ][gc,stats       ] 
[154,902s][info ][gc,stats       ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[154,902s][info ][gc,stats       ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[154,902s][info ][gc,stats       ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[154,902s][info ][gc,stats       ] to avoid Degenerated and Full GC cycles.
[154,902s][info ][gc,stats       ] 
[154,902s][info ][gc,stats       ]    50 successful concurrent GCs
[154,902s][info ][gc,stats       ]       8 invoked explicitly
[154,902s][info ][gc,stats       ]       0 invoked implicitly
[154,902s][info ][gc,stats       ] 
[154,902s][info ][gc,stats       ]     0 Degenerated GCs
[154,902s][info ][gc,stats       ]       0 caused by allocation failure
[154,902s][info ][gc,stats       ]       0 upgraded to Full GC
[154,902s][info ][gc,stats       ] 
[154,902s][info ][gc,stats       ]     0 Full GCs
[154,902s][info ][gc,stats       ]       0 invoked explicitly
[154,902s][info ][gc,stats       ]       0 invoked implicitly
[154,902s][info ][gc,stats       ]       0 caused by allocation failure
[154,902s][info ][gc,stats       ]       0 upgraded from Degenerated GC
[154,902s][info ][gc,stats       ] 
[154,902s][info ][gc,stats       ] 
